{
  "version": 3,
  "sources": ["../../../../node_modules/lay-excel/node_modules/file-saver/src/FileSaver.js", "../../../../node_modules/lay-excel/src/jszip.js", "../../../../node_modules/blob/main.js", "../../../../node_modules/lay-excel/src/excel.js", "../../../../node_modules/lay-excel/src/xlsx.js"],
  "sourcesContent": ["/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n", "/*\n\nJSZip - A Javascript class for generating and reading zip files\n<http://stuartk.com/jszip>\n\n(c) 2009-2014 Stuart Knightley <stuart [at] stuartk.com>\nDual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/master/LICENSE.markdown.\n\nJSZip uses the library pako released under the MIT license :\nhttps://github.com/nodeca/pako/blob/master/LICENSE\n\nNote: since JSZip 3 removed critical functionality, this version assigns to the\n`JSZipSync` variable.  Another JSZip version can be loaded in parallel.\n*/\n(function(e){\n  if(\"object\"==typeof exports&&\"undefined\"!=typeof module&&\"undefined\"==typeof DO_NOT_EXPORT_JSZIP)module.exports=e();\n  else if(\"function\"==typeof define&&define.amd&&\"undefined\"==typeof DO_NOT_EXPORT_JSZIP){JSZipSync=e();define([],e);}\n  else{\n    var f;\n    \"undefined\"!=typeof window?f=window:\n      \"undefined\"!=typeof global?f=global:\n        \"undefined\"!=typeof $ && $.global?f=$.global:\n          \"undefined\"!=typeof self&&(f=self),f.JSZipSync=e()\n  }\n}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n    'use strict';\n// private property\n    var _keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n\n// public method for encoding\n    exports.encode = function(input, utf8) {\n      var output = \"\";\n      var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n      var i = 0;\n\n      while (i < input.length) {\n\n        chr1 = input.charCodeAt(i++);\n        chr2 = input.charCodeAt(i++);\n        chr3 = input.charCodeAt(i++);\n\n        enc1 = chr1 >> 2;\n        enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n        enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n        enc4 = chr3 & 63;\n\n        if (isNaN(chr2)) {\n          enc3 = enc4 = 64;\n        }\n        else if (isNaN(chr3)) {\n          enc4 = 64;\n        }\n\n        output = output + _keyStr.charAt(enc1) + _keyStr.charAt(enc2) + _keyStr.charAt(enc3) + _keyStr.charAt(enc4);\n\n      }\n\n      return output;\n    };\n\n// public method for decoding\n    exports.decode = function(input, utf8) {\n      var output = \"\";\n      var chr1, chr2, chr3;\n      var enc1, enc2, enc3, enc4;\n      var i = 0;\n\n      input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n      while (i < input.length) {\n\n        enc1 = _keyStr.indexOf(input.charAt(i++));\n        enc2 = _keyStr.indexOf(input.charAt(i++));\n        enc3 = _keyStr.indexOf(input.charAt(i++));\n        enc4 = _keyStr.indexOf(input.charAt(i++));\n\n        chr1 = (enc1 << 2) | (enc2 >> 4);\n        chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n        chr3 = ((enc3 & 3) << 6) | enc4;\n\n        output = output + String.fromCharCode(chr1);\n\n        if (enc3 != 64) {\n          output = output + String.fromCharCode(chr2);\n        }\n        if (enc4 != 64) {\n          output = output + String.fromCharCode(chr3);\n        }\n\n      }\n\n      return output;\n\n    };\n\n  },{}],2:[function(_dereq_,module,exports){\n    'use strict';\n    function CompressedObject() {\n      this.compressedSize = 0;\n      this.uncompressedSize = 0;\n      this.crc32 = 0;\n      this.compressionMethod = null;\n      this.compressedContent = null;\n    }\n\n    CompressedObject.prototype = {\n      /**\n       * Return the decompressed content in an unspecified format.\n       * The format will depend on the decompressor.\n       * @return {Object} the decompressed content.\n       */\n      getContent: function() {\n        return null; // see implementation\n      },\n      /**\n       * Return the compressed content in an unspecified format.\n       * The format will depend on the compressed conten source.\n       * @return {Object} the compressed content.\n       */\n      getCompressedContent: function() {\n        return null; // see implementation\n      }\n    };\n    module.exports = CompressedObject;\n\n  },{}],3:[function(_dereq_,module,exports){\n    'use strict';\n    exports.STORE = {\n      magic: \"\\x00\\x00\",\n      compress: function(content) {\n        return content; // no compression\n      },\n      uncompress: function(content) {\n        return content; // no compression\n      },\n      compressInputType: null,\n      uncompressInputType: null\n    };\n    exports.DEFLATE = _dereq_('./flate');\n\n  },{\"./flate\":8}],4:[function(_dereq_,module,exports){\n    'use strict';\n\n    var utils = _dereq_('./utils');\n\n    var table = [\n      0x00000000, 0x77073096, 0xEE0E612C, 0x990951BA,\n      0x076DC419, 0x706AF48F, 0xE963A535, 0x9E6495A3,\n      0x0EDB8832, 0x79DCB8A4, 0xE0D5E91E, 0x97D2D988,\n      0x09B64C2B, 0x7EB17CBD, 0xE7B82D07, 0x90BF1D91,\n      0x1DB71064, 0x6AB020F2, 0xF3B97148, 0x84BE41DE,\n      0x1ADAD47D, 0x6DDDE4EB, 0xF4D4B551, 0x83D385C7,\n      0x136C9856, 0x646BA8C0, 0xFD62F97A, 0x8A65C9EC,\n      0x14015C4F, 0x63066CD9, 0xFA0F3D63, 0x8D080DF5,\n      0x3B6E20C8, 0x4C69105E, 0xD56041E4, 0xA2677172,\n      0x3C03E4D1, 0x4B04D447, 0xD20D85FD, 0xA50AB56B,\n      0x35B5A8FA, 0x42B2986C, 0xDBBBC9D6, 0xACBCF940,\n      0x32D86CE3, 0x45DF5C75, 0xDCD60DCF, 0xABD13D59,\n      0x26D930AC, 0x51DE003A, 0xC8D75180, 0xBFD06116,\n      0x21B4F4B5, 0x56B3C423, 0xCFBA9599, 0xB8BDA50F,\n      0x2802B89E, 0x5F058808, 0xC60CD9B2, 0xB10BE924,\n      0x2F6F7C87, 0x58684C11, 0xC1611DAB, 0xB6662D3D,\n      0x76DC4190, 0x01DB7106, 0x98D220BC, 0xEFD5102A,\n      0x71B18589, 0x06B6B51F, 0x9FBFE4A5, 0xE8B8D433,\n      0x7807C9A2, 0x0F00F934, 0x9609A88E, 0xE10E9818,\n      0x7F6A0DBB, 0x086D3D2D, 0x91646C97, 0xE6635C01,\n      0x6B6B51F4, 0x1C6C6162, 0x856530D8, 0xF262004E,\n      0x6C0695ED, 0x1B01A57B, 0x8208F4C1, 0xF50FC457,\n      0x65B0D9C6, 0x12B7E950, 0x8BBEB8EA, 0xFCB9887C,\n      0x62DD1DDF, 0x15DA2D49, 0x8CD37CF3, 0xFBD44C65,\n      0x4DB26158, 0x3AB551CE, 0xA3BC0074, 0xD4BB30E2,\n      0x4ADFA541, 0x3DD895D7, 0xA4D1C46D, 0xD3D6F4FB,\n      0x4369E96A, 0x346ED9FC, 0xAD678846, 0xDA60B8D0,\n      0x44042D73, 0x33031DE5, 0xAA0A4C5F, 0xDD0D7CC9,\n      0x5005713C, 0x270241AA, 0xBE0B1010, 0xC90C2086,\n      0x5768B525, 0x206F85B3, 0xB966D409, 0xCE61E49F,\n      0x5EDEF90E, 0x29D9C998, 0xB0D09822, 0xC7D7A8B4,\n      0x59B33D17, 0x2EB40D81, 0xB7BD5C3B, 0xC0BA6CAD,\n      0xEDB88320, 0x9ABFB3B6, 0x03B6E20C, 0x74B1D29A,\n      0xEAD54739, 0x9DD277AF, 0x04DB2615, 0x73DC1683,\n      0xE3630B12, 0x94643B84, 0x0D6D6A3E, 0x7A6A5AA8,\n      0xE40ECF0B, 0x9309FF9D, 0x0A00AE27, 0x7D079EB1,\n      0xF00F9344, 0x8708A3D2, 0x1E01F268, 0x6906C2FE,\n      0xF762575D, 0x806567CB, 0x196C3671, 0x6E6B06E7,\n      0xFED41B76, 0x89D32BE0, 0x10DA7A5A, 0x67DD4ACC,\n      0xF9B9DF6F, 0x8EBEEFF9, 0x17B7BE43, 0x60B08ED5,\n      0xD6D6A3E8, 0xA1D1937E, 0x38D8C2C4, 0x4FDFF252,\n      0xD1BB67F1, 0xA6BC5767, 0x3FB506DD, 0x48B2364B,\n      0xD80D2BDA, 0xAF0A1B4C, 0x36034AF6, 0x41047A60,\n      0xDF60EFC3, 0xA867DF55, 0x316E8EEF, 0x4669BE79,\n      0xCB61B38C, 0xBC66831A, 0x256FD2A0, 0x5268E236,\n      0xCC0C7795, 0xBB0B4703, 0x220216B9, 0x5505262F,\n      0xC5BA3BBE, 0xB2BD0B28, 0x2BB45A92, 0x5CB36A04,\n      0xC2D7FFA7, 0xB5D0CF31, 0x2CD99E8B, 0x5BDEAE1D,\n      0x9B64C2B0, 0xEC63F226, 0x756AA39C, 0x026D930A,\n      0x9C0906A9, 0xEB0E363F, 0x72076785, 0x05005713,\n      0x95BF4A82, 0xE2B87A14, 0x7BB12BAE, 0x0CB61B38,\n      0x92D28E9B, 0xE5D5BE0D, 0x7CDCEFB7, 0x0BDBDF21,\n      0x86D3D2D4, 0xF1D4E242, 0x68DDB3F8, 0x1FDA836E,\n      0x81BE16CD, 0xF6B9265B, 0x6FB077E1, 0x18B74777,\n      0x88085AE6, 0xFF0F6A70, 0x66063BCA, 0x11010B5C,\n      0x8F659EFF, 0xF862AE69, 0x616BFFD3, 0x166CCF45,\n      0xA00AE278, 0xD70DD2EE, 0x4E048354, 0x3903B3C2,\n      0xA7672661, 0xD06016F7, 0x4969474D, 0x3E6E77DB,\n      0xAED16A4A, 0xD9D65ADC, 0x40DF0B66, 0x37D83BF0,\n      0xA9BCAE53, 0xDEBB9EC5, 0x47B2CF7F, 0x30B5FFE9,\n      0xBDBDF21C, 0xCABAC28A, 0x53B39330, 0x24B4A3A6,\n      0xBAD03605, 0xCDD70693, 0x54DE5729, 0x23D967BF,\n      0xB3667A2E, 0xC4614AB8, 0x5D681B02, 0x2A6F2B94,\n      0xB40BBE37, 0xC30C8EA1, 0x5A05DF1B, 0x2D02EF8D\n    ];\n\n    /**\n     *\n     *  Javascript crc32\n     *  http://www.webtoolkit.info/\n     *\n     */\n    module.exports = function crc32(input, crc) {\n      if (typeof input === \"undefined\" || !input.length) {\n        return 0;\n      }\n\n      var isArray = utils.getTypeOf(input) !== \"string\";\n\n      if (typeof(crc) == \"undefined\") {\n        crc = 0;\n      }\n      var x = 0;\n      var y = 0;\n      var b = 0;\n\n      crc = crc ^ (-1);\n      for (var i = 0, iTop = input.length; i < iTop; i++) {\n        b = isArray ? input[i] : input.charCodeAt(i);\n        y = (crc ^ b) & 0xFF;\n        x = table[y];\n        crc = (crc >>> 8) ^ x;\n      }\n\n      return crc ^ (-1);\n    };\n// vim: set shiftwidth=4 softtabstop=4:\n\n  },{\"./utils\":21}],5:[function(_dereq_,module,exports){\n    'use strict';\n    var utils = _dereq_('./utils');\n\n    function DataReader(data) {\n      this.data = null; // type : see implementation\n      this.length = 0;\n      this.index = 0;\n    }\n    DataReader.prototype = {\n      /**\n       * Check that the offset will not go too far.\n       * @param {string} offset the additional offset to check.\n       * @throws {Error} an Error if the offset is out of bounds.\n       */\n      checkOffset: function(offset) {\n        this.checkIndex(this.index + offset);\n      },\n      /**\n       * Check that the specifed index will not be too far.\n       * @param {string} newIndex the index to check.\n       * @throws {Error} an Error if the index is out of bounds.\n       */\n      checkIndex: function(newIndex) {\n        if (this.length < newIndex || newIndex < 0) {\n          throw new Error(\"End of data reached (data length = \" + this.length + \", asked index = \" + (newIndex) + \"). Corrupted zip ?\");\n        }\n      },\n      /**\n       * Change the index.\n       * @param {number} newIndex The new index.\n       * @throws {Error} if the new index is out of the data.\n       */\n      setIndex: function(newIndex) {\n        this.checkIndex(newIndex);\n        this.index = newIndex;\n      },\n      /**\n       * Skip the next n bytes.\n       * @param {number} n the number of bytes to skip.\n       * @throws {Error} if the new index is out of the data.\n       */\n      skip: function(n) {\n        this.setIndex(this.index + n);\n      },\n      /**\n       * Get the byte at the specified index.\n       * @param {number} i the index to use.\n       * @return {number} a byte.\n       */\n      byteAt: function(i) {\n        // see implementations\n      },\n      /**\n       * Get the next number with a given byte size.\n       * @param {number} size the number of bytes to read.\n       * @return {number} the corresponding number.\n       */\n      readInt: function(size) {\n        var result = 0,\n          i;\n        this.checkOffset(size);\n        for (i = this.index + size - 1; i >= this.index; i--) {\n          result = (result << 8) + this.byteAt(i);\n        }\n        this.index += size;\n        return result;\n      },\n      /**\n       * Get the next string with a given byte size.\n       * @param {number} size the number of bytes to read.\n       * @return {string} the corresponding string.\n       */\n      readString: function(size) {\n        return utils.transformTo(\"string\", this.readData(size));\n      },\n      /**\n       * Get raw data without conversion, <size> bytes.\n       * @param {number} size the number of bytes to read.\n       * @return {Object} the raw data, implementation specific.\n       */\n      readData: function(size) {\n        // see implementations\n      },\n      /**\n       * Find the last occurence of a zip signature (4 bytes).\n       * @param {string} sig the signature to find.\n       * @return {number} the index of the last occurence, -1 if not found.\n       */\n      lastIndexOfSignature: function(sig) {\n        // see implementations\n      },\n      /**\n       * Get the next date.\n       * @return {Date} the date.\n       */\n      readDate: function() {\n        var dostime = this.readInt(4);\n        return new Date(\n          ((dostime >> 25) & 0x7f) + 1980, // year\n          ((dostime >> 21) & 0x0f) - 1, // month\n          (dostime >> 16) & 0x1f, // day\n          (dostime >> 11) & 0x1f, // hour\n          (dostime >> 5) & 0x3f, // minute\n          (dostime & 0x1f) << 1); // second\n      }\n    };\n    module.exports = DataReader;\n\n  },{\"./utils\":21}],6:[function(_dereq_,module,exports){\n    'use strict';\n    exports.base64 = false;\n    exports.binary = false;\n    exports.dir = false;\n    exports.createFolders = false;\n    exports.date = null;\n    exports.compression = null;\n    exports.comment = null;\n\n  },{}],7:[function(_dereq_,module,exports){\n    'use strict';\n    var utils = _dereq_('./utils');\n\n    /**\n     * @deprecated\n     * This function will be removed in a future version without replacement.\n     */\n    exports.string2binary = function(str) {\n      return utils.string2binary(str);\n    };\n\n    /**\n     * @deprecated\n     * This function will be removed in a future version without replacement.\n     */\n    exports.string2Uint8Array = function(str) {\n      return utils.transformTo(\"uint8array\", str);\n    };\n\n    /**\n     * @deprecated\n     * This function will be removed in a future version without replacement.\n     */\n    exports.uint8Array2String = function(array) {\n      return utils.transformTo(\"string\", array);\n    };\n\n    /**\n     * @deprecated\n     * This function will be removed in a future version without replacement.\n     */\n    exports.string2Blob = function(str) {\n      var buffer = utils.transformTo(\"arraybuffer\", str);\n      return utils.arrayBuffer2Blob(buffer);\n    };\n\n    /**\n     * @deprecated\n     * This function will be removed in a future version without replacement.\n     */\n    exports.arrayBuffer2Blob = function(buffer) {\n      return utils.arrayBuffer2Blob(buffer);\n    };\n\n    /**\n     * @deprecated\n     * This function will be removed in a future version without replacement.\n     */\n    exports.transformTo = function(outputType, input) {\n      return utils.transformTo(outputType, input);\n    };\n\n    /**\n     * @deprecated\n     * This function will be removed in a future version without replacement.\n     */\n    exports.getTypeOf = function(input) {\n      return utils.getTypeOf(input);\n    };\n\n    /**\n     * @deprecated\n     * This function will be removed in a future version without replacement.\n     */\n    exports.checkSupport = function(type) {\n      return utils.checkSupport(type);\n    };\n\n    /**\n     * @deprecated\n     * This value will be removed in a future version without replacement.\n     */\n    exports.MAX_VALUE_16BITS = utils.MAX_VALUE_16BITS;\n\n    /**\n     * @deprecated\n     * This value will be removed in a future version without replacement.\n     */\n    exports.MAX_VALUE_32BITS = utils.MAX_VALUE_32BITS;\n\n\n    /**\n     * @deprecated\n     * This function will be removed in a future version without replacement.\n     */\n    exports.pretty = function(str) {\n      return utils.pretty(str);\n    };\n\n    /**\n     * @deprecated\n     * This function will be removed in a future version without replacement.\n     */\n    exports.findCompression = function(compressionMethod) {\n      return utils.findCompression(compressionMethod);\n    };\n\n    /**\n     * @deprecated\n     * This function will be removed in a future version without replacement.\n     */\n    exports.isRegExp = function (object) {\n      return utils.isRegExp(object);\n    };\n\n\n  },{\"./utils\":21}],8:[function(_dereq_,module,exports){\n    'use strict';\n    var USE_TYPEDARRAY = (typeof Uint8Array !== 'undefined') && (typeof Uint16Array !== 'undefined') && (typeof Uint32Array !== 'undefined');\n\n    var pako = _dereq_(\"pako\");\n    exports.uncompressInputType = USE_TYPEDARRAY ? \"uint8array\" : \"array\";\n    exports.compressInputType = USE_TYPEDARRAY ? \"uint8array\" : \"array\";\n\n    exports.magic = \"\\x08\\x00\";\n    exports.compress = function(input) {\n      return pako.deflateRaw(input);\n    };\n    exports.uncompress =  function(input) {\n      return pako.inflateRaw(input);\n    };\n\n  },{\"pako\":24}],9:[function(_dereq_,module,exports){\n    'use strict';\n\n    var base64 = _dereq_('./base64');\n\n    /**\n     Usage:\n     zip = new JSZip();\n     zip.file(\"hello.txt\", \"Hello, World!\").file(\"tempfile\", \"nothing\");\n     zip.folder(\"images\").file(\"smile.gif\", base64Data, {base64: true});\n     zip.file(\"Xmas.txt\", \"Ho ho ho !\", {date : new Date(\"December 25, 2007 00:00:01\")});\n     zip.remove(\"tempfile\");\n\n     base64zip = zip.generate();\n\n     **/\n\n    /**\n     * Representation a of zip file in js\n     * @constructor\n     * @param {String=|ArrayBuffer=|Uint8Array=} data the data to load, if any (optional).\n     * @param {Object=} options the options for creating this objects (optional).\n     */\n    function JSZipSync(data, options) {\n      // if this constructor is used without `new`, it adds `new` before itself:\n      if(!(this instanceof JSZipSync)) return new JSZipSync(data, options);\n\n      // object containing the files :\n      // {\n      //   \"folder/\" : {...},\n      //   \"folder/data.txt\" : {...}\n      // }\n      this.files = {};\n\n      this.comment = null;\n\n      // Where we are in the hierarchy\n      this.root = \"\";\n      if (data) {\n        this.load(data, options);\n      }\n      this.clone = function() {\n        var newObj = new JSZipSync();\n        for (var i in this) {\n          if (typeof this[i] !== \"function\") {\n            newObj[i] = this[i];\n          }\n        }\n        return newObj;\n      };\n    }\n    JSZipSync.prototype = _dereq_('./object');\n    JSZipSync.prototype.load = _dereq_('./load');\n    JSZipSync.support = _dereq_('./support');\n    JSZipSync.defaults = _dereq_('./defaults');\n\n    /**\n     * @deprecated\n     * This namespace will be removed in a future version without replacement.\n     */\n    JSZipSync.utils = _dereq_('./deprecatedPublicUtils');\n\n    JSZipSync.base64 = {\n      /**\n       * @deprecated\n       * This method will be removed in a future version without replacement.\n       */\n      encode : function(input) {\n        return base64.encode(input);\n      },\n      /**\n       * @deprecated\n       * This method will be removed in a future version without replacement.\n       */\n      decode : function(input) {\n        return base64.decode(input);\n      }\n    };\n    JSZipSync.compressions = _dereq_('./compressions');\n    module.exports = JSZipSync;\n\n  },{\"./base64\":1,\"./compressions\":3,\"./defaults\":6,\"./deprecatedPublicUtils\":7,\"./load\":10,\"./object\":13,\"./support\":17}],10:[function(_dereq_,module,exports){\n    'use strict';\n    var base64 = _dereq_('./base64');\n    var ZipEntries = _dereq_('./zipEntries');\n    module.exports = function(data, options) {\n      var files, zipEntries, i, input;\n      options = options || {};\n      if (options.base64) {\n        data = base64.decode(data);\n      }\n\n      zipEntries = new ZipEntries(data, options);\n      files = zipEntries.files;\n      for (i = 0; i < files.length; i++) {\n        input = files[i];\n        this.file(input.fileName, input.decompressed, {\n          binary: true,\n          optimizedBinaryString: true,\n          date: input.date,\n          dir: input.dir,\n          comment : input.fileComment.length ? input.fileComment : null,\n          createFolders: options.createFolders\n        });\n      }\n      if (zipEntries.zipComment.length) {\n        this.comment = zipEntries.zipComment;\n      }\n\n      return this;\n    };\n\n  },{\"./base64\":1,\"./zipEntries\":22}],11:[function(_dereq_,module,exports){\n    (function (Buffer){\n      'use strict';\n      var Buffer_from = /*::(*/function(){}/*:: :any)*/;\n      if(typeof Buffer !== 'undefined') {\n        var nbfs = !Buffer.from;\n        if(!nbfs) try { Buffer.from(\"foo\", \"utf8\"); } catch(e) { nbfs = true; }\n        Buffer_from = nbfs ? function(buf, enc) { return (enc) ? new Buffer(buf, enc) : new Buffer(buf); } : Buffer.from.bind(Buffer);\n        // $FlowIgnore\n        if(!Buffer.alloc) Buffer.alloc = function(n) { return new Buffer(n); };\n      }\n      module.exports = function(data, encoding){\n        return typeof data == 'number' ? Buffer.alloc(data) : Buffer_from(data, encoding);\n      };\n      module.exports.test = function(b){\n        return Buffer.isBuffer(b);\n      };\n    }).call(this,(typeof Buffer !== \"undefined\" ? Buffer : undefined))\n  },{}],12:[function(_dereq_,module,exports){\n    'use strict';\n    var Uint8ArrayReader = _dereq_('./uint8ArrayReader');\n\n    function NodeBufferReader(data) {\n      this.data = data;\n      this.length = this.data.length;\n      this.index = 0;\n    }\n    NodeBufferReader.prototype = new Uint8ArrayReader();\n\n    /**\n     * @see DataReader.readData\n     */\n    NodeBufferReader.prototype.readData = function(size) {\n      this.checkOffset(size);\n      var result = this.data.slice(this.index, this.index + size);\n      this.index += size;\n      return result;\n    };\n    module.exports = NodeBufferReader;\n\n  },{\"./uint8ArrayReader\":18}],13:[function(_dereq_,module,exports){\n    'use strict';\n    var support = _dereq_('./support');\n    var utils = _dereq_('./utils');\n    var crc32 = _dereq_('./crc32');\n    var signature = _dereq_('./signature');\n    var defaults = _dereq_('./defaults');\n    var base64 = _dereq_('./base64');\n    var compressions = _dereq_('./compressions');\n    var CompressedObject = _dereq_('./compressedObject');\n    var nodeBuffer = _dereq_('./nodeBuffer');\n    var utf8 = _dereq_('./utf8');\n    var StringWriter = _dereq_('./stringWriter');\n    var Uint8ArrayWriter = _dereq_('./uint8ArrayWriter');\n\n    /**\n     * Returns the raw data of a ZipObject, decompress the content if necessary.\n     * @param {ZipObject} file the file to use.\n     * @return {String|ArrayBuffer|Uint8Array|Buffer} the data.\n     */\n    var getRawData = function(file) {\n      if (file._data instanceof CompressedObject) {\n        file._data = file._data.getContent();\n        file.options.binary = true;\n        file.options.base64 = false;\n\n        if (utils.getTypeOf(file._data) === \"uint8array\") {\n          var copy = file._data;\n          // when reading an arraybuffer, the CompressedObject mechanism will keep it and subarray() a Uint8Array.\n          // if we request a file in the same format, we might get the same Uint8Array or its ArrayBuffer (the original zip file).\n          file._data = new Uint8Array(copy.length);\n          // with an empty Uint8Array, Opera fails with a \"Offset larger than array size\"\n          if (copy.length !== 0) {\n            file._data.set(copy, 0);\n          }\n        }\n      }\n      return file._data;\n    };\n\n    /**\n     * Returns the data of a ZipObject in a binary form. If the content is an unicode string, encode it.\n     * @param {ZipObject} file the file to use.\n     * @return {String|ArrayBuffer|Uint8Array|Buffer} the data.\n     */\n    var getBinaryData = function(file) {\n      var result = getRawData(file),\n        type = utils.getTypeOf(result);\n      if (type === \"string\") {\n        if (!file.options.binary) {\n          // unicode text !\n          // unicode string => binary string is a painful process, check if we can avoid it.\n          if (support.nodebuffer) {\n            return nodeBuffer(result, \"utf-8\");\n          }\n        }\n        return file.asBinary();\n      }\n      return result;\n    };\n\n    /**\n     * Transform this._data into a string.\n     * @param {function} filter a function String -> String, applied if not null on the result.\n     * @return {String} the string representing this._data.\n     */\n    var dataToString = function(asUTF8) {\n      var result = getRawData(this);\n      if (result === null || typeof result === \"undefined\") {\n        return \"\";\n      }\n      // if the data is a base64 string, we decode it before checking the encoding !\n      if (this.options.base64) {\n        result = base64.decode(result);\n      }\n      if (asUTF8 && this.options.binary) {\n        // JSZip.prototype.utf8decode supports arrays as input\n        // skip to array => string step, utf8decode will do it.\n        result = out.utf8decode(result);\n      }\n      else {\n        // no utf8 transformation, do the array => string step.\n        result = utils.transformTo(\"string\", result);\n      }\n\n      if (!asUTF8 && !this.options.binary) {\n        result = utils.transformTo(\"string\", out.utf8encode(result));\n      }\n      return result;\n    };\n    /**\n     * A simple object representing a file in the zip file.\n     * @constructor\n     * @param {string} name the name of the file\n     * @param {String|ArrayBuffer|Uint8Array|Buffer} data the data\n     * @param {Object} options the options of the file\n     */\n    var ZipObject = function(name, data, options) {\n      this.name = name;\n      this.dir = options.dir;\n      this.date = options.date;\n      this.comment = options.comment;\n\n      this._data = data;\n      this.options = options;\n\n      /*\n     * This object contains initial values for dir and date.\n     * With them, we can check if the user changed the deprecated metadata in\n     * `ZipObject#options` or not.\n     */\n      this._initialMetadata = {\n        dir : options.dir,\n        date : options.date\n      };\n    };\n\n    ZipObject.prototype = {\n      /**\n       * Return the content as UTF8 string.\n       * @return {string} the UTF8 string.\n       */\n      asText: function() {\n        return dataToString.call(this, true);\n      },\n      /**\n       * Returns the binary content.\n       * @return {string} the content as binary.\n       */\n      asBinary: function() {\n        return dataToString.call(this, false);\n      },\n      /**\n       * Returns the content as a nodejs Buffer.\n       * @return {Buffer} the content as a Buffer.\n       */\n      asNodeBuffer: function() {\n        var result = getBinaryData(this);\n        return utils.transformTo(\"nodebuffer\", result);\n      },\n      /**\n       * Returns the content as an Uint8Array.\n       * @return {Uint8Array} the content as an Uint8Array.\n       */\n      asUint8Array: function() {\n        var result = getBinaryData(this);\n        return utils.transformTo(\"uint8array\", result);\n      },\n      /**\n       * Returns the content as an ArrayBuffer.\n       * @return {ArrayBuffer} the content as an ArrayBufer.\n       */\n      asArrayBuffer: function() {\n        return this.asUint8Array().buffer;\n      }\n    };\n\n    /**\n     * Transform an integer into a string in hexadecimal.\n     * @private\n     * @param {number} dec the number to convert.\n     * @param {number} bytes the number of bytes to generate.\n     * @returns {string} the result.\n     */\n    var decToHex = function(dec, bytes) {\n      var hex = \"\",\n        i;\n      for (i = 0; i < bytes; i++) {\n        hex += String.fromCharCode(dec & 0xff);\n        dec = dec >>> 8;\n      }\n      return hex;\n    };\n\n    /**\n     * Merge the objects passed as parameters into a new one.\n     * @private\n     * @param {...Object} var_args All objects to merge.\n     * @return {Object} a new object with the data of the others.\n     */\n    var extend = function() {\n      var result = {}, i, attr;\n      for (i = 0; i < arguments.length; i++) { // arguments is not enumerable in some browsers\n        for (attr in arguments[i]) {\n          if (arguments[i].hasOwnProperty(attr) && typeof result[attr] === \"undefined\") {\n            result[attr] = arguments[i][attr];\n          }\n        }\n      }\n      return result;\n    };\n\n    /**\n     * Transforms the (incomplete) options from the user into the complete\n     * set of options to create a file.\n     * @private\n     * @param {Object} o the options from the user.\n     * @return {Object} the complete set of options.\n     */\n    var prepareFileAttrs = function(o) {\n      o = o || {};\n      if (o.base64 === true && (o.binary === null || o.binary === undefined)) {\n        o.binary = true;\n      }\n      o = extend(o, defaults);\n      o.date = o.date || new Date();\n      if (o.compression !== null) o.compression = o.compression.toUpperCase();\n\n      return o;\n    };\n\n    /**\n     * Add a file in the current folder.\n     * @private\n     * @param {string} name the name of the file\n     * @param {String|ArrayBuffer|Uint8Array|Buffer} data the data of the file\n     * @param {Object} o the options of the file\n     * @return {Object} the new file.\n     */\n    var fileAdd = function(name, data, o) {\n      // be sure sub folders exist\n      var dataType = utils.getTypeOf(data),\n        parent;\n\n      o = prepareFileAttrs(o);\n\n      if (o.createFolders && (parent = parentFolder(name))) {\n        folderAdd.call(this, parent, true);\n      }\n\n      if (o.dir || data === null || typeof data === \"undefined\") {\n        o.base64 = false;\n        o.binary = false;\n        data = null;\n      }\n      else if (dataType === \"string\") {\n        if (o.binary && !o.base64) {\n          // optimizedBinaryString == true means that the file has already been filtered with a 0xFF mask\n          if (o.optimizedBinaryString !== true) {\n            // this is a string, not in a base64 format.\n            // Be sure that this is a correct \"binary string\"\n            data = utils.string2binary(data);\n          }\n        }\n      }\n      else { // arraybuffer, uint8array, ...\n        o.base64 = false;\n        o.binary = true;\n\n        if (!dataType && !(data instanceof CompressedObject)) {\n          throw new Error(\"The data of '\" + name + \"' is in an unsupported format !\");\n        }\n\n        // special case : it's way easier to work with Uint8Array than with ArrayBuffer\n        if (dataType === \"arraybuffer\") {\n          data = utils.transformTo(\"uint8array\", data);\n        }\n      }\n\n      var object = new ZipObject(name, data, o);\n      this.files[name] = object;\n      return object;\n    };\n\n    /**\n     * Find the parent folder of the path.\n     * @private\n     * @param {string} path the path to use\n     * @return {string} the parent folder, or \"\"\n     */\n    var parentFolder = function (path) {\n      if (path.slice(-1) == '/') {\n        path = path.substring(0, path.length - 1);\n      }\n      var lastSlash = path.lastIndexOf('/');\n      return (lastSlash > 0) ? path.substring(0, lastSlash) : \"\";\n    };\n\n    /**\n     * Add a (sub) folder in the current folder.\n     * @private\n     * @param {string} name the folder's name\n     * @param {boolean=} [createFolders] If true, automatically create sub\n     *  folders. Defaults to false.\n     * @return {Object} the new folder.\n     */\n    var folderAdd = function(name, createFolders) {\n      // Check the name ends with a /\n      if (name.slice(-1) != \"/\") {\n        name += \"/\"; // IE doesn't like substr(-1)\n      }\n\n      createFolders = (typeof createFolders !== 'undefined') ? createFolders : false;\n\n      // Does this folder already exist?\n      if (!this.files[name]) {\n        fileAdd.call(this, name, null, {\n          dir: true,\n          createFolders: createFolders\n        });\n      }\n      return this.files[name];\n    };\n\n    /**\n     * Generate a JSZip.CompressedObject for a given zipOject.\n     * @param {ZipObject} file the object to read.\n     * @param {JSZip.compression} compression the compression to use.\n     * @return {JSZip.CompressedObject} the compressed result.\n     */\n    var generateCompressedObjectFrom = function(file, compression) {\n      var result = new CompressedObject(),\n        content;\n\n      // the data has not been decompressed, we might reuse things !\n      if (file._data instanceof CompressedObject) {\n        result.uncompressedSize = file._data.uncompressedSize;\n        result.crc32 = file._data.crc32;\n\n        if (result.uncompressedSize === 0 || file.dir) {\n          compression = compressions['STORE'];\n          result.compressedContent = \"\";\n          result.crc32 = 0;\n        }\n        else if (file._data.compressionMethod === compression.magic) {\n          result.compressedContent = file._data.getCompressedContent();\n        }\n        else {\n          content = file._data.getContent();\n          // need to decompress / recompress\n          result.compressedContent = compression.compress(utils.transformTo(compression.compressInputType, content));\n        }\n      }\n      else {\n        // have uncompressed data\n        content = getBinaryData(file);\n        if (!content || content.length === 0 || file.dir) {\n          compression = compressions['STORE'];\n          content = \"\";\n        }\n        result.uncompressedSize = content.length;\n        result.crc32 = crc32(content);\n        result.compressedContent = compression.compress(utils.transformTo(compression.compressInputType, content));\n      }\n\n      result.compressedSize = result.compressedContent.length;\n      result.compressionMethod = compression.magic;\n\n      return result;\n    };\n\n    /**\n     * Generate the various parts used in the construction of the final zip file.\n     * @param {string} name the file name.\n     * @param {ZipObject} file the file content.\n     * @param {JSZip.CompressedObject} compressedObject the compressed object.\n     * @param {number} offset the current offset from the start of the zip file.\n     * @return {object} the zip parts.\n     */\n    var generateZipParts = function(name, file, compressedObject, offset) {\n      var data = compressedObject.compressedContent,\n        utfEncodedFileName = utils.transformTo(\"string\", utf8.utf8encode(file.name)),\n        comment = file.comment || \"\",\n        utfEncodedComment = utils.transformTo(\"string\", utf8.utf8encode(comment)),\n        useUTF8ForFileName = utfEncodedFileName.length !== file.name.length,\n        useUTF8ForComment = utfEncodedComment.length !== comment.length,\n        o = file.options,\n        dosTime,\n        dosDate,\n        extraFields = \"\",\n        unicodePathExtraField = \"\",\n        unicodeCommentExtraField = \"\",\n        dir, date;\n\n\n      // handle the deprecated options.dir\n      if (file._initialMetadata.dir !== file.dir) {\n        dir = file.dir;\n      } else {\n        dir = o.dir;\n      }\n\n      // handle the deprecated options.date\n      if(file._initialMetadata.date !== file.date) {\n        date = file.date;\n      } else {\n        date = o.date;\n      }\n\n\n      dosTime = date.getHours();\n      dosTime = dosTime << 6;\n      dosTime = dosTime | date.getMinutes();\n      dosTime = dosTime << 5;\n      dosTime = dosTime | date.getSeconds() / 2;\n\n      dosDate = date.getFullYear() - 1980;\n      dosDate = dosDate << 4;\n      dosDate = dosDate | (date.getMonth() + 1);\n      dosDate = dosDate << 5;\n      dosDate = dosDate | date.getDate();\n\n      if (useUTF8ForFileName) {\n        // set the unicode path extra field. unzip needs at least one extra\n        // field to correctly handle unicode path, so using the path is as good\n        // as any other information. This could improve the situation with\n        // other archive managers too.\n        // This field is usually used without the utf8 flag, with a non\n        // unicode path in the header (winrar, winzip). This helps (a bit)\n        // with the messy Windows' default compressed folders feature but\n        // breaks on p7zip which doesn't seek the unicode path extra field.\n        // So for now, UTF-8 everywhere !\n        unicodePathExtraField =\n          // Version\n          decToHex(1, 1) +\n          // NameCRC32\n          decToHex(crc32(utfEncodedFileName), 4) +\n          // UnicodeName\n          utfEncodedFileName;\n\n        extraFields +=\n          // Info-ZIP Unicode Path Extra Field\n          \"\\x75\\x70\" +\n          // size\n          decToHex(unicodePathExtraField.length, 2) +\n          // content\n          unicodePathExtraField;\n      }\n\n      if(useUTF8ForComment) {\n\n        unicodeCommentExtraField =\n          // Version\n          decToHex(1, 1) +\n          // CommentCRC32\n          decToHex(this.crc32(utfEncodedComment), 4) +\n          // UnicodeName\n          utfEncodedComment;\n\n        extraFields +=\n          // Info-ZIP Unicode Path Extra Field\n          \"\\x75\\x63\" +\n          // size\n          decToHex(unicodeCommentExtraField.length, 2) +\n          // content\n          unicodeCommentExtraField;\n      }\n\n      var header = \"\";\n\n      // version needed to extract\n      header += \"\\x0A\\x00\";\n      // general purpose bit flag\n      // set bit 11 if utf8\n      header += (useUTF8ForFileName || useUTF8ForComment) ? \"\\x00\\x08\" : \"\\x00\\x00\";\n      // compression method\n      header += compressedObject.compressionMethod;\n      // last mod file time\n      header += decToHex(dosTime, 2);\n      // last mod file date\n      header += decToHex(dosDate, 2);\n      // crc-32\n      header += decToHex(compressedObject.crc32, 4);\n      // compressed size\n      header += decToHex(compressedObject.compressedSize, 4);\n      // uncompressed size\n      header += decToHex(compressedObject.uncompressedSize, 4);\n      // file name length\n      header += decToHex(utfEncodedFileName.length, 2);\n      // extra field length\n      header += decToHex(extraFields.length, 2);\n\n\n      var fileRecord = signature.LOCAL_FILE_HEADER + header + utfEncodedFileName + extraFields;\n\n      var dirRecord = signature.CENTRAL_FILE_HEADER +\n        // version made by (00: DOS)\n        \"\\x14\\x00\" +\n        // file header (common to file and central directory)\n        header +\n        // file comment length\n        decToHex(utfEncodedComment.length, 2) +\n        // disk number start\n        \"\\x00\\x00\" +\n        // internal file attributes TODO\n        \"\\x00\\x00\" +\n        // external file attributes\n        (dir === true ? \"\\x10\\x00\\x00\\x00\" : \"\\x00\\x00\\x00\\x00\") +\n        // relative offset of local header\n        decToHex(offset, 4) +\n        // file name\n        utfEncodedFileName +\n        // extra field\n        extraFields +\n        // file comment\n        utfEncodedComment;\n\n      return {\n        fileRecord: fileRecord,\n        dirRecord: dirRecord,\n        compressedObject: compressedObject\n      };\n    };\n\n\n// return the actual prototype of JSZip\n    var out = {\n      /**\n       * Read an existing zip and merge the data in the current JSZip object.\n       * The implementation is in jszip-load.js, don't forget to include it.\n       * @param {String|ArrayBuffer|Uint8Array|Buffer} stream  The stream to load\n       * @param {Object} options Options for loading the stream.\n       *  options.base64 : is the stream in base64 ? default : false\n       * @return {JSZip} the current JSZip object\n       */\n      load: function(stream, options) {\n        throw new Error(\"Load method is not defined. Is the file jszip-load.js included ?\");\n      },\n\n      /**\n       * Filter nested files/folders with the specified function.\n       * @param {Function} search the predicate to use :\n       * function (relativePath, file) {...}\n       * It takes 2 arguments : the relative path and the file.\n       * @return {Array} An array of matching elements.\n       */\n      filter: function(search) {\n        var result = [],\n          filename, relativePath, file, fileClone;\n        for (filename in this.files) {\n          if (!this.files.hasOwnProperty(filename)) {\n            continue;\n          }\n          file = this.files[filename];\n          // return a new object, don't let the user mess with our internal objects :)\n          fileClone = new ZipObject(file.name, file._data, extend(file.options));\n          relativePath = filename.slice(this.root.length, filename.length);\n          if (filename.slice(0, this.root.length) === this.root && // the file is in the current root\n            search(relativePath, fileClone)) { // and the file matches the function\n            result.push(fileClone);\n          }\n        }\n        return result;\n      },\n\n      /**\n       * Add a file to the zip file, or search a file.\n       * @param   {string|RegExp} name The name of the file to add (if data is defined),\n       * the name of the file to find (if no data) or a regex to match files.\n       * @param   {String|ArrayBuffer|Uint8Array|Buffer} data  The file data, either raw or base64 encoded\n       * @param   {Object} o     File options\n       * @return  {JSZip|Object|Array} this JSZip object (when adding a file),\n       * a file (when searching by string) or an array of files (when searching by regex).\n       */\n      file: function(name, data, o) {\n        if (arguments.length === 1) {\n          if (utils.isRegExp(name)) {\n            var regexp = name;\n            return this.filter(function(relativePath, file) {\n              return !file.dir && regexp.test(relativePath);\n            });\n          }\n          else { // text\n            return this.filter(function(relativePath, file) {\n              return !file.dir && relativePath === name;\n            })[0] || null;\n          }\n        }\n        else { // more than one argument : we have data !\n          name = this.root + name;\n          fileAdd.call(this, name, data, o);\n        }\n        return this;\n      },\n\n      /**\n       * Add a directory to the zip file, or search.\n       * @param   {String|RegExp} arg The name of the directory to add, or a regex to search folders.\n       * @return  {JSZip} an object with the new directory as the root, or an array containing matching folders.\n       */\n      folder: function(arg) {\n        if (!arg) {\n          return this;\n        }\n\n        if (utils.isRegExp(arg)) {\n          return this.filter(function(relativePath, file) {\n            return file.dir && arg.test(relativePath);\n          });\n        }\n\n        // else, name is a new folder\n        var name = this.root + arg;\n        var newFolder = folderAdd.call(this, name);\n\n        // Allow chaining by returning a new object with this folder as the root\n        var ret = this.clone();\n        ret.root = newFolder.name;\n        return ret;\n      },\n\n      /**\n       * Delete a file, or a directory and all sub-files, from the zip\n       * @param {string} name the name of the file to delete\n       * @return {JSZip} this JSZip object\n       */\n      remove: function(name) {\n        name = this.root + name;\n        var file = this.files[name];\n        if (!file) {\n          // Look for any folders\n          if (name.slice(-1) != \"/\") {\n            name += \"/\";\n          }\n          file = this.files[name];\n        }\n\n        if (file && !file.dir) {\n          // file\n          delete this.files[name];\n        } else {\n          // maybe a folder, delete recursively\n          var kids = this.filter(function(relativePath, file) {\n            return file.name.slice(0, name.length) === name;\n          });\n          for (var i = 0; i < kids.length; i++) {\n            delete this.files[kids[i].name];\n          }\n        }\n\n        return this;\n      },\n\n      /**\n       * Generate the complete zip file\n       * @param {Object} options the options to generate the zip file :\n       * - base64, (deprecated, use type instead) true to generate base64.\n       * - compression, \"STORE\" by default.\n       * - type, \"base64\" by default. Values are : string, base64, uint8array, arraybuffer, blob.\n       * @return {String|Uint8Array|ArrayBuffer|Buffer|Blob} the zip file\n       */\n      generate: function(options) {\n        options = extend(options || {}, {\n          base64: true,\n          compression: \"STORE\",\n          type: \"base64\",\n          comment: null\n        });\n\n        utils.checkSupport(options.type);\n\n        var zipData = [],\n          localDirLength = 0,\n          centralDirLength = 0,\n          writer, i,\n          utfEncodedComment = utils.transformTo(\"string\", this.utf8encode(options.comment || this.comment || \"\"));\n\n        // first, generate all the zip parts.\n        for (var name in this.files) {\n          if (!this.files.hasOwnProperty(name)) {\n            continue;\n          }\n          var file = this.files[name];\n\n          var compressionName = file.options.compression || options.compression.toUpperCase();\n          var compression = compressions[compressionName];\n          if (!compression) {\n            throw new Error(compressionName + \" is not a valid compression method !\");\n          }\n\n          var compressedObject = generateCompressedObjectFrom.call(this, file, compression);\n\n          var zipPart = generateZipParts.call(this, name, file, compressedObject, localDirLength);\n          localDirLength += zipPart.fileRecord.length + compressedObject.compressedSize;\n          centralDirLength += zipPart.dirRecord.length;\n          zipData.push(zipPart);\n        }\n\n        var dirEnd = \"\";\n\n        // end of central dir signature\n        dirEnd = signature.CENTRAL_DIRECTORY_END +\n          // number of this disk\n          \"\\x00\\x00\" +\n          // number of the disk with the start of the central directory\n          \"\\x00\\x00\" +\n          // total number of entries in the central directory on this disk\n          decToHex(zipData.length, 2) +\n          // total number of entries in the central directory\n          decToHex(zipData.length, 2) +\n          // size of the central directory   4 bytes\n          decToHex(centralDirLength, 4) +\n          // offset of start of central directory with respect to the starting disk number\n          decToHex(localDirLength, 4) +\n          // .ZIP file comment length\n          decToHex(utfEncodedComment.length, 2) +\n          // .ZIP file comment\n          utfEncodedComment;\n\n\n        // we have all the parts (and the total length)\n        // time to create a writer !\n        var typeName = options.type.toLowerCase();\n        if(typeName===\"uint8array\"||typeName===\"arraybuffer\"||typeName===\"blob\"||typeName===\"nodebuffer\") {\n          writer = new Uint8ArrayWriter(localDirLength + centralDirLength + dirEnd.length);\n        }else{\n          writer = new StringWriter(localDirLength + centralDirLength + dirEnd.length);\n        }\n\n        for (i = 0; i < zipData.length; i++) {\n          writer.append(zipData[i].fileRecord);\n          writer.append(zipData[i].compressedObject.compressedContent);\n        }\n        for (i = 0; i < zipData.length; i++) {\n          writer.append(zipData[i].dirRecord);\n        }\n\n        writer.append(dirEnd);\n\n        var zip = writer.finalize();\n\n\n\n        switch(options.type.toLowerCase()) {\n          // case \"zip is an Uint8Array\"\n          case \"uint8array\" :\n          case \"arraybuffer\" :\n          case \"nodebuffer\" :\n            return utils.transformTo(options.type.toLowerCase(), zip);\n          case \"blob\" :\n            return utils.arrayBuffer2Blob(utils.transformTo(\"arraybuffer\", zip));\n          // case \"zip is a string\"\n          case \"base64\" :\n            return (options.base64) ? base64.encode(zip) : zip;\n          default : // case \"string\" :\n            return zip;\n        }\n\n      },\n\n      /**\n       * @deprecated\n       * This method will be removed in a future version without replacement.\n       */\n      crc32: function (input, crc) {\n        return crc32(input, crc);\n      },\n\n      /**\n       * @deprecated\n       * This method will be removed in a future version without replacement.\n       */\n      utf8encode: function (string) {\n        return utils.transformTo(\"string\", utf8.utf8encode(string));\n      },\n\n      /**\n       * @deprecated\n       * This method will be removed in a future version without replacement.\n       */\n      utf8decode: function (input) {\n        return utf8.utf8decode(input);\n      }\n    };\n    module.exports = out;\n\n  },{\"./base64\":1,\"./compressedObject\":2,\"./compressions\":3,\"./crc32\":4,\"./defaults\":6,\"./nodeBuffer\":11,\"./signature\":14,\"./stringWriter\":16,\"./support\":17,\"./uint8ArrayWriter\":19,\"./utf8\":20,\"./utils\":21}],14:[function(_dereq_,module,exports){\n    'use strict';\n    exports.LOCAL_FILE_HEADER = \"PK\\x03\\x04\";\n    exports.CENTRAL_FILE_HEADER = \"PK\\x01\\x02\";\n    exports.CENTRAL_DIRECTORY_END = \"PK\\x05\\x06\";\n    exports.ZIP64_CENTRAL_DIRECTORY_LOCATOR = \"PK\\x06\\x07\";\n    exports.ZIP64_CENTRAL_DIRECTORY_END = \"PK\\x06\\x06\";\n    exports.DATA_DESCRIPTOR = \"PK\\x07\\x08\";\n\n  },{}],15:[function(_dereq_,module,exports){\n    'use strict';\n    var DataReader = _dereq_('./dataReader');\n    var utils = _dereq_('./utils');\n\n    function StringReader(data, optimizedBinaryString) {\n      this.data = data;\n      if (!optimizedBinaryString) {\n        this.data = utils.string2binary(this.data);\n      }\n      this.length = this.data.length;\n      this.index = 0;\n    }\n    StringReader.prototype = new DataReader();\n    /**\n     * @see DataReader.byteAt\n     */\n    StringReader.prototype.byteAt = function(i) {\n      return this.data.charCodeAt(i);\n    };\n    /**\n     * @see DataReader.lastIndexOfSignature\n     */\n    StringReader.prototype.lastIndexOfSignature = function(sig) {\n      return this.data.lastIndexOf(sig);\n    };\n    /**\n     * @see DataReader.readData\n     */\n    StringReader.prototype.readData = function(size) {\n      this.checkOffset(size);\n      // this will work because the constructor applied the \"& 0xff\" mask.\n      var result = this.data.slice(this.index, this.index + size);\n      this.index += size;\n      return result;\n    };\n    module.exports = StringReader;\n\n  },{\"./dataReader\":5,\"./utils\":21}],16:[function(_dereq_,module,exports){\n    'use strict';\n\n    var utils = _dereq_('./utils');\n\n    /**\n     * An object to write any content to a string.\n     * @constructor\n     */\n    var StringWriter = function() {\n      this.data = [];\n    };\n    StringWriter.prototype = {\n      /**\n       * Append any content to the current string.\n       * @param {Object} input the content to add.\n       */\n      append: function(input) {\n        input = utils.transformTo(\"string\", input);\n        this.data.push(input);\n      },\n      /**\n       * Finalize the construction an return the result.\n       * @return {string} the generated string.\n       */\n      finalize: function() {\n        return this.data.join(\"\");\n      }\n    };\n\n    module.exports = StringWriter;\n\n  },{\"./utils\":21}],17:[function(_dereq_,module,exports){\n    (function (Buffer){\n      'use strict';\n      exports.base64 = true;\n      exports.array = true;\n      exports.string = true;\n      exports.arraybuffer = typeof ArrayBuffer !== \"undefined\" && typeof Uint8Array !== \"undefined\";\n// contains true if JSZip can read/generate nodejs Buffer, false otherwise.\n// Browserify will provide a Buffer implementation for browsers, which is\n// an augmented Uint8Array (i.e., can be used as either Buffer or U8).\n      exports.nodebuffer = typeof Buffer !== \"undefined\";\n// contains true if JSZip can read/generate Uint8Array, false otherwise.\n      exports.uint8array = typeof Uint8Array !== \"undefined\";\n\n      if (typeof ArrayBuffer === \"undefined\") {\n        exports.blob = false;\n      }\n      else {\n        var buffer = new ArrayBuffer(0);\n        try {\n          exports.blob = new Blob([buffer], {\n            type: \"application/zip\"\n          }).size === 0;\n        }\n        catch (e) {\n          try {\n            var Builder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n            var builder = new Builder();\n            builder.append(buffer);\n            exports.blob = builder.getBlob('application/zip').size === 0;\n          }\n          catch (e) {\n            exports.blob = false;\n          }\n        }\n      }\n\n    }).call(this,(typeof Buffer !== \"undefined\" ? Buffer : undefined))\n  },{}],18:[function(_dereq_,module,exports){\n    'use strict';\n    var DataReader = _dereq_('./dataReader');\n\n    function Uint8ArrayReader(data) {\n      if (data) {\n        this.data = data;\n        this.length = this.data.length;\n        this.index = 0;\n      }\n    }\n    Uint8ArrayReader.prototype = new DataReader();\n    /**\n     * @see DataReader.byteAt\n     */\n    Uint8ArrayReader.prototype.byteAt = function(i) {\n      return this.data[i];\n    };\n    /**\n     * @see DataReader.lastIndexOfSignature\n     */\n    Uint8ArrayReader.prototype.lastIndexOfSignature = function(sig) {\n      var sig0 = sig.charCodeAt(0),\n        sig1 = sig.charCodeAt(1),\n        sig2 = sig.charCodeAt(2),\n        sig3 = sig.charCodeAt(3);\n      for (var i = this.length - 4; i >= 0; --i) {\n        if (this.data[i] === sig0 && this.data[i + 1] === sig1 && this.data[i + 2] === sig2 && this.data[i + 3] === sig3) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n    /**\n     * @see DataReader.readData\n     */\n    Uint8ArrayReader.prototype.readData = function(size) {\n      this.checkOffset(size);\n      if(size === 0) {\n        // in IE10, when using subarray(idx, idx), we get the array [0x00] instead of [].\n        return new Uint8Array(0);\n      }\n      var result = this.data.subarray(this.index, this.index + size);\n      this.index += size;\n      return result;\n    };\n    module.exports = Uint8ArrayReader;\n\n  },{\"./dataReader\":5}],19:[function(_dereq_,module,exports){\n    'use strict';\n\n    var utils = _dereq_('./utils');\n\n    /**\n     * An object to write any content to an Uint8Array.\n     * @constructor\n     * @param {number} length The length of the array.\n     */\n    var Uint8ArrayWriter = function(length) {\n      this.data = new Uint8Array(length);\n      this.index = 0;\n    };\n    Uint8ArrayWriter.prototype = {\n      /**\n       * Append any content to the current array.\n       * @param {Object} input the content to add.\n       */\n      append: function(input) {\n        if (input.length !== 0) {\n          // with an empty Uint8Array, Opera fails with a \"Offset larger than array size\"\n          input = utils.transformTo(\"uint8array\", input);\n          this.data.set(input, this.index);\n          this.index += input.length;\n        }\n      },\n      /**\n       * Finalize the construction an return the result.\n       * @return {Uint8Array} the generated array.\n       */\n      finalize: function() {\n        return this.data;\n      }\n    };\n\n    module.exports = Uint8ArrayWriter;\n\n  },{\"./utils\":21}],20:[function(_dereq_,module,exports){\n    'use strict';\n\n    var utils = _dereq_('./utils');\n    var support = _dereq_('./support');\n    var nodeBuffer = _dereq_('./nodeBuffer');\n\n    /**\n     * The following functions come from pako, from pako/lib/utils/strings\n     * released under the MIT license, see pako https://github.com/nodeca/pako/\n     */\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\n    var _utf8len = new Array(256);\n    for (var i=0; i<256; i++) {\n      _utf8len[i] = (i >= 252 ? 6 : i >= 248 ? 5 : i >= 240 ? 4 : i >= 224 ? 3 : i >= 192 ? 2 : 1);\n    }\n    _utf8len[254]=_utf8len[254]=1; // Invalid sequence start\n\n// convert string to array (typed, when possible)\n    var string2buf = function (str) {\n      var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n      // count binary size\n      for (m_pos = 0; m_pos < str_len; m_pos++) {\n        c = str.charCodeAt(m_pos);\n        if (((c & 0xfc00) === 0xd800) && (m_pos+1 < str_len)) {\n          c2 = str.charCodeAt(m_pos+1);\n          if ((c2 & 0xfc00) === 0xdc00) {\n            c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n            m_pos++;\n          }\n        }\n        buf_len += (c < 0x80) ? 1 : ((c < 0x800) ? 2 : ((c < 0x10000) ? 3 : 4));\n      }\n\n      // allocate buffer\n      if (support.uint8array) {\n        buf = new Uint8Array(buf_len);\n      } else {\n        buf = new Array(buf_len);\n      }\n\n      // convert\n      for (i=0, m_pos = 0; i < buf_len; m_pos++) {\n        c = str.charCodeAt(m_pos);\n        if ((c & 0xfc00) === 0xd800 && (m_pos+1 < str_len)) {\n          c2 = str.charCodeAt(m_pos+1);\n          if ((c2 & 0xfc00) === 0xdc00) {\n            c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n            m_pos++;\n          }\n        }\n        if (c < 0x80) {\n          /* one byte */\n          buf[i++] = c;\n        } else if (c < 0x800) {\n          /* two bytes */\n          buf[i++] = 0xC0 | (c >>> 6);\n          buf[i++] = 0x80 | (c & 0x3f);\n        } else if (c < 0x10000) {\n          /* three bytes */\n          buf[i++] = 0xE0 | (c >>> 12);\n          buf[i++] = 0x80 | ((c >>> 6) & 0x3f);\n          buf[i++] = 0x80 | (c & 0x3f);\n        } else {\n          /* four bytes */\n          buf[i++] = 0xf0 | (c >>> 18);\n          buf[i++] = 0x80 | ((c >>> 12) & 0x3f);\n          buf[i++] = 0x80 | ((c >>> 6) & 0x3f);\n          buf[i++] = 0x80 | (c & 0x3f);\n        }\n      }\n\n      return buf;\n    };\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\n    var utf8border = function(buf, max) {\n      var pos;\n\n      max = max || buf.length;\n      if (max > buf.length) { max = buf.length; }\n\n      // go back from last position, until start of sequence found\n      pos = max-1;\n      while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n      // Fuckup - very small and broken sequence,\n      // return max, because we should return something anyway.\n      if (pos < 0) { return max; }\n\n      // If we came to start of buffer - that means vuffer is too small,\n      // return max too.\n      if (pos === 0) { return max; }\n\n      return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n    };\n\n// convert array to string\n    var buf2string = function (buf) {\n      var str, i, out, c, c_len;\n      var len = buf.length;\n\n      // Reserve max possible length (2 words per char)\n      // NB: by unknown reasons, Array is significantly faster for\n      //     String.fromCharCode.apply than Uint16Array.\n      var utf16buf = new Array(len*2);\n\n      for (out=0, i=0; i<len;) {\n        c = buf[i++];\n        // quick process ascii\n        if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n        c_len = _utf8len[c];\n        // skip 5 & 6 byte codes\n        if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len-1; continue; }\n\n        // apply mask on first byte\n        c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n        // join the rest\n        while (c_len > 1 && i < len) {\n          c = (c << 6) | (buf[i++] & 0x3f);\n          c_len--;\n        }\n\n        // terminated by end of string?\n        if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n        if (c < 0x10000) {\n          utf16buf[out++] = c;\n        } else {\n          c -= 0x10000;\n          utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n          utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n        }\n      }\n\n      // shrinkBuf(utf16buf, out)\n      if (utf16buf.length !== out) {\n        if(utf16buf.subarray) {\n          utf16buf = utf16buf.subarray(0, out);\n        } else {\n          utf16buf.length = out;\n        }\n      }\n\n      // return String.fromCharCode.apply(null, utf16buf);\n      return utils.applyFromCharCode(utf16buf);\n    };\n\n\n// That's all for the pako functions.\n\n\n    /**\n     * Transform a javascript string into an array (typed if possible) of bytes,\n     * UTF-8 encoded.\n     * @param {String} str the string to encode\n     * @return {Array|Uint8Array|Buffer} the UTF-8 encoded string.\n     */\n    exports.utf8encode = function utf8encode(str) {\n      if (support.nodebuffer) {\n        return nodeBuffer(str, \"utf-8\");\n      }\n\n      return string2buf(str);\n    };\n\n\n    /**\n     * Transform a bytes array (or a representation) representing an UTF-8 encoded\n     * string into a javascript string.\n     * @param {Array|Uint8Array|Buffer} buf the data de decode\n     * @return {String} the decoded string.\n     */\n    exports.utf8decode = function utf8decode(buf) {\n      if (support.nodebuffer) {\n        return utils.transformTo(\"nodebuffer\", buf).toString(\"utf-8\");\n      }\n\n      buf = utils.transformTo(support.uint8array ? \"uint8array\" : \"array\", buf);\n\n      // return buf2string(buf);\n      // Chrome prefers to work with \"small\" chunks of data\n      // for the method buf2string.\n      // Firefox and Chrome has their own shortcut, IE doesn't seem to really care.\n      var result = [], k = 0, len = buf.length, chunk = 65536;\n      while (k < len) {\n        var nextBoundary = utf8border(buf, Math.min(k + chunk, len));\n        if (support.uint8array) {\n          result.push(buf2string(buf.subarray(k, nextBoundary)));\n        } else {\n          result.push(buf2string(buf.slice(k, nextBoundary)));\n        }\n        k = nextBoundary;\n      }\n      return result.join(\"\");\n\n    };\n// vim: set shiftwidth=4 softtabstop=4:\n\n  },{\"./nodeBuffer\":11,\"./support\":17,\"./utils\":21}],21:[function(_dereq_,module,exports){\n    'use strict';\n    var support = _dereq_('./support');\n    var compressions = _dereq_('./compressions');\n    var nodeBuffer = _dereq_('./nodeBuffer');\n    /**\n     * Convert a string to a \"binary string\" : a string containing only char codes between 0 and 255.\n     * @param {string} str the string to transform.\n     * @return {String} the binary string.\n     */\n    exports.string2binary = function(str) {\n      var result = \"\";\n      for (var i = 0; i < str.length; i++) {\n        result += String.fromCharCode(str.charCodeAt(i) & 0xff);\n      }\n      return result;\n    };\n    exports.arrayBuffer2Blob = function(buffer) {\n      exports.checkSupport(\"blob\");\n\n      try {\n        // Blob constructor\n        return new Blob([buffer], {\n          type: \"application/zip\"\n        });\n      }\n      catch (e) {\n\n        try {\n          // deprecated, browser only, old way\n          var Builder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n          var builder = new Builder();\n          builder.append(buffer);\n          return builder.getBlob('application/zip');\n        }\n        catch (e) {\n\n          // well, fuck ?!\n          throw new Error(\"Bug : can't construct the Blob.\");\n        }\n      }\n\n\n    };\n    /**\n     * The identity function.\n     * @param {Object} input the input.\n     * @return {Object} the same input.\n     */\n    function identity(input) {\n      return input;\n    }\n\n    /**\n     * Fill in an array with a string.\n     * @param {String} str the string to use.\n     * @param {Array|ArrayBuffer|Uint8Array|Buffer} array the array to fill in (will be mutated).\n     * @return {Array|ArrayBuffer|Uint8Array|Buffer} the updated array.\n     */\n    function stringToArrayLike(str, array) {\n      for (var i = 0; i < str.length; ++i) {\n        array[i] = str.charCodeAt(i) & 0xFF;\n      }\n      return array;\n    }\n\n    /**\n     * Transform an array-like object to a string.\n     * @param {Array|ArrayBuffer|Uint8Array|Buffer} array the array to transform.\n     * @return {String} the result.\n     */\n    function arrayLikeToString(array) {\n      // Performances notes :\n      // --------------------\n      // String.fromCharCode.apply(null, array) is the fastest, see\n      // see http://jsperf.com/converting-a-uint8array-to-a-string/2\n      // but the stack is limited (and we can get huge arrays !).\n      //\n      // result += String.fromCharCode(array[i]); generate too many strings !\n      //\n      // This code is inspired by http://jsperf.com/arraybuffer-to-string-apply-performance/2\n      var chunk = 65536;\n      var result = [],\n        len = array.length,\n        type = exports.getTypeOf(array),\n        k = 0,\n        canUseApply = true;\n      try {\n        switch(type) {\n          case \"uint8array\":\n            String.fromCharCode.apply(null, new Uint8Array(0));\n            break;\n          case \"nodebuffer\":\n            String.fromCharCode.apply(null, nodeBuffer(0));\n            break;\n        }\n      } catch(e) {\n        canUseApply = false;\n      }\n\n      // no apply : slow and painful algorithm\n      // default browser on android 4.*\n      if (!canUseApply) {\n        var resultStr = \"\";\n        for(var i = 0; i < array.length;i++) {\n          resultStr += String.fromCharCode(array[i]);\n        }\n        return resultStr;\n      }\n      while (k < len && chunk > 1) {\n        try {\n          if (type === \"array\" || type === \"nodebuffer\") {\n            result.push(String.fromCharCode.apply(null, array.slice(k, Math.min(k + chunk, len))));\n          }\n          else {\n            result.push(String.fromCharCode.apply(null, array.subarray(k, Math.min(k + chunk, len))));\n          }\n          k += chunk;\n        }\n        catch (e) {\n          chunk = Math.floor(chunk / 2);\n        }\n      }\n      return result.join(\"\");\n    }\n\n    exports.applyFromCharCode = arrayLikeToString;\n\n\n    /**\n     * Copy the data from an array-like to an other array-like.\n     * @param {Array|ArrayBuffer|Uint8Array|Buffer} arrayFrom the origin array.\n     * @param {Array|ArrayBuffer|Uint8Array|Buffer} arrayTo the destination array which will be mutated.\n     * @return {Array|ArrayBuffer|Uint8Array|Buffer} the updated destination array.\n     */\n    function arrayLikeToArrayLike(arrayFrom, arrayTo) {\n      for (var i = 0; i < arrayFrom.length; i++) {\n        arrayTo[i] = arrayFrom[i];\n      }\n      return arrayTo;\n    }\n\n// a matrix containing functions to transform everything into everything.\n    var transform = {};\n\n// string to ?\n    transform[\"string\"] = {\n      \"string\": identity,\n      \"array\": function(input) {\n        return stringToArrayLike(input, new Array(input.length));\n      },\n      \"arraybuffer\": function(input) {\n        return transform[\"string\"][\"uint8array\"](input).buffer;\n      },\n      \"uint8array\": function(input) {\n        return stringToArrayLike(input, new Uint8Array(input.length));\n      },\n      \"nodebuffer\": function(input) {\n        return stringToArrayLike(input, nodeBuffer(input.length));\n      }\n    };\n\n// array to ?\n    transform[\"array\"] = {\n      \"string\": arrayLikeToString,\n      \"array\": identity,\n      \"arraybuffer\": function(input) {\n        return (new Uint8Array(input)).buffer;\n      },\n      \"uint8array\": function(input) {\n        return new Uint8Array(input);\n      },\n      \"nodebuffer\": function(input) {\n        return nodeBuffer(input);\n      }\n    };\n\n// arraybuffer to ?\n    transform[\"arraybuffer\"] = {\n      \"string\": function(input) {\n        return arrayLikeToString(new Uint8Array(input));\n      },\n      \"array\": function(input) {\n        return arrayLikeToArrayLike(new Uint8Array(input), new Array(input.byteLength));\n      },\n      \"arraybuffer\": identity,\n      \"uint8array\": function(input) {\n        return new Uint8Array(input);\n      },\n      \"nodebuffer\": function(input) {\n        return nodeBuffer(new Uint8Array(input));\n      }\n    };\n\n// uint8array to ?\n    transform[\"uint8array\"] = {\n      \"string\": arrayLikeToString,\n      \"array\": function(input) {\n        return arrayLikeToArrayLike(input, new Array(input.length));\n      },\n      \"arraybuffer\": function(input) {\n        return input.buffer;\n      },\n      \"uint8array\": identity,\n      \"nodebuffer\": function(input) {\n        return nodeBuffer(input);\n      }\n    };\n\n// nodebuffer to ?\n    transform[\"nodebuffer\"] = {\n      \"string\": arrayLikeToString,\n      \"array\": function(input) {\n        return arrayLikeToArrayLike(input, new Array(input.length));\n      },\n      \"arraybuffer\": function(input) {\n        return transform[\"nodebuffer\"][\"uint8array\"](input).buffer;\n      },\n      \"uint8array\": function(input) {\n        return arrayLikeToArrayLike(input, new Uint8Array(input.length));\n      },\n      \"nodebuffer\": identity\n    };\n\n    /**\n     * Transform an input into any type.\n     * The supported output type are : string, array, uint8array, arraybuffer, nodebuffer.\n     * If no output type is specified, the unmodified input will be returned.\n     * @param {String} outputType the output type.\n     * @param {String|Array|ArrayBuffer|Uint8Array|Buffer} input the input to convert.\n     * @throws {Error} an Error if the browser doesn't support the requested output type.\n     */\n    exports.transformTo = function(outputType, input) {\n      if (!input) {\n        // undefined, null, etc\n        // an empty string won't harm.\n        input = \"\";\n      }\n      if (!outputType) {\n        return input;\n      }\n      exports.checkSupport(outputType);\n      var inputType = exports.getTypeOf(input);\n      var result = transform[inputType][outputType](input);\n      return result;\n    };\n\n    /**\n     * Return the type of the input.\n     * The type will be in a format valid for JSZip.utils.transformTo : string, array, uint8array, arraybuffer.\n     * @param {Object} input the input to identify.\n     * @return {String} the (lowercase) type of the input.\n     */\n    exports.getTypeOf = function(input) {\n      if (typeof input === \"string\") {\n        return \"string\";\n      }\n      if (Object.prototype.toString.call(input) === \"[object Array]\") {\n        return \"array\";\n      }\n      if (support.nodebuffer && nodeBuffer.test(input)) {\n        return \"nodebuffer\";\n      }\n      if (support.uint8array && input instanceof Uint8Array) {\n        return \"uint8array\";\n      }\n      if (support.arraybuffer && input instanceof ArrayBuffer) {\n        return \"arraybuffer\";\n      }\n    };\n\n    /**\n     * Throw an exception if the type is not supported.\n     * @param {String} type the type to check.\n     * @throws {Error} an Error if the browser doesn't support the requested type.\n     */\n    exports.checkSupport = function(type) {\n      var supported = support[type.toLowerCase()];\n      if (!supported) {\n        throw new Error(type + \" is not supported by this browser\");\n      }\n    };\n    exports.MAX_VALUE_16BITS = 65535;\n    exports.MAX_VALUE_32BITS = -1; // well, \"\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\" is parsed as -1\n\n    /**\n     * Prettify a string read as binary.\n     * @param {string} str the string to prettify.\n     * @return {string} a pretty string.\n     */\n    exports.pretty = function(str) {\n      var res = '',\n        code, i;\n      for (i = 0; i < (str || \"\").length; i++) {\n        code = str.charCodeAt(i);\n        res += '\\\\x' + (code < 16 ? \"0\" : \"\") + code.toString(16).toUpperCase();\n      }\n      return res;\n    };\n\n    /**\n     * Find a compression registered in JSZip.\n     * @param {string} compressionMethod the method magic to find.\n     * @return {Object|null} the JSZip compression object, null if none found.\n     */\n    exports.findCompression = function(compressionMethod) {\n      for (var method in compressions) {\n        if (!compressions.hasOwnProperty(method)) {\n          continue;\n        }\n        if (compressions[method].magic === compressionMethod) {\n          return compressions[method];\n        }\n      }\n      return null;\n    };\n    /**\n     * Cross-window, cross-Node-context regular expression detection\n     * @param  {Object}  object Anything\n     * @return {Boolean}        true if the object is a regular expression,\n     * false otherwise\n     */\n    exports.isRegExp = function (object) {\n      return Object.prototype.toString.call(object) === \"[object RegExp]\";\n    };\n\n\n  },{\"./compressions\":3,\"./nodeBuffer\":11,\"./support\":17}],22:[function(_dereq_,module,exports){\n    'use strict';\n    var StringReader = _dereq_('./stringReader');\n    var NodeBufferReader = _dereq_('./nodeBufferReader');\n    var Uint8ArrayReader = _dereq_('./uint8ArrayReader');\n    var utils = _dereq_('./utils');\n    var sig = _dereq_('./signature');\n    var ZipEntry = _dereq_('./zipEntry');\n    var support = _dereq_('./support');\n    var jszipProto = _dereq_('./object');\n//  class ZipEntries {{{\n    /**\n     * All the entries in the zip file.\n     * @constructor\n     * @param {String|ArrayBuffer|Uint8Array} data the binary stream to load.\n     * @param {Object} loadOptions Options for loading the stream.\n     */\n    function ZipEntries(data, loadOptions) {\n      this.files = [];\n      this.loadOptions = loadOptions;\n      if (data) {\n        this.load(data);\n      }\n    }\n    ZipEntries.prototype = {\n      /**\n       * Check that the reader is on the speficied signature.\n       * @param {string} expectedSignature the expected signature.\n       * @throws {Error} if it is an other signature.\n       */\n      checkSignature: function(expectedSignature) {\n        var signature = this.reader.readString(4);\n        if (signature !== expectedSignature) {\n          throw new Error(\"Corrupted zip or bug : unexpected signature \" + \"(\" + utils.pretty(signature) + \", expected \" + utils.pretty(expectedSignature) + \")\");\n        }\n      },\n      /**\n       * Read the end of the central directory.\n       */\n      readBlockEndOfCentral: function() {\n        this.diskNumber = this.reader.readInt(2);\n        this.diskWithCentralDirStart = this.reader.readInt(2);\n        this.centralDirRecordsOnThisDisk = this.reader.readInt(2);\n        this.centralDirRecords = this.reader.readInt(2);\n        this.centralDirSize = this.reader.readInt(4);\n        this.centralDirOffset = this.reader.readInt(4);\n\n        this.zipCommentLength = this.reader.readInt(2);\n        // warning : the encoding depends of the system locale\n        // On a linux machine with LANG=en_US.utf8, this field is utf8 encoded.\n        // On a windows machine, this field is encoded with the localized windows code page.\n        this.zipComment = this.reader.readString(this.zipCommentLength);\n        // To get consistent behavior with the generation part, we will assume that\n        // this is utf8 encoded.\n        this.zipComment = jszipProto.utf8decode(this.zipComment);\n      },\n      /**\n       * Read the end of the Zip 64 central directory.\n       * Not merged with the method readEndOfCentral :\n       * The end of central can coexist with its Zip64 brother,\n       * I don't want to read the wrong number of bytes !\n       */\n      readBlockZip64EndOfCentral: function() {\n        this.zip64EndOfCentralSize = this.reader.readInt(8);\n        this.versionMadeBy = this.reader.readString(2);\n        this.versionNeeded = this.reader.readInt(2);\n        this.diskNumber = this.reader.readInt(4);\n        this.diskWithCentralDirStart = this.reader.readInt(4);\n        this.centralDirRecordsOnThisDisk = this.reader.readInt(8);\n        this.centralDirRecords = this.reader.readInt(8);\n        this.centralDirSize = this.reader.readInt(8);\n        this.centralDirOffset = this.reader.readInt(8);\n\n        this.zip64ExtensibleData = {};\n        var extraDataSize = this.zip64EndOfCentralSize - 44,\n          index = 0,\n          extraFieldId,\n          extraFieldLength,\n          extraFieldValue;\n        while (index < extraDataSize) {\n          extraFieldId = this.reader.readInt(2);\n          extraFieldLength = this.reader.readInt(4);\n          extraFieldValue = this.reader.readString(extraFieldLength);\n          this.zip64ExtensibleData[extraFieldId] = {\n            id: extraFieldId,\n            length: extraFieldLength,\n            value: extraFieldValue\n          };\n        }\n      },\n      /**\n       * Read the end of the Zip 64 central directory locator.\n       */\n      readBlockZip64EndOfCentralLocator: function() {\n        this.diskWithZip64CentralDirStart = this.reader.readInt(4);\n        this.relativeOffsetEndOfZip64CentralDir = this.reader.readInt(8);\n        this.disksCount = this.reader.readInt(4);\n        if (this.disksCount > 1) {\n          throw new Error(\"Multi-volumes zip are not supported\");\n        }\n      },\n      /**\n       * Read the local files, based on the offset read in the central part.\n       */\n      readLocalFiles: function() {\n        var i, file;\n        for (i = 0; i < this.files.length; i++) {\n          file = this.files[i];\n          this.reader.setIndex(file.localHeaderOffset);\n          this.checkSignature(sig.LOCAL_FILE_HEADER);\n          file.readLocalPart(this.reader);\n          file.handleUTF8();\n        }\n      },\n      /**\n       * Read the central directory.\n       */\n      readCentralDir: function() {\n        var file;\n\n        this.reader.setIndex(this.centralDirOffset);\n        while (this.reader.readString(4) === sig.CENTRAL_FILE_HEADER) {\n          file = new ZipEntry({\n            zip64: this.zip64\n          }, this.loadOptions);\n          file.readCentralPart(this.reader);\n          this.files.push(file);\n        }\n      },\n      /**\n       * Read the end of central directory.\n       */\n      readEndOfCentral: function() {\n        var offset = this.reader.lastIndexOfSignature(sig.CENTRAL_DIRECTORY_END);\n        if (offset === -1) {\n          throw new Error(\"Corrupted zip : can't find end of central directory\");\n        }\n        this.reader.setIndex(offset);\n        this.checkSignature(sig.CENTRAL_DIRECTORY_END);\n        this.readBlockEndOfCentral();\n\n\n        /* extract from the zip spec :\n            4)  If one of the fields in the end of central directory\n                record is too small to hold required data, the field\n                should be set to -1 (0xFFFF or 0xFFFFFFFF) and the\n                ZIP64 format record should be created.\n            5)  The end of central directory record and the\n                Zip64 end of central directory locator record must\n                reside on the same disk when splitting or spanning\n                an archive.\n         */\n        if (this.diskNumber === utils.MAX_VALUE_16BITS || this.diskWithCentralDirStart === utils.MAX_VALUE_16BITS || this.centralDirRecordsOnThisDisk === utils.MAX_VALUE_16BITS || this.centralDirRecords === utils.MAX_VALUE_16BITS || this.centralDirSize === utils.MAX_VALUE_32BITS || this.centralDirOffset === utils.MAX_VALUE_32BITS) {\n          this.zip64 = true;\n\n          /*\n            Warning : the zip64 extension is supported, but ONLY if the 64bits integer read from\n            the zip file can fit into a 32bits integer. This cannot be solved : Javascript represents\n            all numbers as 64-bit double precision IEEE 754 floating point numbers.\n            So, we have 53bits for integers and bitwise operations treat everything as 32bits.\n            see https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/Bitwise_Operators\n            and http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf section 8.5\n            */\n\n          // should look for a zip64 EOCD locator\n          offset = this.reader.lastIndexOfSignature(sig.ZIP64_CENTRAL_DIRECTORY_LOCATOR);\n          if (offset === -1) {\n            throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory locator\");\n          }\n          this.reader.setIndex(offset);\n          this.checkSignature(sig.ZIP64_CENTRAL_DIRECTORY_LOCATOR);\n          this.readBlockZip64EndOfCentralLocator();\n\n          // now the zip64 EOCD record\n          this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir);\n          this.checkSignature(sig.ZIP64_CENTRAL_DIRECTORY_END);\n          this.readBlockZip64EndOfCentral();\n        }\n      },\n      prepareReader: function(data) {\n        var type = utils.getTypeOf(data);\n        if (type === \"string\" && !support.uint8array) {\n          this.reader = new StringReader(data, this.loadOptions.optimizedBinaryString);\n        }\n        else if (type === \"nodebuffer\") {\n          this.reader = new NodeBufferReader(data);\n        }\n        else {\n          this.reader = new Uint8ArrayReader(utils.transformTo(\"uint8array\", data));\n        }\n      },\n      /**\n       * Read a zip file and create ZipEntries.\n       * @param {String|ArrayBuffer|Uint8Array|Buffer} data the binary string representing a zip file.\n       */\n      load: function(data) {\n        this.prepareReader(data);\n        this.readEndOfCentral();\n        this.readCentralDir();\n        this.readLocalFiles();\n      }\n    };\n// }}} end of ZipEntries\n    module.exports = ZipEntries;\n\n  },{\"./nodeBufferReader\":12,\"./object\":13,\"./signature\":14,\"./stringReader\":15,\"./support\":17,\"./uint8ArrayReader\":18,\"./utils\":21,\"./zipEntry\":23}],23:[function(_dereq_,module,exports){\n    'use strict';\n    var StringReader = _dereq_('./stringReader');\n    var utils = _dereq_('./utils');\n    var CompressedObject = _dereq_('./compressedObject');\n    var jszipProto = _dereq_('./object');\n// class ZipEntry {{{\n    /**\n     * An entry in the zip file.\n     * @constructor\n     * @param {Object} options Options of the current file.\n     * @param {Object} loadOptions Options for loading the stream.\n     */\n    function ZipEntry(options, loadOptions) {\n      this.options = options;\n      this.loadOptions = loadOptions;\n    }\n    ZipEntry.prototype = {\n      /**\n       * say if the file is encrypted.\n       * @return {boolean} true if the file is encrypted, false otherwise.\n       */\n      isEncrypted: function() {\n        // bit 1 is set\n        return (this.bitFlag & 0x0001) === 0x0001;\n      },\n      /**\n       * say if the file has utf-8 filename/comment.\n       * @return {boolean} true if the filename/comment is in utf-8, false otherwise.\n       */\n      useUTF8: function() {\n        // bit 11 is set\n        return (this.bitFlag & 0x0800) === 0x0800;\n      },\n      /**\n       * Prepare the function used to generate the compressed content from this ZipFile.\n       * @param {DataReader} reader the reader to use.\n       * @param {number} from the offset from where we should read the data.\n       * @param {number} length the length of the data to read.\n       * @return {Function} the callback to get the compressed content (the type depends of the DataReader class).\n       */\n      prepareCompressedContent: function(reader, from, length) {\n        return function() {\n          var previousIndex = reader.index;\n          reader.setIndex(from);\n          var compressedFileData = reader.readData(length);\n          reader.setIndex(previousIndex);\n\n          return compressedFileData;\n        };\n      },\n      /**\n       * Prepare the function used to generate the uncompressed content from this ZipFile.\n       * @param {DataReader} reader the reader to use.\n       * @param {number} from the offset from where we should read the data.\n       * @param {number} length the length of the data to read.\n       * @param {JSZip.compression} compression the compression used on this file.\n       * @param {number} uncompressedSize the uncompressed size to expect.\n       * @return {Function} the callback to get the uncompressed content (the type depends of the DataReader class).\n       */\n      prepareContent: function(reader, from, length, compression, uncompressedSize) {\n        return function() {\n\n          var compressedFileData = utils.transformTo(compression.uncompressInputType, this.getCompressedContent());\n          var uncompressedFileData = compression.uncompress(compressedFileData);\n\n          if (uncompressedFileData.length !== uncompressedSize) {\n            throw new Error(\"Bug : uncompressed data size mismatch\");\n          }\n\n          return uncompressedFileData;\n        };\n      },\n      /**\n       * Read the local part of a zip file and add the info in this object.\n       * @param {DataReader} reader the reader to use.\n       */\n      readLocalPart: function(reader) {\n        var compression, localExtraFieldsLength;\n\n        // we already know everything from the central dir !\n        // If the central dir data are false, we are doomed.\n        // On the bright side, the local part is scary  : zip64, data descriptors, both, etc.\n        // The less data we get here, the more reliable this should be.\n        // Let's skip the whole header and dash to the data !\n        reader.skip(22);\n        // in some zip created on windows, the filename stored in the central dir contains \\ instead of /.\n        // Strangely, the filename here is OK.\n        // I would love to treat these zip files as corrupted (see http://www.info-zip.org/FAQ.html#backslashes\n        // or APPNOTE#4.4.17.1, \"All slashes MUST be forward slashes '/'\") but there are a lot of bad zip generators...\n        // Search \"unzip mismatching \"local\" filename continuing with \"central\" filename version\" on\n        // the internet.\n        //\n        // I think I see the logic here : the central directory is used to display\n        // content and the local directory is used to extract the files. Mixing / and \\\n        // may be used to display \\ to windows users and use / when extracting the files.\n        // Unfortunately, this lead also to some issues : http://seclists.org/fulldisclosure/2009/Sep/394\n        this.fileNameLength = reader.readInt(2);\n        localExtraFieldsLength = reader.readInt(2); // can't be sure this will be the same as the central dir\n        this.fileName = reader.readString(this.fileNameLength);\n        reader.skip(localExtraFieldsLength);\n\n        if (this.compressedSize == -1 || this.uncompressedSize == -1) {\n          throw new Error(\"Bug or corrupted zip : didn't get enough informations from the central directory \" + \"(compressedSize == -1 || uncompressedSize == -1)\");\n        }\n\n        compression = utils.findCompression(this.compressionMethod);\n        if (compression === null) { // no compression found\n          throw new Error(\"Corrupted zip : compression \" + utils.pretty(this.compressionMethod) + \" unknown (inner file : \" + this.fileName + \")\");\n        }\n        this.decompressed = new CompressedObject();\n        this.decompressed.compressedSize = this.compressedSize;\n        this.decompressed.uncompressedSize = this.uncompressedSize;\n        this.decompressed.crc32 = this.crc32;\n        this.decompressed.compressionMethod = this.compressionMethod;\n        this.decompressed.getCompressedContent = this.prepareCompressedContent(reader, reader.index, this.compressedSize, compression);\n        this.decompressed.getContent = this.prepareContent(reader, reader.index, this.compressedSize, compression, this.uncompressedSize);\n\n        // we need to compute the crc32...\n        if (this.loadOptions.checkCRC32) {\n          this.decompressed = utils.transformTo(\"string\", this.decompressed.getContent());\n          if (jszipProto.crc32(this.decompressed) !== this.crc32) {\n            throw new Error(\"Corrupted zip : CRC32 mismatch\");\n          }\n        }\n      },\n\n      /**\n       * Read the central part of a zip file and add the info in this object.\n       * @param {DataReader} reader the reader to use.\n       */\n      readCentralPart: function(reader) {\n        this.versionMadeBy = reader.readString(2);\n        this.versionNeeded = reader.readInt(2);\n        this.bitFlag = reader.readInt(2);\n        this.compressionMethod = reader.readString(2);\n        this.date = reader.readDate();\n        this.crc32 = reader.readInt(4);\n        this.compressedSize = reader.readInt(4);\n        this.uncompressedSize = reader.readInt(4);\n        this.fileNameLength = reader.readInt(2);\n        this.extraFieldsLength = reader.readInt(2);\n        this.fileCommentLength = reader.readInt(2);\n        this.diskNumberStart = reader.readInt(2);\n        this.internalFileAttributes = reader.readInt(2);\n        this.externalFileAttributes = reader.readInt(4);\n        this.localHeaderOffset = reader.readInt(4);\n\n        if (this.isEncrypted()) {\n          throw new Error(\"Encrypted zip are not supported\");\n        }\n\n        this.fileName = reader.readString(this.fileNameLength);\n        this.readExtraFields(reader);\n        this.parseZIP64ExtraField(reader);\n        this.fileComment = reader.readString(this.fileCommentLength);\n\n        // warning, this is true only for zip with madeBy == DOS (plateform dependent feature)\n        this.dir = this.externalFileAttributes & 0x00000010 ? true : false;\n      },\n      /**\n       * Parse the ZIP64 extra field and merge the info in the current ZipEntry.\n       * @param {DataReader} reader the reader to use.\n       */\n      parseZIP64ExtraField: function(reader) {\n\n        if (!this.extraFields[0x0001]) {\n          return;\n        }\n\n        // should be something, preparing the extra reader\n        var extraReader = new StringReader(this.extraFields[0x0001].value);\n\n        // I really hope that these 64bits integer can fit in 32 bits integer, because js\n        // won't let us have more.\n        if (this.uncompressedSize === utils.MAX_VALUE_32BITS) {\n          this.uncompressedSize = extraReader.readInt(8);\n        }\n        if (this.compressedSize === utils.MAX_VALUE_32BITS) {\n          this.compressedSize = extraReader.readInt(8);\n        }\n        if (this.localHeaderOffset === utils.MAX_VALUE_32BITS) {\n          this.localHeaderOffset = extraReader.readInt(8);\n        }\n        if (this.diskNumberStart === utils.MAX_VALUE_32BITS) {\n          this.diskNumberStart = extraReader.readInt(4);\n        }\n      },\n      /**\n       * Read the central part of a zip file and add the info in this object.\n       * @param {DataReader} reader the reader to use.\n       */\n      readExtraFields: function(reader) {\n        var start = reader.index,\n          extraFieldId,\n          extraFieldLength,\n          extraFieldValue;\n\n        this.extraFields = this.extraFields || {};\n\n        while (reader.index < start + this.extraFieldsLength) {\n          extraFieldId = reader.readInt(2);\n          extraFieldLength = reader.readInt(2);\n          extraFieldValue = reader.readString(extraFieldLength);\n\n          this.extraFields[extraFieldId] = {\n            id: extraFieldId,\n            length: extraFieldLength,\n            value: extraFieldValue\n          };\n        }\n      },\n      /**\n       * Apply an UTF8 transformation if needed.\n       */\n      handleUTF8: function() {\n        if (this.useUTF8()) {\n          this.fileName = jszipProto.utf8decode(this.fileName);\n          this.fileComment = jszipProto.utf8decode(this.fileComment);\n        } else {\n          var upath = this.findExtraFieldUnicodePath();\n          if (upath !== null) {\n            this.fileName = upath;\n          }\n          var ucomment = this.findExtraFieldUnicodeComment();\n          if (ucomment !== null) {\n            this.fileComment = ucomment;\n          }\n        }\n      },\n\n      /**\n       * Find the unicode path declared in the extra field, if any.\n       * @return {String} the unicode path, null otherwise.\n       */\n      findExtraFieldUnicodePath: function() {\n        var upathField = this.extraFields[0x7075];\n        if (upathField) {\n          var extraReader = new StringReader(upathField.value);\n\n          // wrong version\n          if (extraReader.readInt(1) !== 1) {\n            return null;\n          }\n\n          // the crc of the filename changed, this field is out of date.\n          if (jszipProto.crc32(this.fileName) !== extraReader.readInt(4)) {\n            return null;\n          }\n\n          return jszipProto.utf8decode(extraReader.readString(upathField.length - 5));\n        }\n        return null;\n      },\n\n      /**\n       * Find the unicode comment declared in the extra field, if any.\n       * @return {String} the unicode comment, null otherwise.\n       */\n      findExtraFieldUnicodeComment: function() {\n        var ucommentField = this.extraFields[0x6375];\n        if (ucommentField) {\n          var extraReader = new StringReader(ucommentField.value);\n\n          // wrong version\n          if (extraReader.readInt(1) !== 1) {\n            return null;\n          }\n\n          // the crc of the comment changed, this field is out of date.\n          if (jszipProto.crc32(this.fileComment) !== extraReader.readInt(4)) {\n            return null;\n          }\n\n          return jszipProto.utf8decode(extraReader.readString(ucommentField.length - 5));\n        }\n        return null;\n      }\n    };\n    module.exports = ZipEntry;\n\n  },{\"./compressedObject\":2,\"./object\":13,\"./stringReader\":15,\"./utils\":21}],24:[function(_dereq_,module,exports){\n// Top level file is just a mixin of submodules & constants\n    'use strict';\n\n    var assign    = _dereq_('./lib/utils/common').assign;\n\n    var deflate   = _dereq_('./lib/deflate');\n    var inflate   = _dereq_('./lib/inflate');\n    var constants = _dereq_('./lib/zlib/constants');\n\n    var pako = {};\n\n    assign(pako, deflate, inflate, constants);\n\n    module.exports = pako;\n  },{\"./lib/deflate\":25,\"./lib/inflate\":26,\"./lib/utils/common\":27,\"./lib/zlib/constants\":30}],25:[function(_dereq_,module,exports){\n    'use strict';\n\n\n    var zlib_deflate = _dereq_('./zlib/deflate.js');\n    var utils = _dereq_('./utils/common');\n    var strings = _dereq_('./utils/strings');\n    var msg = _dereq_('./zlib/messages');\n    var zstream = _dereq_('./zlib/zstream');\n\n\n    /* Public constants ==========================================================*/\n    /* ===========================================================================*/\n\n    var Z_NO_FLUSH      = 0;\n    var Z_FINISH        = 4;\n\n    var Z_OK            = 0;\n    var Z_STREAM_END    = 1;\n\n    var Z_DEFAULT_COMPRESSION = -1;\n\n    var Z_DEFAULT_STRATEGY    = 0;\n\n    var Z_DEFLATED  = 8;\n\n    /* ===========================================================================*/\n\n\n    /**\n     * class Deflate\n     *\n     * Generic JS-style wrapper for zlib calls. If you don't need\n     * streaming behaviour - use more simple functions: [[deflate]],\n     * [[deflateRaw]] and [[gzip]].\n     **/\n\n    /* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overriden.\n **/\n\n    /**\n     * Deflate.result -> Uint8Array|Array\n     *\n     * Compressed result, generated by default [[Deflate#onData]]\n     * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n     * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n     **/\n\n    /**\n     * Deflate.err -> Number\n     *\n     * Error code after deflate finished. 0 (Z_OK) on success.\n     * You will not need it in real life, because deflate errors\n     * are possible only on wrong options or bad `onData` / `onEnd`\n     * custom handlers.\n     **/\n\n    /**\n     * Deflate.msg -> String\n     *\n     * Error message, if [[Deflate.err]] != 0\n     **/\n\n\n    /**\n     * new Deflate(options)\n     * - options (Object): zlib deflate options.\n     *\n     * Creates new deflator instance with specified params. Throws exception\n     * on bad params. Supported options:\n     *\n     * - `level`\n     * - `windowBits`\n     * - `memLevel`\n     * - `strategy`\n     *\n     * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n     * for more information on these.\n     *\n     * Additional options, for internal needs:\n     *\n     * - `chunkSize` - size of generated data chunks (16K by default)\n     * - `raw` (Boolean) - do raw deflate\n     * - `gzip` (Boolean) - create gzip wrapper\n     * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n     *    (each char code [0..255])\n     * - `header` (Object) - custom header for gzip\n     *   - `text` (Boolean) - true if compressed data believed to be text\n     *   - `time` (Number) - modification time, unix timestamp\n     *   - `os` (Number) - operation system code\n     *   - `extra` (Array) - array of bytes with extra data (max 65536)\n     *   - `name` (String) - file name (binary string)\n     *   - `comment` (String) - comment (binary string)\n     *   - `hcrc` (Boolean) - true if header crc should be added\n     *\n     * ##### Example:\n     *\n     * ```javascript\n     * var pako = require('pako')\n     *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n     *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n     *\n     * var deflate = new pako.Deflate({ level: 3});\n     *\n     * deflate.push(chunk1, false);\n     * deflate.push(chunk2, true);  // true -> last chunk\n     *\n     * if (deflate.err) { throw new Error(deflate.err); }\n     *\n     * console.log(deflate.result);\n     * ```\n     **/\n    var Deflate = function(options) {\n\n      this.options = utils.assign({\n        level: Z_DEFAULT_COMPRESSION,\n        method: Z_DEFLATED,\n        chunkSize: 16384,\n        windowBits: 15,\n        memLevel: 8,\n        strategy: Z_DEFAULT_STRATEGY,\n        to: ''\n      }, options || {});\n\n      var opt = this.options;\n\n      if (opt.raw && (opt.windowBits > 0)) {\n        opt.windowBits = -opt.windowBits;\n      }\n\n      else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n        opt.windowBits += 16;\n      }\n\n      this.err    = 0;      // error code, if happens (0 = Z_OK)\n      this.msg    = '';     // error message\n      this.ended  = false;  // used to avoid multiple onEnd() calls\n      this.chunks = [];     // chunks of compressed data\n\n      this.strm = new zstream();\n      this.strm.avail_out = 0;\n\n      var status = zlib_deflate.deflateInit2(\n        this.strm,\n        opt.level,\n        opt.method,\n        opt.windowBits,\n        opt.memLevel,\n        opt.strategy\n      );\n\n      if (status !== Z_OK) {\n        throw new Error(msg[status]);\n      }\n\n      if (opt.header) {\n        zlib_deflate.deflateSetHeader(this.strm, opt.header);\n      }\n    };\n\n    /**\n     * Deflate#push(data[, mode]) -> Boolean\n     * - data (Uint8Array|Array|String): input data. Strings will be converted to\n     *   utf8 byte sequence.\n     * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n     *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` meansh Z_FINISH.\n     *\n     * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n     * new compressed chunks. Returns `true` on success. The last data block must have\n     * mode Z_FINISH (or `true`). That flush internal pending buffers and call\n     * [[Deflate#onEnd]].\n     *\n     * On fail call [[Deflate#onEnd]] with error code and return false.\n     *\n     * We strongly recommend to use `Uint8Array` on input for best speed (output\n     * array format is detected automatically). Also, don't skip last param and always\n     * use the same type in your code (boolean or number). That will improve JS speed.\n     *\n     * For regular `Array`-s make sure all elements are [0..255].\n     *\n     * ##### Example\n     *\n     * ```javascript\n     * push(chunk, false); // push one of data chunks\n     * ...\n     * push(chunk, true);  // push last chunk\n     * ```\n     **/\n    Deflate.prototype.push = function(data, mode) {\n      var strm = this.strm;\n      var chunkSize = this.options.chunkSize;\n      var status, _mode;\n\n      if (this.ended) { return false; }\n\n      _mode = (mode === ~~mode) ? mode : ((mode === true) ? Z_FINISH : Z_NO_FLUSH);\n\n      // Convert data if needed\n      if (typeof data === 'string') {\n        // If we need to compress text, change encoding to utf8.\n        strm.input = strings.string2buf(data);\n      } else {\n        strm.input = data;\n      }\n\n      strm.next_in = 0;\n      strm.avail_in = strm.input.length;\n\n      do {\n        if (strm.avail_out === 0) {\n          strm.output = new utils.Buf8(chunkSize);\n          strm.next_out = 0;\n          strm.avail_out = chunkSize;\n        }\n        status = zlib_deflate.deflate(strm, _mode);    /* no bad return value */\n\n        if (status !== Z_STREAM_END && status !== Z_OK) {\n          this.onEnd(status);\n          this.ended = true;\n          return false;\n        }\n        if (strm.avail_out === 0 || (strm.avail_in === 0 && _mode === Z_FINISH)) {\n          if (this.options.to === 'string') {\n            this.onData(strings.buf2binstring(utils.shrinkBuf(strm.output, strm.next_out)));\n          } else {\n            this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n          }\n        }\n      } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END);\n\n      // Finalize on the last chunk.\n      if (_mode === Z_FINISH) {\n        status = zlib_deflate.deflateEnd(this.strm);\n        this.onEnd(status);\n        this.ended = true;\n        return status === Z_OK;\n      }\n\n      return true;\n    };\n\n\n    /**\n     * Deflate#onData(chunk) -> Void\n     * - chunk (Uint8Array|Array|String): ouput data. Type of array depends\n     *   on js engine support. When string output requested, each chunk\n     *   will be string.\n     *\n     * By default, stores data blocks in `chunks[]` property and glue\n     * those in `onEnd`. Override this handler, if you need another behaviour.\n     **/\n    Deflate.prototype.onData = function(chunk) {\n      this.chunks.push(chunk);\n    };\n\n\n    /**\n     * Deflate#onEnd(status) -> Void\n     * - status (Number): deflate status. 0 (Z_OK) on success,\n     *   other if not.\n     *\n     * Called once after you tell deflate that input stream complete\n     * or error happenned. By default - join collected chunks,\n     * free memory and fill `results` / `err` properties.\n     **/\n    Deflate.prototype.onEnd = function(status) {\n      // On success - join\n      if (status === Z_OK) {\n        if (this.options.to === 'string') {\n          this.result = this.chunks.join('');\n        } else {\n          this.result = utils.flattenChunks(this.chunks);\n        }\n      }\n      this.chunks = [];\n      this.err = status;\n      this.msg = this.strm.msg;\n    };\n\n\n    /**\n     * deflate(data[, options]) -> Uint8Array|Array|String\n     * - data (Uint8Array|Array|String): input data to compress.\n     * - options (Object): zlib deflate options.\n     *\n     * Compress `data` with deflate alrorythm and `options`.\n     *\n     * Supported options are:\n     *\n     * - level\n     * - windowBits\n     * - memLevel\n     * - strategy\n     *\n     * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n     * for more information on these.\n     *\n     * Sugar (options):\n     *\n     * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n     *   negative windowBits implicitly.\n     * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n     *    (each char code [0..255])\n     *\n     * ##### Example:\n     *\n     * ```javascript\n     * var pako = require('pako')\n     *   , data = Uint8Array([1,2,3,4,5,6,7,8,9]);\n     *\n     * console.log(pako.deflate(data));\n     * ```\n     **/\n    function deflate(input, options) {\n      var deflator = new Deflate(options);\n\n      deflator.push(input, true);\n\n      // That will never happens, if you don't cheat with options :)\n      if (deflator.err) { throw deflator.msg; }\n\n      return deflator.result;\n    }\n\n\n    /**\n     * deflateRaw(data[, options]) -> Uint8Array|Array|String\n     * - data (Uint8Array|Array|String): input data to compress.\n     * - options (Object): zlib deflate options.\n     *\n     * The same as [[deflate]], but creates raw data, without wrapper\n     * (header and adler32 crc).\n     **/\n    function deflateRaw(input, options) {\n      options = options || {};\n      options.raw = true;\n      return deflate(input, options);\n    }\n\n\n    /**\n     * gzip(data[, options]) -> Uint8Array|Array|String\n     * - data (Uint8Array|Array|String): input data to compress.\n     * - options (Object): zlib deflate options.\n     *\n     * The same as [[deflate]], but create gzip wrapper instead of\n     * deflate one.\n     **/\n    function gzip(input, options) {\n      options = options || {};\n      options.gzip = true;\n      return deflate(input, options);\n    }\n\n\n    exports.Deflate = Deflate;\n    exports.deflate = deflate;\n    exports.deflateRaw = deflateRaw;\n    exports.gzip = gzip;\n  },{\"./utils/common\":27,\"./utils/strings\":28,\"./zlib/deflate.js\":32,\"./zlib/messages\":37,\"./zlib/zstream\":39}],26:[function(_dereq_,module,exports){\n    'use strict';\n\n\n    var zlib_inflate = _dereq_('./zlib/inflate.js');\n    var utils = _dereq_('./utils/common');\n    var strings = _dereq_('./utils/strings');\n    var c = _dereq_('./zlib/constants');\n    var msg = _dereq_('./zlib/messages');\n    var zstream = _dereq_('./zlib/zstream');\n    var gzheader = _dereq_('./zlib/gzheader');\n\n\n    /**\n     * class Inflate\n     *\n     * Generic JS-style wrapper for zlib calls. If you don't need\n     * streaming behaviour - use more simple functions: [[inflate]]\n     * and [[inflateRaw]].\n     **/\n\n    /* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overriden.\n **/\n\n    /**\n     * Inflate.result -> Uint8Array|Array|String\n     *\n     * Uncompressed result, generated by default [[Inflate#onData]]\n     * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n     * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n     **/\n\n    /**\n     * Inflate.err -> Number\n     *\n     * Error code after inflate finished. 0 (Z_OK) on success.\n     * Should be checked if broken data possible.\n     **/\n\n    /**\n     * Inflate.msg -> String\n     *\n     * Error message, if [[Inflate.err]] != 0\n     **/\n\n\n    /**\n     * new Inflate(options)\n     * - options (Object): zlib inflate options.\n     *\n     * Creates new inflator instance with specified params. Throws exception\n     * on bad params. Supported options:\n     *\n     * - `windowBits`\n     *\n     * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n     * for more information on these.\n     *\n     * Additional options, for internal needs:\n     *\n     * - `chunkSize` - size of generated data chunks (16K by default)\n     * - `raw` (Boolean) - do raw inflate\n     * - `to` (String) - if equal to 'string', then result will be converted\n     *   from utf8 to utf16 (javascript) string. When string output requested,\n     *   chunk length can differ from `chunkSize`, depending on content.\n     *\n     * By default, when no options set, autodetect deflate/gzip data format via\n     * wrapper header.\n     *\n     * ##### Example:\n     *\n     * ```javascript\n     * var pako = require('pako')\n     *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n     *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n     *\n     * var inflate = new pako.Inflate({ level: 3});\n     *\n     * inflate.push(chunk1, false);\n     * inflate.push(chunk2, true);  // true -> last chunk\n     *\n     * if (inflate.err) { throw new Error(inflate.err); }\n     *\n     * console.log(inflate.result);\n     * ```\n     **/\n    var Inflate = function(options) {\n\n      this.options = utils.assign({\n        chunkSize: 16384,\n        windowBits: 0,\n        to: ''\n      }, options || {});\n\n      var opt = this.options;\n\n      // Force window size for `raw` data, if not set directly,\n      // because we have no header for autodetect.\n      if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n        opt.windowBits = -opt.windowBits;\n        if (opt.windowBits === 0) { opt.windowBits = -15; }\n      }\n\n      // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n      if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n        !(options && options.windowBits)) {\n        opt.windowBits += 32;\n      }\n\n      // Gzip header has no info about windows size, we can do autodetect only\n      // for deflate. So, if window size not set, force it to max when gzip possible\n      if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n        // bit 3 (16) -> gzipped data\n        // bit 4 (32) -> autodetect gzip/deflate\n        if ((opt.windowBits & 15) === 0) {\n          opt.windowBits |= 15;\n        }\n      }\n\n      this.err    = 0;      // error code, if happens (0 = Z_OK)\n      this.msg    = '';     // error message\n      this.ended  = false;  // used to avoid multiple onEnd() calls\n      this.chunks = [];     // chunks of compressed data\n\n      this.strm   = new zstream();\n      this.strm.avail_out = 0;\n\n      var status  = zlib_inflate.inflateInit2(\n        this.strm,\n        opt.windowBits\n      );\n\n      if (status !== c.Z_OK) {\n        throw new Error(msg[status]);\n      }\n\n      this.header = new gzheader();\n\n      zlib_inflate.inflateGetHeader(this.strm, this.header);\n    };\n\n    /**\n     * Inflate#push(data[, mode]) -> Boolean\n     * - data (Uint8Array|Array|String): input data\n     * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n     *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` meansh Z_FINISH.\n     *\n     * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n     * new output chunks. Returns `true` on success. The last data block must have\n     * mode Z_FINISH (or `true`). That flush internal pending buffers and call\n     * [[Inflate#onEnd]].\n     *\n     * On fail call [[Inflate#onEnd]] with error code and return false.\n     *\n     * We strongly recommend to use `Uint8Array` on input for best speed (output\n     * format is detected automatically). Also, don't skip last param and always\n     * use the same type in your code (boolean or number). That will improve JS speed.\n     *\n     * For regular `Array`-s make sure all elements are [0..255].\n     *\n     * ##### Example\n     *\n     * ```javascript\n     * push(chunk, false); // push one of data chunks\n     * ...\n     * push(chunk, true);  // push last chunk\n     * ```\n     **/\n    Inflate.prototype.push = function(data, mode) {\n      var strm = this.strm;\n      var chunkSize = this.options.chunkSize;\n      var status, _mode;\n      var next_out_utf8, tail, utf8str;\n\n      if (this.ended) { return false; }\n      _mode = (mode === ~~mode) ? mode : ((mode === true) ? c.Z_FINISH : c.Z_NO_FLUSH);\n\n      // Convert data if needed\n      if (typeof data === 'string') {\n        // Only binary strings can be decompressed on practice\n        strm.input = strings.binstring2buf(data);\n      } else {\n        strm.input = data;\n      }\n\n      strm.next_in = 0;\n      strm.avail_in = strm.input.length;\n\n      do {\n        if (strm.avail_out === 0) {\n          strm.output = new utils.Buf8(chunkSize);\n          strm.next_out = 0;\n          strm.avail_out = chunkSize;\n        }\n\n        status = zlib_inflate.inflate(strm, c.Z_NO_FLUSH);    /* no bad return value */\n\n        if (status !== c.Z_STREAM_END && status !== c.Z_OK) {\n          this.onEnd(status);\n          this.ended = true;\n          return false;\n        }\n\n        if (strm.next_out) {\n          if (strm.avail_out === 0 || status === c.Z_STREAM_END || (strm.avail_in === 0 && _mode === c.Z_FINISH)) {\n\n            if (this.options.to === 'string') {\n\n              next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n              tail = strm.next_out - next_out_utf8;\n              utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n              // move tail\n              strm.next_out = tail;\n              strm.avail_out = chunkSize - tail;\n              if (tail) { utils.arraySet(strm.output, strm.output, next_out_utf8, tail, 0); }\n\n              this.onData(utf8str);\n\n            } else {\n              this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n            }\n          }\n        }\n      } while ((strm.avail_in > 0) && status !== c.Z_STREAM_END);\n\n      if (status === c.Z_STREAM_END) {\n        _mode = c.Z_FINISH;\n      }\n      // Finalize on the last chunk.\n      if (_mode === c.Z_FINISH) {\n        status = zlib_inflate.inflateEnd(this.strm);\n        this.onEnd(status);\n        this.ended = true;\n        return status === c.Z_OK;\n      }\n\n      return true;\n    };\n\n\n    /**\n     * Inflate#onData(chunk) -> Void\n     * - chunk (Uint8Array|Array|String): ouput data. Type of array depends\n     *   on js engine support. When string output requested, each chunk\n     *   will be string.\n     *\n     * By default, stores data blocks in `chunks[]` property and glue\n     * those in `onEnd`. Override this handler, if you need another behaviour.\n     **/\n    Inflate.prototype.onData = function(chunk) {\n      this.chunks.push(chunk);\n    };\n\n\n    /**\n     * Inflate#onEnd(status) -> Void\n     * - status (Number): inflate status. 0 (Z_OK) on success,\n     *   other if not.\n     *\n     * Called once after you tell inflate that input stream complete\n     * or error happenned. By default - join collected chunks,\n     * free memory and fill `results` / `err` properties.\n     **/\n    Inflate.prototype.onEnd = function(status) {\n      // On success - join\n      if (status === c.Z_OK) {\n        if (this.options.to === 'string') {\n          // Glue & convert here, until we teach pako to send\n          // utf8 alligned strings to onData\n          this.result = this.chunks.join('');\n        } else {\n          this.result = utils.flattenChunks(this.chunks);\n        }\n      }\n      this.chunks = [];\n      this.err = status;\n      this.msg = this.strm.msg;\n    };\n\n\n    /**\n     * inflate(data[, options]) -> Uint8Array|Array|String\n     * - data (Uint8Array|Array|String): input data to decompress.\n     * - options (Object): zlib inflate options.\n     *\n     * Decompress `data` with inflate/ungzip and `options`. Autodetect\n     * format via wrapper header by default. That's why we don't provide\n     * separate `ungzip` method.\n     *\n     * Supported options are:\n     *\n     * - windowBits\n     *\n     * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n     * for more information.\n     *\n     * Sugar (options):\n     *\n     * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n     *   negative windowBits implicitly.\n     * - `to` (String) - if equal to 'string', then result will be converted\n     *   from utf8 to utf16 (javascript) string. When string output requested,\n     *   chunk length can differ from `chunkSize`, depending on content.\n     *\n     *\n     * ##### Example:\n     *\n     * ```javascript\n     * var pako = require('pako')\n     *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])\n     *   , output;\n     *\n     * try {\n     *   output = pako.inflate(input);\n     * } catch (err)\n     *   console.log(err);\n     * }\n     * ```\n     **/\n    function inflate(input, options) {\n      var inflator = new Inflate(options);\n\n      inflator.push(input, true);\n\n      // That will never happens, if you don't cheat with options :)\n      if (inflator.err) { throw inflator.msg; }\n\n      return inflator.result;\n    }\n\n\n    /**\n     * inflateRaw(data[, options]) -> Uint8Array|Array|String\n     * - data (Uint8Array|Array|String): input data to decompress.\n     * - options (Object): zlib inflate options.\n     *\n     * The same as [[inflate]], but creates raw data, without wrapper\n     * (header and adler32 crc).\n     **/\n    function inflateRaw(input, options) {\n      options = options || {};\n      options.raw = true;\n      return inflate(input, options);\n    }\n\n\n    /**\n     * ungzip(data[, options]) -> Uint8Array|Array|String\n     * - data (Uint8Array|Array|String): input data to decompress.\n     * - options (Object): zlib inflate options.\n     *\n     * Just shortcut to [[inflate]], because it autodetects format\n     * by header.content. Done for convenience.\n     **/\n\n\n    exports.Inflate = Inflate;\n    exports.inflate = inflate;\n    exports.inflateRaw = inflateRaw;\n    exports.ungzip  = inflate;\n\n  },{\"./utils/common\":27,\"./utils/strings\":28,\"./zlib/constants\":30,\"./zlib/gzheader\":33,\"./zlib/inflate.js\":35,\"./zlib/messages\":37,\"./zlib/zstream\":39}],27:[function(_dereq_,module,exports){\n    'use strict';\n\n\n    var TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\n      (typeof Uint16Array !== 'undefined') &&\n      (typeof Int32Array !== 'undefined');\n\n\n    exports.assign = function (obj /*from1, from2, from3, ...*/) {\n      var sources = Array.prototype.slice.call(arguments, 1);\n      while (sources.length) {\n        var source = sources.shift();\n        if (!source) { continue; }\n\n        if (typeof(source) !== 'object') {\n          throw new TypeError(source + 'must be non-object');\n        }\n\n        for (var p in source) {\n          if (source.hasOwnProperty(p)) {\n            obj[p] = source[p];\n          }\n        }\n      }\n\n      return obj;\n    };\n\n\n// reduce buffer size, avoiding mem copy\n    exports.shrinkBuf = function (buf, size) {\n      if (buf.length === size) { return buf; }\n      if (buf.subarray) { return buf.subarray(0, size); }\n      buf.length = size;\n      return buf;\n    };\n\n\n    var fnTyped = {\n      arraySet: function (dest, src, src_offs, len, dest_offs) {\n        if (src.subarray && dest.subarray) {\n          dest.set(src.subarray(src_offs, src_offs+len), dest_offs);\n          return;\n        }\n        // Fallback to ordinary array\n        for(var i=0; i<len; i++) {\n          dest[dest_offs + i] = src[src_offs + i];\n        }\n      },\n      // Join array of chunks to single array.\n      flattenChunks: function(chunks) {\n        var i, l, len, pos, chunk, result;\n\n        // calculate data length\n        len = 0;\n        for (i=0, l=chunks.length; i<l; i++) {\n          len += chunks[i].length;\n        }\n\n        // join chunks\n        result = new Uint8Array(len);\n        pos = 0;\n        for (i=0, l=chunks.length; i<l; i++) {\n          chunk = chunks[i];\n          result.set(chunk, pos);\n          pos += chunk.length;\n        }\n\n        return result;\n      }\n    };\n\n    var fnUntyped = {\n      arraySet: function (dest, src, src_offs, len, dest_offs) {\n        for(var i=0; i<len; i++) {\n          dest[dest_offs + i] = src[src_offs + i];\n        }\n      },\n      // Join array of chunks to single array.\n      flattenChunks: function(chunks) {\n        return [].concat.apply([], chunks);\n      }\n    };\n\n\n// Enable/Disable typed arrays use, for testing\n//\n    exports.setTyped = function (on) {\n      if (on) {\n        exports.Buf8  = Uint8Array;\n        exports.Buf16 = Uint16Array;\n        exports.Buf32 = Int32Array;\n        exports.assign(exports, fnTyped);\n      } else {\n        exports.Buf8  = Array;\n        exports.Buf16 = Array;\n        exports.Buf32 = Array;\n        exports.assign(exports, fnUntyped);\n      }\n    };\n\n    exports.setTyped(TYPED_OK);\n  },{}],28:[function(_dereq_,module,exports){\n// String encode/decode helpers\n    'use strict';\n\n\n    var utils = _dereq_('./common');\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safary\n//\n    var STR_APPLY_OK = true;\n    var STR_APPLY_UIA_OK = true;\n\n    try { String.fromCharCode.apply(null, [0]); } catch(__) { STR_APPLY_OK = false; }\n    try { String.fromCharCode.apply(null, new Uint8Array(1)); } catch(__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\n    var _utf8len = new utils.Buf8(256);\n    for (var i=0; i<256; i++) {\n      _utf8len[i] = (i >= 252 ? 6 : i >= 248 ? 5 : i >= 240 ? 4 : i >= 224 ? 3 : i >= 192 ? 2 : 1);\n    }\n    _utf8len[254]=_utf8len[254]=1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\n    exports.string2buf = function (str) {\n      var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n      // count binary size\n      for (m_pos = 0; m_pos < str_len; m_pos++) {\n        c = str.charCodeAt(m_pos);\n        if ((c & 0xfc00) === 0xd800 && (m_pos+1 < str_len)) {\n          c2 = str.charCodeAt(m_pos+1);\n          if ((c2 & 0xfc00) === 0xdc00) {\n            c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n            m_pos++;\n          }\n        }\n        buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n      }\n\n      // allocate buffer\n      buf = new utils.Buf8(buf_len);\n\n      // convert\n      for (i=0, m_pos = 0; i < buf_len; m_pos++) {\n        c = str.charCodeAt(m_pos);\n        if ((c & 0xfc00) === 0xd800 && (m_pos+1 < str_len)) {\n          c2 = str.charCodeAt(m_pos+1);\n          if ((c2 & 0xfc00) === 0xdc00) {\n            c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n            m_pos++;\n          }\n        }\n        if (c < 0x80) {\n          /* one byte */\n          buf[i++] = c;\n        } else if (c < 0x800) {\n          /* two bytes */\n          buf[i++] = 0xC0 | (c >>> 6);\n          buf[i++] = 0x80 | (c & 0x3f);\n        } else if (c < 0x10000) {\n          /* three bytes */\n          buf[i++] = 0xE0 | (c >>> 12);\n          buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n          buf[i++] = 0x80 | (c & 0x3f);\n        } else {\n          /* four bytes */\n          buf[i++] = 0xf0 | (c >>> 18);\n          buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n          buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n          buf[i++] = 0x80 | (c & 0x3f);\n        }\n      }\n\n      return buf;\n    };\n\n// Helper (used in 2 places)\n    function buf2binstring(buf, len) {\n      // use fallback for big arrays to avoid stack overflow\n      if (len < 65537) {\n        if ((buf.subarray && STR_APPLY_UIA_OK) || (!buf.subarray && STR_APPLY_OK)) {\n          return String.fromCharCode.apply(null, utils.shrinkBuf(buf, len));\n        }\n      }\n\n      var result = '';\n      for(var i=0; i < len; i++) {\n        result += String.fromCharCode(buf[i]);\n      }\n      return result;\n    }\n\n\n// Convert byte array to binary string\n    exports.buf2binstring = function(buf) {\n      return buf2binstring(buf, buf.length);\n    };\n\n\n// Convert binary string (typed, when possible)\n    exports.binstring2buf = function(str) {\n      var buf = new utils.Buf8(str.length);\n      for(var i=0, len=buf.length; i < len; i++) {\n        buf[i] = str.charCodeAt(i);\n      }\n      return buf;\n    };\n\n\n// convert array to string\n    exports.buf2string = function (buf, max) {\n      var i, out, c, c_len;\n      var len = max || buf.length;\n\n      // Reserve max possible length (2 words per char)\n      // NB: by unknown reasons, Array is significantly faster for\n      //     String.fromCharCode.apply than Uint16Array.\n      var utf16buf = new Array(len*2);\n\n      for (out=0, i=0; i<len;) {\n        c = buf[i++];\n        // quick process ascii\n        if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n        c_len = _utf8len[c];\n        // skip 5 & 6 byte codes\n        if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len-1; continue; }\n\n        // apply mask on first byte\n        c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n        // join the rest\n        while (c_len > 1 && i < len) {\n          c = (c << 6) | (buf[i++] & 0x3f);\n          c_len--;\n        }\n\n        // terminated by end of string?\n        if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n        if (c < 0x10000) {\n          utf16buf[out++] = c;\n        } else {\n          c -= 0x10000;\n          utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n          utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n        }\n      }\n\n      return buf2binstring(utf16buf, out);\n    };\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\n    exports.utf8border = function(buf, max) {\n      var pos;\n\n      max = max || buf.length;\n      if (max > buf.length) { max = buf.length; }\n\n      // go back from last position, until start of sequence found\n      pos = max-1;\n      while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n      // Fuckup - very small and broken sequence,\n      // return max, because we should return something anyway.\n      if (pos < 0) { return max; }\n\n      // If we came to start of buffer - that means vuffer is too small,\n      // return max too.\n      if (pos === 0) { return max; }\n\n      return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n    };\n\n  },{\"./common\":27}],29:[function(_dereq_,module,exports){\n    'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It doesn't worth to make additional optimizationa as in original.\n// Small size is preferable.\n\n    function adler32(adler, buf, len, pos) {\n      var s1 = (adler & 0xffff) |0\n        , s2 = ((adler >>> 16) & 0xffff) |0\n        , n = 0;\n\n      while (len !== 0) {\n        // Set limit ~ twice less than 5552, to keep\n        // s2 in 31-bits, because we force signed ints.\n        // in other case %= will fail.\n        n = len > 2000 ? 2000 : len;\n        len -= n;\n\n        do {\n          s1 = (s1 + buf[pos++]) |0;\n          s2 = (s2 + s1) |0;\n        } while (--n);\n\n        s1 %= 65521;\n        s2 %= 65521;\n      }\n\n      return (s1 | (s2 << 16)) |0;\n    }\n\n\n    module.exports = adler32;\n  },{}],30:[function(_dereq_,module,exports){\n    module.exports = {\n\n      /* Allowed flush values; see deflate() and inflate() below for details */\n      Z_NO_FLUSH:         0,\n      Z_PARTIAL_FLUSH:    1,\n      Z_SYNC_FLUSH:       2,\n      Z_FULL_FLUSH:       3,\n      Z_FINISH:           4,\n      Z_BLOCK:            5,\n      Z_TREES:            6,\n\n      /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n      Z_OK:               0,\n      Z_STREAM_END:       1,\n      Z_NEED_DICT:        2,\n      Z_ERRNO:           -1,\n      Z_STREAM_ERROR:    -2,\n      Z_DATA_ERROR:      -3,\n      //Z_MEM_ERROR:     -4,\n      Z_BUF_ERROR:       -5,\n      //Z_VERSION_ERROR: -6,\n\n      /* compression levels */\n      Z_NO_COMPRESSION:         0,\n      Z_BEST_SPEED:             1,\n      Z_BEST_COMPRESSION:       9,\n      Z_DEFAULT_COMPRESSION:   -1,\n\n\n      Z_FILTERED:               1,\n      Z_HUFFMAN_ONLY:           2,\n      Z_RLE:                    3,\n      Z_FIXED:                  4,\n      Z_DEFAULT_STRATEGY:       0,\n\n      /* Possible values of the data_type field (though see inflate()) */\n      Z_BINARY:                 0,\n      Z_TEXT:                   1,\n      //Z_ASCII:                1, // = Z_TEXT (deprecated)\n      Z_UNKNOWN:                2,\n\n      /* The deflate compression method */\n      Z_DEFLATED:               8\n      //Z_NULL:                 null // Use -1 or null inline, depending on var type\n    };\n  },{}],31:[function(_dereq_,module,exports){\n    'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n\n// Use ordinary array, since untyped makes no boost here\n    function makeTable() {\n      var c, table = [];\n\n      for(var n =0; n < 256; n++){\n        c = n;\n        for(var k =0; k < 8; k++){\n          c = ((c&1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n        }\n        table[n] = c;\n      }\n\n      return table;\n    }\n\n// Create table on load. Just 255 signed longs. Not a problem.\n    var crcTable = makeTable();\n\n\n    function crc32(crc, buf, len, pos) {\n      var t = crcTable\n        , end = pos + len;\n\n      crc = crc ^ (-1);\n\n      for (var i = pos; i < end; i++ ) {\n        crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n      }\n\n      return (crc ^ (-1)); // >>> 0;\n    }\n\n\n    module.exports = crc32;\n  },{}],32:[function(_dereq_,module,exports){\n    'use strict';\n\n    var utils   = _dereq_('../utils/common');\n    var trees   = _dereq_('./trees');\n    var adler32 = _dereq_('./adler32');\n    var crc32   = _dereq_('./crc32');\n    var msg   = _dereq_('./messages');\n\n    /* Public constants ==========================================================*/\n    /* ===========================================================================*/\n\n\n    /* Allowed flush values; see deflate() and inflate() below for details */\n    var Z_NO_FLUSH      = 0;\n    var Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\n    var Z_FULL_FLUSH    = 3;\n    var Z_FINISH        = 4;\n    var Z_BLOCK         = 5;\n//var Z_TREES         = 6;\n\n\n    /* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\n    var Z_OK            = 0;\n    var Z_STREAM_END    = 1;\n//var Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\n    var Z_STREAM_ERROR  = -2;\n    var Z_DATA_ERROR    = -3;\n//var Z_MEM_ERROR     = -4;\n    var Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n\n    /* compression levels */\n//var Z_NO_COMPRESSION      = 0;\n//var Z_BEST_SPEED          = 1;\n//var Z_BEST_COMPRESSION    = 9;\n    var Z_DEFAULT_COMPRESSION = -1;\n\n\n    var Z_FILTERED            = 1;\n    var Z_HUFFMAN_ONLY        = 2;\n    var Z_RLE                 = 3;\n    var Z_FIXED               = 4;\n    var Z_DEFAULT_STRATEGY    = 0;\n\n    /* Possible values of the data_type field (though see inflate()) */\n//var Z_BINARY              = 0;\n//var Z_TEXT                = 1;\n//var Z_ASCII               = 1; // = Z_TEXT\n    var Z_UNKNOWN             = 2;\n\n\n    /* The deflate compression method */\n    var Z_DEFLATED  = 8;\n\n    /*============================================================================*/\n\n\n    var MAX_MEM_LEVEL = 9;\n    /* Maximum value for memLevel in deflateInit2 */\n    var MAX_WBITS = 15;\n    /* 32K LZ77 window */\n    var DEF_MEM_LEVEL = 8;\n\n\n    var LENGTH_CODES  = 29;\n    /* number of length codes, not counting the special END_BLOCK code */\n    var LITERALS      = 256;\n    /* number of literal bytes 0..255 */\n    var L_CODES       = LITERALS + 1 + LENGTH_CODES;\n    /* number of Literal or Length codes, including the END_BLOCK code */\n    var D_CODES       = 30;\n    /* number of distance codes */\n    var BL_CODES      = 19;\n    /* number of codes used to transfer the bit lengths */\n    var HEAP_SIZE     = 2*L_CODES + 1;\n    /* maximum heap size */\n    var MAX_BITS  = 15;\n    /* All codes must not exceed MAX_BITS bits */\n\n    var MIN_MATCH = 3;\n    var MAX_MATCH = 258;\n    var MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\n    var PRESET_DICT = 0x20;\n\n    var INIT_STATE = 42;\n    var EXTRA_STATE = 69;\n    var NAME_STATE = 73;\n    var COMMENT_STATE = 91;\n    var HCRC_STATE = 103;\n    var BUSY_STATE = 113;\n    var FINISH_STATE = 666;\n\n    var BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\n    var BS_BLOCK_DONE     = 2; /* block flush performed */\n    var BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\n    var BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\n    var OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\n    function err(strm, errorCode) {\n      strm.msg = msg[errorCode];\n      return errorCode;\n    }\n\n    function rank(f) {\n      return ((f) << 1) - ((f) > 4 ? 9 : 0);\n    }\n\n    function zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n\n    /* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\n    function flush_pending(strm) {\n      var s = strm.state;\n\n      //_tr_flush_bits(s);\n      var len = s.pending;\n      if (len > strm.avail_out) {\n        len = strm.avail_out;\n      }\n      if (len === 0) { return; }\n\n      utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);\n      strm.next_out += len;\n      s.pending_out += len;\n      strm.total_out += len;\n      strm.avail_out -= len;\n      s.pending -= len;\n      if (s.pending === 0) {\n        s.pending_out = 0;\n      }\n    }\n\n\n    function flush_block_only (s, last) {\n      trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n      s.block_start = s.strstart;\n      flush_pending(s.strm);\n    }\n\n\n    function put_byte(s, b) {\n      s.pending_buf[s.pending++] = b;\n    }\n\n\n    /* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\n    function putShortMSB(s, b) {\n//  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n      s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n      s.pending_buf[s.pending++] = b & 0xff;\n    }\n\n\n    /* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\n    function read_buf(strm, buf, start, size) {\n      var len = strm.avail_in;\n\n      if (len > size) { len = size; }\n      if (len === 0) { return 0; }\n\n      strm.avail_in -= len;\n\n      utils.arraySet(buf, strm.input, strm.next_in, len, start);\n      if (strm.state.wrap === 1) {\n        strm.adler = adler32(strm.adler, buf, len, start);\n      }\n\n      else if (strm.state.wrap === 2) {\n        strm.adler = crc32(strm.adler, buf, len, start);\n      }\n\n      strm.next_in += len;\n      strm.total_in += len;\n\n      return len;\n    }\n\n\n    /* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\n    function longest_match(s, cur_match) {\n      var chain_length = s.max_chain_length;      /* max hash chain length */\n      var scan = s.strstart; /* current string */\n      var match;                       /* matched string */\n      var len;                           /* length of current match */\n      var best_len = s.prev_length;              /* best match length so far */\n      var nice_match = s.nice_match;             /* stop if match long enough */\n      var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n        s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n      var _win = s.window; // shortcut\n\n      var wmask = s.w_mask;\n      var prev  = s.prev;\n\n      /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n      var strend = s.strstart + MAX_MATCH;\n      var scan_end1  = _win[scan + best_len - 1];\n      var scan_end   = _win[scan + best_len];\n\n      /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n      // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n      /* Do not waste too much time if we already have a good match: */\n      if (s.prev_length >= s.good_match) {\n        chain_length >>= 2;\n      }\n      /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n      if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n      // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n      do {\n        // Assert(cur_match < s->strstart, \"no future\");\n        match = cur_match;\n\n        /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n        if (_win[match + best_len]     !== scan_end  ||\n          _win[match + best_len - 1] !== scan_end1 ||\n          _win[match]                !== _win[scan] ||\n          _win[++match]              !== _win[scan + 1]) {\n          continue;\n        }\n\n        /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n        scan += 2;\n        match++;\n        // Assert(*scan == *match, \"match[2]?\");\n\n        /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n        do {\n          /*jshint noempty:false*/\n        } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n        _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n        _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n        _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n        scan < strend);\n\n        // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n        len = MAX_MATCH - (strend - scan);\n        scan = strend - MAX_MATCH;\n\n        if (len > best_len) {\n          s.match_start = cur_match;\n          best_len = len;\n          if (len >= nice_match) {\n            break;\n          }\n          scan_end1  = _win[scan + best_len - 1];\n          scan_end   = _win[scan + best_len];\n        }\n      } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n      if (best_len <= s.lookahead) {\n        return best_len;\n      }\n      return s.lookahead;\n    }\n\n\n    /* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\n    function fill_window(s) {\n      var _w_size = s.w_size;\n      var p, n, m, more, str;\n\n      //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n      do {\n        more = s.window_size - s.lookahead - s.strstart;\n\n        // JS ints have 32 bit, block below not needed\n        /* Deal with !@#$% 64K limit: */\n        //if (sizeof(int) <= 2) {\n        //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n        //        more = wsize;\n        //\n        //  } else if (more == (unsigned)(-1)) {\n        //        /* Very unlikely, but possible on 16 bit machine if\n        //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n        //         */\n        //        more--;\n        //    }\n        //}\n\n\n        /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n        if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n          utils.arraySet(s.window, s.window, _w_size, _w_size, 0);\n          s.match_start -= _w_size;\n          s.strstart -= _w_size;\n          /* we now have strstart >= MAX_DIST */\n          s.block_start -= _w_size;\n\n          /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n          n = s.hash_size;\n          p = n;\n          do {\n            m = s.head[--p];\n            s.head[p] = (m >= _w_size ? m - _w_size : 0);\n          } while (--n);\n\n          n = _w_size;\n          p = n;\n          do {\n            m = s.prev[--p];\n            s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n            /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n          } while (--n);\n\n          more += _w_size;\n        }\n        if (s.strm.avail_in === 0) {\n          break;\n        }\n\n        /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n        //Assert(more >= 2, \"more < 2\");\n        n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n        s.lookahead += n;\n\n        /* Initialize the hash value now that we have some input: */\n        if (s.lookahead + s.insert >= MIN_MATCH) {\n          str = s.strstart - s.insert;\n          s.ins_h = s.window[str];\n\n          /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n          while (s.insert) {\n            /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n            s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH-1]) & s.hash_mask;\n\n            s.prev[str & s.w_mask] = s.head[s.ins_h];\n            s.head[s.ins_h] = str;\n            str++;\n            s.insert--;\n            if (s.lookahead + s.insert < MIN_MATCH) {\n              break;\n            }\n          }\n        }\n        /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n      } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n      /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    var curr = s.strstart + s.lookahead;\n//    var init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n    }\n\n    /* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\n    function deflate_stored(s, flush) {\n      /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n      var max_block_size = 0xffff;\n\n      if (max_block_size > s.pending_buf_size - 5) {\n        max_block_size = s.pending_buf_size - 5;\n      }\n\n      /* Copy as much as possible from input to output: */\n      for (;;) {\n        /* Fill the window as much as possible: */\n        if (s.lookahead <= 1) {\n\n          //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n          //  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\n          fill_window(s);\n          if (s.lookahead === 0 && flush === Z_NO_FLUSH) {\n            return BS_NEED_MORE;\n          }\n\n          if (s.lookahead === 0) {\n            break;\n          }\n          /* flush the current block */\n        }\n        //Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n        s.strstart += s.lookahead;\n        s.lookahead = 0;\n\n        /* Emit a stored block if pending_buf will be full: */\n        var max_start = s.block_start + max_block_size;\n\n        if (s.strstart === 0 || s.strstart >= max_start) {\n          /* strstart == 0 is possible when wraparound on 16-bit machine */\n          s.lookahead = s.strstart - max_start;\n          s.strstart = max_start;\n          /*** FLUSH_BLOCK(s, 0); ***/\n          flush_block_only(s, false);\n          if (s.strm.avail_out === 0) {\n            return BS_NEED_MORE;\n          }\n          /***/\n\n\n        }\n        /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n        if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n          /*** FLUSH_BLOCK(s, 0); ***/\n          flush_block_only(s, false);\n          if (s.strm.avail_out === 0) {\n            return BS_NEED_MORE;\n          }\n          /***/\n        }\n      }\n\n      s.insert = 0;\n\n      if (flush === Z_FINISH) {\n        /*** FLUSH_BLOCK(s, 1); ***/\n        flush_block_only(s, true);\n        if (s.strm.avail_out === 0) {\n          return BS_FINISH_STARTED;\n        }\n        /***/\n        return BS_FINISH_DONE;\n      }\n\n      if (s.strstart > s.block_start) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n      return BS_NEED_MORE;\n    }\n\n    /* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\n    function deflate_fast(s, flush) {\n      var hash_head;        /* head of the hash chain */\n      var bflush;           /* set if current block must be flushed */\n\n      for (;;) {\n        /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n        if (s.lookahead < MIN_LOOKAHEAD) {\n          fill_window(s);\n          if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n            return BS_NEED_MORE;\n          }\n          if (s.lookahead === 0) {\n            break; /* flush the current block */\n          }\n        }\n\n        /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n        hash_head = 0/*NIL*/;\n        if (s.lookahead >= MIN_MATCH) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n\n        /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n        if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n          /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n          s.match_length = longest_match(s, hash_head);\n          /* longest_match() sets match_start */\n        }\n        if (s.match_length >= MIN_MATCH) {\n          // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n          /*** _tr_tally_dist(s, s.strstart - s.match_start,\n           s.match_length - MIN_MATCH, bflush); ***/\n          bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n          s.lookahead -= s.match_length;\n\n          /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n          if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n            s.match_length--; /* string at strstart already in table */\n            do {\n              s.strstart++;\n              /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n              s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n              hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n              s.head[s.ins_h] = s.strstart;\n              /***/\n              /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n            } while (--s.match_length !== 0);\n            s.strstart++;\n          } else\n          {\n            s.strstart += s.match_length;\n            s.match_length = 0;\n            s.ins_h = s.window[s.strstart];\n            /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n            s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n            /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n          }\n        } else {\n          /* No match, output a literal byte */\n          //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n          /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n          bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n          s.lookahead--;\n          s.strstart++;\n        }\n        if (bflush) {\n          /*** FLUSH_BLOCK(s, 0); ***/\n          flush_block_only(s, false);\n          if (s.strm.avail_out === 0) {\n            return BS_NEED_MORE;\n          }\n          /***/\n        }\n      }\n      s.insert = ((s.strstart < (MIN_MATCH-1)) ? s.strstart : MIN_MATCH-1);\n      if (flush === Z_FINISH) {\n        /*** FLUSH_BLOCK(s, 1); ***/\n        flush_block_only(s, true);\n        if (s.strm.avail_out === 0) {\n          return BS_FINISH_STARTED;\n        }\n        /***/\n        return BS_FINISH_DONE;\n      }\n      if (s.last_lit) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n      return BS_BLOCK_DONE;\n    }\n\n    /* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\n    function deflate_slow(s, flush) {\n      var hash_head;          /* head of hash chain */\n      var bflush;              /* set if current block must be flushed */\n\n      var max_insert;\n\n      /* Process the input block. */\n      for (;;) {\n        /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n        if (s.lookahead < MIN_LOOKAHEAD) {\n          fill_window(s);\n          if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n            return BS_NEED_MORE;\n          }\n          if (s.lookahead === 0) { break; } /* flush the current block */\n        }\n\n        /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n        hash_head = 0/*NIL*/;\n        if (s.lookahead >= MIN_MATCH) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n\n        /* Find the longest match, discarding those <= prev_length.\n     */\n        s.prev_length = s.match_length;\n        s.prev_match = s.match_start;\n        s.match_length = MIN_MATCH-1;\n\n        if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n          s.strstart - hash_head <= (s.w_size-MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n          /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n          s.match_length = longest_match(s, hash_head);\n          /* longest_match() sets match_start */\n\n          if (s.match_length <= 5 &&\n            (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n            /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n            s.match_length = MIN_MATCH-1;\n          }\n        }\n        /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n        if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n          max_insert = s.strstart + s.lookahead - MIN_MATCH;\n          /* Do not insert strings in hash table beyond this. */\n\n          //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n          /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n           s.prev_length - MIN_MATCH, bflush);***/\n          bflush = trees._tr_tally(s, s.strstart - 1- s.prev_match, s.prev_length - MIN_MATCH);\n          /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n          s.lookahead -= s.prev_length-1;\n          s.prev_length -= 2;\n          do {\n            if (++s.strstart <= max_insert) {\n              /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n              s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n              hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n              s.head[s.ins_h] = s.strstart;\n              /***/\n            }\n          } while (--s.prev_length !== 0);\n          s.match_available = 0;\n          s.match_length = MIN_MATCH-1;\n          s.strstart++;\n\n          if (bflush) {\n            /*** FLUSH_BLOCK(s, 0); ***/\n            flush_block_only(s, false);\n            if (s.strm.avail_out === 0) {\n              return BS_NEED_MORE;\n            }\n            /***/\n          }\n\n        } else if (s.match_available) {\n          /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n          //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n          /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n          bflush = trees._tr_tally(s, 0, s.window[s.strstart-1]);\n\n          if (bflush) {\n            /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n            flush_block_only(s, false);\n            /***/\n          }\n          s.strstart++;\n          s.lookahead--;\n          if (s.strm.avail_out === 0) {\n            return BS_NEED_MORE;\n          }\n        } else {\n          /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n          s.match_available = 1;\n          s.strstart++;\n          s.lookahead--;\n        }\n      }\n      //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n      if (s.match_available) {\n        //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n        /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n        bflush = trees._tr_tally(s, 0, s.window[s.strstart-1]);\n\n        s.match_available = 0;\n      }\n      s.insert = s.strstart < MIN_MATCH-1 ? s.strstart : MIN_MATCH-1;\n      if (flush === Z_FINISH) {\n        /*** FLUSH_BLOCK(s, 1); ***/\n        flush_block_only(s, true);\n        if (s.strm.avail_out === 0) {\n          return BS_FINISH_STARTED;\n        }\n        /***/\n        return BS_FINISH_DONE;\n      }\n      if (s.last_lit) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n      return BS_BLOCK_DONE;\n    }\n\n\n    /* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\n    function deflate_rle(s, flush) {\n      var bflush;            /* set if current block must be flushed */\n      var prev;              /* byte at distance one to match */\n      var scan, strend;      /* scan goes up to strend for length of run */\n\n      var _win = s.window;\n\n      for (;;) {\n        /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n        if (s.lookahead <= MAX_MATCH) {\n          fill_window(s);\n          if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n            return BS_NEED_MORE;\n          }\n          if (s.lookahead === 0) { break; } /* flush the current block */\n        }\n\n        /* See how many times the previous byte repeats */\n        s.match_length = 0;\n        if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n          scan = s.strstart - 1;\n          prev = _win[scan];\n          if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n            strend = s.strstart + MAX_MATCH;\n            do {\n              /*jshint noempty:false*/\n            } while (prev === _win[++scan] && prev === _win[++scan] &&\n            prev === _win[++scan] && prev === _win[++scan] &&\n            prev === _win[++scan] && prev === _win[++scan] &&\n            prev === _win[++scan] && prev === _win[++scan] &&\n            scan < strend);\n            s.match_length = MAX_MATCH - (strend - scan);\n            if (s.match_length > s.lookahead) {\n              s.match_length = s.lookahead;\n            }\n          }\n          //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n        }\n\n        /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n        if (s.match_length >= MIN_MATCH) {\n          //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n          /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n          bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n          s.lookahead -= s.match_length;\n          s.strstart += s.match_length;\n          s.match_length = 0;\n        } else {\n          /* No match, output a literal byte */\n          //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n          /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n          bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n          s.lookahead--;\n          s.strstart++;\n        }\n        if (bflush) {\n          /*** FLUSH_BLOCK(s, 0); ***/\n          flush_block_only(s, false);\n          if (s.strm.avail_out === 0) {\n            return BS_NEED_MORE;\n          }\n          /***/\n        }\n      }\n      s.insert = 0;\n      if (flush === Z_FINISH) {\n        /*** FLUSH_BLOCK(s, 1); ***/\n        flush_block_only(s, true);\n        if (s.strm.avail_out === 0) {\n          return BS_FINISH_STARTED;\n        }\n        /***/\n        return BS_FINISH_DONE;\n      }\n      if (s.last_lit) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n      return BS_BLOCK_DONE;\n    }\n\n    /* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\n    function deflate_huff(s, flush) {\n      var bflush;             /* set if current block must be flushed */\n\n      for (;;) {\n        /* Make sure that we have a literal to write. */\n        if (s.lookahead === 0) {\n          fill_window(s);\n          if (s.lookahead === 0) {\n            if (flush === Z_NO_FLUSH) {\n              return BS_NEED_MORE;\n            }\n            break;      /* flush the current block */\n          }\n        }\n\n        /* Output a literal byte */\n        s.match_length = 0;\n        //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n        /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n        bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n        s.lookahead--;\n        s.strstart++;\n        if (bflush) {\n          /*** FLUSH_BLOCK(s, 0); ***/\n          flush_block_only(s, false);\n          if (s.strm.avail_out === 0) {\n            return BS_NEED_MORE;\n          }\n          /***/\n        }\n      }\n      s.insert = 0;\n      if (flush === Z_FINISH) {\n        /*** FLUSH_BLOCK(s, 1); ***/\n        flush_block_only(s, true);\n        if (s.strm.avail_out === 0) {\n          return BS_FINISH_STARTED;\n        }\n        /***/\n        return BS_FINISH_DONE;\n      }\n      if (s.last_lit) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n      return BS_BLOCK_DONE;\n    }\n\n    /* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\n    var Config = function (good_length, max_lazy, nice_length, max_chain, func) {\n      this.good_length = good_length;\n      this.max_lazy = max_lazy;\n      this.nice_length = nice_length;\n      this.max_chain = max_chain;\n      this.func = func;\n    };\n\n    var configuration_table;\n\n    configuration_table = [\n      /*      good lazy nice chain */\n      new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n      new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n      new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n      new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n      new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n      new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n      new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n      new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n      new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n      new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n    ];\n\n\n    /* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\n    function lm_init(s) {\n      s.window_size = 2 * s.w_size;\n\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n\n      /* Set the default configuration parameters:\n   */\n      s.max_lazy_match = configuration_table[s.level].max_lazy;\n      s.good_match = configuration_table[s.level].good_length;\n      s.nice_match = configuration_table[s.level].nice_length;\n      s.max_chain_length = configuration_table[s.level].max_chain;\n\n      s.strstart = 0;\n      s.block_start = 0;\n      s.lookahead = 0;\n      s.insert = 0;\n      s.match_length = s.prev_length = MIN_MATCH - 1;\n      s.match_available = 0;\n      s.ins_h = 0;\n    }\n\n\n    function DeflateState() {\n      this.strm = null;            /* pointer back to this zlib stream */\n      this.status = 0;            /* as the name implies */\n      this.pending_buf = null;      /* output still pending */\n      this.pending_buf_size = 0;  /* size of pending_buf */\n      this.pending_out = 0;       /* next pending byte to output to the stream */\n      this.pending = 0;           /* nb of bytes in the pending buffer */\n      this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n      this.gzhead = null;         /* gzip header information to write */\n      this.gzindex = 0;           /* where in extra, name, or comment */\n      this.method = Z_DEFLATED; /* can only be DEFLATED */\n      this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n      this.w_size = 0;  /* LZ77 window size (32K by default) */\n      this.w_bits = 0;  /* log2(w_size)  (8..16) */\n      this.w_mask = 0;  /* w_size - 1 */\n\n      this.window = null;\n      /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n      this.window_size = 0;\n      /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n      this.prev = null;\n      /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n      this.head = null;   /* Heads of the hash chains or NIL. */\n\n      this.ins_h = 0;       /* hash index of string to be inserted */\n      this.hash_size = 0;   /* number of elements in hash table */\n      this.hash_bits = 0;   /* log2(hash_size) */\n      this.hash_mask = 0;   /* hash_size-1 */\n\n      this.hash_shift = 0;\n      /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n      this.block_start = 0;\n      /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n      this.match_length = 0;      /* length of best match */\n      this.prev_match = 0;        /* previous match */\n      this.match_available = 0;   /* set if previous match exists */\n      this.strstart = 0;          /* start of string to insert */\n      this.match_start = 0;       /* start of matching string */\n      this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n      this.prev_length = 0;\n      /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n      this.max_chain_length = 0;\n      /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n      this.max_lazy_match = 0;\n      /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n      // That's alias to max_lazy_match, don't use directly\n      //this.max_insert_length = 0;\n      /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n      this.level = 0;     /* compression level (1..9) */\n      this.strategy = 0;  /* favor or force Huffman coding*/\n\n      this.good_match = 0;\n      /* Use a faster search when the previous match is longer than this */\n\n      this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n      /* used by trees.c: */\n\n      /* Didn't use ct_data typedef below to suppress compiler warning */\n\n      // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n      // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n      // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n      // Use flat array of DOUBLE size, with interleaved fata,\n      // because JS does not support effective\n      this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);\n      this.dyn_dtree  = new utils.Buf16((2*D_CODES+1) * 2);\n      this.bl_tree    = new utils.Buf16((2*BL_CODES+1) * 2);\n      zero(this.dyn_ltree);\n      zero(this.dyn_dtree);\n      zero(this.bl_tree);\n\n      this.l_desc   = null;         /* desc. for literal tree */\n      this.d_desc   = null;         /* desc. for distance tree */\n      this.bl_desc  = null;         /* desc. for bit length tree */\n\n      //ush bl_count[MAX_BITS+1];\n      this.bl_count = new utils.Buf16(MAX_BITS+1);\n      /* number of codes at each bit length for an optimal tree */\n\n      //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n      this.heap = new utils.Buf16(2*L_CODES+1);  /* heap used to build the Huffman trees */\n      zero(this.heap);\n\n      this.heap_len = 0;               /* number of elements in the heap */\n      this.heap_max = 0;               /* element of largest frequency */\n      /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n      this.depth = new utils.Buf16(2*L_CODES+1); //uch depth[2*L_CODES+1];\n      zero(this.depth);\n      /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n      this.l_buf = 0;          /* buffer index for literals or lengths */\n\n      this.lit_bufsize = 0;\n      /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n      this.last_lit = 0;      /* running index in l_buf */\n\n      this.d_buf = 0;\n      /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n      this.opt_len = 0;       /* bit length of current block with optimal trees */\n      this.static_len = 0;    /* bit length of current block with static trees */\n      this.matches = 0;       /* number of string matches in current block */\n      this.insert = 0;        /* bytes at end of window left to insert */\n\n\n      this.bi_buf = 0;\n      /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n      this.bi_valid = 0;\n      /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n      // Used for window memory init. We safely ignore it for JS. That makes\n      // sense only for pointers and memory check tools.\n      //this.high_water = 0;\n      /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n    }\n\n\n    function deflateResetKeep(strm) {\n      var s;\n\n      if (!strm || !strm.state) {\n        return err(strm, Z_STREAM_ERROR);\n      }\n\n      strm.total_in = strm.total_out = 0;\n      strm.data_type = Z_UNKNOWN;\n\n      s = strm.state;\n      s.pending = 0;\n      s.pending_out = 0;\n\n      if (s.wrap < 0) {\n        s.wrap = -s.wrap;\n        /* was made negative by deflate(..., Z_FINISH); */\n      }\n      s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n      strm.adler = (s.wrap === 2) ?\n        0  // crc32(0, Z_NULL, 0)\n        :\n        1; // adler32(0, Z_NULL, 0)\n      s.last_flush = Z_NO_FLUSH;\n      trees._tr_init(s);\n      return Z_OK;\n    }\n\n\n    function deflateReset(strm) {\n      var ret = deflateResetKeep(strm);\n      if (ret === Z_OK) {\n        lm_init(strm.state);\n      }\n      return ret;\n    }\n\n\n    function deflateSetHeader(strm, head) {\n      if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n      if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }\n      strm.state.gzhead = head;\n      return Z_OK;\n    }\n\n\n    function deflateInit2(strm, level, method, windowBits, memLevel, strategy) {\n      if (!strm) { // === Z_NULL\n        return Z_STREAM_ERROR;\n      }\n      var wrap = 1;\n\n      if (level === Z_DEFAULT_COMPRESSION) {\n        level = 6;\n      }\n\n      if (windowBits < 0) { /* suppress zlib wrapper */\n        wrap = 0;\n        windowBits = -windowBits;\n      }\n\n      else if (windowBits > 15) {\n        wrap = 2;           /* write gzip wrapper instead */\n        windowBits -= 16;\n      }\n\n\n      if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n        windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n        strategy < 0 || strategy > Z_FIXED) {\n        return err(strm, Z_STREAM_ERROR);\n      }\n\n\n      if (windowBits === 8) {\n        windowBits = 9;\n      }\n      /* until 256-byte window bug fixed */\n\n      var s = new DeflateState();\n\n      strm.state = s;\n      s.strm = strm;\n\n      s.wrap = wrap;\n      s.gzhead = null;\n      s.w_bits = windowBits;\n      s.w_size = 1 << s.w_bits;\n      s.w_mask = s.w_size - 1;\n\n      s.hash_bits = memLevel + 7;\n      s.hash_size = 1 << s.hash_bits;\n      s.hash_mask = s.hash_size - 1;\n      s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n      s.window = new utils.Buf8(s.w_size * 2);\n      s.head = new utils.Buf16(s.hash_size);\n      s.prev = new utils.Buf16(s.w_size);\n\n      // Don't need mem init magic for JS.\n      //s.high_water = 0;  /* nothing written to s->window yet */\n\n      s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n      s.pending_buf_size = s.lit_bufsize * 4;\n      s.pending_buf = new utils.Buf8(s.pending_buf_size);\n\n      s.d_buf = s.lit_bufsize >> 1;\n      s.l_buf = (1 + 2) * s.lit_bufsize;\n\n      s.level = level;\n      s.strategy = strategy;\n      s.method = method;\n\n      return deflateReset(strm);\n    }\n\n    function deflateInit(strm, level) {\n      return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n    }\n\n\n    function deflate(strm, flush) {\n      var old_flush, s;\n      var beg, val; // for gzip header write only\n\n      if (!strm || !strm.state ||\n        flush > Z_BLOCK || flush < 0) {\n        return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n      }\n\n      s = strm.state;\n\n      if (!strm.output ||\n        (!strm.input && strm.avail_in !== 0) ||\n        (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n        return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n      }\n\n      s.strm = strm; /* just in case */\n      old_flush = s.last_flush;\n      s.last_flush = flush;\n\n      /* Write the header */\n      if (s.status === INIT_STATE) {\n\n        if (s.wrap === 2) { // GZIP header\n          strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n          put_byte(s, 31);\n          put_byte(s, 139);\n          put_byte(s, 8);\n          if (!s.gzhead) { // s->gzhead == Z_NULL\n            put_byte(s, 0);\n            put_byte(s, 0);\n            put_byte(s, 0);\n            put_byte(s, 0);\n            put_byte(s, 0);\n            put_byte(s, s.level === 9 ? 2 :\n              (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                4 : 0));\n            put_byte(s, OS_CODE);\n            s.status = BUSY_STATE;\n          }\n          else {\n            put_byte(s, (s.gzhead.text ? 1 : 0) +\n              (s.gzhead.hcrc ? 2 : 0) +\n              (!s.gzhead.extra ? 0 : 4) +\n              (!s.gzhead.name ? 0 : 8) +\n              (!s.gzhead.comment ? 0 : 16)\n            );\n            put_byte(s, s.gzhead.time & 0xff);\n            put_byte(s, (s.gzhead.time >> 8) & 0xff);\n            put_byte(s, (s.gzhead.time >> 16) & 0xff);\n            put_byte(s, (s.gzhead.time >> 24) & 0xff);\n            put_byte(s, s.level === 9 ? 2 :\n              (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                4 : 0));\n            put_byte(s, s.gzhead.os & 0xff);\n            if (s.gzhead.extra && s.gzhead.extra.length) {\n              put_byte(s, s.gzhead.extra.length & 0xff);\n              put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n            }\n            if (s.gzhead.hcrc) {\n              strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n            }\n            s.gzindex = 0;\n            s.status = EXTRA_STATE;\n          }\n        }\n        else // DEFLATE header\n        {\n          var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n          var level_flags = -1;\n\n          if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n            level_flags = 0;\n          } else if (s.level < 6) {\n            level_flags = 1;\n          } else if (s.level === 6) {\n            level_flags = 2;\n          } else {\n            level_flags = 3;\n          }\n          header |= (level_flags << 6);\n          if (s.strstart !== 0) { header |= PRESET_DICT; }\n          header += 31 - (header % 31);\n\n          s.status = BUSY_STATE;\n          putShortMSB(s, header);\n\n          /* Save the adler32 of the preset dictionary: */\n          if (s.strstart !== 0) {\n            putShortMSB(s, strm.adler >>> 16);\n            putShortMSB(s, strm.adler & 0xffff);\n          }\n          strm.adler = 1; // adler32(0L, Z_NULL, 0);\n        }\n      }\n\n//#ifdef GZIP\n      if (s.status === EXTRA_STATE) {\n        if (s.gzhead.extra/* != Z_NULL*/) {\n          beg = s.pending;  /* start of bytes to update crc */\n\n          while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n            if (s.pending === s.pending_buf_size) {\n              if (s.gzhead.hcrc && s.pending > beg) {\n                strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n              }\n              flush_pending(strm);\n              beg = s.pending;\n              if (s.pending === s.pending_buf_size) {\n                break;\n              }\n            }\n            put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n            s.gzindex++;\n          }\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          if (s.gzindex === s.gzhead.extra.length) {\n            s.gzindex = 0;\n            s.status = NAME_STATE;\n          }\n        }\n        else {\n          s.status = NAME_STATE;\n        }\n      }\n      if (s.status === NAME_STATE) {\n        if (s.gzhead.name/* != Z_NULL*/) {\n          beg = s.pending;  /* start of bytes to update crc */\n          //int val;\n\n          do {\n            if (s.pending === s.pending_buf_size) {\n              if (s.gzhead.hcrc && s.pending > beg) {\n                strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n              }\n              flush_pending(strm);\n              beg = s.pending;\n              if (s.pending === s.pending_buf_size) {\n                val = 1;\n                break;\n              }\n            }\n            // JS specific: little magic to add zero terminator to end of string\n            if (s.gzindex < s.gzhead.name.length) {\n              val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n            } else {\n              val = 0;\n            }\n            put_byte(s, val);\n          } while (val !== 0);\n\n          if (s.gzhead.hcrc && s.pending > beg){\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          if (val === 0) {\n            s.gzindex = 0;\n            s.status = COMMENT_STATE;\n          }\n        }\n        else {\n          s.status = COMMENT_STATE;\n        }\n      }\n      if (s.status === COMMENT_STATE) {\n        if (s.gzhead.comment/* != Z_NULL*/) {\n          beg = s.pending;  /* start of bytes to update crc */\n          //int val;\n\n          do {\n            if (s.pending === s.pending_buf_size) {\n              if (s.gzhead.hcrc && s.pending > beg) {\n                strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n              }\n              flush_pending(strm);\n              beg = s.pending;\n              if (s.pending === s.pending_buf_size) {\n                val = 1;\n                break;\n              }\n            }\n            // JS specific: little magic to add zero terminator to end of string\n            if (s.gzindex < s.gzhead.comment.length) {\n              val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n            } else {\n              val = 0;\n            }\n            put_byte(s, val);\n          } while (val !== 0);\n\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          if (val === 0) {\n            s.status = HCRC_STATE;\n          }\n        }\n        else {\n          s.status = HCRC_STATE;\n        }\n      }\n      if (s.status === HCRC_STATE) {\n        if (s.gzhead.hcrc) {\n          if (s.pending + 2 > s.pending_buf_size) {\n            flush_pending(strm);\n          }\n          if (s.pending + 2 <= s.pending_buf_size) {\n            put_byte(s, strm.adler & 0xff);\n            put_byte(s, (strm.adler >> 8) & 0xff);\n            strm.adler = 0; //crc32(0L, Z_NULL, 0);\n            s.status = BUSY_STATE;\n          }\n        }\n        else {\n          s.status = BUSY_STATE;\n        }\n      }\n//#endif\n\n      /* Flush as much pending output as possible */\n      if (s.pending !== 0) {\n        flush_pending(strm);\n        if (strm.avail_out === 0) {\n          /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n          s.last_flush = -1;\n          return Z_OK;\n        }\n\n        /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n      } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n        flush !== Z_FINISH) {\n        return err(strm, Z_BUF_ERROR);\n      }\n\n      /* User must not provide more input after the first FINISH: */\n      if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n        return err(strm, Z_BUF_ERROR);\n      }\n\n      /* Start a new block or continue the current one.\n   */\n      if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n        (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n        var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n          (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n            configuration_table[s.level].func(s, flush));\n\n        if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n          s.status = FINISH_STATE;\n        }\n        if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n          if (strm.avail_out === 0) {\n            s.last_flush = -1;\n            /* avoid BUF_ERROR next call, see above */\n          }\n          return Z_OK;\n          /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n        }\n        if (bstate === BS_BLOCK_DONE) {\n          if (flush === Z_PARTIAL_FLUSH) {\n            trees._tr_align(s);\n          }\n          else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n            trees._tr_stored_block(s, 0, 0, false);\n            /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n            if (flush === Z_FULL_FLUSH) {\n              /*** CLEAR_HASH(s); ***/             /* forget history */\n              zero(s.head); // Fill with NIL (= 0);\n\n              if (s.lookahead === 0) {\n                s.strstart = 0;\n                s.block_start = 0;\n                s.insert = 0;\n              }\n            }\n          }\n          flush_pending(strm);\n          if (strm.avail_out === 0) {\n            s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n            return Z_OK;\n          }\n        }\n      }\n      //Assert(strm->avail_out > 0, \"bug2\");\n      //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n      if (flush !== Z_FINISH) { return Z_OK; }\n      if (s.wrap <= 0) { return Z_STREAM_END; }\n\n      /* Write the trailer */\n      if (s.wrap === 2) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        put_byte(s, (strm.adler >> 16) & 0xff);\n        put_byte(s, (strm.adler >> 24) & 0xff);\n        put_byte(s, strm.total_in & 0xff);\n        put_byte(s, (strm.total_in >> 8) & 0xff);\n        put_byte(s, (strm.total_in >> 16) & 0xff);\n        put_byte(s, (strm.total_in >> 24) & 0xff);\n      }\n      else\n      {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n\n      flush_pending(strm);\n      /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n      if (s.wrap > 0) { s.wrap = -s.wrap; }\n      /* write the trailer only once! */\n      return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n    }\n\n    function deflateEnd(strm) {\n      var status;\n\n      if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n        return Z_STREAM_ERROR;\n      }\n\n      status = strm.state.status;\n      if (status !== INIT_STATE &&\n        status !== EXTRA_STATE &&\n        status !== NAME_STATE &&\n        status !== COMMENT_STATE &&\n        status !== HCRC_STATE &&\n        status !== BUSY_STATE &&\n        status !== FINISH_STATE\n      ) {\n        return err(strm, Z_STREAM_ERROR);\n      }\n\n      strm.state = null;\n\n      return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n    }\n\n    /* =========================================================================\n * Copy the source state to the destination state\n */\n//function deflateCopy(dest, source) {\n//\n//}\n\n    exports.deflateInit = deflateInit;\n    exports.deflateInit2 = deflateInit2;\n    exports.deflateReset = deflateReset;\n    exports.deflateResetKeep = deflateResetKeep;\n    exports.deflateSetHeader = deflateSetHeader;\n    exports.deflate = deflate;\n    exports.deflateEnd = deflateEnd;\n    exports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n    /* Not implemented\nexports.deflateBound = deflateBound;\nexports.deflateCopy = deflateCopy;\nexports.deflateSetDictionary = deflateSetDictionary;\nexports.deflateParams = deflateParams;\nexports.deflatePending = deflatePending;\nexports.deflatePrime = deflatePrime;\nexports.deflateTune = deflateTune;\n*/\n  },{\"../utils/common\":27,\"./adler32\":29,\"./crc32\":31,\"./messages\":37,\"./trees\":38}],33:[function(_dereq_,module,exports){\n    'use strict';\n\n\n    function GZheader() {\n      /* true if compressed data believed to be text */\n      this.text       = 0;\n      /* modification time */\n      this.time       = 0;\n      /* extra flags (not used when writing a gzip file) */\n      this.xflags     = 0;\n      /* operating system */\n      this.os         = 0;\n      /* pointer to extra field or Z_NULL if none */\n      this.extra      = null;\n      /* extra field length (valid if extra != Z_NULL) */\n      this.extra_len  = 0; // Actually, we don't need it in JS,\n                           // but leave for few code modifications\n\n      //\n      // Setup limits is not necessary because in js we should not preallocate memory\n      // for inflate use constant limit in 65536 bytes\n      //\n\n      /* space at extra (only when reading header) */\n      // this.extra_max  = 0;\n      /* pointer to zero-terminated file name or Z_NULL */\n      this.name       = '';\n      /* space at name (only when reading header) */\n      // this.name_max   = 0;\n      /* pointer to zero-terminated comment or Z_NULL */\n      this.comment    = '';\n      /* space at comment (only when reading header) */\n      // this.comm_max   = 0;\n      /* true if there was or will be a header crc */\n      this.hcrc       = 0;\n      /* true when done reading gzip header (not used when writing a gzip file) */\n      this.done       = false;\n    }\n\n    module.exports = GZheader;\n  },{}],34:[function(_dereq_,module,exports){\n    'use strict';\n\n// See state defs from inflate.js\n    var BAD = 30;       /* got a data error -- remain here until reset */\n    var TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\n\n    /*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\n    module.exports = function inflate_fast(strm, start) {\n      var state;\n      var _in;                    /* local strm.input */\n      var last;                   /* have enough input while in < last */\n      var _out;                   /* local strm.output */\n      var beg;                    /* inflate()'s initial strm.output */\n      var end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n      var dmax;                   /* maximum distance from zlib header */\n//#endif\n      var wsize;                  /* window size or zero if not using window */\n      var whave;                  /* valid bytes in the window */\n      var wnext;                  /* window write index */\n      var window;                 /* allocated sliding window, if wsize != 0 */\n      var hold;                   /* local strm.hold */\n      var bits;                   /* local strm.bits */\n      var lcode;                  /* local strm.lencode */\n      var dcode;                  /* local strm.distcode */\n      var lmask;                  /* mask for first level of length codes */\n      var dmask;                  /* mask for first level of distance codes */\n      var here;                   /* retrieved table entry */\n      var op;                     /* code bits, operation, extra bits, or */\n      /*  window position, window bytes to copy */\n      var len;                    /* match length, unused bytes */\n      var dist;                   /* match distance */\n      var from;                   /* where to copy match from */\n      var from_source;\n\n\n      var input, output; // JS specific, because we have no pointers\n\n      /* copy state to local variables */\n      state = strm.state;\n      //here = state.here;\n      _in = strm.next_in;\n      input = strm.input;\n      last = _in + (strm.avail_in - 5);\n      _out = strm.next_out;\n      output = strm.output;\n      beg = _out - (start - strm.avail_out);\n      end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n      dmax = state.dmax;\n//#endif\n      wsize = state.wsize;\n      whave = state.whave;\n      wnext = state.wnext;\n      window = state.window;\n      hold = state.hold;\n      bits = state.bits;\n      lcode = state.lencode;\n      dcode = state.distcode;\n      lmask = (1 << state.lenbits) - 1;\n      dmask = (1 << state.distbits) - 1;\n\n\n      /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n      top:\n        do {\n          if (bits < 15) {\n            hold += input[_in++] << bits;\n            bits += 8;\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n\n          here = lcode[hold & lmask];\n\n          dolen:\n            for (;;) { // Goto emulation\n              op = here >>> 24/*here.bits*/;\n              hold >>>= op;\n              bits -= op;\n              op = (here >>> 16) & 0xff/*here.op*/;\n              if (op === 0) {                          /* literal */\n                //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n                //        \"inflate:         literal '%c'\\n\" :\n                //        \"inflate:         literal 0x%02x\\n\", here.val));\n                output[_out++] = here & 0xffff/*here.val*/;\n              }\n              else if (op & 16) {                     /* length base */\n                len = here & 0xffff/*here.val*/;\n                op &= 15;                           /* number of extra bits */\n                if (op) {\n                  if (bits < op) {\n                    hold += input[_in++] << bits;\n                    bits += 8;\n                  }\n                  len += hold & ((1 << op) - 1);\n                  hold >>>= op;\n                  bits -= op;\n                }\n                //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n                if (bits < 15) {\n                  hold += input[_in++] << bits;\n                  bits += 8;\n                  hold += input[_in++] << bits;\n                  bits += 8;\n                }\n                here = dcode[hold & dmask];\n\n                dodist:\n                  for (;;) { // goto emulation\n                    op = here >>> 24/*here.bits*/;\n                    hold >>>= op;\n                    bits -= op;\n                    op = (here >>> 16) & 0xff/*here.op*/;\n\n                    if (op & 16) {                      /* distance base */\n                      dist = here & 0xffff/*here.val*/;\n                      op &= 15;                       /* number of extra bits */\n                      if (bits < op) {\n                        hold += input[_in++] << bits;\n                        bits += 8;\n                        if (bits < op) {\n                          hold += input[_in++] << bits;\n                          bits += 8;\n                        }\n                      }\n                      dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n                      if (dist > dmax) {\n                        strm.msg = 'invalid distance too far back';\n                        state.mode = BAD;\n                        break top;\n                      }\n//#endif\n                      hold >>>= op;\n                      bits -= op;\n                      //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n                      op = _out - beg;                /* max distance in output */\n                      if (dist > op) {                /* see if copy from window */\n                        op = dist - op;               /* distance back in window */\n                        if (op > whave) {\n                          if (state.sane) {\n                            strm.msg = 'invalid distance too far back';\n                            state.mode = BAD;\n                            break top;\n                          }\n\n// (!) This block is disabled in zlib defailts,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n                        }\n                        from = 0; // window index\n                        from_source = window;\n                        if (wnext === 0) {           /* very common case */\n                          from += wsize - op;\n                          if (op < len) {         /* some from window */\n                            len -= op;\n                            do {\n                              output[_out++] = window[from++];\n                            } while (--op);\n                            from = _out - dist;  /* rest from output */\n                            from_source = output;\n                          }\n                        }\n                        else if (wnext < op) {      /* wrap around window */\n                          from += wsize + wnext - op;\n                          op -= wnext;\n                          if (op < len) {         /* some from end of window */\n                            len -= op;\n                            do {\n                              output[_out++] = window[from++];\n                            } while (--op);\n                            from = 0;\n                            if (wnext < len) {  /* some from start of window */\n                              op = wnext;\n                              len -= op;\n                              do {\n                                output[_out++] = window[from++];\n                              } while (--op);\n                              from = _out - dist;      /* rest from output */\n                              from_source = output;\n                            }\n                          }\n                        }\n                        else {                      /* contiguous in window */\n                          from += wnext - op;\n                          if (op < len) {         /* some from window */\n                            len -= op;\n                            do {\n                              output[_out++] = window[from++];\n                            } while (--op);\n                            from = _out - dist;  /* rest from output */\n                            from_source = output;\n                          }\n                        }\n                        while (len > 2) {\n                          output[_out++] = from_source[from++];\n                          output[_out++] = from_source[from++];\n                          output[_out++] = from_source[from++];\n                          len -= 3;\n                        }\n                        if (len) {\n                          output[_out++] = from_source[from++];\n                          if (len > 1) {\n                            output[_out++] = from_source[from++];\n                          }\n                        }\n                      }\n                      else {\n                        from = _out - dist;          /* copy direct from output */\n                        do {                        /* minimum length is three */\n                          output[_out++] = output[from++];\n                          output[_out++] = output[from++];\n                          output[_out++] = output[from++];\n                          len -= 3;\n                        } while (len > 2);\n                        if (len) {\n                          output[_out++] = output[from++];\n                          if (len > 1) {\n                            output[_out++] = output[from++];\n                          }\n                        }\n                      }\n                    }\n                    else if ((op & 64) === 0) {          /* 2nd level distance code */\n                      here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n                      continue dodist;\n                    }\n                    else {\n                      strm.msg = 'invalid distance code';\n                      state.mode = BAD;\n                      break top;\n                    }\n\n                    break; // need to emulate goto via \"continue\"\n                  }\n              }\n              else if ((op & 64) === 0) {              /* 2nd level length code */\n                here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n                continue dolen;\n              }\n              else if (op & 32) {                     /* end-of-block */\n                //Tracevv((stderr, \"inflate:         end of block\\n\"));\n                state.mode = TYPE;\n                break top;\n              }\n              else {\n                strm.msg = 'invalid literal/length code';\n                state.mode = BAD;\n                break top;\n              }\n\n              break; // need to emulate goto via \"continue\"\n            }\n        } while (_in < last && _out < end);\n\n      /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n      len = bits >> 3;\n      _in -= len;\n      bits -= len << 3;\n      hold &= (1 << bits) - 1;\n\n      /* update state and return */\n      strm.next_in = _in;\n      strm.next_out = _out;\n      strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n      strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n      state.hold = hold;\n      state.bits = bits;\n      return;\n    };\n\n  },{}],35:[function(_dereq_,module,exports){\n    'use strict';\n\n\n    var utils = _dereq_('../utils/common');\n    var adler32 = _dereq_('./adler32');\n    var crc32   = _dereq_('./crc32');\n    var inflate_fast = _dereq_('./inffast');\n    var inflate_table = _dereq_('./inftrees');\n\n    var CODES = 0;\n    var LENS = 1;\n    var DISTS = 2;\n\n    /* Public constants ==========================================================*/\n    /* ===========================================================================*/\n\n\n    /* Allowed flush values; see deflate() and inflate() below for details */\n//var Z_NO_FLUSH      = 0;\n//var Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\n//var Z_FULL_FLUSH    = 3;\n    var Z_FINISH        = 4;\n    var Z_BLOCK         = 5;\n    var Z_TREES         = 6;\n\n\n    /* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\n    var Z_OK            = 0;\n    var Z_STREAM_END    = 1;\n    var Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\n    var Z_STREAM_ERROR  = -2;\n    var Z_DATA_ERROR    = -3;\n    var Z_MEM_ERROR     = -4;\n    var Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n    /* The deflate compression method */\n    var Z_DEFLATED  = 8;\n\n\n    /* STATES ====================================================================*/\n    /* ===========================================================================*/\n\n\n    var    HEAD = 1;       /* i: waiting for magic header */\n    var    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\n    var    TIME = 3;       /* i: waiting for modification time (gzip) */\n    var    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\n    var    EXLEN = 5;      /* i: waiting for extra length (gzip) */\n    var    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\n    var    NAME = 7;       /* i: waiting for end of file name (gzip) */\n    var    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\n    var    HCRC = 9;       /* i: waiting for header crc (gzip) */\n    var    DICTID = 10;    /* i: waiting for dictionary check value */\n    var    DICT = 11;      /* waiting for inflateSetDictionary() call */\n    var        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\n    var        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\n    var        STORED = 14;    /* i: waiting for stored size (length and complement) */\n    var        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\n    var        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\n    var        TABLE = 17;     /* i: waiting for dynamic block table lengths */\n    var        LENLENS = 18;   /* i: waiting for code length code lengths */\n    var        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\n    var            LEN_ = 20;      /* i: same as LEN below, but only first time in */\n    var            LEN = 21;       /* i: waiting for length/lit/eob code */\n    var            LENEXT = 22;    /* i: waiting for length extra bits */\n    var            DIST = 23;      /* i: waiting for distance code */\n    var            DISTEXT = 24;   /* i: waiting for distance extra bits */\n    var            MATCH = 25;     /* o: waiting for output space to copy string */\n    var            LIT = 26;       /* o: waiting for output space to write literal */\n    var    CHECK = 27;     /* i: waiting for 32-bit check value */\n    var    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\n    var    DONE = 29;      /* finished check, done -- remain here until reset */\n    var    BAD = 30;       /* got a data error -- remain here until reset */\n    var    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\n    var    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n    /* ===========================================================================*/\n\n\n\n    var ENOUGH_LENS = 852;\n    var ENOUGH_DISTS = 592;\n//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\n    var MAX_WBITS = 15;\n    /* 32K LZ77 window */\n    var DEF_WBITS = MAX_WBITS;\n\n\n    function ZSWAP32(q) {\n      return  (((q >>> 24) & 0xff) +\n        ((q >>> 8) & 0xff00) +\n        ((q & 0xff00) << 8) +\n        ((q & 0xff) << 24));\n    }\n\n\n    function InflateState() {\n      this.mode = 0;             /* current inflate mode */\n      this.last = false;          /* true if processing last block */\n      this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n      this.havedict = false;      /* true if dictionary provided */\n      this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n      this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n      this.check = 0;             /* protected copy of check value */\n      this.total = 0;             /* protected copy of output count */\n      // TODO: may be {}\n      this.head = null;           /* where to save gzip header information */\n\n      /* sliding window */\n      this.wbits = 0;             /* log base 2 of requested window size */\n      this.wsize = 0;             /* window size or zero if not using window */\n      this.whave = 0;             /* valid bytes in the window */\n      this.wnext = 0;             /* window write index */\n      this.window = null;         /* allocated sliding window, if needed */\n\n      /* bit accumulator */\n      this.hold = 0;              /* input bit accumulator */\n      this.bits = 0;              /* number of bits in \"in\" */\n\n      /* for string and stored block copying */\n      this.length = 0;            /* literal or length of data to copy */\n      this.offset = 0;            /* distance back to copy string from */\n\n      /* for table and code decoding */\n      this.extra = 0;             /* extra bits needed */\n\n      /* fixed and dynamic code tables */\n      this.lencode = null;          /* starting table for length/literal codes */\n      this.distcode = null;         /* starting table for distance codes */\n      this.lenbits = 0;           /* index bits for lencode */\n      this.distbits = 0;          /* index bits for distcode */\n\n      /* dynamic table building */\n      this.ncode = 0;             /* number of code length code lengths */\n      this.nlen = 0;              /* number of length code lengths */\n      this.ndist = 0;             /* number of distance code lengths */\n      this.have = 0;              /* number of code lengths in lens[] */\n      this.next = null;              /* next available space in codes[] */\n\n      this.lens = new utils.Buf16(320); /* temporary storage for code lengths */\n      this.work = new utils.Buf16(288); /* work area for code table building */\n\n      /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n      //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */\n      this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n      this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n      this.sane = 0;                   /* if false, allow invalid distance too far */\n      this.back = 0;                   /* bits back of last unprocessed length/lit */\n      this.was = 0;                    /* initial length of match */\n    }\n\n    function inflateResetKeep(strm) {\n      var state;\n\n      if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n      state = strm.state;\n      strm.total_in = strm.total_out = state.total = 0;\n      strm.msg = ''; /*Z_NULL*/\n      if (state.wrap) {       /* to support ill-conceived Java test suite */\n        strm.adler = state.wrap & 1;\n      }\n      state.mode = HEAD;\n      state.last = 0;\n      state.havedict = 0;\n      state.dmax = 32768;\n      state.head = null/*Z_NULL*/;\n      state.hold = 0;\n      state.bits = 0;\n      //state.lencode = state.distcode = state.next = state.codes;\n      state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);\n      state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);\n\n      state.sane = 1;\n      state.back = -1;\n      //Tracev((stderr, \"inflate: reset\\n\"));\n      return Z_OK;\n    }\n\n    function inflateReset(strm) {\n      var state;\n\n      if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n      state = strm.state;\n      state.wsize = 0;\n      state.whave = 0;\n      state.wnext = 0;\n      return inflateResetKeep(strm);\n\n    }\n\n    function inflateReset2(strm, windowBits) {\n      var wrap;\n      var state;\n\n      /* get the state */\n      if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n      state = strm.state;\n\n      /* extract wrap request from windowBits parameter */\n      if (windowBits < 0) {\n        wrap = 0;\n        windowBits = -windowBits;\n      }\n      else {\n        wrap = (windowBits >> 4) + 1;\n        if (windowBits < 48) {\n          windowBits &= 15;\n        }\n      }\n\n      /* set number of window bits, free window if different */\n      if (windowBits && (windowBits < 8 || windowBits > 15)) {\n        return Z_STREAM_ERROR;\n      }\n      if (state.window !== null && state.wbits !== windowBits) {\n        state.window = null;\n      }\n\n      /* update state and reset the rest of it */\n      state.wrap = wrap;\n      state.wbits = windowBits;\n      return inflateReset(strm);\n    }\n\n    function inflateInit2(strm, windowBits) {\n      var ret;\n      var state;\n\n      if (!strm) { return Z_STREAM_ERROR; }\n      //strm.msg = Z_NULL;                 /* in case we return an error */\n\n      state = new InflateState();\n\n      //if (state === Z_NULL) return Z_MEM_ERROR;\n      //Tracev((stderr, \"inflate: allocated\\n\"));\n      strm.state = state;\n      state.window = null/*Z_NULL*/;\n      ret = inflateReset2(strm, windowBits);\n      if (ret !== Z_OK) {\n        strm.state = null/*Z_NULL*/;\n      }\n      return ret;\n    }\n\n    function inflateInit(strm) {\n      return inflateInit2(strm, DEF_WBITS);\n    }\n\n\n    /*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\n    var virgin = true;\n\n    var lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n    function fixedtables(state) {\n      /* build fixed huffman tables if first call (may not be thread safe) */\n      if (virgin) {\n        var sym;\n\n        lenfix = new utils.Buf32(512);\n        distfix = new utils.Buf32(32);\n\n        /* literal/length table */\n        sym = 0;\n        while (sym < 144) { state.lens[sym++] = 8; }\n        while (sym < 256) { state.lens[sym++] = 9; }\n        while (sym < 280) { state.lens[sym++] = 7; }\n        while (sym < 288) { state.lens[sym++] = 8; }\n\n        inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, {bits: 9});\n\n        /* distance table */\n        sym = 0;\n        while (sym < 32) { state.lens[sym++] = 5; }\n\n        inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, {bits: 5});\n\n        /* do this just once */\n        virgin = false;\n      }\n\n      state.lencode = lenfix;\n      state.lenbits = 9;\n      state.distcode = distfix;\n      state.distbits = 5;\n    }\n\n\n    /*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\n    function updatewindow(strm, src, end, copy) {\n      var dist;\n      var state = strm.state;\n\n      /* if it hasn't been done already, allocate space for the window */\n      if (state.window === null) {\n        state.wsize = 1 << state.wbits;\n        state.wnext = 0;\n        state.whave = 0;\n\n        state.window = new utils.Buf8(state.wsize);\n      }\n\n      /* copy state->wsize or less output bytes into the circular window */\n      if (copy >= state.wsize) {\n        utils.arraySet(state.window,src, end - state.wsize, state.wsize, 0);\n        state.wnext = 0;\n        state.whave = state.wsize;\n      }\n      else {\n        dist = state.wsize - state.wnext;\n        if (dist > copy) {\n          dist = copy;\n        }\n        //zmemcpy(state->window + state->wnext, end - copy, dist);\n        utils.arraySet(state.window,src, end - copy, dist, state.wnext);\n        copy -= dist;\n        if (copy) {\n          //zmemcpy(state->window, end - copy, copy);\n          utils.arraySet(state.window,src, end - copy, copy, 0);\n          state.wnext = copy;\n          state.whave = state.wsize;\n        }\n        else {\n          state.wnext += dist;\n          if (state.wnext === state.wsize) { state.wnext = 0; }\n          if (state.whave < state.wsize) { state.whave += dist; }\n        }\n      }\n      return 0;\n    }\n\n    function inflate(strm, flush) {\n      var state;\n      var input, output;          // input/output buffers\n      var next;                   /* next input INDEX */\n      var put;                    /* next output INDEX */\n      var have, left;             /* available input and output */\n      var hold;                   /* bit buffer */\n      var bits;                   /* bits in bit buffer */\n      var _in, _out;              /* save starting available input and output */\n      var copy;                   /* number of stored or match bytes to copy */\n      var from;                   /* where to copy match bytes from */\n      var from_source;\n      var here = 0;               /* current decoding table entry */\n      var here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n      //var last;                   /* parent table entry */\n      var last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n      var len;                    /* length to copy for repeats, bits to drop */\n      var ret;                    /* return code */\n      var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */\n      var opts;\n\n      var n; // temporary var for NEED_BITS\n\n      var order = /* permutation of code lengths */\n        [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n\n\n      if (!strm || !strm.state || !strm.output ||\n        (!strm.input && strm.avail_in !== 0)) {\n        return Z_STREAM_ERROR;\n      }\n\n      state = strm.state;\n      if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n      //--- LOAD() ---\n      put = strm.next_out;\n      output = strm.output;\n      left = strm.avail_out;\n      next = strm.next_in;\n      input = strm.input;\n      have = strm.avail_in;\n      hold = state.hold;\n      bits = state.bits;\n      //---\n\n      _in = have;\n      _out = left;\n      ret = Z_OK;\n\n      inf_leave: // goto emulation\n        for (;;) {\n          switch (state.mode) {\n            case HEAD:\n              if (state.wrap === 0) {\n                state.mode = TYPEDO;\n                break;\n              }\n              //=== NEEDBITS(16);\n              while (bits < 16) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n                state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n                //=== CRC2(state.check, hold);\n                hbuf[0] = hold & 0xff;\n                hbuf[1] = (hold >>> 8) & 0xff;\n                state.check = crc32(state.check, hbuf, 2, 0);\n                //===//\n\n                //=== INITBITS();\n                hold = 0;\n                bits = 0;\n                //===//\n                state.mode = FLAGS;\n                break;\n              }\n              state.flags = 0;           /* expect zlib header */\n              if (state.head) {\n                state.head.done = false;\n              }\n              if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n                (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n                strm.msg = 'incorrect header check';\n                state.mode = BAD;\n                break;\n              }\n              if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n                strm.msg = 'unknown compression method';\n                state.mode = BAD;\n                break;\n              }\n              //--- DROPBITS(4) ---//\n              hold >>>= 4;\n              bits -= 4;\n              //---//\n              len = (hold & 0x0f)/*BITS(4)*/ + 8;\n              if (state.wbits === 0) {\n                state.wbits = len;\n              }\n              else if (len > state.wbits) {\n                strm.msg = 'invalid window size';\n                state.mode = BAD;\n                break;\n              }\n              state.dmax = 1 << len;\n              //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n              strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n              state.mode = hold & 0x200 ? DICTID : TYPE;\n              //=== INITBITS();\n              hold = 0;\n              bits = 0;\n              //===//\n              break;\n            case FLAGS:\n              //=== NEEDBITS(16); */\n              while (bits < 16) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              state.flags = hold;\n              if ((state.flags & 0xff) !== Z_DEFLATED) {\n                strm.msg = 'unknown compression method';\n                state.mode = BAD;\n                break;\n              }\n              if (state.flags & 0xe000) {\n                strm.msg = 'unknown header flags set';\n                state.mode = BAD;\n                break;\n              }\n              if (state.head) {\n                state.head.text = ((hold >> 8) & 1);\n              }\n              if (state.flags & 0x0200) {\n                //=== CRC2(state.check, hold);\n                hbuf[0] = hold & 0xff;\n                hbuf[1] = (hold >>> 8) & 0xff;\n                state.check = crc32(state.check, hbuf, 2, 0);\n                //===//\n              }\n              //=== INITBITS();\n              hold = 0;\n              bits = 0;\n              //===//\n              state.mode = TIME;\n            /* falls through */\n            case TIME:\n              //=== NEEDBITS(32); */\n              while (bits < 32) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              if (state.head) {\n                state.head.time = hold;\n              }\n              if (state.flags & 0x0200) {\n                //=== CRC4(state.check, hold)\n                hbuf[0] = hold & 0xff;\n                hbuf[1] = (hold >>> 8) & 0xff;\n                hbuf[2] = (hold >>> 16) & 0xff;\n                hbuf[3] = (hold >>> 24) & 0xff;\n                state.check = crc32(state.check, hbuf, 4, 0);\n                //===\n              }\n              //=== INITBITS();\n              hold = 0;\n              bits = 0;\n              //===//\n              state.mode = OS;\n            /* falls through */\n            case OS:\n              //=== NEEDBITS(16); */\n              while (bits < 16) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              if (state.head) {\n                state.head.xflags = (hold & 0xff);\n                state.head.os = (hold >> 8);\n              }\n              if (state.flags & 0x0200) {\n                //=== CRC2(state.check, hold);\n                hbuf[0] = hold & 0xff;\n                hbuf[1] = (hold >>> 8) & 0xff;\n                state.check = crc32(state.check, hbuf, 2, 0);\n                //===//\n              }\n              //=== INITBITS();\n              hold = 0;\n              bits = 0;\n              //===//\n              state.mode = EXLEN;\n            /* falls through */\n            case EXLEN:\n              if (state.flags & 0x0400) {\n                //=== NEEDBITS(16); */\n                while (bits < 16) {\n                  if (have === 0) { break inf_leave; }\n                  have--;\n                  hold += input[next++] << bits;\n                  bits += 8;\n                }\n                //===//\n                state.length = hold;\n                if (state.head) {\n                  state.head.extra_len = hold;\n                }\n                if (state.flags & 0x0200) {\n                  //=== CRC2(state.check, hold);\n                  hbuf[0] = hold & 0xff;\n                  hbuf[1] = (hold >>> 8) & 0xff;\n                  state.check = crc32(state.check, hbuf, 2, 0);\n                  //===//\n                }\n                //=== INITBITS();\n                hold = 0;\n                bits = 0;\n                //===//\n              }\n              else if (state.head) {\n                state.head.extra = null/*Z_NULL*/;\n              }\n              state.mode = EXTRA;\n            /* falls through */\n            case EXTRA:\n              if (state.flags & 0x0400) {\n                copy = state.length;\n                if (copy > have) { copy = have; }\n                if (copy) {\n                  if (state.head) {\n                    len = state.head.extra_len - state.length;\n                    if (!state.head.extra) {\n                      // Use untyped array for more conveniend processing later\n                      state.head.extra = new Array(state.head.extra_len);\n                    }\n                    utils.arraySet(\n                      state.head.extra,\n                      input,\n                      next,\n                      // extra field is limited to 65536 bytes\n                      // - no need for additional size check\n                      copy,\n                      /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                      len\n                    );\n                    //zmemcpy(state.head.extra + len, next,\n                    //        len + copy > state.head.extra_max ?\n                    //        state.head.extra_max - len : copy);\n                  }\n                  if (state.flags & 0x0200) {\n                    state.check = crc32(state.check, input, copy, next);\n                  }\n                  have -= copy;\n                  next += copy;\n                  state.length -= copy;\n                }\n                if (state.length) { break inf_leave; }\n              }\n              state.length = 0;\n              state.mode = NAME;\n            /* falls through */\n            case NAME:\n              if (state.flags & 0x0800) {\n                if (have === 0) { break inf_leave; }\n                copy = 0;\n                do {\n                  // TODO: 2 or 1 bytes?\n                  len = input[next + copy++];\n                  /* use constant limit because in js we should not preallocate memory */\n                  if (state.head && len &&\n                    (state.length < 65536 /*state.head.name_max*/)) {\n                    state.head.name += String.fromCharCode(len);\n                  }\n                } while (len && copy < have);\n\n                if (state.flags & 0x0200) {\n                  state.check = crc32(state.check, input, copy, next);\n                }\n                have -= copy;\n                next += copy;\n                if (len) { break inf_leave; }\n              }\n              else if (state.head) {\n                state.head.name = null;\n              }\n              state.length = 0;\n              state.mode = COMMENT;\n            /* falls through */\n            case COMMENT:\n              if (state.flags & 0x1000) {\n                if (have === 0) { break inf_leave; }\n                copy = 0;\n                do {\n                  len = input[next + copy++];\n                  /* use constant limit because in js we should not preallocate memory */\n                  if (state.head && len &&\n                    (state.length < 65536 /*state.head.comm_max*/)) {\n                    state.head.comment += String.fromCharCode(len);\n                  }\n                } while (len && copy < have);\n                if (state.flags & 0x0200) {\n                  state.check = crc32(state.check, input, copy, next);\n                }\n                have -= copy;\n                next += copy;\n                if (len) { break inf_leave; }\n              }\n              else if (state.head) {\n                state.head.comment = null;\n              }\n              state.mode = HCRC;\n            /* falls through */\n            case HCRC:\n              if (state.flags & 0x0200) {\n                //=== NEEDBITS(16); */\n                while (bits < 16) {\n                  if (have === 0) { break inf_leave; }\n                  have--;\n                  hold += input[next++] << bits;\n                  bits += 8;\n                }\n                //===//\n                if (hold !== (state.check & 0xffff)) {\n                  strm.msg = 'header crc mismatch';\n                  state.mode = BAD;\n                  break;\n                }\n                //=== INITBITS();\n                hold = 0;\n                bits = 0;\n                //===//\n              }\n              if (state.head) {\n                state.head.hcrc = ((state.flags >> 9) & 1);\n                state.head.done = true;\n              }\n              strm.adler = state.check = 0 /*crc32(0L, Z_NULL, 0)*/;\n              state.mode = TYPE;\n              break;\n            case DICTID:\n              //=== NEEDBITS(32); */\n              while (bits < 32) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              strm.adler = state.check = ZSWAP32(hold);\n              //=== INITBITS();\n              hold = 0;\n              bits = 0;\n              //===//\n              state.mode = DICT;\n            /* falls through */\n            case DICT:\n              if (state.havedict === 0) {\n                //--- RESTORE() ---\n                strm.next_out = put;\n                strm.avail_out = left;\n                strm.next_in = next;\n                strm.avail_in = have;\n                state.hold = hold;\n                state.bits = bits;\n                //---\n                return Z_NEED_DICT;\n              }\n              strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n              state.mode = TYPE;\n            /* falls through */\n            case TYPE:\n              if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n            /* falls through */\n            case TYPEDO:\n              if (state.last) {\n                //--- BYTEBITS() ---//\n                hold >>>= bits & 7;\n                bits -= bits & 7;\n                //---//\n                state.mode = CHECK;\n                break;\n              }\n              //=== NEEDBITS(3); */\n              while (bits < 3) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              state.last = (hold & 0x01)/*BITS(1)*/;\n              //--- DROPBITS(1) ---//\n              hold >>>= 1;\n              bits -= 1;\n              //---//\n\n              switch ((hold & 0x03)/*BITS(2)*/) {\n                case 0:                             /* stored block */\n                  //Tracev((stderr, \"inflate:     stored block%s\\n\",\n                  //        state.last ? \" (last)\" : \"\"));\n                  state.mode = STORED;\n                  break;\n                case 1:                             /* fixed block */\n                  fixedtables(state);\n                  //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n                  //        state.last ? \" (last)\" : \"\"));\n                  state.mode = LEN_;             /* decode codes */\n                  if (flush === Z_TREES) {\n                    //--- DROPBITS(2) ---//\n                    hold >>>= 2;\n                    bits -= 2;\n                    //---//\n                    break inf_leave;\n                  }\n                  break;\n                case 2:                             /* dynamic block */\n                  //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n                  //        state.last ? \" (last)\" : \"\"));\n                  state.mode = TABLE;\n                  break;\n                case 3:\n                  strm.msg = 'invalid block type';\n                  state.mode = BAD;\n              }\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break;\n            case STORED:\n              //--- BYTEBITS() ---// /* go to byte boundary */\n              hold >>>= bits & 7;\n              bits -= bits & 7;\n              //---//\n              //=== NEEDBITS(32); */\n              while (bits < 32) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n                strm.msg = 'invalid stored block lengths';\n                state.mode = BAD;\n                break;\n              }\n              state.length = hold & 0xffff;\n              //Tracev((stderr, \"inflate:       stored length %u\\n\",\n              //        state.length));\n              //=== INITBITS();\n              hold = 0;\n              bits = 0;\n              //===//\n              state.mode = COPY_;\n              if (flush === Z_TREES) { break inf_leave; }\n            /* falls through */\n            case COPY_:\n              state.mode = COPY;\n            /* falls through */\n            case COPY:\n              copy = state.length;\n              if (copy) {\n                if (copy > have) { copy = have; }\n                if (copy > left) { copy = left; }\n                if (copy === 0) { break inf_leave; }\n                //--- zmemcpy(put, next, copy); ---\n                utils.arraySet(output, input, next, copy, put);\n                //---//\n                have -= copy;\n                next += copy;\n                left -= copy;\n                put += copy;\n                state.length -= copy;\n                break;\n              }\n              //Tracev((stderr, \"inflate:       stored end\\n\"));\n              state.mode = TYPE;\n              break;\n            case TABLE:\n              //=== NEEDBITS(14); */\n              while (bits < 14) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n              //--- DROPBITS(5) ---//\n              hold >>>= 5;\n              bits -= 5;\n              //---//\n              state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n              //--- DROPBITS(5) ---//\n              hold >>>= 5;\n              bits -= 5;\n              //---//\n              state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n              //--- DROPBITS(4) ---//\n              hold >>>= 4;\n              bits -= 4;\n              //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n              if (state.nlen > 286 || state.ndist > 30) {\n                strm.msg = 'too many length or distance symbols';\n                state.mode = BAD;\n                break;\n              }\n//#endif\n              //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n              state.have = 0;\n              state.mode = LENLENS;\n            /* falls through */\n            case LENLENS:\n              while (state.have < state.ncode) {\n                //=== NEEDBITS(3);\n                while (bits < 3) {\n                  if (have === 0) { break inf_leave; }\n                  have--;\n                  hold += input[next++] << bits;\n                  bits += 8;\n                }\n                //===//\n                state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n                //--- DROPBITS(3) ---//\n                hold >>>= 3;\n                bits -= 3;\n                //---//\n              }\n              while (state.have < 19) {\n                state.lens[order[state.have++]] = 0;\n              }\n              // We have separate tables & no pointers. 2 commented lines below not needed.\n              //state.next = state.codes;\n              //state.lencode = state.next;\n              // Switch to use dynamic table\n              state.lencode = state.lendyn;\n              state.lenbits = 7;\n\n              opts = {bits: state.lenbits};\n              ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n              state.lenbits = opts.bits;\n\n              if (ret) {\n                strm.msg = 'invalid code lengths set';\n                state.mode = BAD;\n                break;\n              }\n              //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n              state.have = 0;\n              state.mode = CODELENS;\n            /* falls through */\n            case CODELENS:\n              while (state.have < state.nlen + state.ndist) {\n                for (;;) {\n                  here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n                  here_bits = here >>> 24;\n                  here_op = (here >>> 16) & 0xff;\n                  here_val = here & 0xffff;\n\n                  if ((here_bits) <= bits) { break; }\n                  //--- PULLBYTE() ---//\n                  if (have === 0) { break inf_leave; }\n                  have--;\n                  hold += input[next++] << bits;\n                  bits += 8;\n                  //---//\n                }\n                if (here_val < 16) {\n                  //--- DROPBITS(here.bits) ---//\n                  hold >>>= here_bits;\n                  bits -= here_bits;\n                  //---//\n                  state.lens[state.have++] = here_val;\n                }\n                else {\n                  if (here_val === 16) {\n                    //=== NEEDBITS(here.bits + 2);\n                    n = here_bits + 2;\n                    while (bits < n) {\n                      if (have === 0) { break inf_leave; }\n                      have--;\n                      hold += input[next++] << bits;\n                      bits += 8;\n                    }\n                    //===//\n                    //--- DROPBITS(here.bits) ---//\n                    hold >>>= here_bits;\n                    bits -= here_bits;\n                    //---//\n                    if (state.have === 0) {\n                      strm.msg = 'invalid bit length repeat';\n                      state.mode = BAD;\n                      break;\n                    }\n                    len = state.lens[state.have - 1];\n                    copy = 3 + (hold & 0x03);//BITS(2);\n                    //--- DROPBITS(2) ---//\n                    hold >>>= 2;\n                    bits -= 2;\n                    //---//\n                  }\n                  else if (here_val === 17) {\n                    //=== NEEDBITS(here.bits + 3);\n                    n = here_bits + 3;\n                    while (bits < n) {\n                      if (have === 0) { break inf_leave; }\n                      have--;\n                      hold += input[next++] << bits;\n                      bits += 8;\n                    }\n                    //===//\n                    //--- DROPBITS(here.bits) ---//\n                    hold >>>= here_bits;\n                    bits -= here_bits;\n                    //---//\n                    len = 0;\n                    copy = 3 + (hold & 0x07);//BITS(3);\n                    //--- DROPBITS(3) ---//\n                    hold >>>= 3;\n                    bits -= 3;\n                    //---//\n                  }\n                  else {\n                    //=== NEEDBITS(here.bits + 7);\n                    n = here_bits + 7;\n                    while (bits < n) {\n                      if (have === 0) { break inf_leave; }\n                      have--;\n                      hold += input[next++] << bits;\n                      bits += 8;\n                    }\n                    //===//\n                    //--- DROPBITS(here.bits) ---//\n                    hold >>>= here_bits;\n                    bits -= here_bits;\n                    //---//\n                    len = 0;\n                    copy = 11 + (hold & 0x7f);//BITS(7);\n                    //--- DROPBITS(7) ---//\n                    hold >>>= 7;\n                    bits -= 7;\n                    //---//\n                  }\n                  if (state.have + copy > state.nlen + state.ndist) {\n                    strm.msg = 'invalid bit length repeat';\n                    state.mode = BAD;\n                    break;\n                  }\n                  while (copy--) {\n                    state.lens[state.have++] = len;\n                  }\n                }\n              }\n\n              /* handle error breaks in while */\n              if (state.mode === BAD) { break; }\n\n              /* check for end-of-block code (better have one) */\n              if (state.lens[256] === 0) {\n                strm.msg = 'invalid code -- missing end-of-block';\n                state.mode = BAD;\n                break;\n              }\n\n              /* build code tables -- note: do not change the lenbits or distbits\n         values here (9 and 6) without reading the comments in inftrees.h\n         concerning the ENOUGH constants, which depend on those values */\n              state.lenbits = 9;\n\n              opts = {bits: state.lenbits};\n              ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n              // We have separate tables & no pointers. 2 commented lines below not needed.\n              // state.next_index = opts.table_index;\n              state.lenbits = opts.bits;\n              // state.lencode = state.next;\n\n              if (ret) {\n                strm.msg = 'invalid literal/lengths set';\n                state.mode = BAD;\n                break;\n              }\n\n              state.distbits = 6;\n              //state.distcode.copy(state.codes);\n              // Switch to use dynamic table\n              state.distcode = state.distdyn;\n              opts = {bits: state.distbits};\n              ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n              // We have separate tables & no pointers. 2 commented lines below not needed.\n              // state.next_index = opts.table_index;\n              state.distbits = opts.bits;\n              // state.distcode = state.next;\n\n              if (ret) {\n                strm.msg = 'invalid distances set';\n                state.mode = BAD;\n                break;\n              }\n              //Tracev((stderr, 'inflate:       codes ok\\n'));\n              state.mode = LEN_;\n              if (flush === Z_TREES) { break inf_leave; }\n            /* falls through */\n            case LEN_:\n              state.mode = LEN;\n            /* falls through */\n            case LEN:\n              if (have >= 6 && left >= 258) {\n                //--- RESTORE() ---\n                strm.next_out = put;\n                strm.avail_out = left;\n                strm.next_in = next;\n                strm.avail_in = have;\n                state.hold = hold;\n                state.bits = bits;\n                //---\n                inflate_fast(strm, _out);\n                //--- LOAD() ---\n                put = strm.next_out;\n                output = strm.output;\n                left = strm.avail_out;\n                next = strm.next_in;\n                input = strm.input;\n                have = strm.avail_in;\n                hold = state.hold;\n                bits = state.bits;\n                //---\n\n                if (state.mode === TYPE) {\n                  state.back = -1;\n                }\n                break;\n              }\n              state.back = 0;\n              for (;;) {\n                here = state.lencode[hold & ((1 << state.lenbits) -1)];  /*BITS(state.lenbits)*/\n                here_bits = here >>> 24;\n                here_op = (here >>> 16) & 0xff;\n                here_val = here & 0xffff;\n\n                if (here_bits <= bits) { break; }\n                //--- PULLBYTE() ---//\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n                //---//\n              }\n              if (here_op && (here_op & 0xf0) === 0) {\n                last_bits = here_bits;\n                last_op = here_op;\n                last_val = here_val;\n                for (;;) {\n                  here = state.lencode[last_val +\n                  ((hold & ((1 << (last_bits + last_op)) -1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n                  here_bits = here >>> 24;\n                  here_op = (here >>> 16) & 0xff;\n                  here_val = here & 0xffff;\n\n                  if ((last_bits + here_bits) <= bits) { break; }\n                  //--- PULLBYTE() ---//\n                  if (have === 0) { break inf_leave; }\n                  have--;\n                  hold += input[next++] << bits;\n                  bits += 8;\n                  //---//\n                }\n                //--- DROPBITS(last.bits) ---//\n                hold >>>= last_bits;\n                bits -= last_bits;\n                //---//\n                state.back += last_bits;\n              }\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              state.back += here_bits;\n              state.length = here_val;\n              if (here_op === 0) {\n                //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n                //        \"inflate:         literal '%c'\\n\" :\n                //        \"inflate:         literal 0x%02x\\n\", here.val));\n                state.mode = LIT;\n                break;\n              }\n              if (here_op & 32) {\n                //Tracevv((stderr, \"inflate:         end of block\\n\"));\n                state.back = -1;\n                state.mode = TYPE;\n                break;\n              }\n              if (here_op & 64) {\n                strm.msg = 'invalid literal/length code';\n                state.mode = BAD;\n                break;\n              }\n              state.extra = here_op & 15;\n              state.mode = LENEXT;\n            /* falls through */\n            case LENEXT:\n              if (state.extra) {\n                //=== NEEDBITS(state.extra);\n                n = state.extra;\n                while (bits < n) {\n                  if (have === 0) { break inf_leave; }\n                  have--;\n                  hold += input[next++] << bits;\n                  bits += 8;\n                }\n                //===//\n                state.length += hold & ((1 << state.extra) -1)/*BITS(state.extra)*/;\n                //--- DROPBITS(state.extra) ---//\n                hold >>>= state.extra;\n                bits -= state.extra;\n                //---//\n                state.back += state.extra;\n              }\n              //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n              state.was = state.length;\n              state.mode = DIST;\n            /* falls through */\n            case DIST:\n              for (;;) {\n                here = state.distcode[hold & ((1 << state.distbits) -1)];/*BITS(state.distbits)*/\n                here_bits = here >>> 24;\n                here_op = (here >>> 16) & 0xff;\n                here_val = here & 0xffff;\n\n                if ((here_bits) <= bits) { break; }\n                //--- PULLBYTE() ---//\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n                //---//\n              }\n              if ((here_op & 0xf0) === 0) {\n                last_bits = here_bits;\n                last_op = here_op;\n                last_val = here_val;\n                for (;;) {\n                  here = state.distcode[last_val +\n                  ((hold & ((1 << (last_bits + last_op)) -1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n                  here_bits = here >>> 24;\n                  here_op = (here >>> 16) & 0xff;\n                  here_val = here & 0xffff;\n\n                  if ((last_bits + here_bits) <= bits) { break; }\n                  //--- PULLBYTE() ---//\n                  if (have === 0) { break inf_leave; }\n                  have--;\n                  hold += input[next++] << bits;\n                  bits += 8;\n                  //---//\n                }\n                //--- DROPBITS(last.bits) ---//\n                hold >>>= last_bits;\n                bits -= last_bits;\n                //---//\n                state.back += last_bits;\n              }\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              state.back += here_bits;\n              if (here_op & 64) {\n                strm.msg = 'invalid distance code';\n                state.mode = BAD;\n                break;\n              }\n              state.offset = here_val;\n              state.extra = (here_op) & 15;\n              state.mode = DISTEXT;\n            /* falls through */\n            case DISTEXT:\n              if (state.extra) {\n                //=== NEEDBITS(state.extra);\n                n = state.extra;\n                while (bits < n) {\n                  if (have === 0) { break inf_leave; }\n                  have--;\n                  hold += input[next++] << bits;\n                  bits += 8;\n                }\n                //===//\n                state.offset += hold & ((1 << state.extra) -1)/*BITS(state.extra)*/;\n                //--- DROPBITS(state.extra) ---//\n                hold >>>= state.extra;\n                bits -= state.extra;\n                //---//\n                state.back += state.extra;\n              }\n//#ifdef INFLATE_STRICT\n              if (state.offset > state.dmax) {\n                strm.msg = 'invalid distance too far back';\n                state.mode = BAD;\n                break;\n              }\n//#endif\n              //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n              state.mode = MATCH;\n            /* falls through */\n            case MATCH:\n              if (left === 0) { break inf_leave; }\n              copy = _out - left;\n              if (state.offset > copy) {         /* copy from window */\n                copy = state.offset - copy;\n                if (copy > state.whave) {\n                  if (state.sane) {\n                    strm.msg = 'invalid distance too far back';\n                    state.mode = BAD;\n                    break;\n                  }\n// (!) This block is disabled in zlib defailts,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n                }\n                if (copy > state.wnext) {\n                  copy -= state.wnext;\n                  from = state.wsize - copy;\n                }\n                else {\n                  from = state.wnext - copy;\n                }\n                if (copy > state.length) { copy = state.length; }\n                from_source = state.window;\n              }\n              else {                              /* copy from output */\n                from_source = output;\n                from = put - state.offset;\n                copy = state.length;\n              }\n              if (copy > left) { copy = left; }\n              left -= copy;\n              state.length -= copy;\n              do {\n                output[put++] = from_source[from++];\n              } while (--copy);\n              if (state.length === 0) { state.mode = LEN; }\n              break;\n            case LIT:\n              if (left === 0) { break inf_leave; }\n              output[put++] = state.length;\n              left--;\n              state.mode = LEN;\n              break;\n            case CHECK:\n              if (state.wrap) {\n                //=== NEEDBITS(32);\n                while (bits < 32) {\n                  if (have === 0) { break inf_leave; }\n                  have--;\n                  // Use '|' insdead of '+' to make sure that result is signed\n                  hold |= input[next++] << bits;\n                  bits += 8;\n                }\n                //===//\n                _out -= left;\n                strm.total_out += _out;\n                state.total += _out;\n                if (_out) {\n                  strm.adler = state.check =\n                    /*UPDATE(state.check, put - _out, _out);*/\n                    (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n                }\n                _out = left;\n                // NB: crc32 stored as signed 32-bit int, ZSWAP32 returns signed too\n                if ((state.flags ? hold : ZSWAP32(hold)) !== state.check) {\n                  strm.msg = 'incorrect data check';\n                  state.mode = BAD;\n                  break;\n                }\n                //=== INITBITS();\n                hold = 0;\n                bits = 0;\n                //===//\n                //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n              }\n              state.mode = LENGTH;\n            /* falls through */\n            case LENGTH:\n              if (state.wrap && state.flags) {\n                //=== NEEDBITS(32);\n                while (bits < 32) {\n                  if (have === 0) { break inf_leave; }\n                  have--;\n                  hold += input[next++] << bits;\n                  bits += 8;\n                }\n                //===//\n                if (hold !== (state.total & 0xffffffff)) {\n                  strm.msg = 'incorrect length check';\n                  state.mode = BAD;\n                  break;\n                }\n                //=== INITBITS();\n                hold = 0;\n                bits = 0;\n                //===//\n                //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n              }\n              state.mode = DONE;\n            /* falls through */\n            case DONE:\n              ret = Z_STREAM_END;\n              break inf_leave;\n            case BAD:\n              ret = Z_DATA_ERROR;\n              break inf_leave;\n            case MEM:\n              return Z_MEM_ERROR;\n            case SYNC:\n            /* falls through */\n            default:\n              return Z_STREAM_ERROR;\n          }\n        }\n\n      // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n      /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n      //--- RESTORE() ---\n      strm.next_out = put;\n      strm.avail_out = left;\n      strm.next_in = next;\n      strm.avail_in = have;\n      state.hold = hold;\n      state.bits = bits;\n      //---\n\n      if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n        (state.mode < CHECK || flush !== Z_FINISH))) {\n        if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n          state.mode = MEM;\n          return Z_MEM_ERROR;\n        }\n      }\n      _in -= strm.avail_in;\n      _out -= strm.avail_out;\n      strm.total_in += _in;\n      strm.total_out += _out;\n      state.total += _out;\n      if (state.wrap && _out) {\n        strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n          (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n      }\n      strm.data_type = state.bits + (state.last ? 64 : 0) +\n        (state.mode === TYPE ? 128 : 0) +\n        (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n      if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n        ret = Z_BUF_ERROR;\n      }\n      return ret;\n    }\n\n    function inflateEnd(strm) {\n\n      if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n        return Z_STREAM_ERROR;\n      }\n\n      var state = strm.state;\n      if (state.window) {\n        state.window = null;\n      }\n      strm.state = null;\n      return Z_OK;\n    }\n\n    function inflateGetHeader(strm, head) {\n      var state;\n\n      /* check state */\n      if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n      state = strm.state;\n      if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n      /* save header structure */\n      state.head = head;\n      head.done = false;\n      return Z_OK;\n    }\n\n\n    exports.inflateReset = inflateReset;\n    exports.inflateReset2 = inflateReset2;\n    exports.inflateResetKeep = inflateResetKeep;\n    exports.inflateInit = inflateInit;\n    exports.inflateInit2 = inflateInit2;\n    exports.inflate = inflate;\n    exports.inflateEnd = inflateEnd;\n    exports.inflateGetHeader = inflateGetHeader;\n    exports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n    /* Not implemented\nexports.inflateCopy = inflateCopy;\nexports.inflateGetDictionary = inflateGetDictionary;\nexports.inflateMark = inflateMark;\nexports.inflatePrime = inflatePrime;\nexports.inflateSetDictionary = inflateSetDictionary;\nexports.inflateSync = inflateSync;\nexports.inflateSyncPoint = inflateSyncPoint;\nexports.inflateUndermine = inflateUndermine;\n*/\n  },{\"../utils/common\":27,\"./adler32\":29,\"./crc32\":31,\"./inffast\":34,\"./inftrees\":36}],36:[function(_dereq_,module,exports){\n    'use strict';\n\n\n    var utils = _dereq_('../utils/common');\n\n    var MAXBITS = 15;\n    var ENOUGH_LENS = 852;\n    var ENOUGH_DISTS = 592;\n//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\n    var CODES = 0;\n    var LENS = 1;\n    var DISTS = 2;\n\n    var lbase = [ /* Length codes 257..285 base */\n      3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n      35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n    ];\n\n    var lext = [ /* Length codes 257..285 extra */\n      16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n      19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n    ];\n\n    var dbase = [ /* Distance codes 0..29 base */\n      1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n      257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n      8193, 12289, 16385, 24577, 0, 0\n    ];\n\n    var dext = [ /* Distance codes 0..29 extra */\n      16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n      23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n      28, 28, 29, 29, 64, 64\n    ];\n\n    module.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)\n    {\n      var bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n      var len = 0;               /* a code's length in bits */\n      var sym = 0;               /* index of code symbols */\n      var min = 0, max = 0;          /* minimum and maximum code lengths */\n      var root = 0;              /* number of index bits for root table */\n      var curr = 0;              /* number of index bits for current table */\n      var drop = 0;              /* code bits to drop for sub-table */\n      var left = 0;                   /* number of prefix codes available */\n      var used = 0;              /* code entries in table used */\n      var huff = 0;              /* Huffman code */\n      var incr;              /* for incrementing code, index */\n      var fill;              /* index for replicating entries */\n      var low;               /* low bits for current root entry */\n      var mask;              /* mask for low root bits */\n      var next;             /* next available space in table */\n      var base = null;     /* base value table to use */\n      var base_index = 0;\n//  var shoextra;    /* extra bits table to use */\n      var end;                    /* use base and extra for symbol > end */\n      var count = new utils.Buf16(MAXBITS+1); //[MAXBITS+1];    /* number of codes of each length */\n      var offs = new utils.Buf16(MAXBITS+1); //[MAXBITS+1];     /* offsets in table for each length */\n      var extra = null;\n      var extra_index = 0;\n\n      var here_bits, here_op, here_val;\n\n      /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n      /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n      for (len = 0; len <= MAXBITS; len++) {\n        count[len] = 0;\n      }\n      for (sym = 0; sym < codes; sym++) {\n        count[lens[lens_index + sym]]++;\n      }\n\n      /* bound code lengths, force root to be within code lengths */\n      root = bits;\n      for (max = MAXBITS; max >= 1; max--) {\n        if (count[max] !== 0) { break; }\n      }\n      if (root > max) {\n        root = max;\n      }\n      if (max === 0) {                     /* no symbols to code at all */\n        //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n        //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n        //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n        table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n        //table.op[opts.table_index] = 64;\n        //table.bits[opts.table_index] = 1;\n        //table.val[opts.table_index++] = 0;\n        table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n        opts.bits = 1;\n        return 0;     /* no symbols, but wait for decoding to report error */\n      }\n      for (min = 1; min < max; min++) {\n        if (count[min] !== 0) { break; }\n      }\n      if (root < min) {\n        root = min;\n      }\n\n      /* check for an over-subscribed or incomplete set of lengths */\n      left = 1;\n      for (len = 1; len <= MAXBITS; len++) {\n        left <<= 1;\n        left -= count[len];\n        if (left < 0) {\n          return -1;\n        }        /* over-subscribed */\n      }\n      if (left > 0 && (type === CODES || max !== 1)) {\n        return -1;                      /* incomplete set */\n      }\n\n      /* generate offsets into symbol table for each length for sorting */\n      offs[1] = 0;\n      for (len = 1; len < MAXBITS; len++) {\n        offs[len + 1] = offs[len] + count[len];\n      }\n\n      /* sort symbols by length, by symbol order within each length */\n      for (sym = 0; sym < codes; sym++) {\n        if (lens[lens_index + sym] !== 0) {\n          work[offs[lens[lens_index + sym]]++] = sym;\n        }\n      }\n\n      /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n      /* set up for code type */\n      // poor man optimization - use if-else instead of switch,\n      // to avoid deopts in old v8\n      if (type === CODES) {\n        base = extra = work;    /* dummy value--not used */\n        end = 19;\n      } else if (type === LENS) {\n        base = lbase;\n        base_index -= 257;\n        extra = lext;\n        extra_index -= 257;\n        end = 256;\n      } else {                    /* DISTS */\n        base = dbase;\n        extra = dext;\n        end = -1;\n      }\n\n      /* initialize opts for loop */\n      huff = 0;                   /* starting code */\n      sym = 0;                    /* starting code symbol */\n      len = min;                  /* starting code length */\n      next = table_index;              /* current table to fill in */\n      curr = root;                /* current table index bits */\n      drop = 0;                   /* current bits to drop from code for index */\n      low = -1;                   /* trigger new sub-table when len > root */\n      used = 1 << root;          /* use root table entries */\n      mask = used - 1;            /* mask for comparing low */\n\n      /* check available table space */\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      var i=0;\n      /* process all codes and make table entries */\n      for (;;) {\n        i++;\n        /* create table entry */\n        here_bits = len - drop;\n        if (work[sym] < end) {\n          here_op = 0;\n          here_val = work[sym];\n        }\n        else if (work[sym] > end) {\n          here_op = extra[extra_index + work[sym]];\n          here_val = base[base_index + work[sym]];\n        }\n        else {\n          here_op = 32 + 64;         /* end of block */\n          here_val = 0;\n        }\n\n        /* replicate for those indices with low len bits equal to huff */\n        incr = 1 << (len - drop);\n        fill = 1 << curr;\n        min = fill;                 /* save offset to next table */\n        do {\n          fill -= incr;\n          table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n        } while (fill !== 0);\n\n        /* backwards increment the len-bit code huff */\n        incr = 1 << (len - 1);\n        while (huff & incr) {\n          incr >>= 1;\n        }\n        if (incr !== 0) {\n          huff &= incr - 1;\n          huff += incr;\n        } else {\n          huff = 0;\n        }\n\n        /* go to next symbol, update count, len */\n        sym++;\n        if (--count[len] === 0) {\n          if (len === max) { break; }\n          len = lens[lens_index + work[sym]];\n        }\n\n        /* create new sub-table if needed */\n        if (len > root && (huff & mask) !== low) {\n          /* if first time, transition to sub-tables */\n          if (drop === 0) {\n            drop = root;\n          }\n\n          /* increment past last table */\n          next += min;            /* here min is 1 << curr */\n\n          /* determine length of next table */\n          curr = len - drop;\n          left = 1 << curr;\n          while (curr + drop < max) {\n            left -= count[curr + drop];\n            if (left <= 0) { break; }\n            curr++;\n            left <<= 1;\n          }\n\n          /* check for enough space */\n          used += 1 << curr;\n          if ((type === LENS && used > ENOUGH_LENS) ||\n            (type === DISTS && used > ENOUGH_DISTS)) {\n            return 1;\n          }\n\n          /* point entry in root table to sub-table */\n          low = huff & mask;\n          /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n          table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n        }\n      }\n\n      /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n      if (huff !== 0) {\n        //table.op[next + huff] = 64;            /* invalid code marker */\n        //table.bits[next + huff] = len - drop;\n        //table.val[next + huff] = 0;\n        table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n      }\n\n      /* set return parameters */\n      //opts.table_index += used;\n      opts.bits = root;\n      return 0;\n    };\n\n  },{\"../utils/common\":27}],37:[function(_dereq_,module,exports){\n    'use strict';\n\n    module.exports = {\n      '2':    'need dictionary',     /* Z_NEED_DICT       2  */\n      '1':    'stream end',          /* Z_STREAM_END      1  */\n      '0':    '',                    /* Z_OK              0  */\n      '-1':   'file error',          /* Z_ERRNO         (-1) */\n      '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n      '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n      '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n      '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n      '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n    };\n  },{}],38:[function(_dereq_,module,exports){\n    'use strict';\n\n\n    var utils = _dereq_('../utils/common');\n\n    /* Public constants ==========================================================*/\n    /* ===========================================================================*/\n\n\n//var Z_FILTERED          = 1;\n//var Z_HUFFMAN_ONLY      = 2;\n//var Z_RLE               = 3;\n    var Z_FIXED               = 4;\n//var Z_DEFAULT_STRATEGY  = 0;\n\n    /* Possible values of the data_type field (though see inflate()) */\n    var Z_BINARY              = 0;\n    var Z_TEXT                = 1;\n//var Z_ASCII             = 1; // = Z_TEXT\n    var Z_UNKNOWN             = 2;\n\n    /*============================================================================*/\n\n\n    function zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\n    var STORED_BLOCK = 0;\n    var STATIC_TREES = 1;\n    var DYN_TREES    = 2;\n    /* The three kinds of block type */\n\n    var MIN_MATCH    = 3;\n    var MAX_MATCH    = 258;\n    /* The minimum and maximum match lengths */\n\n// From deflate.h\n    /* ===========================================================================\n * Internal compression state.\n */\n\n    var LENGTH_CODES  = 29;\n    /* number of length codes, not counting the special END_BLOCK code */\n\n    var LITERALS      = 256;\n    /* number of literal bytes 0..255 */\n\n    var L_CODES       = LITERALS + 1 + LENGTH_CODES;\n    /* number of Literal or Length codes, including the END_BLOCK code */\n\n    var D_CODES       = 30;\n    /* number of distance codes */\n\n    var BL_CODES      = 19;\n    /* number of codes used to transfer the bit lengths */\n\n    var HEAP_SIZE     = 2*L_CODES + 1;\n    /* maximum heap size */\n\n    var MAX_BITS      = 15;\n    /* All codes must not exceed MAX_BITS bits */\n\n    var Buf_size      = 16;\n    /* size of bit buffer in bi_buf */\n\n\n    /* ===========================================================================\n * Constants\n */\n\n    var MAX_BL_BITS = 7;\n    /* Bit length codes must not exceed MAX_BL_BITS bits */\n\n    var END_BLOCK   = 256;\n    /* end of block literal code */\n\n    var REP_3_6     = 16;\n    /* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\n    var REPZ_3_10   = 17;\n    /* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\n    var REPZ_11_138 = 18;\n    /* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n    var extra_lbits =   /* extra bits for each length code */\n      [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];\n\n    var extra_dbits =   /* extra bits for each distance code */\n      [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];\n\n    var extra_blbits =  /* extra bits for each bit length code */\n      [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];\n\n    var bl_order =\n      [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];\n    /* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n    /* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\n    var DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array insdead of structure, Freq = i*2, Len = i*2+1\n    var static_ltree  = new Array((L_CODES+2) * 2);\n    zero(static_ltree);\n    /* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\n    var static_dtree  = new Array(D_CODES * 2);\n    zero(static_dtree);\n    /* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\n    var _dist_code    = new Array(DIST_CODE_LEN);\n    zero(_dist_code);\n    /* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\n    var _length_code  = new Array(MAX_MATCH-MIN_MATCH+1);\n    zero(_length_code);\n    /* length code for each normalized match length (0 == MIN_MATCH) */\n\n    var base_length   = new Array(LENGTH_CODES);\n    zero(base_length);\n    /* First normalized length for each code (0 = MIN_MATCH) */\n\n    var base_dist     = new Array(D_CODES);\n    zero(base_dist);\n    /* First normalized distance for each code (0 = distance of 1) */\n\n\n    var StaticTreeDesc = function (static_tree, extra_bits, extra_base, elems, max_length) {\n\n      this.static_tree  = static_tree;  /* static tree or NULL */\n      this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n      this.extra_base   = extra_base;   /* base index for extra_bits */\n      this.elems        = elems;        /* max number of elements in the tree */\n      this.max_length   = max_length;   /* max bit length for the codes */\n\n      // show if `static_tree` has data or dummy - needed for monomorphic objects\n      this.has_stree    = static_tree && static_tree.length;\n    };\n\n\n    var static_l_desc;\n    var static_d_desc;\n    var static_bl_desc;\n\n\n    var TreeDesc = function(dyn_tree, stat_desc) {\n      this.dyn_tree = dyn_tree;     /* the dynamic tree */\n      this.max_code = 0;            /* largest code with non zero frequency */\n      this.stat_desc = stat_desc;   /* the corresponding static tree */\n    };\n\n\n\n    function d_code(dist) {\n      return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n    }\n\n\n    /* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\n    function put_short (s, w) {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n      s.pending_buf[s.pending++] = (w) & 0xff;\n      s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n    }\n\n\n    /* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\n    function send_bits(s, value, length) {\n      if (s.bi_valid > (Buf_size - length)) {\n        s.bi_buf |= (value << s.bi_valid) & 0xffff;\n        put_short(s, s.bi_buf);\n        s.bi_buf = value >> (Buf_size - s.bi_valid);\n        s.bi_valid += length - Buf_size;\n      } else {\n        s.bi_buf |= (value << s.bi_valid) & 0xffff;\n        s.bi_valid += length;\n      }\n    }\n\n\n    function send_code(s, c, tree) {\n      send_bits(s, tree[c*2]/*.Code*/, tree[c*2 + 1]/*.Len*/);\n    }\n\n\n    /* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\n    function bi_reverse(code, len) {\n      var res = 0;\n      do {\n        res |= code & 1;\n        code >>>= 1;\n        res <<= 1;\n      } while (--len > 0);\n      return res >>> 1;\n    }\n\n\n    /* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\n    function bi_flush(s) {\n      if (s.bi_valid === 16) {\n        put_short(s, s.bi_buf);\n        s.bi_buf = 0;\n        s.bi_valid = 0;\n\n      } else if (s.bi_valid >= 8) {\n        s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n        s.bi_buf >>= 8;\n        s.bi_valid -= 8;\n      }\n    }\n\n\n    /* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\n    function gen_bitlen(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n    {\n      var tree            = desc.dyn_tree;\n      var max_code        = desc.max_code;\n      var stree           = desc.stat_desc.static_tree;\n      var has_stree       = desc.stat_desc.has_stree;\n      var extra           = desc.stat_desc.extra_bits;\n      var base            = desc.stat_desc.extra_base;\n      var max_length      = desc.stat_desc.max_length;\n      var h;              /* heap index */\n      var n, m;           /* iterate over the tree elements */\n      var bits;           /* bit length */\n      var xbits;          /* extra bits */\n      var f;              /* frequency */\n      var overflow = 0;   /* number of elements with bit length too large */\n\n      for (bits = 0; bits <= MAX_BITS; bits++) {\n        s.bl_count[bits] = 0;\n      }\n\n      /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n      tree[s.heap[s.heap_max]*2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n      for (h = s.heap_max+1; h < HEAP_SIZE; h++) {\n        n = s.heap[h];\n        bits = tree[tree[n*2 +1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n        if (bits > max_length) {\n          bits = max_length;\n          overflow++;\n        }\n        tree[n*2 + 1]/*.Len*/ = bits;\n        /* We overwrite tree[n].Dad which is no longer needed */\n\n        if (n > max_code) { continue; } /* not a leaf node */\n\n        s.bl_count[bits]++;\n        xbits = 0;\n        if (n >= base) {\n          xbits = extra[n-base];\n        }\n        f = tree[n * 2]/*.Freq*/;\n        s.opt_len += f * (bits + xbits);\n        if (has_stree) {\n          s.static_len += f * (stree[n*2 + 1]/*.Len*/ + xbits);\n        }\n      }\n      if (overflow === 0) { return; }\n\n      // Trace((stderr,\"\\nbit length overflow\\n\"));\n      /* This happens for example on obj2 and pic of the Calgary corpus */\n\n      /* Find the first bit length which could increase: */\n      do {\n        bits = max_length-1;\n        while (s.bl_count[bits] === 0) { bits--; }\n        s.bl_count[bits]--;      /* move one leaf down the tree */\n        s.bl_count[bits+1] += 2; /* move one overflow item as its brother */\n        s.bl_count[max_length]--;\n        /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n        overflow -= 2;\n      } while (overflow > 0);\n\n      /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n      for (bits = max_length; bits !== 0; bits--) {\n        n = s.bl_count[bits];\n        while (n !== 0) {\n          m = s.heap[--h];\n          if (m > max_code) { continue; }\n          if (tree[m*2 + 1]/*.Len*/ !== bits) {\n            // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n            s.opt_len += (bits - tree[m*2 + 1]/*.Len*/)*tree[m*2]/*.Freq*/;\n            tree[m*2 + 1]/*.Len*/ = bits;\n          }\n          n--;\n        }\n      }\n    }\n\n\n    /* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\n    function gen_codes(tree, max_code, bl_count)\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n    {\n      var next_code = new Array(MAX_BITS+1); /* next code value for each bit length */\n      var code = 0;              /* running code value */\n      var bits;                  /* bit index */\n      var n;                     /* code index */\n\n      /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n      for (bits = 1; bits <= MAX_BITS; bits++) {\n        next_code[bits] = code = (code + bl_count[bits-1]) << 1;\n      }\n      /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n      //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n      //        \"inconsistent bit counts\");\n      //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n      for (n = 0;  n <= max_code; n++) {\n        var len = tree[n*2 + 1]/*.Len*/;\n        if (len === 0) { continue; }\n        /* Now reverse the bits */\n        tree[n*2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n        //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n        //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n      }\n    }\n\n\n    /* ===========================================================================\n * Initialize the various 'constant' tables.\n */\n    function tr_static_init() {\n      var n;        /* iterates over tree elements */\n      var bits;     /* bit counter */\n      var length;   /* length value */\n      var code;     /* code value */\n      var dist;     /* distance index */\n      var bl_count = new Array(MAX_BITS+1);\n      /* number of codes at each bit length for an optimal tree */\n\n      // do check in _tr_init()\n      //if (static_init_done) return;\n\n      /* For some embedded targets, global variables are not initialized: */\n      /*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n      /* Initialize the mapping length (0..255) -> length code (0..28) */\n      length = 0;\n      for (code = 0; code < LENGTH_CODES-1; code++) {\n        base_length[code] = length;\n        for (n = 0; n < (1<<extra_lbits[code]); n++) {\n          _length_code[length++] = code;\n        }\n      }\n      //Assert (length == 256, \"tr_static_init: length != 256\");\n      /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n      _length_code[length-1] = code;\n\n      /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n      dist = 0;\n      for (code = 0 ; code < 16; code++) {\n        base_dist[code] = dist;\n        for (n = 0; n < (1<<extra_dbits[code]); n++) {\n          _dist_code[dist++] = code;\n        }\n      }\n      //Assert (dist == 256, \"tr_static_init: dist != 256\");\n      dist >>= 7; /* from now on, all distances are divided by 128 */\n      for ( ; code < D_CODES; code++) {\n        base_dist[code] = dist << 7;\n        for (n = 0; n < (1<<(extra_dbits[code]-7)); n++) {\n          _dist_code[256 + dist++] = code;\n        }\n      }\n      //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n      /* Construct the codes of the static literal tree */\n      for (bits = 0; bits <= MAX_BITS; bits++) {\n        bl_count[bits] = 0;\n      }\n\n      n = 0;\n      while (n <= 143) {\n        static_ltree[n*2 + 1]/*.Len*/ = 8;\n        n++;\n        bl_count[8]++;\n      }\n      while (n <= 255) {\n        static_ltree[n*2 + 1]/*.Len*/ = 9;\n        n++;\n        bl_count[9]++;\n      }\n      while (n <= 279) {\n        static_ltree[n*2 + 1]/*.Len*/ = 7;\n        n++;\n        bl_count[7]++;\n      }\n      while (n <= 287) {\n        static_ltree[n*2 + 1]/*.Len*/ = 8;\n        n++;\n        bl_count[8]++;\n      }\n      /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n      gen_codes(static_ltree, L_CODES+1, bl_count);\n\n      /* The static distance tree is trivial: */\n      for (n = 0; n < D_CODES; n++) {\n        static_dtree[n*2 + 1]/*.Len*/ = 5;\n        static_dtree[n*2]/*.Code*/ = bi_reverse(n, 5);\n      }\n\n      // Now data ready and we can init static trees\n      static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS+1, L_CODES, MAX_BITS);\n      static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n      static_bl_desc =new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n      //static_init_done = true;\n    }\n\n\n    /* ===========================================================================\n * Initialize a new block.\n */\n    function init_block(s) {\n      var n; /* iterates over tree elements */\n\n      /* Initialize the trees. */\n      for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n*2]/*.Freq*/ = 0; }\n      for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n*2]/*.Freq*/ = 0; }\n      for (n = 0; n < BL_CODES; n++) { s.bl_tree[n*2]/*.Freq*/ = 0; }\n\n      s.dyn_ltree[END_BLOCK*2]/*.Freq*/ = 1;\n      s.opt_len = s.static_len = 0;\n      s.last_lit = s.matches = 0;\n    }\n\n\n    /* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\n    function bi_windup(s)\n    {\n      if (s.bi_valid > 8) {\n        put_short(s, s.bi_buf);\n      } else if (s.bi_valid > 0) {\n        //put_byte(s, (Byte)s->bi_buf);\n        s.pending_buf[s.pending++] = s.bi_buf;\n      }\n      s.bi_buf = 0;\n      s.bi_valid = 0;\n    }\n\n    /* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\n    function copy_block(s, buf, len, header)\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n    {\n      bi_windup(s);        /* align on byte boundary */\n\n      if (header) {\n        put_short(s, len);\n        put_short(s, ~len);\n      }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n      utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);\n      s.pending += len;\n    }\n\n    /* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\n    function smaller(tree, n, m, depth) {\n      var _n2 = n*2;\n      var _m2 = m*2;\n      return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n        (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n    }\n\n    /* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\n    function pqdownheap(s, tree, k)\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n    {\n      var v = s.heap[k];\n      var j = k << 1;  /* left son of k */\n      while (j <= s.heap_len) {\n        /* Set j to the smallest of the two sons: */\n        if (j < s.heap_len &&\n          smaller(tree, s.heap[j+1], s.heap[j], s.depth)) {\n          j++;\n        }\n        /* Exit if v is smaller than both sons */\n        if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n        /* Exchange v with the smallest son */\n        s.heap[k] = s.heap[j];\n        k = j;\n\n        /* And continue down the tree, setting j to the left son of k */\n        j <<= 1;\n      }\n      s.heap[k] = v;\n    }\n\n\n// inlined manually\n// var SMALLEST = 1;\n\n    /* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\n    function compress_block(s, ltree, dtree)\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n    {\n      var dist;           /* distance of matched string */\n      var lc;             /* match length or unmatched char (if dist == 0) */\n      var lx = 0;         /* running index in l_buf */\n      var code;           /* the code to send */\n      var extra;          /* number of extra bits to send */\n\n      if (s.last_lit !== 0) {\n        do {\n          dist = (s.pending_buf[s.d_buf + lx*2] << 8) | (s.pending_buf[s.d_buf + lx*2 + 1]);\n          lc = s.pending_buf[s.l_buf + lx];\n          lx++;\n\n          if (dist === 0) {\n            send_code(s, lc, ltree); /* send a literal byte */\n            //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n          } else {\n            /* Here, lc is the match length - MIN_MATCH */\n            code = _length_code[lc];\n            send_code(s, code+LITERALS+1, ltree); /* send the length code */\n            extra = extra_lbits[code];\n            if (extra !== 0) {\n              lc -= base_length[code];\n              send_bits(s, lc, extra);       /* send the extra length bits */\n            }\n            dist--; /* dist is now the match distance - 1 */\n            code = d_code(dist);\n            //Assert (code < D_CODES, \"bad d_code\");\n\n            send_code(s, code, dtree);       /* send the distance code */\n            extra = extra_dbits[code];\n            if (extra !== 0) {\n              dist -= base_dist[code];\n              send_bits(s, dist, extra);   /* send the extra distance bits */\n            }\n          } /* literal or match pair ? */\n\n          /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n          //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n          //       \"pendingBuf overflow\");\n\n        } while (lx < s.last_lit);\n      }\n\n      send_code(s, END_BLOCK, ltree);\n    }\n\n\n    /* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\n    function build_tree(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n    {\n      var tree     = desc.dyn_tree;\n      var stree    = desc.stat_desc.static_tree;\n      var has_stree = desc.stat_desc.has_stree;\n      var elems    = desc.stat_desc.elems;\n      var n, m;          /* iterate over heap elements */\n      var max_code = -1; /* largest code with non zero frequency */\n      var node;          /* new node being created */\n\n      /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n      s.heap_len = 0;\n      s.heap_max = HEAP_SIZE;\n\n      for (n = 0; n < elems; n++) {\n        if (tree[n * 2]/*.Freq*/ !== 0) {\n          s.heap[++s.heap_len] = max_code = n;\n          s.depth[n] = 0;\n\n        } else {\n          tree[n*2 + 1]/*.Len*/ = 0;\n        }\n      }\n\n      /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n      while (s.heap_len < 2) {\n        node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n        tree[node * 2]/*.Freq*/ = 1;\n        s.depth[node] = 0;\n        s.opt_len--;\n\n        if (has_stree) {\n          s.static_len -= stree[node*2 + 1]/*.Len*/;\n        }\n        /* node is 0 or 1 so it does not have extra bits */\n      }\n      desc.max_code = max_code;\n\n      /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n      for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n      /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n      node = elems;              /* next internal node of the tree */\n      do {\n        //pqremove(s, tree, n);  /* n = node of least frequency */\n        /*** pqremove ***/\n        n = s.heap[1/*SMALLEST*/];\n        s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n        pqdownheap(s, tree, 1/*SMALLEST*/);\n        /***/\n\n        m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n        s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n        s.heap[--s.heap_max] = m;\n\n        /* Create a new node father of n and m */\n        tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n        s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n        tree[n*2 + 1]/*.Dad*/ = tree[m*2 + 1]/*.Dad*/ = node;\n\n        /* and insert the new node in the heap */\n        s.heap[1/*SMALLEST*/] = node++;\n        pqdownheap(s, tree, 1/*SMALLEST*/);\n\n      } while (s.heap_len >= 2);\n\n      s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n      /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n      gen_bitlen(s, desc);\n\n      /* The field len is now set, we can generate the bit codes */\n      gen_codes(tree, max_code, s.bl_count);\n    }\n\n\n    /* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\n    function scan_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n    {\n      var n;                     /* iterates over all tree elements */\n      var prevlen = -1;          /* last emitted length */\n      var curlen;                /* length of current code */\n\n      var nextlen = tree[0*2 + 1]/*.Len*/; /* length of next code */\n\n      var count = 0;             /* repeat count of the current code */\n      var max_count = 7;         /* max repeat count */\n      var min_count = 4;         /* min repeat count */\n\n      if (nextlen === 0) {\n        max_count = 138;\n        min_count = 3;\n      }\n      tree[(max_code+1)*2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n      for (n = 0; n <= max_code; n++) {\n        curlen = nextlen;\n        nextlen = tree[(n+1)*2 + 1]/*.Len*/;\n\n        if (++count < max_count && curlen === nextlen) {\n          continue;\n\n        } else if (count < min_count) {\n          s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n        } else if (curlen !== 0) {\n\n          if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n          s.bl_tree[REP_3_6*2]/*.Freq*/++;\n\n        } else if (count <= 10) {\n          s.bl_tree[REPZ_3_10*2]/*.Freq*/++;\n\n        } else {\n          s.bl_tree[REPZ_11_138*2]/*.Freq*/++;\n        }\n\n        count = 0;\n        prevlen = curlen;\n\n        if (nextlen === 0) {\n          max_count = 138;\n          min_count = 3;\n\n        } else if (curlen === nextlen) {\n          max_count = 6;\n          min_count = 3;\n\n        } else {\n          max_count = 7;\n          min_count = 4;\n        }\n      }\n    }\n\n\n    /* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\n    function send_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n    {\n      var n;                     /* iterates over all tree elements */\n      var prevlen = -1;          /* last emitted length */\n      var curlen;                /* length of current code */\n\n      var nextlen = tree[0*2 + 1]/*.Len*/; /* length of next code */\n\n      var count = 0;             /* repeat count of the current code */\n      var max_count = 7;         /* max repeat count */\n      var min_count = 4;         /* min repeat count */\n\n      /* tree[max_code+1].Len = -1; */  /* guard already set */\n      if (nextlen === 0) {\n        max_count = 138;\n        min_count = 3;\n      }\n\n      for (n = 0; n <= max_code; n++) {\n        curlen = nextlen;\n        nextlen = tree[(n+1)*2 + 1]/*.Len*/;\n\n        if (++count < max_count && curlen === nextlen) {\n          continue;\n\n        } else if (count < min_count) {\n          do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n        } else if (curlen !== 0) {\n          if (curlen !== prevlen) {\n            send_code(s, curlen, s.bl_tree);\n            count--;\n          }\n          //Assert(count >= 3 && count <= 6, \" 3_6?\");\n          send_code(s, REP_3_6, s.bl_tree);\n          send_bits(s, count-3, 2);\n\n        } else if (count <= 10) {\n          send_code(s, REPZ_3_10, s.bl_tree);\n          send_bits(s, count-3, 3);\n\n        } else {\n          send_code(s, REPZ_11_138, s.bl_tree);\n          send_bits(s, count-11, 7);\n        }\n\n        count = 0;\n        prevlen = curlen;\n        if (nextlen === 0) {\n          max_count = 138;\n          min_count = 3;\n\n        } else if (curlen === nextlen) {\n          max_count = 6;\n          min_count = 3;\n\n        } else {\n          max_count = 7;\n          min_count = 4;\n        }\n      }\n    }\n\n\n    /* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\n    function build_bl_tree(s) {\n      var max_blindex;  /* index of last bit length code of non zero freq */\n\n      /* Determine the bit length frequencies for literal and distance trees */\n      scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n      scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n      /* Build the bit length tree: */\n      build_tree(s, s.bl_desc);\n      /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n      /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n      for (max_blindex = BL_CODES-1; max_blindex >= 3; max_blindex--) {\n        if (s.bl_tree[bl_order[max_blindex]*2 + 1]/*.Len*/ !== 0) {\n          break;\n        }\n      }\n      /* Update opt_len to include the bit length tree and counts */\n      s.opt_len += 3*(max_blindex+1) + 5+5+4;\n      //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n      //        s->opt_len, s->static_len));\n\n      return max_blindex;\n    }\n\n\n    /* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\n    function send_all_trees(s, lcodes, dcodes, blcodes)\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n    {\n      var rank;                    /* index in bl_order */\n\n      //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n      //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n      //        \"too many codes\");\n      //Tracev((stderr, \"\\nbl counts: \"));\n      send_bits(s, lcodes-257, 5); /* not +255 as stated in appnote.txt */\n      send_bits(s, dcodes-1,   5);\n      send_bits(s, blcodes-4,  4); /* not -3 as stated in appnote.txt */\n      for (rank = 0; rank < blcodes; rank++) {\n        //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n        send_bits(s, s.bl_tree[bl_order[rank]*2 + 1]/*.Len*/, 3);\n      }\n      //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n      send_tree(s, s.dyn_ltree, lcodes-1); /* literal tree */\n      //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n      send_tree(s, s.dyn_dtree, dcodes-1); /* distance tree */\n      //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n    }\n\n\n    /* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\n    function detect_data_type(s) {\n      /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n      var black_mask = 0xf3ffc07f;\n      var n;\n\n      /* Check for non-textual (\"black-listed\") bytes. */\n      for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n        if ((black_mask & 1) && (s.dyn_ltree[n*2]/*.Freq*/ !== 0)) {\n          return Z_BINARY;\n        }\n      }\n\n      /* Check for textual (\"white-listed\") bytes. */\n      if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n        s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n        return Z_TEXT;\n      }\n      for (n = 32; n < LITERALS; n++) {\n        if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n          return Z_TEXT;\n        }\n      }\n\n      /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n      return Z_BINARY;\n    }\n\n\n    var static_init_done = false;\n\n    /* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\n    function _tr_init(s)\n    {\n\n      if (!static_init_done) {\n        tr_static_init();\n        static_init_done = true;\n      }\n\n      s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n      s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n      s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n      s.bi_buf = 0;\n      s.bi_valid = 0;\n\n      /* Initialize the first block of the first file: */\n      init_block(s);\n    }\n\n\n    /* ===========================================================================\n * Send a stored block\n */\n    function _tr_stored_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n    {\n      send_bits(s, (STORED_BLOCK<<1)+(last ? 1 : 0), 3);    /* send block type */\n      copy_block(s, buf, stored_len, true); /* with header */\n    }\n\n\n    /* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\n    function _tr_align(s) {\n      send_bits(s, STATIC_TREES<<1, 3);\n      send_code(s, END_BLOCK, static_ltree);\n      bi_flush(s);\n    }\n\n\n    /* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\n    function _tr_flush_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n    {\n      var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n      var max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n      /* Build the Huffman trees unless a stored block is forced */\n      if (s.level > 0) {\n\n        /* Check if the file is binary or text */\n        if (s.strm.data_type === Z_UNKNOWN) {\n          s.strm.data_type = detect_data_type(s);\n        }\n\n        /* Construct the literal and distance trees */\n        build_tree(s, s.l_desc);\n        // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n        //        s->static_len));\n\n        build_tree(s, s.d_desc);\n        // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n        //        s->static_len));\n        /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n        /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n        max_blindex = build_bl_tree(s);\n\n        /* Determine the best encoding. Compute the block lengths in bytes. */\n        opt_lenb = (s.opt_len+3+7) >>> 3;\n        static_lenb = (s.static_len+3+7) >>> 3;\n\n        // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n        //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n        //        s->last_lit));\n\n        if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n      } else {\n        // Assert(buf != (char*)0, \"lost buf\");\n        opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n      }\n\n      if ((stored_len+4 <= opt_lenb) && (buf !== -1)) {\n        /* 4: two words for the lengths */\n\n        /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n        _tr_stored_block(s, buf, stored_len, last);\n\n      } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n        send_bits(s, (STATIC_TREES<<1) + (last ? 1 : 0), 3);\n        compress_block(s, static_ltree, static_dtree);\n\n      } else {\n        send_bits(s, (DYN_TREES<<1) + (last ? 1 : 0), 3);\n        send_all_trees(s, s.l_desc.max_code+1, s.d_desc.max_code+1, max_blindex+1);\n        compress_block(s, s.dyn_ltree, s.dyn_dtree);\n      }\n      // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n      /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n      init_block(s);\n\n      if (last) {\n        bi_windup(s);\n      }\n      // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n      //       s->compressed_len-7*last));\n    }\n\n    /* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\n    function _tr_tally(s, dist, lc)\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n    {\n      //var out_length, in_length, dcode;\n\n      s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n      s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n      s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n      s.last_lit++;\n\n      if (dist === 0) {\n        /* lc is the unmatched char */\n        s.dyn_ltree[lc*2]/*.Freq*/++;\n      } else {\n        s.matches++;\n        /* Here, lc is the match length - MIN_MATCH */\n        dist--;             /* dist = match distance - 1 */\n        //Assert((ush)dist < (ush)MAX_DIST(s) &&\n        //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n        //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n        s.dyn_ltree[(_length_code[lc]+LITERALS+1) * 2]/*.Freq*/++;\n        s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n      }\n\n// (!) This block is disabled in zlib defailts,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n      return (s.last_lit === s.lit_bufsize-1);\n      /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n    }\n\n    exports._tr_init  = _tr_init;\n    exports._tr_stored_block = _tr_stored_block;\n    exports._tr_flush_block  = _tr_flush_block;\n    exports._tr_tally = _tr_tally;\n    exports._tr_align = _tr_align;\n  },{\"../utils/common\":27}],39:[function(_dereq_,module,exports){\n    'use strict';\n\n\n    function ZStream() {\n      /* next input byte */\n      this.input = null; // JS specific, because we have no pointers\n      this.next_in = 0;\n      /* number of bytes available at input */\n      this.avail_in = 0;\n      /* total number of input bytes read so far */\n      this.total_in = 0;\n      /* next output byte should be put there */\n      this.output = null; // JS specific, because we have no pointers\n      this.next_out = 0;\n      /* remaining free space at output */\n      this.avail_out = 0;\n      /* total number of bytes output so far */\n      this.total_out = 0;\n      /* last error message, NULL if no error */\n      this.msg = ''/*Z_NULL*/;\n      /* not visible by applications */\n      this.state = null;\n      /* best guess about the data type: binary or text */\n      this.data_type = 2/*Z_UNKNOWN*/;\n      /* adler32 value of the uncompressed data */\n      this.adler = 0;\n    }\n\n    module.exports = ZStream;\n  },{}]},{},[9])\n(9)\n}));", "/**\r\n * Create a blob builder even when vendor prefixes exist\r\n */\r\n\r\nvar BlobBuilder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\r\n  typeof WebKitBlobBuilder !== 'undefined' ? WebKitBlobBuilder :\r\n  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\r\n  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : \r\n  false;\r\n\r\n/**\r\n * Check if Blob constructor is supported\r\n */\r\n\r\nvar blobSupported = (function() {\r\n  try {\r\n    var a = new Blob(['hi']);\r\n    return a.size === 2;\r\n  } catch(e) {\r\n    return false;\r\n  }\r\n})();\r\n\r\n/**\r\n * Check if Blob constructor supports ArrayBufferViews\r\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\r\n */\r\n\r\nvar blobSupportsArrayBufferView = blobSupported && (function() {\r\n  try {\r\n    var b = new Blob([new Uint8Array([1,2])]);\r\n    return b.size === 2;\r\n  } catch(e) {\r\n    return false;\r\n  }\r\n})();\r\n\r\n/**\r\n * Check if BlobBuilder is supported\r\n */\r\n\r\nvar blobBuilderSupported = BlobBuilder\r\n  && BlobBuilder.prototype.append\r\n  && BlobBuilder.prototype.getBlob;\r\n\r\n/**\r\n * Helper function that maps ArrayBufferViews to ArrayBuffers\r\n * Used by BlobBuilder constructor and old browsers that didn't\r\n * support it in the Blob constructor.\r\n */\r\n\r\nfunction mapArrayBufferViews(ary) {\r\n  return ary.map(function(chunk) {\r\n    if (chunk.buffer instanceof ArrayBuffer) {\r\n      var buf = chunk.buffer;\r\n\r\n      // if this is a subarray, make a copy so we only\r\n      // include the subarray region from the underlying buffer\r\n      if (chunk.byteLength !== buf.byteLength) {\r\n        var copy = new Uint8Array(chunk.byteLength);\r\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\r\n        buf = copy.buffer;\r\n      }\r\n\r\n      return buf;\r\n    }\r\n\r\n    return chunk;\r\n  });\r\n}\r\n\r\nfunction BlobBuilderConstructor(ary, options) {\r\n  options = options || {};\r\n\r\n  var bb = new BlobBuilder();\r\n  mapArrayBufferViews(ary).forEach(function(part) {\r\n    bb.append(part);\r\n  });\r\n\r\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\r\n}\r\n\r\nfunction BlobConstructor(ary, options) {\r\n  return new Blob(mapArrayBufferViews(ary), options || {});\r\n}\r\n\r\nif (typeof Blob !== 'undefined') {\r\n  BlobBuilderConstructor.prototype = Blob.prototype;\r\n  BlobConstructor.prototype = Blob.prototype;\r\n}\r\n\r\nexport default (function() {\r\n  if (blobSupported) {\r\n    return blobSupportsArrayBufferView ? Blob : BlobConstructor;\r\n  } else if (blobBuilderSupported) {\r\n    return BlobBuilderConstructor;\r\n  } else {\r\n    return undefined;\r\n  }\r\n})();\r\n", "/*\n* @Author: Jeffrey Wang\n* @Desc:  整理强大的 SheetJS 功能，依赖 XLSX.js 和 FileSaver\n* @Date:   2018-03-24 09:54:17\n* @Last Modified by:   Jeffrey Wang\n*/\nimport Blob from 'blob';\nimport FileSaver from 'file-saver';\nimport XLSX from './xlsx.js';\n\nfunction make_lay_excel(global) {\n  // default\n  if (!global) {\n    global = {};\n  }\n  global = {\n    /**\n     * 合并对象\n     */\n    objectExtend: function(target) {\n      if (typeof Object.assign != 'function') {\n        'use strict';\n        if (target == null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        target = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n          var source = arguments[index];\n          if (source != null) {\n            for (var key in source) {\n              if (Object.prototype.hasOwnProperty.call(source, key)) {\n                target[key] = source[key];\n              }\n            }\n          }\n        }\n        return target;\n      } else {\n        return Object.assign.apply(this, arguments)\n      }\n    },\n    /**\n     * 遍历对象\n     * @param object\n     * @param callback\n     */\n    each: function (object, callback) {\n      for (var k in object) {\n        if (object.hasOwnProperty(k)) {\n          if (Array.isArray(object)) {\n            k = parseInt(k);\n          }\n          callback.apply(this, [k, object[k]])\n        }\n      }\n    },\n    /**\n     * 兼容老版本的导出函数\n     * @param  {[type]} data     [description]\n     * @param  {[type]} filename [description]\n     * @param  {[type]} type     [description]\n     * @return {[type]}          [description]\n     */\n    downloadExl: function(data, filename, type) {\n      type = type ? type : 'xlsx';\n      this.exportExcel({sheet1: data}, filename+'.'+type, type, null);\n    },\n    /**\n     * 导出Excel并弹出下载框，具体使用方法和范围请参考文档\n     * @param data object\n     * @param  {[type]} filename [description]\n     * @param  {[type]} type     [description]\n     * @param  {[type]} opt      [description]\n     * @return {[type]}          [description]\n     */\n    exportExcel : function(data, filename, type, opt) {\n      type = type ? type : 'xlsx';\n      filename = filename ? filename : '导出数据.'+type;\n\n      // 创建一个 XLSX 对象\n      var wb = XLSX.utils.book_new();\n      // 1. 定义excel对的基本属性\n      var Props = {\n        Title: filename,\n        Subject: 'Export From web browser',\n        Author: \"excel.wj2015.com\",\n        Manager: '',\n        Company: '',\n        Category: '',\n        Keywords: '',\n        Comments: '',\n        LastAuthor: '',\n        CreatedData: new Date(),\n      };\n      opt && opt.Props && (Props = this.objectExtend(Props, opt.Props));\n      // 默认进行压缩\n      wb.compression = opt ? opt.compression : true\n      if(wb.compression !== false) {\n        wb.compression = true\n      }\n      wb.Props = Props;\n      // 特殊属性实现，比如合并单元格\n      var wbExtend = {\n        '!merges': null\n        ,'!margins': null\n        ,'!cols': null\n        ,'!rows': null\n        ,'!protect': null\n        ,'!autofilter': null\n      };\n      opt && opt.extend && (wbExtend = this.objectExtend(wbExtend, opt.extend));\n      // 清理空配置\n      for (var key in wbExtend) {\n        if (!wbExtend.hasOwnProperty(key)) {\n          continue;\n        }\n        if (!wbExtend[key]) {\n          delete wbExtend[key];\n        }\n      }\n\n      // 判断 data 如果是 sheet 级别数据，自动加 sheet1\n      if (Array.isArray(data)) {\n        data = {sheet1: data};\n      }\n\n      for(var sheet_name in data) {\n        if (!data.hasOwnProperty(sheet_name)) {\n          continue;\n        }\n        var content = data[sheet_name];\n        // 2. 设置sheet名称\n        wb.SheetNames.push(sheet_name);\n        // 3. 分配工作表对象到 sheet\n        var is_aoa = false;\n        if (content.length && content[0] && Array.isArray(content[0])) {\n          is_aoa = true;\n        }\n        if (is_aoa) {\n          ws = XLSX.utils.aoa_to_sheet(content);\n        } else {\n          var option = {};\n          if (content.length) {\n            option.headers = content.unshift();\n            option.skipHeader = true;\n            // 分离并重组样式\n            var splitRes = this.splitContent(content);\n          }\n          var ws = XLSX.utils.json_to_sheet(content, option);\n          // 合并样式\n          if (typeof splitRes !== 'undefined') {\n            this.mergeCellOpt(ws, splitRes.style);\n          }\n        }\n        // 特殊属性，支持单独设置某个sheet的属性\n        if (wbExtend[sheet_name]) {\n          this.objectExtend(ws, wbExtend[sheet_name]);\n        } else {\n          this.objectExtend(ws, wbExtend);\n        }\n        wb.Sheets[sheet_name] = ws;\n      };\n\n      var writeOpt = {bookType: type, type: 'binary', cellStyles: true, compression: wb.compression};\n      if (opt && typeof opt === 'object' && typeof opt.writeOpt === 'object' && opt.writeOpt) {\n        this.objectExtend(writeOpt, opt.writeOpt)\n      }\n      // 4. 输出工作表\n      var wbout = XLSX.write(wb, writeOpt);\n\n      // 5. 跨浏览器支持，采用 FileSaver 三方库\n      FileSaver.saveAs(new Blob([this.s2ab(wbout)], {type: \"application/octet-stream\"}), filename);\n    },\n    /**\n     * 分离内容和样式\n     * @param  {[type]} content [description]\n     * @return {[type]}         [description]\n     */\n    splitContent: function(content) {\n      var styleContent = {};\n      // 扫描每个单元格，如果是对象则等表格转换完毕后分离出来重新赋值\n      for (var line = 0; line < content.length; line++) {\n        var lineData = content[line];\n        var rowIndex = 0;\n        for (var row in lineData) {\n          if (!lineData.hasOwnProperty(row)) {\n            continue;\n          }\n          var rowData = lineData[row];\n          if (typeof rowData === 'object') {\n            // typeof null == object\n            if (rowData !== null) {\n              styleContent[this.numToTitle(rowIndex+1)+(parseInt(line)+1)] = rowData;\n            } else {\n              lineData[row] = '';\n            }\n          } else {\n            // JeffreyWang 2019-03-10针对 0 的hack处理\n            if (rowData === 0) {\n              rowData = {\n                v: '0',\n                s: {\n                  alignment: {\n                    horizontal: 'right'\n                  }\n                }\n              }\n            }\n            styleContent[this.numToTitle(rowIndex+1)+(parseInt(line)+1)] = rowData;\n          }\n          rowIndex++;\n        }\n      }\n      return {\n        content: content,\n        style: styleContent\n      };\n    },\n    /**\n     * 合并内容和样式\n     * @param  {[type]} ws    [description]\n     * @param  {[type]} style [description]\n     * @return {[type]}       [description]\n     */\n    mergeCellOpt: function(ws, style) {\n      for (var row in style) {\n        if (!style.hasOwnProperty(row)) {\n          continue;\n        }\n        var rowOpt = style[row];\n        if (ws[row]) {\n          // 其他属性做一个初始化\n          var otherOpt = ['t', 'w', 'f', 'r', 'h', 'c', 'z', 'l', 's'];\n          for (var i = 0; i < otherOpt.length; i++) {\n            ws[row][otherOpt[i]] = ws[row][otherOpt[i]];\n          }\n          this.objectExtend(ws[row], rowOpt);\n        }\n      }\n    },\n    /**\n     * 将table转换为JSON数据\n     * @param dom\n     */\n    tableToJson: function(dom) {\n      if (!dom || !dom.querySelectorAll) {\n        return [];\n      }\n\n      var that = this;\n      var handleLineNode = function (lineDomList) {\n        var res = [];\n        that.each(lineDomList, function (key, val) {\n          var line = [];\n          that.each(val.querySelectorAll('td,th'), function (k, v) {\n            line.push(v.innerText);\n          });\n          res.push(line);\n        })\n        return res;\n      };\n\n      var headDom = dom.querySelectorAll('thead > tr');\n      var bodyDom = dom.querySelectorAll('tbody > tr');\n      var head = handleLineNode(headDom);\n      var body = handleLineNode(bodyDom);\n\n      return {\n        head: head,\n        body: body\n      }\n    },\n    // 测试代码：\n    // \t\tfor(i=1;i<100;i++){var change = layui.excel.numToTitle(i);console.log(i, change, layui.excel.titleToNum(change));}\n    // numsToTitle备忘录提效\n    numsTitleCache: {},\n    // titleToTitle 备忘录提效\n    titleNumsCache: {},\n    /**\n     * 将数字(从1开始)转换为 A、B、C...AA、AB，内藏规律，解码为0代表A\n     * @param  num int [description]\n     * @return string     [description]\n     */\n    numToTitle: function(num) {\n      if (num <= 0) {\n        return '';\n      }\n      var remainder = num % 26;\n      var left = Math.floor(num / 26);\n      if (remainder === 0) {\n        remainder = 26;\n        left -= 1;\n      }\n      var ans = String.fromCharCode(64 + remainder);\n\n      if (left > 0) {\n        ans = this.numToTitle(left) + ans;\n      }\n      this.numsTitleCache[num] = ans;\n      this.titleNumsCache[ans] = num;\n      return ans;\n    },\n    /**\n     * 将A、B、AA、ABC转换为 1、2、3形式的数字\n     * @param  {[type]} title [description]\n     * @return {number}       [description]\n     */\n    titleToNum: function(title) {\n      if (this.titleNumsCache[title]) {\n        return this.titleNumsCache[title];\n      }\n      var len = title.length;\n      var total = 0;\n      for (var index in title) {\n        if (!title.hasOwnProperty(index)) {\n          continue;\n        }\n        var char = title[index];\n        var code = char.charCodeAt() - 64;\n        total += code * Math.pow(26, len - index - 1);\n      }\n      this.numsTitleCache[total] = title;\n      this.titleNumsCache[title] = total;\n      return total;\n    },\n    /**\n     * 获取数据范围内有效范围\n     * @param data array sheet级别的数据\n     * @param range 范围字符串，如 A1:C12，默认从左上角到右下角\n     */\n    getDefaultRange: function(data, range) {\n      // 以 rowIndex 为键，field 为值\n      var fieldKeys = Object.keys(data[0]);\n      var maxCol = fieldKeys.length - 1;\n      var maxRow = data.length -1;\n      // 默认 A1 ~ 右下角\n      var startPos = {c: 0, r: 0};\n      var endPos = {c: maxCol, r: maxRow};\n\n      if (range && typeof range === 'string') {\n        var rangeArr = range.split(':');\n        if (rangeArr[0].length) {\n          startPos = this.splitPosition(rangeArr[0]);\n        }\n        if (typeof rangeArr[1] !== 'undefined' && rangeArr[1] !== '') {\n          endPos = this.splitPosition(rangeArr[1]);\n        }\n      } else {\n        // pass\n      }\n      // position范围限制 - 考虑到特殊情况取消此限制\n      // startPos.c = startPos.c < maxCol ? startPos.c : maxCol;\n      // endPos.c = endPos.c < maxCol ? endPos.c : maxCol;\n      // startPos.r = startPos.r < maxRow ? startPos.r : maxRow;\n      // endPos.r = endPos.r < maxRow ? endPos.r : maxRow;\n\n      if (startPos.c > endPos.c) {\n        console.error('开始列不得大于结束列');\n      }\n      if (startPos.r > endPos.r) {\n        console.error('开始行不得大于结束行');\n      }\n      return {\n        startPos: startPos,\n        endPos: endPos,\n        fieldKeys: fieldKeys\n      }\n    },\n    /**\n     * 根据 startPos endPos 遍历设置单元格属性，支持 filter 回调处理\n     * @param data array sheet级别数据\n     * @param startPos object {c: 开始列索引, r: 开始行索引}\n     * @param endPos object {c: 结束列索引, r: 结束行索引}\n     * @param fieldKeys ['第一列属性Key', '第二列属性Key']\n     * @param config object {s: {样式}, v: '值'}\n     * @param filter callable 回调函数，入参 cell(原cell)，newCell(新cell),row(当前行),config(配置), currentRow(当前行索引), currentCol(当前列索引-数字),currentColKey(当前列索引-对象)\n     */\n    setCellStyle: function (data, startPos, endPos, fieldKeys, config, filter) {\n      // 遍历范围内的数据，进行样式设置，按从上到下从左到右按行遍历\n      for (var currentRow = startPos.r; currentRow <= endPos.r; currentRow++) {\n        for (var currentCol = startPos.c; currentCol <= endPos.c; currentCol++) {\n          // 如果有回调则执行回调判断，否则全部更新，如果遇到超出数据范围的，自动置空\n          var row = data[currentRow];\n          if (!row) {\n            row = {};\n            for (var key = 0; key < fieldKeys.length; key++) {\n              row[fieldKeys[key]] = '';\n            }\n            data[currentRow] = row;\n          }\n          var cell = row[fieldKeys[currentCol]];\n          var newCell = null;\n          if (cell === null || cell === undefined) {\n            cell = '';\n          }\n\n          // 手工合并（相同的则以当前函数config为准）\n          if (typeof cell === 'object') {\n            newCell = this.objectExtend(true, {}, cell, config);\n          } else {\n            newCell = this.objectExtend(true, {}, {v: cell}, config);\n          }\n\n          if (\n            typeof filter === 'function'\n          ) {\n            newCell = filter(cell, newCell, row, config, currentRow, currentCol, fieldKeys[currentCol]);\n          } else {\n          }\n          // 回写\n          data[currentRow][fieldKeys[currentCol]] = newCell;\n        }\n      }\n    },\n    /**\n     * 设置范围内环绕的边框\n     * @param data [sheet级别的数据]\n     * @param range [范围字符串，如 A1:C12，默认从左上角到右下角]\n     * @param config [border 上下左右属性配置信息（对角线的三个属性被下放到left/right/top/bottom下），如：{top: {xxx}, bottom: {}, left: {}, right: {}}]\n     */\n    setRoundBorder: function(data, range, config) {\n      if (typeof data !== 'object' || !data.length || !data[0] || !Object.keys(data[0]).length) {\n        return [];\n      }\n\n      var rangeObj = this.getDefaultRange(data, range);\n      var startPos = rangeObj.startPos;\n      var endPos = rangeObj.endPos;\n      var fieldKeys = rangeObj.fieldKeys;\n\n      // 顶部 border 属性取 config.top\n      this.setCellStyle(data, startPos, {\n        c: endPos.c,\n        r: startPos.r\n      }, fieldKeys, {\n        s: {\n          border: {\n            top: config.top,\n            diagonal: config.top.diagonal,\n            diagonalUp: config.top.diagonalUp,\n            diagonalDown: config.top.diagonalDown\n          }\n        }\n      })\n      // 右侧 border 属性取 config.right\n      this.setCellStyle(data, {\n        c: endPos.c,\n        r: startPos.r\n      }, endPos, fieldKeys, {\n        s: {\n          border: {\n            right: config.right,\n            diagonal: config.right.diagonal,\n            diagonalUp: config.right.diagonalUp,\n            diagonalDown: config.right.diagonalDown\n          }\n        }\n      })\n      // 底部 border 属性取 config.bottom\n      this.setCellStyle(data, {\n        c: startPos.c,\n        r: endPos.r\n      }, endPos, fieldKeys, {\n        s: {\n          border: {\n            bottom: config.bottom,\n            diagonal: config.bottom.diagonal,\n            diagonalUp: config.bottom.diagonalUp,\n            diagonalDown: config.bottom.diagonalDown\n          }\n        }\n      })\n      // 左侧 border 属性取 config.left\n      this.setCellStyle(data, startPos, {\n        c: startPos.c,\n        r: endPos.r\n      }, fieldKeys, {\n        s: {\n          border: {\n            left: config.left,\n            diagonal: config.left.diagonal,\n            diagonalUp: config.left.diagonalUp,\n            diagonalDown: config.left.diagonalDown\n          }\n        }\n      })\n    },\n    /**\n     * 批量设置单元格属性\n     * @param  {array} data     [sheet级别的数据]\n     * @param  {string} range\t\t [范围字符串，比如 A1:C12，开始位置默认 A1，结束位置默认整个表格右下角]\n     * @param  {object} config   [批量设置的单元格属性]\n     * @param  {function} filter   [回调函数，传递函数生效，返回值作为新的值（可用于过滤、规则替换样式等骚操作）]\n     * @return {array}          [重新渲染后的 sheet 数据]\n     */\n    setExportCellStyle: function(data, range, config, filter) {\n      if (typeof data !== 'object' || !data.length || !data[0] || !Object.keys(data[0]).length) {\n        return [];\n      }\n\n      var rangeObj = this.getDefaultRange(data, range);\n      var startPos = rangeObj.startPos;\n      var endPos = rangeObj.endPos;\n      var fieldKeys = rangeObj.fieldKeys;\n\n      this.setCellStyle(data, startPos, endPos, fieldKeys, config, filter);\n      return data;\n    },\n    /**\n     * 合并单元格快速生成配置的函数 传入 [ ['开始坐标 A1', '结束坐标 D2'], ['开始坐标 B2', '结束坐标 E3'] ]\n     * @param  {[type]} origin [description]\n     * @return {[type]}        [description]\n     */\n    makeMergeConfig: function(origin) {\n      var merge = [];\n      for (var index = 0; index < origin.length; index++) {\n        merge.push({\n          s: this.splitPosition(origin[index][0]),\n          e: this.splitPosition(origin[index][1])\n        });\n      }\n      return merge;\n    },\n    /**\n     * 自动生成列宽配置\n     * @param  {$ObjMap} data    [A、B、C的宽度映射]\n     * @param  {number} defaultNum [description]\n     * @return {$ObjMap}         [description]\n     */\n    makeColConfig: function(data, defaultNum) {\n      defaultNum = defaultNum > 0 ? defaultNum : 50;\n      // 将列的 ABC 转换为 index\n      var change = [];\n      var startIndex = 0;\n      for (var index in data) {\n        if (!data.hasOwnProperty(index)) {\n          continue;\n        }\n        var item = data[index];\n        if (index.match && index.match(/[A-Z]*/)) {\n          var currentIndex = this.titleToNum(index) - 1;\n          // 填充未配置的单元格\n          while (startIndex < currentIndex) {\n            change.push({wpx: defaultNum});\n            startIndex++;\n          }\n          startIndex = currentIndex+1;\n          change.push({wpx: item > 0 ? item : defaultNum});\n        }\n      };\n      return change;\n    },\n    /**\n     * 自动生成列高配置\n     * @param  {[type]} data    [description]\n     * @param  {[type]} defaultNum [description]\n     * @return {[type]}         [description]\n     */\n    makeRowConfig: function(data, defaultNum) {\n      defaultNum = defaultNum > 0 ? defaultNum : 10;\n      // 将列的 ABC 转换为 index\n      var change = [];\n      var startIndex = 0;\n      for (var index in data) {\n        if (!data.hasOwnProperty(index)) {\n          continue;\n        }\n        var item = data[index];\n        if (index.match && index.match(/[0-9]*/)) {\n          var currentIndex = parseInt(index) - 1;\n          // 填充未配置的行\n          while (startIndex < currentIndex) {\n            change.push({hpx: defaultNum});\n            startIndex++;\n          }\n          startIndex = currentIndex+1;\n          change.push({hpx: item > 0 ? item : defaultNum});\n        }\n      };\n      return change;\n    },\n    /**\n     * 将A1分离成 {c: 0, r: 0} 格式的数据\n     * @param  {string} pos [description]\n     * @return {{r: number, c: number}}     [description]\n     */\n    splitPosition: function(pos) {\n      var res = pos.match('^([A-Z]+)([0-9]+)$');\n      if (!res) {\n        return {c: 0, r: 0};\n      }\n      // 转换结果相比需要的结果需要减一转换\n      return {\n        c: this.titleToNum(res[1]) - 1,\n        r: parseInt(res[2]) - 1\n      }\n    },\n    /**\n     * 将二进制数据转为8位字节\n     * @param  {[type]} s [description]\n     * @return {[type]}   [description]\n     */\n    s2ab: function(s) {\n      var buf = new ArrayBuffer(s.length);\n      var view = new Uint8Array(buf);\n      for (var i = 0; i < s.length; i++) {\n        view[i] = s.charCodeAt(i) & 0xFF;\n      }\n      return buf;\n    },\n    /**\n     * 将导出的数据格式，转换为可以aoa导出的格式\n     * @return {[type]} [description]\n     */\n    filterDataToAoaData: function(filterData){\n      var aoaData = [];\n      this.each(filterData, function(index, item) {\n        var itemData = [];\n        for (var i in item) {\n          if (!item.hasOwnProperty(i)) {\n            continue;\n          }\n          itemData.push(item[i]);\n        }\n        aoaData.push(itemData);\n      });\n      return aoaData;\n    },\n    /**\n     * 梳理导出的数据，包括字段排序和多余数据过滤，具体功能请参见文档\n     * @param  {[type]} data   [需要梳理的数据]\n     * @param  {[type]} fields [支持数组和对象，用于映射关系和字段排序]\n     * @return {[type]}        [description]\n     */\n    filterExportData: function(data, fields) {\n      // PS:之所以不直接引用 data 节省内存，是因为担心如果 fields 可能存在如下情况： { \"id\": 'test_id', 'test_id': 'new_id' }，会导致处理异常\n      var exportData = [];\n      var true_fields = [];\n      // filed 支持两种模式，数组则单纯排序，对象则转换映射关系，为了统一处理，将数组转换为符合要求的映射关系对象\n      if (Array.isArray(fields)) {\n        for (var i = 0; i< fields.length; i++) {\n          true_fields[fields[i]] = fields[i];\n        }\n      } else {\n        true_fields = fields;\n      }\n      for (var i = 0; i < data.length; i++) {\n        var item = data[i];\n        exportData[i] = {};\n        for (var key in true_fields) {\n          if (!true_fields.hasOwnProperty(key)) {\n            continue;\n          }\n          var new_field_name = key;\n          var old_field_name = true_fields[key];\n          // 如果传入的是回调，则回调的值则为新值\n          if (typeof old_field_name === 'function' && old_field_name.apply) {\n            exportData[i][new_field_name] = old_field_name.apply(window, [item[new_field_name], item, data, i, new_field_name]);\n          } else {\n            if (typeof item[old_field_name] !== 'undefined') {\n              exportData[i][new_field_name] = item[old_field_name];\n            } else {\n              exportData[i][new_field_name] = '';\n            }\n          }\n        }\n      }\n      return exportData;\n    },\n    /**\n     * 梳理导入的数据，参数意义可参考 filterExportData\n     * @param  {[type]} data   [description]\n     * @param  {[type]} fields [description]\n     * @return {[type]}        [description]\n     */\n    filterImportData: function(data, fields) {\n      var that = this;\n      this.each(data, function(fileindex, xlsx) {\n        this.each(xlsx, function(sheetname, content) {\n          xlsx[sheetname] = that.filterExportData(content, fields);\n        });\n      });\n      return data;\n    },\n    /**\n     * 读取Excel，支持多文件多表格读取\n     * @param  {[type]}   files    [description]\n     * @param  {[type]}   opt      [description]\n     * @param  {Function} callback [description]\n     * @return {[type]}            [description]\n     */\n    importExcel: function(files, opt, callback) {\n      var option = {\n        header: 'A',\n        range: null,\n        fields: null,\n        checkMime: true,\n      };\n      this.objectExtend(option, opt);\n      var that = this;\n\n      if (files.length < 1) {\n        throw {code: 999, 'message': '传入文件为空'};\n      }\n      var supportReadMime = [\n        'application/vnd.ms-excel',\n        'application/msexcel',\n        'application/x-msexcel',\n        'application/x-ms-excel',\n        'application/x-excel',\n        'application/x-dos_ms_excel',\n        'application/xls',\n        'application/x-xls',\n        'application/vnd-xls',\n        'application/csv',\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n        'application/wps-office.xlsx',\n        ''\n      ];\n      if (option.checkMime) {\n        this.each(files, function(index, item) {\n          if (supportReadMime.indexOf(item.type) === -1) {\n            throw {code: 999, message: item.name+'（'+item.type+'）为不支持的文件类型'};\n          }\n        });\n      }\n      delete option.checkMime;\n\n      // 按照二进制读取\n      var data = {};\n      var book = {};\n      this.each(files, function(index, item) {\n        var reader = new FileReader();\n        if (!reader) {\n          throw {code: 999, message: '不支持FileReader，请更换更新的浏览器'};\n        }\n        // 读取excel表格对象\n        reader.onload = function(ev) {\n          var wb = XLSX.read(ev.target.result, {\n            type: 'binary'\n          });\n          var excelData = {};\n          that.each(wb.Sheets, function(sheet, sheetObj) {\n            // 全为空的去掉\n            if (wb.Sheets.hasOwnProperty(sheet)) {\n              var opt = {\n                header: option.header,\n                defval: ''\n              };\n              if (option.range) {\n                opt.range = option.range;\n              }\n              excelData[sheet] = XLSX.utils.sheet_to_json(sheetObj, opt);\n              // 支持梳理数据\n              if (option.fields) {\n                excelData[sheet] = that.filterExportData(excelData[sheet], option.fields);\n              }\n            }\n          });\n          data[index] = excelData;\n          book[index] = wb;\n          // 全部读取完毕才执行\n          if (parseInt(index) === files.length - 1) {\n            callback && callback.apply && callback.apply(window, [data, book]);\n          }\n        };\n        reader.readAsBinaryString(item);\n      });\n    },\n    /**\n     * EXCEL日期码转换为Date对象\n     * @param code double excel中存储的日期格式码\n     */\n    dateCodeToDate: function(code)\n    {\n      var obj = XLSX.SSF.parse_date_code(code);\n      return (new Date(obj.y + '-' + obj.m + '-' + obj.d + ' ' + obj.H + ':' + obj.M + ':' + obj.S));\n    },\n    /**\n     * 字符补全函数\n     * @param str\n     * @param maxLength\n     * @param padString\n     * @returns {*}\n     */\n    strPad: function(str, maxLength, padString) {\n      str = str + ''\n      if (typeof maxLength === 'undefined') {\n        maxLength = 2\n      }\n      if (typeof padString === 'undefined') {\n        padString = '0'\n      }\n\n      if (padString.length <= 0) {\n        console.error('strPad error');\n        return str;\n      }\n\n      if (str.length < maxLength) {\n        var repeatCount = Math.floor((maxLength - str.length) / padString.length);\n        var exceptStr = '';\n        if (repeatCount * padString.length < maxLength - 1) {\n          exceptStr = padString.substr(0, maxLength - 1 - repeatCount * padString.length)\n        }\n        return padString * repeatCount + exceptStr  + str\n      } else {\n        return str\n      }\n    },\n    /**\n     * 简易格式转换\n     * @param date Date 待转换时间\n     * @param format String 日期格式 YYYY-MM-DD HH:ii:ss\n     */\n    dateFormat: function(date, format)\n    {\n      if (!(date instanceof Date)) {\n        console.error(date+'需要是时间日期对象');\n      }\n      if (typeof format === 'undefined') {\n        format = 'YYYY-MM-DD HH:ii:ss';\n      }\n      // 制造 format 相关参数\n      var YYYY = date.getFullYear();\n      var YY = (YYYY + '').substr(2, 2)\n      var M = date.getMonth() + 1;\n      var MM = this.strPad(M, 2, '0');\n      var D = date.getDate();\n      var DD = this.strPad(D, 2, '0');\n      var H = date.getHours();\n      var HH = this.strPad(H, 2, '0');\n      var i = date.getMinutes();\n      var ii = this.strPad(i, 2, '0');\n      var s = date.getSeconds();\n      var ss = this.strPad(s, 2, '0');\n\n      var config = {\n        'YYYY': YYYY,\n        'YY': YY,\n        'MM': MM,\n        'M': M,\n        'DD': DD,\n        'D': D,\n        'HH': HH,\n        'H': H,\n        'ii': ii,\n        'i': i,\n        'ss': ss,\n        's': s\n      };\n\n      for (var key in config) {\n        if (!config.hasOwnProperty(key)) {\n          continue;\n        }\n\n        var reg = RegExp(key, 'g');\n\n        format = format.replace(reg, config[key]);\n      }\n\n      return format;\n    },\n    /**\n     * excel的日期CODE格式化\n     * @param code\n     * @param format\n     * @returns {*|void|string}\n     */\n    dateCodeFormat: function (code, format) {\n      return this.dateFormat(this.dateCodeToDate(code), format)\n    }\n  }\n  return global;\n}\n\nif (typeof layui !== 'undefined') {\n  layui.define([], function(exports){\n    exports('excel', make_lay_excel());\n  });\n}\n\nif(typeof exports !== 'undefined') {make_lay_excel(exports);}\nelse if(typeof module !== 'undefined' && module.exports) make_lay_excel(module.exports);\nelse if(typeof define === 'function' && define.amd) define('lay-excel', function() { return make_lay_excel(); });\n\nwindow.LAY_EXCEL = make_lay_excel();\n\nexport default make_lay_excel();\n", "/*! xlsx.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported XLSX */\n/*global global, exports, module, require:false, process:false, Buffer:false, ArrayBuffer:false */\n// jeffrey: jszip import\nimport JSZipSync from './jszip.js';\n\nvar XLSX = {};\nvar style_builder;\nfunction make_xlsx_lib(XLSX){\n  XLSX.version = '0.14.3';\n  var current_codepage = 1200, current_ansi = 1252;\n  /*global cptable:true, window */\n  if(typeof module !== \"undefined\" && typeof require !== 'undefined') {\n    if(typeof cptable === 'undefined') {\n      if(typeof global !== 'undefined') global.cptable = undefined;\n      else if(typeof window !== 'undefined') window.cptable = undefined;\n    }\n  }\n\n  var VALID_ANSI = [ 874, 932, 936, 949, 950 ];\n  for(var i = 0; i <= 8; ++i) VALID_ANSI.push(1250 + i);\n  /* ECMA-376 Part I 18.4.1 charset to codepage mapping */\n  var CS2CP = ({\n    0:    1252, /* ANSI */\n    1:   65001, /* DEFAULT */\n    2:   65001, /* SYMBOL */\n    77:  10000, /* MAC */\n    128:   932, /* SHIFTJIS */\n    129:   949, /* HANGUL */\n    130:  1361, /* JOHAB */\n    134:   936, /* GB2312 */\n    136:   950, /* CHINESEBIG5 */\n    161:  1253, /* GREEK */\n    162:  1254, /* TURKISH */\n    163:  1258, /* VIETNAMESE */\n    177:  1255, /* HEBREW */\n    178:  1256, /* ARABIC */\n    186:  1257, /* BALTIC */\n    204:  1251, /* RUSSIAN */\n    222:   874, /* THAI */\n    238:  1250, /* EASTEUROPE */\n    255:  1252, /* OEM */\n    69:   6969  /* MISC */\n  });\n\n  var set_ansi = function(cp) { if(VALID_ANSI.indexOf(cp) == -1) return; current_ansi = CS2CP[0] = cp; };\n  function reset_ansi() { set_ansi(1252); }\n\n  var set_cp = function(cp) { current_codepage = cp; set_ansi(cp); };\n  function reset_cp() { set_cp(1200); reset_ansi(); }\n\n  function char_codes(data) { var o = []; for(var i = 0, len = data.length; i < len; ++i) o[i] = data.charCodeAt(i); return o; }\n\n  function utf16leread(data) {\n    var o = [];\n    for(var i = 0; i < (data.length>>1); ++i) o[i] = String.fromCharCode(data.charCodeAt(2*i) + (data.charCodeAt(2*i+1)<<8));\n    return o.join(\"\");\n  }\n  function utf16beread(data) {\n    var o = [];\n    for(var i = 0; i < (data.length>>1); ++i) o[i] = String.fromCharCode(data.charCodeAt(2*i+1) + (data.charCodeAt(2*i)<<8));\n    return o.join(\"\");\n  }\n\n  var debom = function(data) {\n    var c1 = data.charCodeAt(0), c2 = data.charCodeAt(1);\n    if(c1 == 0xFF && c2 == 0xFE) return utf16leread(data.slice(2));\n    if(c1 == 0xFE && c2 == 0xFF) return utf16beread(data.slice(2));\n    if(c1 == 0xFEFF) return data.slice(1);\n    return data;\n  };\n\n  var _getchar = function _gc1(x) { return String.fromCharCode(x); };\n  if(typeof cptable !== 'undefined') {\n    set_cp = function(cp) { current_codepage = cp; };\n    debom = function(data) {\n      if(data.charCodeAt(0) === 0xFF && data.charCodeAt(1) === 0xFE) { return cptable.utils.decode(1200, char_codes(data.slice(2))); }\n      return data;\n    };\n    _getchar = function _gc2(x) {\n      if(current_codepage === 1200) return String.fromCharCode(x);\n      return cptable.utils.decode(current_codepage, [x&255,x>>8])[0];\n    };\n  }\n  var DENSE = null;\n  var DIF_XL = true;\n  var Base64 = (function make_b64(){\n    var map = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n    return {\n      encode: function(input) {\n        var o = \"\";\n        var c1=0, c2=0, c3=0, e1=0, e2=0, e3=0, e4=0;\n        for(var i = 0; i < input.length; ) {\n          c1 = input.charCodeAt(i++);\n          e1 = (c1 >> 2);\n\n          c2 = input.charCodeAt(i++);\n          e2 = ((c1 & 3) << 4) | (c2 >> 4);\n\n          c3 = input.charCodeAt(i++);\n          e3 = ((c2 & 15) << 2) | (c3 >> 6);\n          e4 = (c3 & 63);\n          if (isNaN(c2)) { e3 = e4 = 64; }\n          else if (isNaN(c3)) { e4 = 64; }\n          o += map.charAt(e1) + map.charAt(e2) + map.charAt(e3) + map.charAt(e4);\n        }\n        return o;\n      },\n      decode: function b64_decode(input) {\n        var o = \"\";\n        var c1=0, c2=0, c3=0, e1=0, e2=0, e3=0, e4=0;\n        input = input.replace(/[^\\w\\+\\/\\=]/g, \"\");\n        for(var i = 0; i < input.length;) {\n          e1 = map.indexOf(input.charAt(i++));\n          e2 = map.indexOf(input.charAt(i++));\n          c1 = (e1 << 2) | (e2 >> 4);\n          o += String.fromCharCode(c1);\n\n          e3 = map.indexOf(input.charAt(i++));\n          c2 = ((e2 & 15) << 4) | (e3 >> 2);\n          if (e3 !== 64) { o += String.fromCharCode(c2); }\n\n          e4 = map.indexOf(input.charAt(i++));\n          c3 = ((e3 & 3) << 6) | e4;\n          if (e4 !== 64) { o += String.fromCharCode(c3); }\n        }\n        return o;\n      }\n    };\n  })();\n  var has_buf = (typeof Buffer !== 'undefined' && typeof process !== 'undefined' && typeof process.versions !== 'undefined' && !!process.versions.node);\n\n  var Buffer_from = function(){};\n\n  if(typeof Buffer !== 'undefined') {\n    var nbfs = !Buffer.from;\n    if(!nbfs) try { Buffer.from(\"foo\", \"utf8\"); } catch(e) { nbfs = true; }\n    Buffer_from = nbfs ? function(buf, enc) { return (enc) ? new Buffer(buf, enc) : new Buffer(buf); } : Buffer.from.bind(Buffer);\n    // $FlowIgnore\n    if(!Buffer.alloc) Buffer.alloc = function(n) { return new Buffer(n); };\n    // $FlowIgnore\n    if(!Buffer.allocUnsafe) Buffer.allocUnsafe = function(n) { return new Buffer(n); };\n  }\n\n  function new_raw_buf(len) {\n    /* jshint -W056 */\n    return has_buf ? Buffer.alloc(len) : new Array(len);\n    /* jshint +W056 */\n  }\n\n  function new_unsafe_buf(len) {\n    /* jshint -W056 */\n    return has_buf ? Buffer.allocUnsafe(len) : new Array(len);\n    /* jshint +W056 */\n  }\n\n  var s2a = function s2a(s) {\n    // $FlowIgnore\n    if(has_buf) return Buffer_from(s, \"binary\");\n    return s.split(\"\").map(function(x){ return x.charCodeAt(0) & 0xff; });\n  };\n\n  function s2ab(s) {\n    if(typeof ArrayBuffer === 'undefined') return s2a(s);\n    var buf = new ArrayBuffer(s.length), view = new Uint8Array(buf);\n    for (var i=0; i!=s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\n    return buf;\n  }\n\n  function a2s(data) {\n    if(Array.isArray(data)) return data.map(_chr).join(\"\");\n    var o = []; for(var i = 0; i < data.length; ++i) o[i] = _chr(data[i]); return o.join(\"\");\n  }\n\n  function a2u(data) {\n    if(typeof Uint8Array === 'undefined') throw new Error(\"Unsupported\");\n    return new Uint8Array(data);\n  }\n\n  function ab2a(data) {\n    if(typeof ArrayBuffer == 'undefined') throw new Error(\"Unsupported\");\n    if(data instanceof ArrayBuffer) return ab2a(new Uint8Array(data));\n    var o = new Array(data.length);\n    for(var i = 0; i < data.length; ++i) o[i] = data[i];\n    return o;\n  }\n\n  var bconcat = function(bufs) { return [].concat.apply([], bufs); };\n\n  var chr0 = /\\u0000/g, chr1 = /[\\u0001-\\u0006]/g;\n  /* ssf.js (C) 2013-present SheetJS -- http://sheetjs.com */\n  /*jshint -W041 */\n  var SSF = ({});\n  var make_ssf = function make_ssf(SSF){\n    SSF.version = '0.10.2';\n    function _strrev(x) { var o = \"\", i = x.length-1; while(i>=0) o += x.charAt(i--); return o; }\n    function fill(c,l) { var o = \"\"; while(o.length < l) o+=c; return o; }\n    function pad0(v,d){var t=\"\"+v; return t.length>=d?t:fill('0',d-t.length)+t;}\n    function pad_(v,d){var t=\"\"+v;return t.length>=d?t:fill(' ',d-t.length)+t;}\n    function rpad_(v,d){var t=\"\"+v; return t.length>=d?t:t+fill(' ',d-t.length);}\n    function pad0r1(v,d){var t=\"\"+Math.round(v); return t.length>=d?t:fill('0',d-t.length)+t;}\n    function pad0r2(v,d){var t=\"\"+v; return t.length>=d?t:fill('0',d-t.length)+t;}\n    var p2_32 = Math.pow(2,32);\n    function pad0r(v,d){if(v>p2_32||v<-p2_32) return pad0r1(v,d); var i = Math.round(v); return pad0r2(i,d); }\n    function isgeneral(s, i) { i = i || 0; return s.length >= 7 + i && (s.charCodeAt(i)|32) === 103 && (s.charCodeAt(i+1)|32) === 101 && (s.charCodeAt(i+2)|32) === 110 && (s.charCodeAt(i+3)|32) === 101 && (s.charCodeAt(i+4)|32) === 114 && (s.charCodeAt(i+5)|32) === 97 && (s.charCodeAt(i+6)|32) === 108; }\n    var days = [\n      ['Sun', 'Sunday'],\n      ['Mon', 'Monday'],\n      ['Tue', 'Tuesday'],\n      ['Wed', 'Wednesday'],\n      ['Thu', 'Thursday'],\n      ['Fri', 'Friday'],\n      ['Sat', 'Saturday']\n    ];\n    var months = [\n      ['J', 'Jan', 'January'],\n      ['F', 'Feb', 'February'],\n      ['M', 'Mar', 'March'],\n      ['A', 'Apr', 'April'],\n      ['M', 'May', 'May'],\n      ['J', 'Jun', 'June'],\n      ['J', 'Jul', 'July'],\n      ['A', 'Aug', 'August'],\n      ['S', 'Sep', 'September'],\n      ['O', 'Oct', 'October'],\n      ['N', 'Nov', 'November'],\n      ['D', 'Dec', 'December']\n    ];\n    function init_table(t) {\n      t[0]=  'General';\n      t[1]=  '0';\n      t[2]=  '0.00';\n      t[3]=  '#,##0';\n      t[4]=  '#,##0.00';\n      t[9]=  '0%';\n      t[10]= '0.00%';\n      t[11]= '0.00E+00';\n      t[12]= '# ?/?';\n      t[13]= '# ??/??';\n      t[14]= 'm/d/yy';\n      t[15]= 'd-mmm-yy';\n      t[16]= 'd-mmm';\n      t[17]= 'mmm-yy';\n      t[18]= 'h:mm AM/PM';\n      t[19]= 'h:mm:ss AM/PM';\n      t[20]= 'h:mm';\n      t[21]= 'h:mm:ss';\n      t[22]= 'm/d/yy h:mm';\n      t[37]= '#,##0 ;(#,##0)';\n      t[38]= '#,##0 ;[Red](#,##0)';\n      t[39]= '#,##0.00;(#,##0.00)';\n      t[40]= '#,##0.00;[Red](#,##0.00)';\n      t[45]= 'mm:ss';\n      t[46]= '[h]:mm:ss';\n      t[47]= 'mmss.0';\n      t[48]= '##0.0E+0';\n      t[49]= '@';\n      t[56]= '\"上午/下午 \"hh\"時\"mm\"分\"ss\"秒 \"';\n      t[65535]= 'General';\n    }\n\n    var table_fmt = {};\n    init_table(table_fmt);\n    function frac(x, D, mixed) {\n      var sgn = x < 0 ? -1 : 1;\n      var B = x * sgn;\n      var P_2 = 0, P_1 = 1, P = 0;\n      var Q_2 = 1, Q_1 = 0, Q = 0;\n      var A = Math.floor(B);\n      while(Q_1 < D) {\n        A = Math.floor(B);\n        P = A * P_1 + P_2;\n        Q = A * Q_1 + Q_2;\n        if((B - A) < 0.00000005) break;\n        B = 1 / (B - A);\n        P_2 = P_1; P_1 = P;\n        Q_2 = Q_1; Q_1 = Q;\n      }\n      if(Q > D) { if(Q_1 > D) { Q = Q_2; P = P_2; } else { Q = Q_1; P = P_1; } }\n      if(!mixed) return [0, sgn * P, Q];\n      var q = Math.floor(sgn * P/Q);\n      return [q, sgn*P - q*Q, Q];\n    }\n    function parse_date_code(v,opts,b2) {\n      if(v > 2958465 || v < 0) return null;\n      var date = (v|0), time = Math.floor(86400 * (v - date)), dow=0;\n      var dout=[];\n      var out={D:date, T:time, u:86400*(v-date)-time,y:0,m:0,d:0,H:0,M:0,S:0,q:0};\n      if(Math.abs(out.u) < 1e-6) out.u = 0;\n      if(opts && opts.date1904) date += 1462;\n      if(out.u > 0.9999) {\n        out.u = 0;\n        if(++time == 86400) { out.T = time = 0; ++date; ++out.D; }\n      }\n      if(date === 60) {dout = b2 ? [1317,10,29] : [1900,2,29]; dow=3;}\n      else if(date === 0) {dout = b2 ? [1317,8,29] : [1900,1,0]; dow=6;}\n      else {\n        if(date > 60) --date;\n        /* 1 = Jan 1 1900 in Gregorian */\n        var d = new Date(1900, 0, 1);\n        d.setDate(d.getDate() + date - 1);\n        dout = [d.getFullYear(), d.getMonth()+1,d.getDate()];\n        dow = d.getDay();\n        if(date < 60) dow = (dow + 6) % 7;\n        if(b2) dow = fix_hijri(d, dout);\n      }\n      out.y = dout[0]; out.m = dout[1]; out.d = dout[2];\n      out.S = time % 60; time = Math.floor(time / 60);\n      out.M = time % 60; time = Math.floor(time / 60);\n      out.H = time;\n      out.q = dow;\n      return out;\n    }\n    SSF.parse_date_code = parse_date_code;\n    var basedate = new Date(1899, 11, 31, 0, 0, 0);\n    var dnthresh = basedate.getTime();\n    var base1904 = new Date(1900, 2, 1, 0, 0, 0);\n    function datenum_local(v, date1904) {\n      var epoch = v.getTime();\n      if(date1904) epoch -= 1461*24*60*60*1000;\n      else if(v >= base1904) epoch += 24*60*60*1000;\n      return (epoch - (dnthresh + (v.getTimezoneOffset() - basedate.getTimezoneOffset()) * 60000)) / (24 * 60 * 60 * 1000);\n    }\n    function general_fmt_int(v) { return v.toString(10); }\n    SSF._general_int = general_fmt_int;\n    var general_fmt_num = (function make_general_fmt_num() {\n      var gnr1 = /\\.(\\d*[1-9])0+$/, gnr2 = /\\.0*$/, gnr4 = /\\.(\\d*[1-9])0+/, gnr5 = /\\.0*[Ee]/, gnr6 = /(E[+-])(\\d)$/;\n      function gfn2(v) {\n        var w = (v<0?12:11);\n        var o = gfn5(v.toFixed(12)); if(o.length <= w) return o;\n        o = v.toPrecision(10); if(o.length <= w) return o;\n        return v.toExponential(5);\n      }\n      function gfn3(v) {\n        var o = v.toFixed(11).replace(gnr1,\".$1\");\n        if(o.length > (v<0?12:11)) o = v.toPrecision(6);\n        return o;\n      }\n      function gfn4(o) {\n        for(var i = 0; i != o.length; ++i) if((o.charCodeAt(i) | 0x20) === 101) return o.replace(gnr4,\".$1\").replace(gnr5,\"E\").replace(\"e\",\"E\").replace(gnr6,\"$10$2\");\n        return o;\n      }\n      function gfn5(o) {\n        return o.indexOf(\".\") > -1 ? o.replace(gnr2,\"\").replace(gnr1,\".$1\") : o;\n      }\n      return function general_fmt_num(v) {\n        var V = Math.floor(Math.log(Math.abs(v))*Math.LOG10E), o;\n        if(V >= -4 && V <= -1) o = v.toPrecision(10+V);\n        else if(Math.abs(V) <= 9) o = gfn2(v);\n        else if(V === 10) o = v.toFixed(10).substr(0,12);\n        else o = gfn3(v);\n        return gfn5(gfn4(o));\n      };})();\n    SSF._general_num = general_fmt_num;\n    function general_fmt(v, opts) {\n      switch(typeof v) {\n        case 'string': return v;\n        case 'boolean': return v ? \"TRUE\" : \"FALSE\";\n        case 'number': return (v|0) === v ? general_fmt_int(v) : general_fmt_num(v);\n        case 'undefined': return \"\";\n        case 'object':\n          if(v == null) return \"\";\n          if(v instanceof Date) return format(14, datenum_local(v, opts && opts.date1904), opts);\n      }\n      throw new Error(\"unsupported value in General format: \" + v);\n    }\n    SSF._general = general_fmt;\n    function fix_hijri() { return 0; }\n    /*jshint -W086 */\n    function write_date(type, fmt, val, ss0) {\n      var o=\"\", ss=0, tt=0, y = val.y, out, outl = 0;\n      switch(type) {\n        case 98: /* 'b' buddhist year */\n          y = val.y + 543;\n        /* falls through */\n        case 121: /* 'y' year */\n          switch(fmt.length) {\n            case 1: case 2: out = y % 100; outl = 2; break;\n            default: out = y % 10000; outl = 4; break;\n          } break;\n        case 109: /* 'm' month */\n          switch(fmt.length) {\n            case 1: case 2: out = val.m; outl = fmt.length; break;\n            case 3: return months[val.m-1][1];\n            case 5: return months[val.m-1][0];\n            default: return months[val.m-1][2];\n          } break;\n        case 100: /* 'd' day */\n          switch(fmt.length) {\n            case 1: case 2: out = val.d; outl = fmt.length; break;\n            case 3: return days[val.q][0];\n            default: return days[val.q][1];\n          } break;\n        case 104: /* 'h' 12-hour */\n          switch(fmt.length) {\n            case 1: case 2: out = 1+(val.H+11)%12; outl = fmt.length; break;\n            default: throw 'bad hour format: ' + fmt;\n          } break;\n        case 72: /* 'H' 24-hour */\n          switch(fmt.length) {\n            case 1: case 2: out = val.H; outl = fmt.length; break;\n            default: throw 'bad hour format: ' + fmt;\n          } break;\n        case 77: /* 'M' minutes */\n          switch(fmt.length) {\n            case 1: case 2: out = val.M; outl = fmt.length; break;\n            default: throw 'bad minute format: ' + fmt;\n          } break;\n        case 115: /* 's' seconds */\n          if(fmt != 's' && fmt != 'ss' && fmt != '.0' && fmt != '.00' && fmt != '.000') throw 'bad second format: ' + fmt;\n          if(val.u === 0 && (fmt == \"s\" || fmt == \"ss\")) return pad0(val.S, fmt.length);\n          if(ss0 >= 2) tt = ss0 === 3 ? 1000 : 100;\n          else tt = ss0 === 1 ? 10 : 1;\n          ss = Math.round((tt)*(val.S + val.u));\n          if(ss >= 60*tt) ss = 0;\n          if(fmt === 's') return ss === 0 ? \"0\" : \"\"+ss/tt;\n          o = pad0(ss,2 + ss0);\n          if(fmt === 'ss') return o.substr(0,2);\n          return \".\" + o.substr(2,fmt.length-1);\n        case 90: /* 'Z' absolute time */\n          switch(fmt) {\n            case '[h]': case '[hh]': out = val.D*24+val.H; break;\n            case '[m]': case '[mm]': out = (val.D*24+val.H)*60+val.M; break;\n            case '[s]': case '[ss]': out = ((val.D*24+val.H)*60+val.M)*60+Math.round(val.S+val.u); break;\n            default: throw 'bad abstime format: ' + fmt;\n          } outl = fmt.length === 3 ? 1 : 2; break;\n        case 101: /* 'e' era */\n          out = y; outl = 1;\n      }\n      if(outl > 0) return pad0(out, outl); else return \"\";\n    }\n    /*jshint +W086 */\n    function commaify(s) {\n      var w = 3;\n      if(s.length <= w) return s;\n      var j = (s.length % w), o = s.substr(0,j);\n      for(; j!=s.length; j+=w) o+=(o.length > 0 ? \",\" : \"\") + s.substr(j,w);\n      return o;\n    }\n    var write_num = (function make_write_num(){\n      var pct1 = /%/g;\n      function write_num_pct(type, fmt, val){\n        var sfmt = fmt.replace(pct1,\"\"), mul = fmt.length - sfmt.length;\n        return write_num(type, sfmt, val * Math.pow(10,2*mul)) + fill(\"%\",mul);\n      }\n      function write_num_cm(type, fmt, val){\n        var idx = fmt.length - 1;\n        while(fmt.charCodeAt(idx-1) === 44) --idx;\n        return write_num(type, fmt.substr(0,idx), val / Math.pow(10,3*(fmt.length-idx)));\n      }\n      function write_num_exp(fmt, val){\n        var o;\n        var idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n        if(fmt.match(/^#+0.0E\\+0$/)) {\n          if(val == 0) return \"0.0E+0\";\n          else if(val < 0) return \"-\" + write_num_exp(fmt, -val);\n          var period = fmt.indexOf(\".\"); if(period === -1) period=fmt.indexOf('E');\n          var ee = Math.floor(Math.log(val)*Math.LOG10E)%period;\n          if(ee < 0) ee += period;\n          o = (val/Math.pow(10,ee)).toPrecision(idx+1+(period+ee)%period);\n          if(o.indexOf(\"e\") === -1) {\n            var fakee = Math.floor(Math.log(val)*Math.LOG10E);\n            if(o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length+ee);\n            else o += \"E+\" + (fakee - ee);\n            while(o.substr(0,2) === \"0.\") {\n              o = o.charAt(0) + o.substr(2,period) + \".\" + o.substr(2+period);\n              o = o.replace(/^0+([1-9])/,\"$1\").replace(/^0+\\./,\"0.\");\n            }\n            o = o.replace(/\\+-/,\"-\");\n          }\n          o = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/,function($$,$1,$2,$3) { return $1 + $2 + $3.substr(0,(period+ee)%period) + \".\" + $3.substr(ee) + \"E\"; });\n        } else o = val.toExponential(idx);\n        if(fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0,o.length-1) + \"0\" + o.charAt(o.length-1);\n        if(fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/,\"e\");\n        return o.replace(\"e\",\"E\");\n      }\n      var frac1 = /# (\\?+)( ?)\\/( ?)(\\d+)/;\n      function write_num_f1(r, aval, sign) {\n        var den = parseInt(r[4],10), rr = Math.round(aval * den), base = Math.floor(rr/den);\n        var myn = (rr - base*den), myd = den;\n        return sign + (base === 0 ? \"\" : \"\"+base) + \" \" + (myn === 0 ? fill(\" \", r[1].length + 1 + r[4].length) : pad_(myn,r[1].length) + r[2] + \"/\" + r[3] + pad0(myd,r[4].length));\n      }\n      function write_num_f2(r, aval, sign) {\n        return sign + (aval === 0 ? \"\" : \"\"+aval) + fill(\" \", r[1].length + 2 + r[4].length);\n      }\n      var dec1 = /^#*0*\\.([0#]+)/;\n      var closeparen = /\\).*[0#]/;\n      var phone = /\\(###\\) ###\\\\?-####/;\n      function hashq(str) {\n        var o = \"\", cc;\n        for(var i = 0; i != str.length; ++i) switch((cc=str.charCodeAt(i))) {\n          case 35: break;\n          case 63: o+= \" \"; break;\n          case 48: o+= \"0\"; break;\n          default: o+= String.fromCharCode(cc);\n        }\n        return o;\n      }\n      function rnd(val, d) { var dd = Math.pow(10,d); return \"\"+(Math.round(val * dd)/dd); }\n      function dec(val, d) {\n        if (d < ('' + Math.round((val-Math.floor(val))*Math.pow(10,d))).length) {\n          return 0;\n        }\n        return Math.round((val-Math.floor(val))*Math.pow(10,d));\n      }\n      function carry(val, d) {\n        if (d < ('' + Math.round((val-Math.floor(val))*Math.pow(10,d))).length) {\n          return 1;\n        }\n        return 0;\n      }\n      function flr(val) { if(val < 2147483647 && val > -2147483648) return \"\"+(val >= 0 ? (val|0) : (val-1|0)); return \"\"+Math.floor(val); }\n      function write_num_flt(type, fmt, val) {\n        if(type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n          var ffmt = fmt.replace(/\\( */,\"\").replace(/ \\)/,\"\").replace(/\\)/,\"\");\n          if(val >= 0) return write_num_flt('n', ffmt, val);\n          return '(' + write_num_flt('n', ffmt, -val) + ')';\n        }\n        if(fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm(type, fmt, val);\n        if(fmt.indexOf('%') !== -1) return write_num_pct(type, fmt, val);\n        if(fmt.indexOf('E') !== -1) return write_num_exp(fmt, val);\n        if(fmt.charCodeAt(0) === 36) return \"$\"+write_num_flt(type,fmt.substr(fmt.charAt(1)==' '?2:1),val);\n        var o;\n        var r, ri, ff, aval = Math.abs(val), sign = val < 0 ? \"-\" : \"\";\n        if(fmt.match(/^00+$/)) return sign + pad0r(aval,fmt.length);\n        if(fmt.match(/^[#?]+$/)) {\n          o = pad0r(val,0); if(o === \"0\") o = \"\";\n          return o.length > fmt.length ? o : hashq(fmt.substr(0,fmt.length-o.length)) + o;\n        }\n        if((r = fmt.match(frac1))) return write_num_f1(r, aval, sign);\n        if(fmt.match(/^#+0+$/)) return sign + pad0r(aval,fmt.length - fmt.indexOf(\"0\"));\n        if((r = fmt.match(dec1))) {\n          o = rnd(val, r[1].length).replace(/^([^\\.]+)$/,\"$1.\"+hashq(r[1])).replace(/\\.$/,\".\"+hashq(r[1])).replace(/\\.(\\d*)$/,function($$, $1) { return \".\" + $1 + fill(\"0\", hashq(r[1]).length-$1.length); });\n          return fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./,\".\");\n        }\n        fmt = fmt.replace(/^#+([0.])/, \"$1\");\n        if((r = fmt.match(/^(0*)\\.(#*)$/))) {\n          return sign + rnd(aval, r[2].length).replace(/\\.(\\d*[1-9])0*$/,\".$1\").replace(/^(-?\\d*)$/,\"$1.\").replace(/^0\\./,r[1].length?\"0.\":\".\");\n        }\n        if((r = fmt.match(/^#{1,3},##0(\\.?)$/))) return sign + commaify(pad0r(aval,0));\n        if((r = fmt.match(/^#,##0\\.([#0]*0)$/))) {\n          return val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(\"\"+(Math.floor(val) + carry(val, r[1].length))) + \".\" + pad0(dec(val, r[1].length),r[1].length);\n        }\n        if((r = fmt.match(/^#,#*,#0/))) return write_num_flt(type,fmt.replace(/^#,#*,/,\"\"),val);\n        if((r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/))) {\n          o = _strrev(write_num_flt(type, fmt.replace(/[\\\\-]/g,\"\"), val));\n          ri = 0;\n          return _strrev(_strrev(fmt.replace(/\\\\/g,\"\")).replace(/[0#]/g,function(x){return ri<o.length?o.charAt(ri++):x==='0'?'0':\"\";}));\n        }\n        if(fmt.match(phone)) {\n          o = write_num_flt(type, \"##########\", val);\n          return \"(\" + o.substr(0,3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n        }\n        var oa = \"\";\n        if((r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n          ri = Math.min(r[4].length,7);\n          ff = frac(aval, Math.pow(10,ri)-1, false);\n          o = \"\" + sign;\n          oa = write_num(\"n\", r[1], ff[1]);\n          if(oa.charAt(oa.length-1) == \" \") oa = oa.substr(0,oa.length-1) + \"0\";\n          o += oa + r[2] + \"/\" + r[3];\n          oa = rpad_(ff[2],ri);\n          if(oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length-oa.length)) + oa;\n          o += oa;\n          return o;\n        }\n        if((r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n          ri = Math.min(Math.max(r[1].length, r[4].length),7);\n          ff = frac(aval, Math.pow(10,ri)-1, true);\n          return sign + (ff[0]||(ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1],ri) + r[2] + \"/\" + r[3] + rpad_(ff[2],ri): fill(\" \", 2*ri+1 + r[2].length + r[3].length));\n        }\n        if((r = fmt.match(/^[#0?]+$/))) {\n          o = pad0r(val, 0);\n          if(fmt.length <= o.length) return o;\n          return hashq(fmt.substr(0,fmt.length-o.length)) + o;\n        }\n        if((r = fmt.match(/^([#0?]+)\\.([#0]+)$/))) {\n          o = \"\" + val.toFixed(Math.min(r[2].length,10)).replace(/([^0])0+$/,\"$1\");\n          ri = o.indexOf(\".\");\n          var lres = fmt.indexOf(\".\") - ri, rres = fmt.length - o.length - lres;\n          return hashq(fmt.substr(0,lres) + o + fmt.substr(fmt.length-rres));\n        }\n        if((r = fmt.match(/^00,000\\.([#0]*0)$/))) {\n          ri = dec(val, r[1].length);\n          return val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(flr(val)).replace(/^\\d,\\d{3}$/,\"0$&\").replace(/^\\d*$/,function($$) { return \"00,\" + ($$.length < 3 ? pad0(0,3-$$.length) : \"\") + $$; }) + \".\" + pad0(ri,r[1].length);\n        }\n        switch(fmt) {\n          case \"###,##0.00\": return write_num_flt(type, \"#,##0.00\", val);\n          case \"###,###\":\n          case \"##,###\":\n          case \"#,###\": var x = commaify(pad0r(aval,0)); return x !== \"0\" ? sign + x : \"\";\n          case \"###,###.00\": return write_num_flt(type, \"###,##0.00\",val).replace(/^0\\./,\".\");\n          case \"#,###.00\": return write_num_flt(type, \"#,##0.00\",val).replace(/^0\\./,\".\");\n          default:\n        }\n        throw new Error(\"unsupported format |\" + fmt + \"|\");\n      }\n      function write_num_cm2(type, fmt, val){\n        var idx = fmt.length - 1;\n        while(fmt.charCodeAt(idx-1) === 44) --idx;\n        return write_num(type, fmt.substr(0,idx), val / Math.pow(10,3*(fmt.length-idx)));\n      }\n      function write_num_pct2(type, fmt, val){\n        var sfmt = fmt.replace(pct1,\"\"), mul = fmt.length - sfmt.length;\n        return write_num(type, sfmt, val * Math.pow(10,2*mul)) + fill(\"%\",mul);\n      }\n      function write_num_exp2(fmt, val){\n        var o;\n        var idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n        if(fmt.match(/^#+0.0E\\+0$/)) {\n          if(val == 0) return \"0.0E+0\";\n          else if(val < 0) return \"-\" + write_num_exp2(fmt, -val);\n          var period = fmt.indexOf(\".\"); if(period === -1) period=fmt.indexOf('E');\n          var ee = Math.floor(Math.log(val)*Math.LOG10E)%period;\n          if(ee < 0) ee += period;\n          o = (val/Math.pow(10,ee)).toPrecision(idx+1+(period+ee)%period);\n          if(!o.match(/[Ee]/)) {\n            var fakee = Math.floor(Math.log(val)*Math.LOG10E);\n            if(o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length+ee);\n            else o += \"E+\" + (fakee - ee);\n            o = o.replace(/\\+-/,\"-\");\n          }\n          o = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/,function($$,$1,$2,$3) { return $1 + $2 + $3.substr(0,(period+ee)%period) + \".\" + $3.substr(ee) + \"E\"; });\n        } else o = val.toExponential(idx);\n        if(fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0,o.length-1) + \"0\" + o.charAt(o.length-1);\n        if(fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/,\"e\");\n        return o.replace(\"e\",\"E\");\n      }\n      function write_num_int(type, fmt, val) {\n        if(type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n          var ffmt = fmt.replace(/\\( */,\"\").replace(/ \\)/,\"\").replace(/\\)/,\"\");\n          if(val >= 0) return write_num_int('n', ffmt, val);\n          return '(' + write_num_int('n', ffmt, -val) + ')';\n        }\n        if(fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm2(type, fmt, val);\n        if(fmt.indexOf('%') !== -1) return write_num_pct2(type, fmt, val);\n        if(fmt.indexOf('E') !== -1) return write_num_exp2(fmt, val);\n        if(fmt.charCodeAt(0) === 36) return \"$\"+write_num_int(type,fmt.substr(fmt.charAt(1)==' '?2:1),val);\n        var o;\n        var r, ri, ff, aval = Math.abs(val), sign = val < 0 ? \"-\" : \"\";\n        if(fmt.match(/^00+$/)) return sign + pad0(aval,fmt.length);\n        if(fmt.match(/^[#?]+$/)) {\n          o = (\"\"+val); if(val === 0) o = \"\";\n          return o.length > fmt.length ? o : hashq(fmt.substr(0,fmt.length-o.length)) + o;\n        }\n        if((r = fmt.match(frac1))) return write_num_f2(r, aval, sign);\n        if(fmt.match(/^#+0+$/)) return sign + pad0(aval,fmt.length - fmt.indexOf(\"0\"));\n        if((r = fmt.match(dec1))) {\n          o = (\"\"+val).replace(/^([^\\.]+)$/,\"$1.\"+hashq(r[1])).replace(/\\.$/,\".\"+hashq(r[1]));\n          o = o.replace(/\\.(\\d*)$/,function($$, $1) {\n            return \".\" + $1 + fill(\"0\", hashq(r[1]).length-$1.length); });\n          return fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./,\".\");\n        }\n        fmt = fmt.replace(/^#+([0.])/, \"$1\");\n        if((r = fmt.match(/^(0*)\\.(#*)$/))) {\n          return sign + (\"\"+aval).replace(/\\.(\\d*[1-9])0*$/,\".$1\").replace(/^(-?\\d*)$/,\"$1.\").replace(/^0\\./,r[1].length?\"0.\":\".\");\n        }\n        if((r = fmt.match(/^#{1,3},##0(\\.?)$/))) return sign + commaify((\"\"+aval));\n        if((r = fmt.match(/^#,##0\\.([#0]*0)$/))) {\n          return val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify((\"\"+val)) + \".\" + fill('0',r[1].length);\n        }\n        if((r = fmt.match(/^#,#*,#0/))) return write_num_int(type,fmt.replace(/^#,#*,/,\"\"),val);\n        if((r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/))) {\n          o = _strrev(write_num_int(type, fmt.replace(/[\\\\-]/g,\"\"), val));\n          ri = 0;\n          return _strrev(_strrev(fmt.replace(/\\\\/g,\"\")).replace(/[0#]/g,function(x){return ri<o.length?o.charAt(ri++):x==='0'?'0':\"\";}));\n        }\n        if(fmt.match(phone)) {\n          o = write_num_int(type, \"##########\", val);\n          return \"(\" + o.substr(0,3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n        }\n        var oa = \"\";\n        if((r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n          ri = Math.min(r[4].length,7);\n          ff = frac(aval, Math.pow(10,ri)-1, false);\n          o = \"\" + sign;\n          oa = write_num(\"n\", r[1], ff[1]);\n          if(oa.charAt(oa.length-1) == \" \") oa = oa.substr(0,oa.length-1) + \"0\";\n          o += oa + r[2] + \"/\" + r[3];\n          oa = rpad_(ff[2],ri);\n          if(oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length-oa.length)) + oa;\n          o += oa;\n          return o;\n        }\n        if((r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n          ri = Math.min(Math.max(r[1].length, r[4].length),7);\n          ff = frac(aval, Math.pow(10,ri)-1, true);\n          return sign + (ff[0]||(ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1],ri) + r[2] + \"/\" + r[3] + rpad_(ff[2],ri): fill(\" \", 2*ri+1 + r[2].length + r[3].length));\n        }\n        if((r = fmt.match(/^[#0?]+$/))) {\n          o = \"\" + val;\n          if(fmt.length <= o.length) return o;\n          return hashq(fmt.substr(0,fmt.length-o.length)) + o;\n        }\n        if((r = fmt.match(/^([#0]+)\\.([#0]+)$/))) {\n          o = \"\" + val.toFixed(Math.min(r[2].length,10)).replace(/([^0])0+$/,\"$1\");\n          ri = o.indexOf(\".\");\n          var lres = fmt.indexOf(\".\") - ri, rres = fmt.length - o.length - lres;\n          return hashq(fmt.substr(0,lres) + o + fmt.substr(fmt.length-rres));\n        }\n        if((r = fmt.match(/^00,000\\.([#0]*0)$/))) {\n          return val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify(\"\"+val).replace(/^\\d,\\d{3}$/,\"0$&\").replace(/^\\d*$/,function($$) { return \"00,\" + ($$.length < 3 ? pad0(0,3-$$.length) : \"\") + $$; }) + \".\" + pad0(0,r[1].length);\n        }\n        switch(fmt) {\n          case \"###,###\":\n          case \"##,###\":\n          case \"#,###\": var x = commaify(\"\"+aval); return x !== \"0\" ? sign + x : \"\";\n          default:\n            if(fmt.match(/\\.[0#?]*$/)) return write_num_int(type, fmt.slice(0,fmt.lastIndexOf(\".\")), val) + hashq(fmt.slice(fmt.lastIndexOf(\".\")));\n        }\n        throw new Error(\"unsupported format |\" + fmt + \"|\");\n      }\n      return function write_num(type, fmt, val) {\n        return (val|0) === val ? write_num_int(type, fmt, val) : write_num_flt(type, fmt, val);\n      };})();\n    function split_fmt(fmt) {\n      var out = [];\n      var in_str = false/*, cc*/;\n      for(var i = 0, j = 0; i < fmt.length; ++i) switch((/*cc=*/fmt.charCodeAt(i))) {\n        case 34: /* '\"' */\n          in_str = !in_str; break;\n        case 95: case 42: case 92: /* '_' '*' '\\\\' */\n          ++i; break;\n        case 59: /* ';' */\n          out[out.length] = fmt.substr(j,i-j);\n          j = i+1;\n      }\n      out[out.length] = fmt.substr(j);\n      if(in_str === true) throw new Error(\"Format |\" + fmt + \"| unterminated string \");\n      return out;\n    }\n    SSF._split = split_fmt;\n    var abstime = /\\[[HhMmSs]*\\]/;\n    function fmt_is_date(fmt) {\n      var i = 0, /*cc = 0,*/ c = \"\", o = \"\";\n      while(i < fmt.length) {\n        switch((c = fmt.charAt(i))) {\n          case 'G': if(isgeneral(fmt, i)) i+= 6; i++; break;\n          case '\"': for(;(/*cc=*/fmt.charCodeAt(++i)) !== 34 && i < fmt.length;) ++i; ++i; break;\n          case '\\\\': i+=2; break;\n          case '_': i+=2; break;\n          case '@': ++i; break;\n          case 'B': case 'b':\n            if(fmt.charAt(i+1) === \"1\" || fmt.charAt(i+1) === \"2\") return true;\n          /* falls through */\n          case 'M': case 'D': case 'Y': case 'H': case 'S': case 'E':\n          /* falls through */\n          case 'm': case 'd': case 'y': case 'h': case 's': case 'e': case 'g': return true;\n          case 'A': case 'a':\n            if(fmt.substr(i, 3).toUpperCase() === \"A/P\") return true;\n            if(fmt.substr(i, 5).toUpperCase() === \"AM/PM\") return true;\n            ++i; break;\n          case '[':\n            o = c;\n            while(fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n            if(o.match(abstime)) return true;\n            break;\n          case '.':\n          /* falls through */\n          case '0': case '#':\n            while(i < fmt.length && (\"0#?.,E+-%\".indexOf(c=fmt.charAt(++i)) > -1 || (c=='\\\\' && fmt.charAt(i+1) == \"-\" && \"0#\".indexOf(fmt.charAt(i+2))>-1))){/* empty */}\n            break;\n          case '?': while(fmt.charAt(++i) === c){/* empty */} break;\n          case '*': ++i; if(fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i; break;\n          case '(': case ')': ++i; break;\n          case '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':\n            while(i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1){/* empty */} break;\n          case ' ': ++i; break;\n          default: ++i; break;\n        }\n      }\n      return false;\n    }\n    SSF.is_date = fmt_is_date;\n    function eval_fmt(fmt, v, opts, flen) {\n      var out = [], o = \"\", i = 0, c = \"\", lst='t', dt, j, cc;\n      var hr='H';\n      /* Tokenize */\n      while(i < fmt.length) {\n        switch((c = fmt.charAt(i))) {\n          case 'G': /* General */\n            if(!isgeneral(fmt, i)) throw new Error('unrecognized character ' + c + ' in ' +fmt);\n            out[out.length] = {t:'G', v:'General'}; i+=7; break;\n          case '\"': /* Literal text */\n            for(o=\"\";(cc=fmt.charCodeAt(++i)) !== 34 && i < fmt.length;) o += String.fromCharCode(cc);\n            out[out.length] = {t:'t', v:o}; ++i; break;\n          case '\\\\': var w = fmt.charAt(++i), t = (w === \"(\" || w === \")\") ? w : 't';\n            out[out.length] = {t:t, v:w}; ++i; break;\n          case '_': out[out.length] = {t:'t', v:\" \"}; i+=2; break;\n          case '@': /* Text Placeholder */\n            out[out.length] = {t:'T', v:v}; ++i; break;\n          case 'B': case 'b':\n            if(fmt.charAt(i+1) === \"1\" || fmt.charAt(i+1) === \"2\") {\n              if(dt==null) { dt=parse_date_code(v, opts, fmt.charAt(i+1) === \"2\"); if(dt==null) return \"\"; }\n              out[out.length] = {t:'X', v:fmt.substr(i,2)}; lst = c; i+=2; break;\n            }\n          /* falls through */\n          case 'M': case 'D': case 'Y': case 'H': case 'S': case 'E':\n            c = c.toLowerCase();\n          /* falls through */\n          case 'm': case 'd': case 'y': case 'h': case 's': case 'e': case 'g':\n            if(v < 0) return \"\";\n            if(dt==null) { dt=parse_date_code(v, opts); if(dt==null) return \"\"; }\n            o = c; while(++i < fmt.length && fmt.charAt(i).toLowerCase() === c) o+=c;\n            if(c === 'm' && lst.toLowerCase() === 'h') c = 'M';\n            if(c === 'h') c = hr;\n            out[out.length] = {t:c, v:o}; lst = c; break;\n          case 'A': case 'a':\n            var q={t:c, v:c};\n            if(dt==null) dt=parse_date_code(v, opts);\n            if(fmt.substr(i, 3).toUpperCase() === \"A/P\") { if(dt!=null) q.v = dt.H >= 12 ? \"P\" : \"A\"; q.t = 'T'; hr='h';i+=3;}\n            else if(fmt.substr(i,5).toUpperCase() === \"AM/PM\") { if(dt!=null) q.v = dt.H >= 12 ? \"PM\" : \"AM\"; q.t = 'T'; i+=5; hr='h'; }\n            else { q.t = \"t\"; ++i; }\n            if(dt==null && q.t === 'T') return \"\";\n            out[out.length] = q; lst = c; break;\n          case '[':\n            o = c;\n            while(fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n            if(o.slice(-1) !== ']') throw 'unterminated \"[\" block: |' + o + '|';\n            if(o.match(abstime)) {\n              if(dt==null) { dt=parse_date_code(v, opts); if(dt==null) return \"\"; }\n              out[out.length] = {t:'Z', v:o.toLowerCase()};\n              lst = o.charAt(1);\n            } else if(o.indexOf(\"$\") > -1) {\n              o = (o.match(/\\$([^-\\[\\]]*)/)||[])[1]||\"$\";\n              if(!fmt_is_date(fmt)) out[out.length] = {t:'t',v:o};\n            }\n            break;\n          /* Numbers */\n          case '.':\n            if(dt != null) {\n              o = c; while(++i < fmt.length && (c=fmt.charAt(i)) === \"0\") o += c;\n              out[out.length] = {t:'s', v:o}; break;\n            }\n          /* falls through */\n          case '0': case '#':\n            o = c; while((++i < fmt.length && \"0#?.,E+-%\".indexOf(c=fmt.charAt(i)) > -1) || (c=='\\\\' && fmt.charAt(i+1) == \"-\" && i < fmt.length - 2 && \"0#\".indexOf(fmt.charAt(i+2))>-1)) o += c;\n            out[out.length] = {t:'n', v:o}; break;\n          case '?':\n            o = c; while(fmt.charAt(++i) === c) o+=c;\n            out[out.length] = {t:c, v:o}; lst = c; break;\n          case '*': ++i; if(fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i; break; // **\n          case '(': case ')': out[out.length] = {t:(flen===1?'t':c), v:c}; ++i; break;\n          case '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':\n            o = c; while(i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1) o+=fmt.charAt(i);\n            out[out.length] = {t:'D', v:o}; break;\n          case ' ': out[out.length] = {t:c, v:c}; ++i; break;\n          default:\n            if(\",$-+/():!^&'~{}<>=€acfijklopqrtuvwxzP\".indexOf(c) === -1) throw new Error('unrecognized character ' + c + ' in ' + fmt);\n            out[out.length] = {t:'t', v:c}; ++i; break;\n        }\n      }\n      var bt = 0, ss0 = 0, ssm;\n      for(i=out.length-1, lst='t'; i >= 0; --i) {\n        switch(out[i].t) {\n          case 'h': case 'H': out[i].t = hr; lst='h'; if(bt < 1) bt = 1; break;\n          case 's':\n            if((ssm=out[i].v.match(/\\.0+$/))) ss0=Math.max(ss0,ssm[0].length-1);\n            if(bt < 3) bt = 3;\n          /* falls through */\n          case 'd': case 'y': case 'M': case 'e': lst=out[i].t; break;\n          case 'm': if(lst === 's') { out[i].t = 'M'; if(bt < 2) bt = 2; } break;\n          case 'X': /*if(out[i].v === \"B2\");*/\n            break;\n          case 'Z':\n            if(bt < 1 && out[i].v.match(/[Hh]/)) bt = 1;\n            if(bt < 2 && out[i].v.match(/[Mm]/)) bt = 2;\n            if(bt < 3 && out[i].v.match(/[Ss]/)) bt = 3;\n        }\n      }\n      switch(bt) {\n        case 0: break;\n        case 1:\n          if(dt.u >= 0.5) { dt.u = 0; ++dt.S; }\n          if(dt.S >=  60) { dt.S = 0; ++dt.M; }\n          if(dt.M >=  60) { dt.M = 0; ++dt.H; }\n          break;\n        case 2:\n          if(dt.u >= 0.5) { dt.u = 0; ++dt.S; }\n          if(dt.S >=  60) { dt.S = 0; ++dt.M; }\n          break;\n      }\n      /* replace fields */\n      var nstr = \"\", jj;\n      for(i=0; i < out.length; ++i) {\n        switch(out[i].t) {\n          case 't': case 'T': case ' ': case 'D': break;\n          case 'X': out[i].v = \"\"; out[i].t = \";\"; break;\n          case 'd': case 'm': case 'y': case 'h': case 'H': case 'M': case 's': case 'e': case 'b': case 'Z':\n            out[i].v = write_date(out[i].t.charCodeAt(0), out[i].v, dt, ss0);\n            out[i].t = 't'; break;\n          case 'n': case '(': case '?':\n            jj = i+1;\n            while(out[jj] != null && (\n              (c=out[jj].t) === \"?\" || c === \"D\" ||\n              ((c === \" \" || c === \"t\") && out[jj+1] != null && (out[jj+1].t === '?' || out[jj+1].t === \"t\" && out[jj+1].v === '/')) ||\n              (out[i].t === '(' && (c === ' ' || c === 'n' || c === ')')) ||\n              (c === 't' && (out[jj].v === '/' || out[jj].v === ' ' && out[jj+1] != null && out[jj+1].t == '?'))\n            )) {\n              out[i].v += out[jj].v;\n              out[jj] = {v:\"\", t:\";\"}; ++jj;\n            }\n            nstr += out[i].v;\n            i = jj-1; break;\n          case 'G': out[i].t = 't'; out[i].v = general_fmt(v,opts); break;\n        }\n      }\n      var vv = \"\", myv, ostr;\n      if(nstr.length > 0) {\n        if(nstr.charCodeAt(0) == 40) /* '(' */ {\n          myv = (v<0&&nstr.charCodeAt(0) === 45 ? -v : v);\n          ostr = write_num('(', nstr, myv);\n        } else {\n          myv = (v<0 && flen > 1 ? -v : v);\n          ostr = write_num('n', nstr, myv);\n          if(myv < 0 && out[0] && out[0].t == 't') {\n            ostr = ostr.substr(1);\n            out[0].v = \"-\" + out[0].v;\n          }\n        }\n        jj=ostr.length-1;\n        var decpt = out.length;\n        for(i=0; i < out.length; ++i) if(out[i] != null && out[i].t != 't' && out[i].v.indexOf(\".\") > -1) { decpt = i; break; }\n        var lasti=out.length;\n        if(decpt === out.length && ostr.indexOf(\"E\") === -1) {\n          for(i=out.length-1; i>= 0;--i) {\n            if(out[i] == null || 'n?('.indexOf(out[i].t) === -1) continue;\n            if(jj>=out[i].v.length-1) { jj -= out[i].v.length; out[i].v = ostr.substr(jj+1, out[i].v.length); }\n            else if(jj < 0) out[i].v = \"\";\n            else { out[i].v = ostr.substr(0, jj+1); jj = -1; }\n            out[i].t = 't';\n            lasti = i;\n          }\n          if(jj>=0 && lasti<out.length) out[lasti].v = ostr.substr(0,jj+1) + out[lasti].v;\n        }\n        else if(decpt !== out.length && ostr.indexOf(\"E\") === -1) {\n          jj = ostr.indexOf(\".\")-1;\n          for(i=decpt; i>= 0; --i) {\n            if(out[i] == null || 'n?('.indexOf(out[i].t) === -1) continue;\n            j=out[i].v.indexOf(\".\")>-1&&i===decpt?out[i].v.indexOf(\".\")-1:out[i].v.length-1;\n            vv = out[i].v.substr(j+1);\n            for(; j>=0; --j) {\n              if(jj>=0 && (out[i].v.charAt(j) === \"0\" || out[i].v.charAt(j) === \"#\")) vv = ostr.charAt(jj--) + vv;\n            }\n            out[i].v = vv;\n            out[i].t = 't';\n            lasti = i;\n          }\n          if(jj>=0 && lasti<out.length) out[lasti].v = ostr.substr(0,jj+1) + out[lasti].v;\n          jj = ostr.indexOf(\".\")+1;\n          for(i=decpt; i<out.length; ++i) {\n            if(out[i] == null || ('n?('.indexOf(out[i].t) === -1 && i !== decpt)) continue;\n            j=out[i].v.indexOf(\".\")>-1&&i===decpt?out[i].v.indexOf(\".\")+1:0;\n            vv = out[i].v.substr(0,j);\n            for(; j<out[i].v.length; ++j) {\n              if(jj<ostr.length) vv += ostr.charAt(jj++);\n            }\n            out[i].v = vv;\n            out[i].t = 't';\n            lasti = i;\n          }\n        }\n      }\n      for(i=0; i<out.length; ++i) if(out[i] != null && 'n(?'.indexOf(out[i].t)>-1) {\n        myv = (flen >1 && v < 0 && i>0 && out[i-1].v === \"-\" ? -v:v);\n        out[i].v = write_num(out[i].t, out[i].v, myv);\n        out[i].t = 't';\n      }\n      var retval = \"\";\n      for(i=0; i !== out.length; ++i) if(out[i] != null) retval += out[i].v;\n      return retval;\n    }\n    SSF._eval = eval_fmt;\n    var cfregex = /\\[[=<>]/;\n    var cfregex2 = /\\[(=|>[=]?|<[>=]?)(-?\\d+(?:\\.\\d*)?)\\]/;\n    function chkcond(v, rr) {\n      if(rr == null) return false;\n      var thresh = parseFloat(rr[2]);\n      switch(rr[1]) {\n        case \"=\":  if(v == thresh) return true; break;\n        case \">\":  if(v >  thresh) return true; break;\n        case \"<\":  if(v <  thresh) return true; break;\n        case \"<>\": if(v != thresh) return true; break;\n        case \">=\": if(v >= thresh) return true; break;\n        case \"<=\": if(v <= thresh) return true; break;\n      }\n      return false;\n    }\n    function choose_fmt(f, v) {\n      var fmt = split_fmt(f);\n      var l = fmt.length, lat = fmt[l-1].indexOf(\"@\");\n      if(l<4 && lat>-1) --l;\n      if(fmt.length > 4) throw new Error(\"cannot find right format for |\" + fmt.join(\"|\") + \"|\");\n      if(typeof v !== \"number\") return [4, fmt.length === 4 || lat>-1?fmt[fmt.length-1]:\"@\"];\n      switch(fmt.length) {\n        case 1: fmt = lat>-1 ? [\"General\", \"General\", \"General\", fmt[0]] : [fmt[0], fmt[0], fmt[0], \"@\"]; break;\n        case 2: fmt = lat>-1 ? [fmt[0], fmt[0], fmt[0], fmt[1]] : [fmt[0], fmt[1], fmt[0], \"@\"]; break;\n        case 3: fmt = lat>-1 ? [fmt[0], fmt[1], fmt[0], fmt[2]] : [fmt[0], fmt[1], fmt[2], \"@\"]; break;\n        case 4: break;\n      }\n      var ff = v > 0 ? fmt[0] : v < 0 ? fmt[1] : fmt[2];\n      if(fmt[0].indexOf(\"[\") === -1 && fmt[1].indexOf(\"[\") === -1) return [l, ff];\n      if(fmt[0].match(cfregex) != null || fmt[1].match(cfregex) != null) {\n        var m1 = fmt[0].match(cfregex2);\n        var m2 = fmt[1].match(cfregex2);\n        return chkcond(v, m1) ? [l, fmt[0]] : chkcond(v, m2) ? [l, fmt[1]] : [l, fmt[m1 != null && m2 != null ? 2 : 1]];\n      }\n      return [l, ff];\n    }\n    function format(fmt,v,o) {\n      if(o == null) o = {};\n      var sfmt = \"\";\n      switch(typeof fmt) {\n        case \"string\":\n          if(fmt == \"m/d/yy\" && o.dateNF) sfmt = o.dateNF;\n          else sfmt = fmt;\n          break;\n        case \"number\":\n          if(fmt == 14 && o.dateNF) sfmt = o.dateNF;\n          else sfmt = (o.table != null ? (o.table) : table_fmt)[fmt];\n          break;\n      }\n      if(isgeneral(sfmt,0)) return general_fmt(v, o);\n      if(v instanceof Date) v = datenum_local(v, o.date1904);\n      var f = choose_fmt(sfmt, v);\n      if(isgeneral(f[1])) return general_fmt(v, o);\n      if(v === true) v = \"TRUE\"; else if(v === false) v = \"FALSE\";\n      else if(v === \"\" || v == null) return \"\";\n      return eval_fmt(f[1], v, o, f[0]);\n    }\n    function load_entry(fmt, idx) {\n      if(typeof idx != 'number') {\n        idx = +idx || -1;\n        for(var i = 0; i < 0x0188; ++i) {\n          if(table_fmt[i] == undefined) { if(idx < 0) idx = i; continue; }\n          if(table_fmt[i] == fmt) { idx = i; break; }\n        }\n        if(idx < 0) idx = 0x187;\n      }\n      table_fmt[idx] = fmt;\n      return idx;\n    }\n    SSF.load = load_entry;\n    SSF._table = table_fmt;\n    SSF.get_table = function get_table() { return table_fmt; };\n    SSF.load_table = function load_table(tbl) {\n      for(var i=0; i!=0x0188; ++i)\n        if(tbl[i] !== undefined) load_entry(tbl[i], i);\n    };\n    SSF.init_table = init_table;\n    SSF.format = format;\n  };\n  make_ssf(SSF);\n  /* map from xlml named formats to SSF TODO: localize */\n  var XLMLFormatMap/*{[string]:string}*/ = ({\n    \"General Number\": \"General\",\n    \"General Date\": SSF._table[22],\n    \"Long Date\": \"dddd, mmmm dd, yyyy\",\n    \"Medium Date\": SSF._table[15],\n    \"Short Date\": SSF._table[14],\n    \"Long Time\": SSF._table[19],\n    \"Medium Time\": SSF._table[18],\n    \"Short Time\": SSF._table[20],\n    \"Currency\": '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n    \"Fixed\": SSF._table[2],\n    \"Standard\": SSF._table[4],\n    \"Percent\": SSF._table[10],\n    \"Scientific\": SSF._table[11],\n    \"Yes/No\": '\"Yes\";\"Yes\";\"No\";@',\n    \"True/False\": '\"True\";\"True\";\"False\";@',\n    \"On/Off\": '\"Yes\";\"Yes\";\"No\";@'\n  });\n\n  var SSFImplicit/*{[number]:string}*/ = ({\n    \"5\": '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\n    \"6\": '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\n    \"7\": '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\n    \"8\": '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n    \"23\": 'General', \"24\": 'General', \"25\": 'General', \"26\": 'General',\n    \"27\": 'm/d/yy', \"28\": 'm/d/yy', \"29\": 'm/d/yy', \"30\": 'm/d/yy', \"31\": 'm/d/yy',\n    \"32\": 'h:mm:ss', \"33\": 'h:mm:ss', \"34\": 'h:mm:ss', \"35\": 'h:mm:ss',\n    \"36\": 'm/d/yy',\n    \"41\": '_(* #,##0_);_(* \\(#,##0\\);_(* \"-\"_);_(@_)',\n    \"42\": '_(\"$\"* #,##0_);_(\"$\"* \\(#,##0\\);_(\"$\"* \"-\"_);_(@_)',\n    \"43\": '_(* #,##0.00_);_(* \\(#,##0.00\\);_(* \"-\"??_);_(@_)',\n    \"44\": '_(\"$\"* #,##0.00_);_(\"$\"* \\(#,##0.00\\);_(\"$\"* \"-\"??_);_(@_)',\n    \"50\": 'm/d/yy', \"51\": 'm/d/yy', \"52\": 'm/d/yy', \"53\": 'm/d/yy', \"54\": 'm/d/yy',\n    \"55\": 'm/d/yy', \"56\": 'm/d/yy', \"57\": 'm/d/yy', \"58\": 'm/d/yy',\n    \"59\": '0',\n    \"60\": '0.00',\n    \"61\": '#,##0',\n    \"62\": '#,##0.00',\n    \"63\": '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\n    \"64\": '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\n    \"65\": '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\n    \"66\": '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n    \"67\": '0%',\n    \"68\": '0.00%',\n    \"69\": '# ?/?',\n    \"70\": '# ??/??',\n    \"71\": 'm/d/yy',\n    \"72\": 'm/d/yy',\n    \"73\": 'd-mmm-yy',\n    \"74\": 'd-mmm',\n    \"75\": 'mmm-yy',\n    \"76\": 'h:mm',\n    \"77\": 'h:mm:ss',\n    \"78\": 'm/d/yy h:mm',\n    \"79\": 'mm:ss',\n    \"80\": '[h]:mm:ss',\n    \"81\": 'mmss.0'\n  });\n\n  /* dateNF parse TODO: move to SSF */\n  var dateNFregex = /[dD]+|[mM]+|[yYeE]+|[Hh]+|[Ss]+/g;\n  function dateNF_regex(dateNF) {\n    var fmt = typeof dateNF == \"number\" ? SSF._table[dateNF] : dateNF;\n    fmt = fmt.replace(dateNFregex, \"(\\\\d+)\");\n    return new RegExp(\"^\" + fmt + \"$\");\n  }\n  function dateNF_fix(str, dateNF, match) {\n    var Y = -1, m = -1, d = -1, H = -1, M = -1, S = -1;\n    (dateNF.match(dateNFregex)||[]).forEach(function(n, i) {\n      var v = parseInt(match[i+1], 10);\n      switch(n.toLowerCase().charAt(0)) {\n        case 'y': Y = v; break; case 'd': d = v; break;\n        case 'h': H = v; break; case 's': S = v; break;\n        case 'm': if(H >= 0) M = v; else m = v; break;\n      }\n    });\n    if(S >= 0 && M == -1 && m >= 0) { M = m; m = -1; }\n    var datestr = ((\"\" + (Y>=0?Y: new Date().getFullYear())).slice(-4) + \"-\" + (\"00\" + (m>=1?m:1)).slice(-2) + \"-\" + (\"00\" + (d>=1?d:1)).slice(-2));\n    if(datestr.length == 7) datestr = \"0\" + datestr;\n    if(datestr.length == 8) datestr = \"20\" + datestr;\n    var timestr = ((\"00\" + (H>=0?H:0)).slice(-2) + \":\" + (\"00\" + (M>=0?M:0)).slice(-2) + \":\" + (\"00\" + (S>=0?S:0)).slice(-2));\n    if(H == -1 && M == -1 && S == -1) return datestr;\n    if(Y == -1 && m == -1 && d == -1) return timestr;\n    return datestr + \"T\" + timestr;\n  }\n\n  var DO_NOT_EXPORT_CFB = true;\n  /* cfb.js (C) 2013-present SheetJS -- http://sheetjs.com */\n  /* vim: set ts=2: */\n  /*jshint eqnull:true */\n  /*exported CFB */\n  /*global module, require:false, process:false, Buffer:false, Uint8Array:false, Uint16Array:false */\n\n  /* crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n  /* vim: set ts=2: */\n  /*exported CRC32 */\n  var CRC32;\n  (function (factory) {\n    /*jshint ignore:start */\n    /*eslint-disable */\n    factory(CRC32 = {});\n    /*eslint-enable */\n    /*jshint ignore:end */\n  }(function(CRC32) {\n    CRC32.version = '1.2.0';\n    /* see perf/crc32table.js */\n    /*global Int32Array */\n    function signed_crc_table() {\n      var c = 0, table = new Array(256);\n\n      for(var n =0; n != 256; ++n){\n        c = n;\n        c = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n        c = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n        c = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n        c = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n        c = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n        c = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n        c = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n        c = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n        table[n] = c;\n      }\n\n      return typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n    }\n\n    var T = signed_crc_table();\n    function crc32_bstr(bstr, seed) {\n      var C = seed ^ -1, L = bstr.length - 1;\n      for(var i = 0; i < L;) {\n        C = (C>>>8) ^ T[(C^bstr.charCodeAt(i++))&0xFF];\n        C = (C>>>8) ^ T[(C^bstr.charCodeAt(i++))&0xFF];\n      }\n      if(i === L) C = (C>>>8) ^ T[(C ^ bstr.charCodeAt(i))&0xFF];\n      return C ^ -1;\n    }\n\n    function crc32_buf(buf, seed) {\n      if(buf.length > 10000) return crc32_buf_8(buf, seed);\n      var C = seed ^ -1, L = buf.length - 3;\n      for(var i = 0; i < L;) {\n        C = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n        C = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n        C = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n        C = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n      }\n      while(i < L+3) C = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n      return C ^ -1;\n    }\n\n    function crc32_buf_8(buf, seed) {\n      var C = seed ^ -1, L = buf.length - 7;\n      for(var i = 0; i < L;) {\n        C = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n        C = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n        C = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n        C = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n        C = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n        C = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n        C = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n        C = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n      }\n      while(i < L+7) C = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n      return C ^ -1;\n    }\n\n    function crc32_str(str, seed) {\n      var C = seed ^ -1;\n      for(var i = 0, L=str.length, c, d; i < L;) {\n        c = str.charCodeAt(i++);\n        if(c < 0x80) {\n          C = (C>>>8) ^ T[(C ^ c)&0xFF];\n        } else if(c < 0x800) {\n          C = (C>>>8) ^ T[(C ^ (192|((c>>6)&31)))&0xFF];\n          C = (C>>>8) ^ T[(C ^ (128|(c&63)))&0xFF];\n        } else if(c >= 0xD800 && c < 0xE000) {\n          c = (c&1023)+64; d = str.charCodeAt(i++)&1023;\n          C = (C>>>8) ^ T[(C ^ (240|((c>>8)&7)))&0xFF];\n          C = (C>>>8) ^ T[(C ^ (128|((c>>2)&63)))&0xFF];\n          C = (C>>>8) ^ T[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];\n          C = (C>>>8) ^ T[(C ^ (128|(d&63)))&0xFF];\n        } else {\n          C = (C>>>8) ^ T[(C ^ (224|((c>>12)&15)))&0xFF];\n          C = (C>>>8) ^ T[(C ^ (128|((c>>6)&63)))&0xFF];\n          C = (C>>>8) ^ T[(C ^ (128|(c&63)))&0xFF];\n        }\n      }\n      return C ^ -1;\n    }\n    CRC32.table = T;\n    CRC32.bstr = crc32_bstr;\n    CRC32.buf = crc32_buf;\n    CRC32.str = crc32_str;\n  }));\n  /* [MS-CFB] v20171201 */\n  var CFB = (function _CFB(){\n    var exports = {};\n    exports.version = '1.1.0';\n    /* [MS-CFB] 2.6.4 */\n    function namecmp(l, r) {\n      var L = l.split(\"/\"), R = r.split(\"/\");\n      for(var i = 0, c = 0, Z = Math.min(L.length, R.length); i < Z; ++i) {\n        if((c = L[i].length - R[i].length)) return c;\n        if(L[i] != R[i]) return L[i] < R[i] ? -1 : 1;\n      }\n      return L.length - R.length;\n    }\n    function dirname(p) {\n      if(p.charAt(p.length - 1) == \"/\") return (p.slice(0,-1).indexOf(\"/\") === -1) ? p : dirname(p.slice(0, -1));\n      var c = p.lastIndexOf(\"/\");\n      return (c === -1) ? p : p.slice(0, c+1);\n    }\n\n    function filename(p) {\n      if(p.charAt(p.length - 1) == \"/\") return filename(p.slice(0, -1));\n      var c = p.lastIndexOf(\"/\");\n      return (c === -1) ? p : p.slice(c+1);\n    }\n    /* -------------------------------------------------------------------------- */\n    /* DOS Date format:\n   high|YYYYYYYm.mmmddddd.HHHHHMMM.MMMSSSSS|low\n   add 1980 to stored year\n   stored second should be doubled\n*/\n\n    /* write JS date to buf as a DOS date */\n    function write_dos_date(buf, date) {\n      if(typeof date === \"string\") date = new Date(date);\n      var hms = date.getHours();\n      hms = hms << 6 | date.getMinutes();\n      hms = hms << 5 | (date.getSeconds()>>>1);\n      buf.write_shift(2, hms);\n      var ymd = (date.getFullYear() - 1980);\n      ymd = ymd << 4 | (date.getMonth()+1);\n      ymd = ymd << 5 | date.getDate();\n      buf.write_shift(2, ymd);\n    }\n\n    /* read four bytes from buf and interpret as a DOS date */\n    function parse_dos_date(buf) {\n      var hms = buf.read_shift(2) & 0xFFFF;\n      var ymd = buf.read_shift(2) & 0xFFFF;\n      var val = new Date();\n      var d = ymd & 0x1F; ymd >>>= 5;\n      var m = ymd & 0x0F; ymd >>>= 4;\n      val.setMilliseconds(0);\n      val.setFullYear(ymd + 1980);\n      val.setMonth(m-1);\n      val.setDate(d);\n      var S = hms & 0x1F; hms >>>= 5;\n      var M = hms & 0x3F; hms >>>= 6;\n      val.setHours(hms);\n      val.setMinutes(M);\n      val.setSeconds(S<<1);\n      return val;\n    }\n    function parse_extra_field(blob) {\n      prep_blob(blob, 0);\n      var o = {};\n      var flags = 0;\n      while(blob.l <= blob.length - 4) {\n        var type = blob.read_shift(2);\n        var sz = blob.read_shift(2), tgt = blob.l + sz;\n        var p = {};\n        switch(type) {\n          /* UNIX-style Timestamps */\n          case 0x5455: {\n            flags = blob.read_shift(1);\n            if(flags & 1) p.mtime = blob.read_shift(4);\n            /* for some reason, CD flag corresponds to LFH */\n            if(sz > 5) {\n              if(flags & 2) p.atime = blob.read_shift(4);\n              if(flags & 4) p.ctime = blob.read_shift(4);\n            }\n            if(p.mtime) p.mt = new Date(p.mtime*1000);\n          }\n            break;\n        }\n        blob.l = tgt;\n        o[type] = p;\n      }\n      return o;\n    }\n    var fs;\n    // function get_fs() { return fs || (fs = require('fs')); }\n    function parse(file, options) {\n      if(file[0] == 0x50 && file[1] == 0x4b) return parse_zip(file, options);\n      if(file.length < 512) throw new Error(\"CFB file size \" + file.length + \" < 512\");\n      var mver = 3;\n      var ssz = 512;\n      var nmfs = 0; // number of mini FAT sectors\n      var difat_sec_cnt = 0;\n      var dir_start = 0;\n      var minifat_start = 0;\n      var difat_start = 0;\n\n      var fat_addrs = []; // locations of FAT sectors\n\n      /* [MS-CFB] 2.2 Compound File Header */\n      var blob = file.slice(0,512);\n      prep_blob(blob, 0);\n\n      /* major version */\n      var mv = check_get_mver(blob);\n      mver = mv[0];\n      switch(mver) {\n        case 3: ssz = 512; break; case 4: ssz = 4096; break;\n        case 0: if(mv[1] == 0) return parse_zip(file, options);\n        /* falls through */\n        default: throw new Error(\"Major Version: Expected 3 or 4 saw \" + mver);\n      }\n\n      /* reprocess header */\n      if(ssz !== 512) { blob = file.slice(0,ssz); prep_blob(blob, 28 /* blob.l */); }\n      /* Save header for final object */\n      var header = file.slice(0,ssz);\n\n      check_shifts(blob, mver);\n\n// Number of Directory Sectors\n      var dir_cnt = blob.read_shift(4, 'i');\n      if(mver === 3 && dir_cnt !== 0) throw new Error('# Directory Sectors: Expected 0 saw ' + dir_cnt);\n\n// Number of FAT Sectors\n      blob.l += 4;\n\n// First Directory Sector Location\n      dir_start = blob.read_shift(4, 'i');\n\n// Transaction Signature\n      blob.l += 4;\n\n// Mini Stream Cutoff Size\n      blob.chk('00100000', 'Mini Stream Cutoff Size: ');\n\n// First Mini FAT Sector Location\n      minifat_start = blob.read_shift(4, 'i');\n\n// Number of Mini FAT Sectors\n      nmfs = blob.read_shift(4, 'i');\n\n// First DIFAT sector location\n      difat_start = blob.read_shift(4, 'i');\n\n// Number of DIFAT Sectors\n      difat_sec_cnt = blob.read_shift(4, 'i');\n\n// Grab FAT Sector Locations\n      for(var q = -1, j = 0; j < 109; ++j) { /* 109 = (512 - blob.l)>>>2; */\n        q = blob.read_shift(4, 'i');\n        if(q<0) break;\n        fat_addrs[j] = q;\n      }\n\n      /** Break the file up into sectors */\n      var sectors = sectorify(file, ssz);\n\n      sleuth_fat(difat_start, difat_sec_cnt, sectors, ssz, fat_addrs);\n\n      /** Chains */\n      var sector_list = make_sector_list(sectors, dir_start, fat_addrs, ssz);\n\n      sector_list[dir_start].name = \"!Directory\";\n      if(nmfs > 0 && minifat_start !== ENDOFCHAIN) sector_list[minifat_start].name = \"!MiniFAT\";\n      sector_list[fat_addrs[0]].name = \"!FAT\";\n      sector_list.fat_addrs = fat_addrs;\n      sector_list.ssz = ssz;\n\n      /* [MS-CFB] 2.6.1 Compound File Directory Entry */\n      var files = {}, Paths = [], FileIndex = [], FullPaths = [];\n      read_directory(dir_start, sector_list, sectors, Paths, nmfs, files, FileIndex, minifat_start);\n\n      build_full_paths(FileIndex, FullPaths, Paths);\n      Paths.shift();\n\n      var o = {\n        FileIndex: FileIndex,\n        FullPaths: FullPaths\n      };\n\n// $FlowIgnore\n      if(options && options.raw) o.raw = {header: header, sectors: sectors};\n      return o;\n    } // parse\n\n    /* [MS-CFB] 2.2 Compound File Header -- read up to major version */\n    function check_get_mver(blob) {\n      if(blob[blob.l] == 0x50 && blob[blob.l + 1] == 0x4b) return [0, 0];\n      // header signature 8\n      blob.chk(HEADER_SIGNATURE, 'Header Signature: ');\n\n      // clsid 16\n      blob.chk(HEADER_CLSID, 'CLSID: ');\n\n      // minor version 2\n      var mver = blob.read_shift(2, 'u');\n\n      return [blob.read_shift(2,'u'), mver];\n    }\n    function check_shifts(blob, mver) {\n      var shift = 0x09;\n\n      // Byte Order\n      //blob.chk('feff', 'Byte Order: '); // note: some writers put 0xffff\n      blob.l += 2;\n\n      // Sector Shift\n      switch((shift = blob.read_shift(2))) {\n        case 0x09: if(mver != 3) throw new Error('Sector Shift: Expected 9 saw ' + shift); break;\n        case 0x0c: if(mver != 4) throw new Error('Sector Shift: Expected 12 saw ' + shift); break;\n        default: throw new Error('Sector Shift: Expected 9 or 12 saw ' + shift);\n      }\n\n      // Mini Sector Shift\n      blob.chk('0600', 'Mini Sector Shift: ');\n\n      // Reserved\n      blob.chk('000000000000', 'Reserved: ');\n    }\n\n    /** Break the file up into sectors */\n    function sectorify(file, ssz) {\n      var nsectors = Math.ceil(file.length/ssz)-1;\n      var sectors = [];\n      for(var i=1; i < nsectors; ++i) sectors[i-1] = file.slice(i*ssz,(i+1)*ssz);\n      sectors[nsectors-1] = file.slice(nsectors*ssz);\n      return sectors;\n    }\n\n    /* [MS-CFB] 2.6.4 Red-Black Tree */\n    function build_full_paths(FI, FP, Paths) {\n      var i = 0, L = 0, R = 0, C = 0, j = 0, pl = Paths.length;\n      var dad = [], q = [];\n\n      for(; i < pl; ++i) { dad[i]=q[i]=i; FP[i]=Paths[i]; }\n\n      for(; j < q.length; ++j) {\n        i = q[j];\n        L = FI[i].L; R = FI[i].R; C = FI[i].C;\n        if(dad[i] === i) {\n          if(L !== -1 /*NOSTREAM*/ && dad[L] !== L) dad[i] = dad[L];\n          if(R !== -1 && dad[R] !== R) dad[i] = dad[R];\n        }\n        if(C !== -1 /*NOSTREAM*/) dad[C] = i;\n        if(L !== -1) { dad[L] = dad[i]; if(q.lastIndexOf(L) < j) q.push(L); }\n        if(R !== -1) { dad[R] = dad[i]; if(q.lastIndexOf(R) < j) q.push(R); }\n      }\n      for(i=1; i < pl; ++i) if(dad[i] === i) {\n        if(R !== -1 /*NOSTREAM*/ && dad[R] !== R) dad[i] = dad[R];\n        else if(L !== -1 && dad[L] !== L) dad[i] = dad[L];\n      }\n\n      for(i=1; i < pl; ++i) {\n        if(FI[i].type === 0 /* unknown */) continue;\n        j = dad[i];\n        if(j === 0) FP[i] = FP[0] + \"/\" + FP[i];\n        else while(j !== 0 && j !== dad[j]) {\n          FP[i] = FP[j] + \"/\" + FP[i];\n          j = dad[j];\n        }\n        dad[i] = 0;\n      }\n\n      FP[0] += \"/\";\n      for(i=1; i < pl; ++i) {\n        if(FI[i].type !== 2 /* stream */) FP[i] += \"/\";\n      }\n    }\n\n    function get_mfat_entry(entry, payload, mini) {\n      var start = entry.start, size = entry.size;\n      //return (payload.slice(start*MSSZ, start*MSSZ + size));\n      var o = [];\n      var idx = start;\n      while(mini && size > 0 && idx >= 0) {\n        o.push(payload.slice(idx * MSSZ, idx * MSSZ + MSSZ));\n        size -= MSSZ;\n        idx = __readInt32LE(mini, idx * 4);\n      }\n      if(o.length === 0) return (new_buf(0));\n      return (bconcat(o).slice(0, entry.size));\n    }\n\n    /** Chase down the rest of the DIFAT chain to build a comprehensive list\n     DIFAT chains by storing the next sector number as the last 32 bits */\n    function sleuth_fat(idx, cnt, sectors, ssz, fat_addrs) {\n      var q = ENDOFCHAIN;\n      if(idx === ENDOFCHAIN) {\n        if(cnt !== 0) throw new Error(\"DIFAT chain shorter than expected\");\n      } else if(idx !== -1 /*FREESECT*/) {\n        var sector = sectors[idx], m = (ssz>>>2)-1;\n        if(!sector) return;\n        for(var i = 0; i < m; ++i) {\n          if((q = __readInt32LE(sector,i*4)) === ENDOFCHAIN) break;\n          fat_addrs.push(q);\n        }\n        sleuth_fat(__readInt32LE(sector,ssz-4),cnt - 1, sectors, ssz, fat_addrs);\n      }\n    }\n\n    /** Follow the linked list of sectors for a given starting point */\n    function get_sector_list(sectors, start, fat_addrs, ssz, chkd) {\n      var buf = [], buf_chain = [];\n      if(!chkd) chkd = [];\n      var modulus = ssz - 1, j = 0, jj = 0;\n      for(j=start; j>=0;) {\n        chkd[j] = true;\n        buf[buf.length] = j;\n        buf_chain.push(sectors[j]);\n        var addr = fat_addrs[Math.floor(j*4/ssz)];\n        jj = ((j*4) & modulus);\n        if(ssz < 4 + jj) throw new Error(\"FAT boundary crossed: \" + j + \" 4 \"+ssz);\n        if(!sectors[addr]) break;\n        j = __readInt32LE(sectors[addr], jj);\n      }\n      return {nodes: buf, data:__toBuffer([buf_chain])};\n    }\n\n    /** Chase down the sector linked lists */\n    function make_sector_list(sectors, dir_start, fat_addrs, ssz) {\n      var sl = sectors.length, sector_list = ([]);\n      var chkd = [], buf = [], buf_chain = [];\n      var modulus = ssz - 1, i=0, j=0, k=0, jj=0;\n      for(i=0; i < sl; ++i) {\n        buf = ([]);\n        k = (i + dir_start); if(k >= sl) k-=sl;\n        if(chkd[k]) continue;\n        buf_chain = [];\n        for(j=k; j>=0;) {\n          chkd[j] = true;\n          buf[buf.length] = j;\n          buf_chain.push(sectors[j]);\n          var addr = fat_addrs[Math.floor(j*4/ssz)];\n          jj = ((j*4) & modulus);\n          if(ssz < 4 + jj) throw new Error(\"FAT boundary crossed: \" + j + \" 4 \"+ssz);\n          if(!sectors[addr]) break;\n          j = __readInt32LE(sectors[addr], jj);\n        }\n        sector_list[k] = ({nodes: buf, data:__toBuffer([buf_chain])});\n      }\n      return sector_list;\n    }\n\n    /* [MS-CFB] 2.6.1 Compound File Directory Entry */\n    function read_directory(dir_start, sector_list, sectors, Paths, nmfs, files, FileIndex, mini) {\n      var minifat_store = 0, pl = (Paths.length?2:0);\n      var sector = sector_list[dir_start].data;\n      var i = 0, namelen = 0, name;\n      for(; i < sector.length; i+= 128) {\n        var blob = sector.slice(i, i+128);\n        prep_blob(blob, 64);\n        namelen = blob.read_shift(2);\n        name = __utf16le(blob,0,namelen-pl);\n        Paths.push(name);\n        var o = ({\n          name:  name,\n          type:  blob.read_shift(1),\n          color: blob.read_shift(1),\n          L:     blob.read_shift(4, 'i'),\n          R:     blob.read_shift(4, 'i'),\n          C:     blob.read_shift(4, 'i'),\n          clsid: blob.read_shift(16),\n          state: blob.read_shift(4, 'i'),\n          start: 0,\n          size: 0\n        });\n        var ctime = blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2);\n        if(ctime !== 0) o.ct = read_date(blob, blob.l-8);\n        var mtime = blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2);\n        if(mtime !== 0) o.mt = read_date(blob, blob.l-8);\n        o.start = blob.read_shift(4, 'i');\n        o.size = blob.read_shift(4, 'i');\n        if(o.size < 0 && o.start < 0) { o.size = o.type = 0; o.start = ENDOFCHAIN; o.name = \"\"; }\n        if(o.type === 5) { /* root */\n          minifat_store = o.start;\n          if(nmfs > 0 && minifat_store !== ENDOFCHAIN) sector_list[minifat_store].name = \"!StreamData\";\n          /*minifat_size = o.size;*/\n        } else if(o.size >= 4096 /* MSCSZ */) {\n          o.storage = 'fat';\n          if(sector_list[o.start] === undefined) sector_list[o.start] = get_sector_list(sectors, o.start, sector_list.fat_addrs, sector_list.ssz);\n          sector_list[o.start].name = o.name;\n          o.content = (sector_list[o.start].data.slice(0,o.size));\n        } else {\n          o.storage = 'minifat';\n          if(o.size < 0) o.size = 0;\n          else if(minifat_store !== ENDOFCHAIN && o.start !== ENDOFCHAIN && sector_list[minifat_store]) {\n            o.content = get_mfat_entry(o, sector_list[minifat_store].data, (sector_list[mini]||{}).data);\n          }\n        }\n        if(o.content) prep_blob(o.content, 0);\n        files[name] = o;\n        FileIndex.push(o);\n      }\n    }\n\n    function read_date(blob, offset) {\n      return new Date(( ( (__readUInt32LE(blob,offset+4)/1e7)*Math.pow(2,32)+__readUInt32LE(blob,offset)/1e7 ) - 11644473600)*1000);\n    }\n\n    function read_file(filename, options) {\n      // get_fs();\n      return parse(fs.readFileSync(filename), options);\n    }\n\n    function read(blob, options) {\n      switch(options && options.type || \"base64\") {\n        case \"file\": return read_file(blob, options);\n        case \"base64\": return parse(s2a(Base64.decode(blob)), options);\n        case \"binary\": return parse(s2a(blob), options);\n      }\n      return parse(blob, options);\n    }\n\n    function init_cfb(cfb, opts) {\n      var o = opts || {}, root = o.root || \"Root Entry\";\n      if(!cfb.FullPaths) cfb.FullPaths = [];\n      if(!cfb.FileIndex) cfb.FileIndex = [];\n      if(cfb.FullPaths.length !== cfb.FileIndex.length) throw new Error(\"inconsistent CFB structure\");\n      if(cfb.FullPaths.length === 0) {\n        cfb.FullPaths[0] = root + \"/\";\n        cfb.FileIndex[0] = ({ name: root, type: 5 });\n      }\n      if(o.CLSID) cfb.FileIndex[0].clsid = o.CLSID;\n      seed_cfb(cfb);\n    }\n    function seed_cfb(cfb) {\n      var nm = \"\\u0001Sh33tJ5\";\n      if(CFB.find(cfb, \"/\" + nm)) return;\n      var p = new_buf(4); p[0] = 55; p[1] = p[3] = 50; p[2] = 54;\n      cfb.FileIndex.push(({ name: nm, type: 2, content:p, size:4, L:69, R:69, C:69 }));\n      cfb.FullPaths.push(cfb.FullPaths[0] + nm);\n      rebuild_cfb(cfb);\n    }\n    function rebuild_cfb(cfb, f) {\n      init_cfb(cfb);\n      var gc = false, s = false;\n      for(var i = cfb.FullPaths.length - 1; i >= 0; --i) {\n        var _file = cfb.FileIndex[i];\n        switch(_file.type) {\n          case 0:\n            if(s) gc = true;\n            else { cfb.FileIndex.pop(); cfb.FullPaths.pop(); }\n            break;\n          case 1: case 2: case 5:\n            s = true;\n            if(isNaN(_file.R * _file.L * _file.C)) gc = true;\n            if(_file.R > -1 && _file.L > -1 && _file.R == _file.L) gc = true;\n            break;\n          default: gc = true; break;\n        }\n      }\n      if(!gc && !f) return;\n\n      var now = new Date(1987, 1, 19), j = 0;\n      var data = [];\n      for(i = 0; i < cfb.FullPaths.length; ++i) {\n        if(cfb.FileIndex[i].type === 0) continue;\n        data.push([cfb.FullPaths[i], cfb.FileIndex[i]]);\n      }\n      for(i = 0; i < data.length; ++i) {\n        var dad = dirname(data[i][0]);\n        s = false;\n        for(j = 0; j < data.length; ++j) if(data[j][0] === dad) s = true;\n        if(!s) data.push([dad, ({\n          name: filename(dad).replace(\"/\",\"\"),\n          type: 1,\n          clsid: HEADER_CLSID,\n          ct: now, mt: now,\n          content: null\n        })]);\n      }\n\n      data.sort(function(x,y) { return namecmp(x[0], y[0]); });\n      cfb.FullPaths = []; cfb.FileIndex = [];\n      for(i = 0; i < data.length; ++i) { cfb.FullPaths[i] = data[i][0]; cfb.FileIndex[i] = data[i][1]; }\n      for(i = 0; i < data.length; ++i) {\n        var elt = cfb.FileIndex[i];\n        var nm = cfb.FullPaths[i];\n\n        elt.name =  filename(nm).replace(\"/\",\"\");\n        elt.L = elt.R = elt.C = -(elt.color = 1);\n        elt.size = elt.content ? elt.content.length : 0;\n        elt.start = 0;\n        elt.clsid = (elt.clsid || HEADER_CLSID);\n        if(i === 0) {\n          elt.C = data.length > 1 ? 1 : -1;\n          elt.size = 0;\n          elt.type = 5;\n        } else if(nm.slice(-1) == \"/\") {\n          for(j=i+1;j < data.length; ++j) if(dirname(cfb.FullPaths[j])==nm) break;\n          elt.C = j >= data.length ? -1 : j;\n          for(j=i+1;j < data.length; ++j) if(dirname(cfb.FullPaths[j])==dirname(nm)) break;\n          elt.R = j >= data.length ? -1 : j;\n          elt.type = 1;\n        } else {\n          if(dirname(cfb.FullPaths[i+1]||\"\") == dirname(nm)) elt.R = i + 1;\n          elt.type = 2;\n        }\n      }\n\n    }\n\n    function _write(cfb, options) {\n      var _opts = options || {};\n      rebuild_cfb(cfb);\n      if(_opts.fileType == 'zip') return write_zip(cfb, _opts);\n      var L = (function(cfb){\n        var mini_size = 0, fat_size = 0;\n        for(var i = 0; i < cfb.FileIndex.length; ++i) {\n          var file = cfb.FileIndex[i];\n          if(!file.content) continue;\n          var flen = file.content.length;\n          if(flen > 0){\n            if(flen < 0x1000) mini_size += (flen + 0x3F) >> 6;\n            else fat_size += (flen + 0x01FF) >> 9;\n          }\n        }\n        var dir_cnt = (cfb.FullPaths.length +3) >> 2;\n        var mini_cnt = (mini_size + 7) >> 3;\n        var mfat_cnt = (mini_size + 0x7F) >> 7;\n        var fat_base = mini_cnt + fat_size + dir_cnt + mfat_cnt;\n        var fat_cnt = (fat_base + 0x7F) >> 7;\n        var difat_cnt = fat_cnt <= 109 ? 0 : Math.ceil((fat_cnt-109)/0x7F);\n        while(((fat_base + fat_cnt + difat_cnt + 0x7F) >> 7) > fat_cnt) difat_cnt = ++fat_cnt <= 109 ? 0 : Math.ceil((fat_cnt-109)/0x7F);\n        var L =  [1, difat_cnt, fat_cnt, mfat_cnt, dir_cnt, fat_size, mini_size, 0];\n        cfb.FileIndex[0].size = mini_size << 6;\n        L[7] = (cfb.FileIndex[0].start=L[0]+L[1]+L[2]+L[3]+L[4]+L[5])+((L[6]+7) >> 3);\n        return L;\n      })(cfb);\n      var o = new_buf(L[7] << 9);\n      var i = 0, T = 0;\n      {\n        for(i = 0; i < 8; ++i) o.write_shift(1, HEADER_SIG[i]);\n        for(i = 0; i < 8; ++i) o.write_shift(2, 0);\n        o.write_shift(2, 0x003E);\n        o.write_shift(2, 0x0003);\n        o.write_shift(2, 0xFFFE);\n        o.write_shift(2, 0x0009);\n        o.write_shift(2, 0x0006);\n        for(i = 0; i < 3; ++i) o.write_shift(2, 0);\n        o.write_shift(4, 0);\n        o.write_shift(4, L[2]);\n        o.write_shift(4, L[0] + L[1] + L[2] + L[3] - 1);\n        o.write_shift(4, 0);\n        o.write_shift(4, 1<<12);\n        o.write_shift(4, L[3] ? L[0] + L[1] + L[2] - 1: ENDOFCHAIN);\n        o.write_shift(4, L[3]);\n        o.write_shift(-4, L[1] ? L[0] - 1: ENDOFCHAIN);\n        o.write_shift(4, L[1]);\n        for(i = 0; i < 109; ++i) o.write_shift(-4, i < L[2] ? L[1] + i : -1);\n      }\n      if(L[1]) {\n        for(T = 0; T < L[1]; ++T) {\n          for(; i < 236 + T * 127; ++i) o.write_shift(-4, i < L[2] ? L[1] + i : -1);\n          o.write_shift(-4, T === L[1] - 1 ? ENDOFCHAIN : T + 1);\n        }\n      }\n      var chainit = function(w) {\n        for(T += w; i<T-1; ++i) o.write_shift(-4, i+1);\n        if(w) { ++i; o.write_shift(-4, ENDOFCHAIN); }\n      };\n      T = i = 0;\n      for(T+=L[1]; i<T; ++i) o.write_shift(-4, consts.DIFSECT);\n      for(T+=L[2]; i<T; ++i) o.write_shift(-4, consts.FATSECT);\n      chainit(L[3]);\n      chainit(L[4]);\n      var j = 0, flen = 0;\n      var file = cfb.FileIndex[0];\n      for(; j < cfb.FileIndex.length; ++j) {\n        file = cfb.FileIndex[j];\n        if(!file.content) continue;\n        flen = file.content.length;\n        if(flen < 0x1000) continue;\n        file.start = T;\n        chainit((flen + 0x01FF) >> 9);\n      }\n      chainit((L[6] + 7) >> 3);\n      while(o.l & 0x1FF) o.write_shift(-4, consts.ENDOFCHAIN);\n      T = i = 0;\n      for(j = 0; j < cfb.FileIndex.length; ++j) {\n        file = cfb.FileIndex[j];\n        if(!file.content) continue;\n        flen = file.content.length;\n        if(!flen || flen >= 0x1000) continue;\n        file.start = T;\n        chainit((flen + 0x3F) >> 6);\n      }\n      while(o.l & 0x1FF) o.write_shift(-4, consts.ENDOFCHAIN);\n      for(i = 0; i < L[4]<<2; ++i) {\n        var nm = cfb.FullPaths[i];\n        if(!nm || nm.length === 0) {\n          for(j = 0; j < 17; ++j) o.write_shift(4, 0);\n          for(j = 0; j < 3; ++j) o.write_shift(4, -1);\n          for(j = 0; j < 12; ++j) o.write_shift(4, 0);\n          continue;\n        }\n        file = cfb.FileIndex[i];\n        if(i === 0) file.start = file.size ? file.start - 1 : ENDOFCHAIN;\n        var _nm = (i === 0 && _opts.root) || file.name;\n        flen = 2*(_nm.length+1);\n        o.write_shift(64, _nm, \"utf16le\");\n        o.write_shift(2, flen);\n        o.write_shift(1, file.type);\n        o.write_shift(1, file.color);\n        o.write_shift(-4, file.L);\n        o.write_shift(-4, file.R);\n        o.write_shift(-4, file.C);\n        if(!file.clsid) for(j = 0; j < 4; ++j) o.write_shift(4, 0);\n        else o.write_shift(16, file.clsid, \"hex\");\n        o.write_shift(4, file.state || 0);\n        o.write_shift(4, 0); o.write_shift(4, 0);\n        o.write_shift(4, 0); o.write_shift(4, 0);\n        o.write_shift(4, file.start);\n        o.write_shift(4, file.size); o.write_shift(4, 0);\n      }\n      for(i = 1; i < cfb.FileIndex.length; ++i) {\n        file = cfb.FileIndex[i];\n        if(file.size >= 0x1000) {\n          o.l = (file.start+1) << 9;\n          for(j = 0; j < file.size; ++j) o.write_shift(1, file.content[j]);\n          for(; j & 0x1FF; ++j) o.write_shift(1, 0);\n        }\n      }\n      for(i = 1; i < cfb.FileIndex.length; ++i) {\n        file = cfb.FileIndex[i];\n        if(file.size > 0 && file.size < 0x1000) {\n          for(j = 0; j < file.size; ++j) o.write_shift(1, file.content[j]);\n          for(; j & 0x3F; ++j) o.write_shift(1, 0);\n        }\n      }\n      while(o.l < o.length) o.write_shift(1, 0);\n      return o;\n    }\n    /* [MS-CFB] 2.6.4 (Unicode 3.0.1 case conversion) */\n    function find(cfb, path) {\n      var UCFullPaths = cfb.FullPaths.map(function(x) { return x.toUpperCase(); });\n      var UCPaths = UCFullPaths.map(function(x) { var y = x.split(\"/\"); return y[y.length - (x.slice(-1) == \"/\" ? 2 : 1)]; });\n      var k = false;\n      if(path.charCodeAt(0) === 47 /* \"/\" */) { k = true; path = UCFullPaths[0].slice(0, -1) + path; }\n      else k = path.indexOf(\"/\") !== -1;\n      var UCPath = path.toUpperCase();\n      var w = k === true ? UCFullPaths.indexOf(UCPath) : UCPaths.indexOf(UCPath);\n      if(w !== -1) return cfb.FileIndex[w];\n\n      var m = !UCPath.match(chr1);\n      UCPath = UCPath.replace(chr0,'');\n      if(m) UCPath = UCPath.replace(chr1,'!');\n      for(w = 0; w < UCFullPaths.length; ++w) {\n        if((m ? UCFullPaths[w].replace(chr1,'!') : UCFullPaths[w]).replace(chr0,'') == UCPath) return cfb.FileIndex[w];\n        if((m ? UCPaths[w].replace(chr1,'!') : UCPaths[w]).replace(chr0,'') == UCPath) return cfb.FileIndex[w];\n      }\n      return null;\n    }\n    /** CFB Constants */\n    var MSSZ = 64; /* Mini Sector Size = 1<<6 */\n//var MSCSZ = 4096; /* Mini Stream Cutoff Size */\n    /* 2.1 Compound File Sector Numbers and Types */\n    var ENDOFCHAIN = -2;\n    /* 2.2 Compound File Header */\n    var HEADER_SIGNATURE = 'd0cf11e0a1b11ae1';\n    var HEADER_SIG = [0xD0, 0xCF, 0x11, 0xE0, 0xA1, 0xB1, 0x1A, 0xE1];\n    var HEADER_CLSID = '00000000000000000000000000000000';\n    var consts = {\n      /* 2.1 Compund File Sector Numbers and Types */\n      MAXREGSECT: -6,\n      DIFSECT: -4,\n      FATSECT: -3,\n      ENDOFCHAIN: ENDOFCHAIN,\n      FREESECT: -1,\n      /* 2.2 Compound File Header */\n      HEADER_SIGNATURE: HEADER_SIGNATURE,\n      HEADER_MINOR_VERSION: '3e00',\n      MAXREGSID: -6,\n      NOSTREAM: -1,\n      HEADER_CLSID: HEADER_CLSID,\n      /* 2.6.1 Compound File Directory Entry */\n      EntryTypes: ['unknown','storage','stream','lockbytes','property','root']\n    };\n\n    function write_file(cfb, filename, options) {\n      // get_fs();\n      var o = _write(cfb, options);\n      fs.writeFileSync(filename, o);\n    }\n\n    function a2s(o) {\n      var out = new Array(o.length);\n      for(var i = 0; i < o.length; ++i) out[i] = String.fromCharCode(o[i]);\n      return out.join(\"\");\n    }\n\n    function write(cfb, options) {\n      var o = _write(cfb, options);\n      switch(options && options.type) {\n        case \"file\": /*get_fs();*/ fs.writeFileSync(options.filename, (o)); return o;\n        case \"binary\": return a2s(o);\n        case \"base64\": return Base64.encode(a2s(o));\n      }\n      return o;\n    }\n    /* node < 8.1 zlib does not expose bytesRead, so default to pure JS */\n    var _zlib;\n    function use_zlib(zlib) { try {\n      var InflateRaw = zlib.InflateRaw;\n      var InflRaw = new InflateRaw();\n      InflRaw._processChunk(new Uint8Array([3, 0]), InflRaw._finishFlushFlag);\n      if(InflRaw.bytesRead) _zlib = zlib;\n      else throw new Error(\"zlib does not expose bytesRead\");\n    } catch(e) {console.error(\"cannot use native zlib: \" + (e.message || e)); } }\n\n    function _inflateRawSync(payload, usz) {\n      if(!_zlib) return _inflate(payload, usz);\n      var InflateRaw = _zlib.InflateRaw;\n      var InflRaw = new InflateRaw();\n      var out = InflRaw._processChunk(payload.slice(payload.l), InflRaw._finishFlushFlag);\n      payload.l += InflRaw.bytesRead;\n      return out;\n    }\n\n    function _deflateRawSync(payload) {\n      return _zlib ? _zlib.deflateRawSync(payload) : _deflate(payload);\n    }\n    var CLEN_ORDER = [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];\n\n    /*  LEN_ID = [ 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285 ]; */\n    var LEN_LN = [   3,   4,   5,   6,   7,   8,   9,  10,  11,  13 , 15,  17,  19,  23,  27,  31,  35,  43,  51,  59,  67,  83,  99, 115, 131, 163, 195, 227, 258 ];\n\n    /*  DST_ID = [  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13,  14,  15,  16,  17,  18,  19,   20,   21,   22,   23,   24,   25,   26,    27,    28,    29 ]; */\n    var DST_LN = [  1,  2,  3,  4,  5,  7,  9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577 ];\n\n    function bit_swap_8(n) { var t = (((((n<<1)|(n<<11)) & 0x22110) | (((n<<5)|(n<<15)) & 0x88440))); return ((t>>16) | (t>>8) |t)&0xFF; }\n\n    var use_typed_arrays = typeof Uint8Array !== 'undefined';\n\n    var bitswap8 = use_typed_arrays ? new Uint8Array(1<<8) : [];\n    for(var q = 0; q < (1<<8); ++q) bitswap8[q] = bit_swap_8(q);\n\n    function bit_swap_n(n, b) {\n      var rev = bitswap8[n & 0xFF];\n      if(b <= 8) return rev >>> (8-b);\n      rev = (rev << 8) | bitswap8[(n>>8)&0xFF];\n      if(b <= 16) return rev >>> (16-b);\n      rev = (rev << 8) | bitswap8[(n>>16)&0xFF];\n      return rev >>> (24-b);\n    }\n\n    /* helpers for unaligned bit reads */\n    function read_bits_2(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 6 ? 0 : buf[h+1]<<8))>>>w)& 0x03; }\n    function read_bits_3(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 5 ? 0 : buf[h+1]<<8))>>>w)& 0x07; }\n    function read_bits_4(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 4 ? 0 : buf[h+1]<<8))>>>w)& 0x0F; }\n    function read_bits_5(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 3 ? 0 : buf[h+1]<<8))>>>w)& 0x1F; }\n    function read_bits_7(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 1 ? 0 : buf[h+1]<<8))>>>w)& 0x7F; }\n\n    /* works up to n = 3 * 8 + 1 = 25 */\n    function read_bits_n(buf, bl, n) {\n      var w = (bl&7), h = (bl>>>3), f = ((1<<n)-1);\n      var v = buf[h] >>> w;\n      if(n < 8 - w) return v & f;\n      v |= buf[h+1]<<(8-w);\n      if(n < 16 - w) return v & f;\n      v |= buf[h+2]<<(16-w);\n      if(n < 24 - w) return v & f;\n      v |= buf[h+3]<<(24-w);\n      return v & f;\n    }\n\n    /* until ArrayBuffer#realloc is a thing, fake a realloc */\n    function realloc(b, sz) {\n      var L = b.length, M = 2*L > sz ? 2*L : sz + 5, i = 0;\n      if(L >= sz) return b;\n      if(has_buf) {\n        var o = new_unsafe_buf(M);\n        // $FlowIgnore\n        if(b.copy) b.copy(o);\n        else for(; i < b.length; ++i) o[i] = b[i];\n        return o;\n      } else if(use_typed_arrays) {\n        var a = new Uint8Array(M);\n        if(a.set) a.set(b);\n        else for(; i < b.length; ++i) a[i] = b[i];\n        return a;\n      }\n      b.length = M;\n      return b;\n    }\n\n    /* zero-filled arrays for older browsers */\n    function zero_fill_array(n) {\n      var o = new Array(n);\n      for(var i = 0; i < n; ++i) o[i] = 0;\n      return o;\n    }var _deflate = (function() {\n      var _deflateRaw = (function() {\n        return function deflateRaw(data, out) {\n          var boff = 0;\n          while(boff < data.length) {\n            var L = Math.min(0xFFFF, data.length - boff);\n            var h = boff + L == data.length;\n            /* TODO: this is only type 0 stored */\n            out.write_shift(1, +h);\n            out.write_shift(2, L);\n            out.write_shift(2, (~L) & 0xFFFF);\n            while(L-- > 0) out[out.l++] = data[boff++];\n          }\n          return out.l;\n        };\n      })();\n\n      return function(data) {\n        var buf = new_buf(50+Math.floor(data.length*1.1));\n        var off = _deflateRaw(data, buf);\n        return buf.slice(0, off);\n      };\n    })();\n    /* modified inflate function also moves original read head */\n\n    /* build tree (used for literals and lengths) */\n    function build_tree(clens, cmap, MAX) {\n      var maxlen = 1, w = 0, i = 0, j = 0, ccode = 0, L = clens.length;\n\n      var bl_count  = use_typed_arrays ? new Uint16Array(32) : zero_fill_array(32);\n      for(i = 0; i < 32; ++i) bl_count[i] = 0;\n\n      for(i = L; i < MAX; ++i) clens[i] = 0;\n      L = clens.length;\n\n      var ctree = use_typed_arrays ? new Uint16Array(L) : zero_fill_array(L); // []\n\n      /* build code tree */\n      for(i = 0; i < L; ++i) {\n        bl_count[(w = clens[i])]++;\n        if(maxlen < w) maxlen = w;\n        ctree[i] = 0;\n      }\n      bl_count[0] = 0;\n      for(i = 1; i <= maxlen; ++i) bl_count[i+16] = (ccode = (ccode + bl_count[i-1])<<1);\n      for(i = 0; i < L; ++i) {\n        ccode = clens[i];\n        if(ccode != 0) ctree[i] = bl_count[ccode+16]++;\n      }\n\n      /* cmap[maxlen + 4 bits] = (off&15) + (lit<<4) reverse mapping */\n      var cleni = 0;\n      for(i = 0; i < L; ++i) {\n        cleni = clens[i];\n        if(cleni != 0) {\n          ccode = bit_swap_n(ctree[i], maxlen)>>(maxlen-cleni);\n          for(j = (1<<(maxlen + 4 - cleni)) - 1; j>=0; --j)\n            cmap[ccode|(j<<cleni)] = (cleni&15) | (i<<4);\n        }\n      }\n      return maxlen;\n    }\n\n    var fix_lmap = use_typed_arrays ? new Uint16Array(512) : zero_fill_array(512);\n    var fix_dmap = use_typed_arrays ? new Uint16Array(32)  : zero_fill_array(32);\n    if(!use_typed_arrays) {\n      for(var i = 0; i < 512; ++i) fix_lmap[i] = 0;\n      for(i = 0; i < 32; ++i) fix_dmap[i] = 0;\n    }\n    (function() {\n      var dlens = [];\n      var i = 0;\n      for(;i<32; i++) dlens.push(5);\n      build_tree(dlens, fix_dmap, 32);\n\n      var clens = [];\n      i = 0;\n      for(; i<=143; i++) clens.push(8);\n      for(; i<=255; i++) clens.push(9);\n      for(; i<=279; i++) clens.push(7);\n      for(; i<=287; i++) clens.push(8);\n      build_tree(clens, fix_lmap, 288);\n    })();\n\n    var dyn_lmap = use_typed_arrays ? new Uint16Array(32768) : zero_fill_array(32768);\n    var dyn_dmap = use_typed_arrays ? new Uint16Array(32768) : zero_fill_array(32768);\n    var dyn_cmap = use_typed_arrays ? new Uint16Array(128)   : zero_fill_array(128);\n    var dyn_len_1 = 1, dyn_len_2 = 1;\n\n    /* 5.5.3 Expanding Huffman Codes */\n    function dyn(data, boff) {\n      /* nomenclature from RFC1951 refers to bit values; these are offset by the implicit constant */\n      var _HLIT = read_bits_5(data, boff) + 257; boff += 5;\n      var _HDIST = read_bits_5(data, boff) + 1; boff += 5;\n      var _HCLEN = read_bits_4(data, boff) + 4; boff += 4;\n      var w = 0;\n\n      /* grab and store code lengths */\n      var clens = use_typed_arrays ? new Uint8Array(19) : zero_fill_array(19);\n      var ctree = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ];\n      var maxlen = 1;\n      var bl_count =  use_typed_arrays ? new Uint8Array(8) : zero_fill_array(8);\n      var next_code = use_typed_arrays ? new Uint8Array(8) : zero_fill_array(8);\n      var L = clens.length; /* 19 */\n      for(var i = 0; i < _HCLEN; ++i) {\n        clens[CLEN_ORDER[i]] = w = read_bits_3(data, boff);\n        if(maxlen < w) maxlen = w;\n        bl_count[w]++;\n        boff += 3;\n      }\n\n      /* build code tree */\n      var ccode = 0;\n      bl_count[0] = 0;\n      for(i = 1; i <= maxlen; ++i) next_code[i] = ccode = (ccode + bl_count[i-1])<<1;\n      for(i = 0; i < L; ++i) if((ccode = clens[i]) != 0) ctree[i] = next_code[ccode]++;\n      /* cmap[7 bits from stream] = (off&7) + (lit<<3) */\n      var cleni = 0;\n      for(i = 0; i < L; ++i) {\n        cleni = clens[i];\n        if(cleni != 0) {\n          ccode = bitswap8[ctree[i]]>>(8-cleni);\n          for(var j = (1<<(7-cleni))-1; j>=0; --j) dyn_cmap[ccode|(j<<cleni)] = (cleni&7) | (i<<3);\n        }\n      }\n\n      /* read literal and dist codes at once */\n      var hcodes = [];\n      maxlen = 1;\n      for(; hcodes.length < _HLIT + _HDIST;) {\n        ccode = dyn_cmap[read_bits_7(data, boff)];\n        boff += ccode & 7;\n        switch((ccode >>>= 3)) {\n          case 16:\n            w = 3 + read_bits_2(data, boff); boff += 2;\n            ccode = hcodes[hcodes.length - 1];\n            while(w-- > 0) hcodes.push(ccode);\n            break;\n          case 17:\n            w = 3 + read_bits_3(data, boff); boff += 3;\n            while(w-- > 0) hcodes.push(0);\n            break;\n          case 18:\n            w = 11 + read_bits_7(data, boff); boff += 7;\n            while(w -- > 0) hcodes.push(0);\n            break;\n          default:\n            hcodes.push(ccode);\n            if(maxlen < ccode) maxlen = ccode;\n            break;\n        }\n      }\n\n      /* build literal / length trees */\n      var h1 = hcodes.slice(0, _HLIT), h2 = hcodes.slice(_HLIT);\n      for(i = _HLIT; i < 286; ++i) h1[i] = 0;\n      for(i = _HDIST; i < 30; ++i) h2[i] = 0;\n      dyn_len_1 = build_tree(h1, dyn_lmap, 286);\n      dyn_len_2 = build_tree(h2, dyn_dmap, 30);\n      return boff;\n    }\n\n    /* return [ data, bytesRead ] */\n    function inflate(data, usz) {\n      /* shortcircuit for empty buffer [0x03, 0x00] */\n      if(data[0] == 3 && !(data[1] & 0x3)) { return [new_raw_buf(usz), 2]; }\n\n      /* bit offset */\n      var boff = 0;\n\n      /* header includes final bit and type bits */\n      var header = 0;\n\n      var outbuf = new_unsafe_buf(usz ? usz : (1<<18));\n      var woff = 0;\n      var OL = outbuf.length>>>0;\n      var max_len_1 = 0, max_len_2 = 0;\n\n      while((header&1) == 0) {\n        header = read_bits_3(data, boff); boff += 3;\n        if((header >>> 1) == 0) {\n          /* Stored block */\n          if(boff & 7) boff += 8 - (boff&7);\n          /* 2 bytes sz, 2 bytes bit inverse */\n          var sz = data[boff>>>3] | data[(boff>>>3)+1]<<8;\n          boff += 32;\n          /* push sz bytes */\n          if(!usz && OL < woff + sz) { outbuf = realloc(outbuf, woff + sz); OL = outbuf.length; }\n          if(typeof data.copy === 'function') {\n            // $FlowIgnore\n            data.copy(outbuf, woff, boff>>>3, (boff>>>3)+sz);\n            woff += sz; boff += 8*sz;\n          } else while(sz-- > 0) { outbuf[woff++] = data[boff>>>3]; boff += 8; }\n          continue;\n        } else if((header >>> 1) == 1) {\n          /* Fixed Huffman */\n          max_len_1 = 9; max_len_2 = 5;\n        } else {\n          /* Dynamic Huffman */\n          boff = dyn(data, boff);\n          max_len_1 = dyn_len_1; max_len_2 = dyn_len_2;\n        }\n        if(!usz && (OL < woff + 32767)) { outbuf = realloc(outbuf, woff + 32767); OL = outbuf.length; }\n        for(;;) { // while(true) is apparently out of vogue in modern JS circles\n          /* ingest code and move read head */\n          var bits = read_bits_n(data, boff, max_len_1);\n          var code = (header>>>1) == 1 ? fix_lmap[bits] : dyn_lmap[bits];\n          boff += code & 15; code >>>= 4;\n          /* 0-255 are literals, 256 is end of block token, 257+ are copy tokens */\n          if(((code>>>8)&0xFF) === 0) outbuf[woff++] = code;\n          else if(code == 256) break;\n          else {\n            code -= 257;\n            var len_eb = (code < 8) ? 0 : ((code-4)>>2); if(len_eb > 5) len_eb = 0;\n            var tgt = woff + LEN_LN[code];\n            /* length extra bits */\n            if(len_eb > 0) {\n              tgt += read_bits_n(data, boff, len_eb);\n              boff += len_eb;\n            }\n\n            /* dist code */\n            bits = read_bits_n(data, boff, max_len_2);\n            code = (header>>>1) == 1 ? fix_dmap[bits] : dyn_dmap[bits];\n            boff += code & 15; code >>>= 4;\n            var dst_eb = (code < 4 ? 0 : (code-2)>>1);\n            var dst = DST_LN[code];\n            /* dist extra bits */\n            if(dst_eb > 0) {\n              dst += read_bits_n(data, boff, dst_eb);\n              boff += dst_eb;\n            }\n\n            /* in the common case, manual byte copy is faster than TA set / Buffer copy */\n            if(!usz && OL < tgt) { outbuf = realloc(outbuf, tgt); OL = outbuf.length; }\n            while(woff < tgt) { outbuf[woff] = outbuf[woff - dst]; ++woff; }\n          }\n        }\n      }\n      return [usz ? outbuf : outbuf.slice(0, woff), (boff+7)>>>3];\n    }\n\n    function _inflate(payload, usz) {\n      var data = payload.slice(payload.l||0);\n      var out = inflate(data, usz);\n      payload.l += out[1];\n      return out[0];\n    }\n\n    function warn_or_throw(wrn, msg) {\n      if(wrn) { if(typeof console !== 'undefined') console.error(msg); }\n      else throw new Error(msg);\n    }\n\n    function parse_zip(file, options) {\n      var blob = file;\n      prep_blob(blob, 0);\n\n      var FileIndex = [], FullPaths = [];\n      var o = {\n        FileIndex: FileIndex,\n        FullPaths: FullPaths\n      };\n      init_cfb(o, { root: options.root });\n\n      /* find end of central directory, start just after signature */\n      var i = blob.length - 4;\n      while((blob[i] != 0x50 || blob[i+1] != 0x4b || blob[i+2] != 0x05 || blob[i+3] != 0x06) && i >= 0) --i;\n      blob.l = i + 4;\n\n      /* parse end of central directory */\n      blob.l += 4;\n      var fcnt = blob.read_shift(2);\n      blob.l += 6;\n      var start_cd = blob.read_shift(4);\n\n      /* parse central directory */\n      blob.l = start_cd;\n\n      for(i = 0; i < fcnt; ++i) {\n        /* trust local file header instead of CD entry */\n        blob.l += 20;\n        var csz = blob.read_shift(4);\n        var usz = blob.read_shift(4);\n        var namelen = blob.read_shift(2);\n        var efsz = blob.read_shift(2);\n        var fcsz = blob.read_shift(2);\n        blob.l += 8;\n        var offset = blob.read_shift(4);\n        var EF = parse_extra_field(blob.slice(blob.l+namelen, blob.l+namelen+efsz));\n        blob.l += namelen + efsz + fcsz;\n\n        var L = blob.l;\n        blob.l = offset + 4;\n        parse_local_file(blob, csz, usz, o, EF);\n        blob.l = L;\n      }\n\n      return o;\n    }\n\n\n    /* head starts just after local file header signature */\n    function parse_local_file(blob, csz, usz, o, EF) {\n      /* [local file header] */\n      blob.l += 2;\n      var flags = blob.read_shift(2);\n      var meth = blob.read_shift(2);\n      var date = parse_dos_date(blob);\n\n      if(flags & 0x2041) throw new Error(\"Unsupported ZIP encryption\");\n      var crc32 = blob.read_shift(4);\n      var _csz = blob.read_shift(4);\n      var _usz = blob.read_shift(4);\n\n      var namelen = blob.read_shift(2);\n      var efsz = blob.read_shift(2);\n\n      // TODO: flags & (1<<11) // UTF8\n      var name = \"\"; for(var i = 0; i < namelen; ++i) name += String.fromCharCode(blob[blob.l++]);\n      if(efsz) {\n        var ef = parse_extra_field(blob.slice(blob.l, blob.l + efsz));\n        if((ef[0x5455]||{}).mt) date = ef[0x5455].mt;\n        if(((EF||{})[0x5455]||{}).mt) date = EF[0x5455].mt;\n      }\n      blob.l += efsz;\n\n      /* [encryption header] */\n\n      /* [file data] */\n      var data = blob.slice(blob.l, blob.l + _csz);\n      switch(meth) {\n        case 8: data = _inflateRawSync(blob, _usz); break;\n        case 0: break;\n        default: throw new Error(\"Unsupported ZIP Compression method \" + meth);\n      }\n\n      /* [data descriptor] */\n      var wrn = false;\n      if(flags & 8) {\n        crc32 = blob.read_shift(4);\n        if(crc32 == 0x08074b50) { crc32 = blob.read_shift(4); wrn = true; }\n        _csz = blob.read_shift(4);\n        _usz = blob.read_shift(4);\n      }\n\n      if(_csz != csz) warn_or_throw(wrn, \"Bad compressed size: \" + csz + \" != \" + _csz);\n      if(_usz != usz) warn_or_throw(wrn, \"Bad uncompressed size: \" + usz + \" != \" + _usz);\n      var _crc32 = CRC32.buf(data, 0);\n      if(crc32 != _crc32) warn_or_throw(wrn, \"Bad CRC32 checksum: \" + crc32 + \" != \" + _crc32);\n      cfb_add(o, name, data, {unsafe: true, mt: date});\n    }\n    function write_zip(cfb, options) {\n      var _opts = options || {};\n      var out = [], cdirs = [];\n      var o = new_buf(1);\n      var method = (_opts.compression ? 8 : 0), flags = 0;\n      var desc = false;\n      if(desc) flags |= 8;\n      var i = 0, j = 0;\n\n      var start_cd = 0, fcnt = 0;\n      var root = cfb.FullPaths[0], fp = root, fi = cfb.FileIndex[0];\n      var crcs = [];\n      var sz_cd = 0;\n\n      for(i = 1; i < cfb.FullPaths.length; ++i) {\n        fp = cfb.FullPaths[i].slice(root.length); fi = cfb.FileIndex[i];\n        if(!fi.size || !fi.content || fp == \"\\u0001Sh33tJ5\") continue;\n        var start = start_cd;\n\n        /* TODO: CP437 filename */\n        var namebuf = new_buf(fp.length);\n        for(j = 0; j < fp.length; ++j) namebuf.write_shift(1, fp.charCodeAt(j) & 0x7F);\n        namebuf = namebuf.slice(0, namebuf.l);\n        crcs[fcnt] = CRC32.buf(fi.content, 0);\n\n        var outbuf = fi.content;\n        if(method == 8) outbuf = _deflateRawSync(outbuf);\n\n        /* local file header */\n        o = new_buf(30);\n        o.write_shift(4, 0x04034b50);\n        o.write_shift(2, 20);\n        o.write_shift(2, flags);\n        o.write_shift(2, method);\n        /* TODO: last mod file time/date */\n        if(fi.mt) write_dos_date(o, fi.mt);\n        else o.write_shift(4, 0);\n        o.write_shift(-4, (flags & 8) ? 0 : crcs[fcnt]);\n        o.write_shift(4,  (flags & 8) ? 0 : outbuf.length);\n        o.write_shift(4,  (flags & 8) ? 0 : fi.content.length);\n        o.write_shift(2, namebuf.length);\n        o.write_shift(2, 0);\n\n        start_cd += o.length;\n        out.push(o);\n        start_cd += namebuf.length;\n        out.push(namebuf);\n\n        /* TODO: encryption header ? */\n        start_cd += outbuf.length;\n        out.push(outbuf);\n\n        /* data descriptor */\n        if(flags & 8) {\n          o = new_buf(12);\n          o.write_shift(-4, crcs[fcnt]);\n          o.write_shift(4, outbuf.length);\n          o.write_shift(4, fi.content.length);\n          start_cd += o.l;\n          out.push(o);\n        }\n\n        /* central directory */\n        o = new_buf(46);\n        o.write_shift(4, 0x02014b50);\n        o.write_shift(2, 0);\n        o.write_shift(2, 20);\n        o.write_shift(2, flags);\n        o.write_shift(2, method);\n        o.write_shift(4, 0); /* TODO: last mod file time/date */\n        o.write_shift(-4, crcs[fcnt]);\n\n        o.write_shift(4, outbuf.length);\n        o.write_shift(4, fi.content.length);\n        o.write_shift(2, namebuf.length);\n        o.write_shift(2, 0);\n        o.write_shift(2, 0);\n        o.write_shift(2, 0);\n        o.write_shift(2, 0);\n        o.write_shift(4, 0);\n        o.write_shift(4, start);\n\n        sz_cd += o.l;\n        cdirs.push(o);\n        sz_cd += namebuf.length;\n        cdirs.push(namebuf);\n        ++fcnt;\n      }\n\n      /* end of central directory */\n      o = new_buf(22);\n      o.write_shift(4, 0x06054b50);\n      o.write_shift(2, 0);\n      o.write_shift(2, 0);\n      o.write_shift(2, fcnt);\n      o.write_shift(2, fcnt);\n      o.write_shift(4, sz_cd);\n      o.write_shift(4, start_cd);\n      o.write_shift(2, 0);\n\n      return bconcat(([bconcat((out)), bconcat(cdirs), o]));\n    }\n    function cfb_new(opts) {\n      var o = ({});\n      init_cfb(o, opts);\n      return o;\n    }\n\n    function cfb_add(cfb, name, content, opts) {\n      var unsafe = opts && opts.unsafe;\n      if(!unsafe) init_cfb(cfb);\n      var file = !unsafe && CFB.find(cfb, name);\n      if(!file) {\n        var fpath = cfb.FullPaths[0];\n        if(name.slice(0, fpath.length) == fpath) fpath = name;\n        else {\n          if(fpath.slice(-1) != \"/\") fpath += \"/\";\n          fpath = (fpath + name).replace(\"//\",\"/\");\n        }\n        file = ({name: filename(name), type: 2});\n        cfb.FileIndex.push(file);\n        cfb.FullPaths.push(fpath);\n        if(!unsafe) CFB.utils.cfb_gc(cfb);\n      }\n      file.content = (content);\n      file.size = content ? content.length : 0;\n      if(opts) {\n        if(opts.CLSID) file.clsid = opts.CLSID;\n        if(opts.mt) file.mt = opts.mt;\n        if(opts.ct) file.ct = opts.ct;\n      }\n      return file;\n    }\n\n    function cfb_del(cfb, name) {\n      init_cfb(cfb);\n      var file = CFB.find(cfb, name);\n      if(file) for(var j = 0; j < cfb.FileIndex.length; ++j) if(cfb.FileIndex[j] == file) {\n        cfb.FileIndex.splice(j, 1);\n        cfb.FullPaths.splice(j, 1);\n        return true;\n      }\n      return false;\n    }\n\n    function cfb_mov(cfb, old_name, new_name) {\n      init_cfb(cfb);\n      var file = CFB.find(cfb, old_name);\n      if(file) for(var j = 0; j < cfb.FileIndex.length; ++j) if(cfb.FileIndex[j] == file) {\n        cfb.FileIndex[j].name = filename(new_name);\n        cfb.FullPaths[j] = new_name;\n        return true;\n      }\n      return false;\n    }\n\n    function cfb_gc(cfb) { rebuild_cfb(cfb, true); }\n\n    exports.find = find;\n    exports.read = read;\n    exports.parse = parse;\n    exports.write = write;\n    exports.writeFile = write_file;\n    exports.utils = {\n      cfb_new: cfb_new,\n      cfb_add: cfb_add,\n      cfb_del: cfb_del,\n      cfb_mov: cfb_mov,\n      cfb_gc: cfb_gc,\n      ReadShift: ReadShift,\n      CheckField: CheckField,\n      prep_blob: prep_blob,\n      bconcat: bconcat,\n      use_zlib: use_zlib,\n      _deflateRaw: _deflate,\n      _inflateRaw: _inflate,\n      consts: consts\n    };\n\n    return exports;\n  })();\n\n  if(typeof require !== 'undefined' && typeof module !== 'undefined' && typeof DO_NOT_EXPORT_CFB === 'undefined') { module.exports = CFB; }\n  var _fs;\n  // warning: vite can't support\n  // if(typeof require !== 'undefined') try { _fs = require('fs'); } catch(e) {}\n\n  /* normalize data for blob ctor */\n  function blobify(data) {\n    if(typeof data === \"string\") return s2ab(data);\n    if(Array.isArray(data)) return a2u(data);\n    return data;\n  }\n  /* write or download file */\n  function write_dl(fname, payload, enc) {\n    /*global IE_SaveFile, Blob, navigator, saveAs, URL, document, File, chrome */\n    if(typeof _fs !== 'undefined' && _fs.writeFileSync) return enc ? _fs.writeFileSync(fname, payload, enc) : _fs.writeFileSync(fname, payload);\n    var data = (enc == \"utf8\") ? utf8write(payload) : payload;\n    if(typeof IE_SaveFile !== 'undefined') return IE_SaveFile(data, fname);\n    if(typeof Blob !== 'undefined') {\n      var blob = new Blob([blobify(data)], {type:\"application/octet-stream\"});\n      if(typeof navigator !== 'undefined' && navigator.msSaveBlob) return navigator.msSaveBlob(blob, fname);\n      if(typeof saveAs !== 'undefined') return saveAs(blob, fname);\n      if(typeof URL !== 'undefined' && typeof document !== 'undefined' && document.createElement && URL.createObjectURL) {\n        var url = URL.createObjectURL(blob);\n        if(typeof chrome === 'object' && typeof (chrome.downloads||{}).download == \"function\") {\n          if(URL.revokeObjectURL && typeof setTimeout !== 'undefined') setTimeout(function() { URL.revokeObjectURL(url); }, 60000);\n          return chrome.downloads.download({ url: url, filename: fname, saveAs: true});\n        }\n        var a = document.createElement(\"a\");\n        if(a.download != null) {\n          a.download = fname; a.href = url; document.body.appendChild(a); a.click();\n          document.body.removeChild(a);\n          if(URL.revokeObjectURL && typeof setTimeout !== 'undefined') setTimeout(function() { URL.revokeObjectURL(url); }, 60000);\n          return url;\n        }\n      }\n    }\n    // $FlowIgnore\n    if(typeof $ !== 'undefined' && typeof File !== 'undefined' && typeof Folder !== 'undefined') try { // extendscript\n      // $FlowIgnore\n      var out = File(fname); out.open(\"w\"); out.encoding = \"binary\";\n      if(Array.isArray(payload)) payload = a2s(payload);\n      out.write(payload); out.close(); return payload;\n    } catch(e) { if(!e.message || !e.message.match(/onstruct/)) throw e; }\n    throw new Error(\"cannot save file \" + fname);\n  }\n\n  /* read binary data from file */\n  function read_binary(path) {\n    if(typeof _fs !== 'undefined') return _fs.readFileSync(path);\n    // $FlowIgnore\n    if(typeof $ !== 'undefined' && typeof File !== 'undefined' && typeof Folder !== 'undefined') try { // extendscript\n      // $FlowIgnore\n      var infile = File(path); infile.open(\"r\"); infile.encoding = \"binary\";\n      var data = infile.read(); infile.close();\n      return data;\n    } catch(e) { if(!e.message || !e.message.match(/onstruct/)) throw e; }\n    throw new Error(\"Cannot access file \" + path);\n  }\n  function keys(o) {\n    var ks = Object.keys(o), o2 = [];\n    for(var i = 0; i < ks.length; ++i) if(o.hasOwnProperty(ks[i])) o2.push(ks[i]);\n    return o2;\n  }\n\n  function evert_key(obj, key) {\n    var o = ([]), K = keys(obj);\n    for(var i = 0; i !== K.length; ++i) if(o[obj[K[i]][key]] == null) o[obj[K[i]][key]] = K[i];\n    return o;\n  }\n\n  function evert(obj) {\n    var o = ([]), K = keys(obj);\n    for(var i = 0; i !== K.length; ++i) o[obj[K[i]]] = K[i];\n    return o;\n  }\n\n  function evert_num(obj) {\n    var o = ([]), K = keys(obj);\n    for(var i = 0; i !== K.length; ++i) o[obj[K[i]]] = parseInt(K[i],10);\n    return o;\n  }\n\n  function evert_arr(obj) {\n    var o = ([]), K = keys(obj);\n    for(var i = 0; i !== K.length; ++i) {\n      if(o[obj[K[i]]] == null) o[obj[K[i]]] = [];\n      o[obj[K[i]]].push(K[i]);\n    }\n    return o;\n  }\n\n  var basedate = new Date(1899, 11, 30, 0, 0, 0); // 2209161600000\n  var dnthresh = basedate.getTime() + (new Date().getTimezoneOffset() - basedate.getTimezoneOffset()) * 60000;\n  function datenum(v, date1904) {\n    var epoch = v.getTime();\n    if(date1904) epoch -= 1462*24*60*60*1000;\n    return (epoch - dnthresh) / (24 * 60 * 60 * 1000);\n  }\n  function numdate(v) {\n    var out = new Date();\n    out.setTime(v * 24 * 60 * 60 * 1000 + dnthresh);\n    return out;\n  }\n\n  /* ISO 8601 Duration */\n  function parse_isodur(s) {\n    var sec = 0, mt = 0, time = false;\n    var m = s.match(/P([0-9\\.]+Y)?([0-9\\.]+M)?([0-9\\.]+D)?T([0-9\\.]+H)?([0-9\\.]+M)?([0-9\\.]+S)?/);\n    if(!m) throw new Error(\"|\" + s + \"| is not an ISO8601 Duration\");\n    for(var i = 1; i != m.length; ++i) {\n      if(!m[i]) continue;\n      mt = 1;\n      if(i > 3) time = true;\n      switch(m[i].slice(m[i].length-1)) {\n        case 'Y':\n          throw new Error(\"Unsupported ISO Duration Field: \" + m[i].slice(m[i].length-1));\n        case 'D': mt *= 24;\n        /* falls through */\n        case 'H': mt *= 60;\n        /* falls through */\n        case 'M':\n          if(!time) throw new Error(\"Unsupported ISO Duration Field: M\");\n          else mt *= 60;\n        /* falls through */\n        case 'S': break;\n      }\n      sec += mt * parseInt(m[i], 10);\n    }\n    return sec;\n  }\n\n  var good_pd_date = new Date('2017-02-19T19:06:09.000Z');\n  if(isNaN(good_pd_date.getFullYear())) good_pd_date = new Date('2/19/17');\n  var good_pd = good_pd_date.getFullYear() == 2017;\n  /* parses a date as a local date */\n  function parseDate(str, fixdate) {\n    var d = new Date(str);\n    if(good_pd) {\n      if(fixdate > 0) d.setTime(d.getTime() + d.getTimezoneOffset() * 60 * 1000);\n      else if(fixdate < 0) d.setTime(d.getTime() - d.getTimezoneOffset() * 60 * 1000);\n      return d;\n    }\n    if(str instanceof Date) return str;\n    if(good_pd_date.getFullYear() == 1917 && !isNaN(d.getFullYear())) {\n      var s = d.getFullYear();\n      if(str.indexOf(\"\" + s) > -1) return d;\n      d.setFullYear(d.getFullYear() + 100); return d;\n    }\n    var n = str.match(/\\d+/g)||[\"2017\",\"2\",\"19\",\"0\",\"0\",\"0\"];\n    var out = new Date(+n[0], +n[1] - 1, +n[2], (+n[3]||0), (+n[4]||0), (+n[5]||0));\n    if(str.indexOf(\"Z\") > -1) out = new Date(out.getTime() - out.getTimezoneOffset() * 60 * 1000);\n    return out;\n  }\n\n  function cc2str(arr) {\n    var o = \"\";\n    for(var i = 0; i != arr.length; ++i) o += String.fromCharCode(arr[i]);\n    return o;\n  }\n\n  function dup(o) {\n    if(typeof JSON != 'undefined' && !Array.isArray(o)) return JSON.parse(JSON.stringify(o));\n    if(typeof o != 'object' || o == null) return o;\n    if(o instanceof Date) return new Date(o.getTime());\n    var out = {};\n    for(var k in o) if(o.hasOwnProperty(k)) out[k] = dup(o[k]);\n    return out;\n  }\n\n  function fill(c,l) { var o = \"\"; while(o.length < l) o+=c; return o; }\n\n  /* TODO: stress test */\n  function fuzzynum(s) {\n    var v = Number(s);\n    if(!isNaN(v)) return v;\n    var wt = 1;\n    var ss = s.replace(/([\\d]),([\\d])/g,\"$1$2\").replace(/[$]/g,\"\").replace(/[%]/g, function() { wt *= 100; return \"\";});\n    if(!isNaN(v = Number(ss))) return v / wt;\n    ss = ss.replace(/[(](.*)[)]/,function($$, $1) { wt = -wt; return $1;});\n    if(!isNaN(v = Number(ss))) return v / wt;\n    return v;\n  }\n  function fuzzydate(s) {\n    var o = new Date(s), n = new Date(NaN);\n    var y = o.getYear(), m = o.getMonth(), d = o.getDate();\n    if(isNaN(d)) return n;\n    if(y < 0 || y > 8099) return n;\n    if((m > 0 || d > 1) && y != 101) return o;\n    if(s.toLowerCase().match(/jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec/)) return o;\n    if(s.match(/[^-0-9:,\\/\\\\]/)) return n;\n    return o;\n  }\n\n  var safe_split_regex = \"abacaba\".split(/(:?b)/i).length == 5;\n  function split_regex(str, re, def) {\n    if(safe_split_regex || typeof re == \"string\") return str.split(re);\n    var p = str.split(re), o = [p[0]];\n    for(var i = 1; i < p.length; ++i) { o.push(def); o.push(p[i]); }\n    return o;\n  }\n  function getdatastr(data) {\n    if(!data) return null;\n    if(data.data) return debom(data.data);\n    if(data.asNodeBuffer && has_buf) return debom(data.asNodeBuffer().toString('binary'));\n    if(data.asBinary) return debom(data.asBinary());\n    if(data._data && data._data.getContent) return debom(cc2str(Array.prototype.slice.call(data._data.getContent(),0)));\n    return null;\n  }\n\n  function getdatabin(data) {\n    if(!data) return null;\n    if(data.data) return char_codes(data.data);\n    if(data.asNodeBuffer && has_buf) return data.asNodeBuffer();\n    if(data._data && data._data.getContent) {\n      var o = data._data.getContent();\n      if(typeof o == \"string\") return char_codes(o);\n      return Array.prototype.slice.call(o);\n    }\n    return null;\n  }\n\n  function getdata(data) { return (data && data.name.slice(-4) === \".bin\") ? getdatabin(data) : getdatastr(data); }\n\n  /* Part 2 Section 10.1.2 \"Mapping Content Types\" Names are case-insensitive */\n  /* OASIS does not comment on filename case sensitivity */\n  function safegetzipfile(zip, file) {\n    var k = keys(zip.files);\n    var f = file.toLowerCase(), g = f.replace(/\\//g,'\\\\');\n    for(var i=0; i<k.length; ++i) {\n      var n = k[i].toLowerCase();\n      if(f == n || g == n) return zip.files[k[i]];\n    }\n    return null;\n  }\n\n  function getzipfile(zip, file) {\n    var o = safegetzipfile(zip, file);\n    if(o == null) throw new Error(\"Cannot find file \" + file + \" in zip\");\n    return o;\n  }\n\n  function getzipdata(zip, file, safe) {\n    if(!safe) return getdata(getzipfile(zip, file));\n    if(!file) return null;\n    try { return getzipdata(zip, file); } catch(e) { return null; }\n  }\n\n  function getzipstr(zip, file, safe) {\n    if(!safe) return getdatastr(getzipfile(zip, file));\n    if(!file) return null;\n    try { return getzipstr(zip, file); } catch(e) { return null; }\n  }\n\n  function zipentries(zip) {\n    var k = keys(zip.files), o = [];\n    for(var i = 0; i < k.length; ++i) if(k[i].slice(-1) != '/') o.push(k[i]);\n    return o.sort();\n  }\n\n  var jszip;\n  /*global JSZipSync:true */\n  if(typeof JSZipSync !== 'undefined') jszip = JSZipSync;\n  if(typeof exports !== 'undefined') {\n    if(typeof module !== 'undefined' && module.exports) {\n      if(typeof jszip === 'undefined') jszip = undefined;\n    }\n  }\n\n  function resolve_path(path, base) {\n    var result = base.split('/');\n    if(base.slice(-1) != \"/\") result.pop(); // folder path\n    var target = path.split('/');\n    while (target.length !== 0) {\n      var step = target.shift();\n      if (step === '..') result.pop();\n      else if (step !== '.') result.push(step);\n    }\n    return result.join('/');\n  }\n  var XML_HEADER = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\\r\\n';\n  var attregexg=/([^\"\\s?>\\/]+)\\s*=\\s*((?:\")([^\"]*)(?:\")|(?:')([^']*)(?:')|([^'\">\\s]+))/g;\n  var tagregex=/<[\\/\\?]?[a-zA-Z0-9:]+(?:\\s+[^\"\\s?>\\/]+\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^'\">\\s=]+))*\\s?[\\/\\?]?>/g;\n  if(!(XML_HEADER.match(tagregex))) tagregex = /<[^>]*>/g;\n  var nsregex=/<\\w*:/, nsregex2 = /<(\\/?)\\w+:/;\n  function parsexmltag(tag, skip_root) {\n    var z = ({});\n    var eq = 0, c = 0;\n    for(; eq !== tag.length; ++eq) if((c = tag.charCodeAt(eq)) === 32 || c === 10 || c === 13) break;\n    if(!skip_root) z[0] = tag.slice(0, eq);\n    if(eq === tag.length) return z;\n    var m = tag.match(attregexg), j=0, v=\"\", i=0, q=\"\", cc=\"\", quot = 1;\n    if(m) for(i = 0; i != m.length; ++i) {\n      cc = m[i];\n      for(c=0; c != cc.length; ++c) if(cc.charCodeAt(c) === 61) break;\n      q = cc.slice(0,c).trim();\n      while(cc.charCodeAt(c+1) == 32) ++c;\n      quot = ((eq=cc.charCodeAt(c+1)) == 34 || eq == 39) ? 1 : 0;\n      v = cc.slice(c+1+quot, cc.length-quot);\n      for(j=0;j!=q.length;++j) if(q.charCodeAt(j) === 58) break;\n      if(j===q.length) {\n        if(q.indexOf(\"_\") > 0) q = q.slice(0, q.indexOf(\"_\")); // from ods\n        z[q] = v;\n        z[q.toLowerCase()] = v;\n      }\n      else {\n        var k = (j===5 && q.slice(0,5)===\"xmlns\"?\"xmlns\":\"\")+q.slice(j+1);\n        if(z[k] && q.slice(j-3,j) == \"ext\") continue; // from ods\n        z[k] = v;\n        z[k.toLowerCase()] = v;\n      }\n    }\n    return z;\n  }\n  function strip_ns(x) { return x.replace(nsregex2, \"<$1\"); }\n\n  var encodings = {\n    '&quot;': '\"',\n    '&apos;': \"'\",\n    '&gt;': '>',\n    '&lt;': '<',\n    '&amp;': '&'\n  };\n  var rencoding = evert(encodings);\n//var rencstr = \"&<>'\\\"\".split(\"\");\n\n// TODO: CP remap (need to read file version to determine OS)\n  var unescapexml = (function() {\n    /* 22.4.2.4 bstr (Basic String) */\n    var encregex = /&(?:quot|apos|gt|lt|amp|#x?([\\da-fA-F]+));/g, coderegex = /_x([\\da-fA-F]{4})_/g;\n    return function unescapexml(text) {\n      var s = text + '', i = s.indexOf(\"<![CDATA[\");\n      if(i == -1) return s.replace(encregex, function($$, $1) { return encodings[$$]||String.fromCharCode(parseInt($1,$$.indexOf(\"x\")>-1?16:10))||$$; }).replace(coderegex,function(m,c) {return String.fromCharCode(parseInt(c,16));});\n      var j = s.indexOf(\"]]>\");\n      return unescapexml(s.slice(0, i)) + s.slice(i+9,j) + unescapexml(s.slice(j+3));\n    };\n  })();\n\n  var decregex=/[&<>'\"]/g, charegex = /[\\u0000-\\u0008\\u000b-\\u001f]/g;\n  function escapexml(text){\n    var s = text + '';\n    return s.replace(decregex, function(y) { return rencoding[y]; }).replace(charegex,function(s) { return \"_x\" + (\"000\"+s.charCodeAt(0).toString(16)).slice(-4) + \"_\";});\n  }\n  function escapexmltag(text){ return escapexml(text).replace(/ /g,\"_x0020_\"); }\n\n  var htmlcharegex = /[\\u0000-\\u001f]/g;\n  function escapehtml(text){\n    var s = text + '';\n    return s.replace(decregex, function(y) { return rencoding[y]; }).replace(/\\n/g, \"<br/>\").replace(htmlcharegex,function(s) { return \"&#x\" + (\"000\"+s.charCodeAt(0).toString(16)).slice(-4) + \";\"; });\n  }\n\n  function escapexlml(text){\n    var s = text + '';\n    return s.replace(decregex, function(y) { return rencoding[y]; }).replace(htmlcharegex,function(s) { return \"&#x\" + (s.charCodeAt(0).toString(16)).toUpperCase() + \";\"; });\n  }\n\n  /* TODO: handle codepages */\n  var xlml_fixstr = (function() {\n    var entregex = /&#(\\d+);/g;\n    function entrepl($$,$1) { return String.fromCharCode(parseInt($1,10)); }\n    return function xlml_fixstr(str) { return str.replace(entregex,entrepl); };\n  })();\n  var xlml_unfixstr = (function() {\n    return function xlml_unfixstr(str) { return str.replace(/(\\r\\n|[\\r\\n])/g,\"\\&#10;\"); };\n  })();\n\n  function parsexmlbool(value) {\n    switch(value) {\n      case 1: case true: case '1': case 'true': case 'TRUE': return true;\n      /* case '0': case 'false': case 'FALSE':*/\n      default: return false;\n    }\n  }\n\n  var utf8read = function utf8reada(orig) {\n    var out = \"\", i = 0, c = 0, d = 0, e = 0, f = 0, w = 0;\n    while (i < orig.length) {\n      c = orig.charCodeAt(i++);\n      if (c < 128) { out += String.fromCharCode(c); continue; }\n      d = orig.charCodeAt(i++);\n      if (c>191 && c<224) { f = ((c & 31) << 6); f |= (d & 63); out += String.fromCharCode(f); continue; }\n      e = orig.charCodeAt(i++);\n      if (c < 240) { out += String.fromCharCode(((c & 15) << 12) | ((d & 63) << 6) | (e & 63)); continue; }\n      f = orig.charCodeAt(i++);\n      w = (((c & 7) << 18) | ((d & 63) << 12) | ((e & 63) << 6) | (f & 63))-65536;\n      out += String.fromCharCode(0xD800 + ((w>>>10)&1023));\n      out += String.fromCharCode(0xDC00 + (w&1023));\n    }\n    return out;\n  };\n\n  var utf8write = function(orig) {\n    var out = [], i = 0, c = 0, d = 0;\n    while(i < orig.length) {\n      c = orig.charCodeAt(i++);\n      switch(true) {\n        case c < 128: out.push(String.fromCharCode(c)); break;\n        case c < 2048:\n          out.push(String.fromCharCode(192 + (c >> 6)));\n          out.push(String.fromCharCode(128 + (c & 63)));\n          break;\n        case c >= 55296 && c < 57344:\n          c -= 55296; d = orig.charCodeAt(i++) - 56320 + (c<<10);\n          out.push(String.fromCharCode(240 + ((d >>18) & 7)));\n          out.push(String.fromCharCode(144 + ((d >>12) & 63)));\n          out.push(String.fromCharCode(128 + ((d >> 6) & 63)));\n          out.push(String.fromCharCode(128 + (d & 63)));\n          break;\n        default:\n          out.push(String.fromCharCode(224 + (c >> 12)));\n          out.push(String.fromCharCode(128 + ((c >> 6) & 63)));\n          out.push(String.fromCharCode(128 + (c & 63)));\n      }\n    }\n    return out.join(\"\");\n  };\n\n  if(has_buf) {\n    var utf8readb = function utf8readb(data) {\n      var out = Buffer.alloc(2*data.length), w, i, j = 1, k = 0, ww=0, c;\n      for(i = 0; i < data.length; i+=j) {\n        j = 1;\n        if((c=data.charCodeAt(i)) < 128) w = c;\n        else if(c < 224) { w = (c&31)*64+(data.charCodeAt(i+1)&63); j=2; }\n        else if(c < 240) { w=(c&15)*4096+(data.charCodeAt(i+1)&63)*64+(data.charCodeAt(i+2)&63); j=3; }\n        else { j = 4;\n          w = (c & 7)*262144+(data.charCodeAt(i+1)&63)*4096+(data.charCodeAt(i+2)&63)*64+(data.charCodeAt(i+3)&63);\n          w -= 65536; ww = 0xD800 + ((w>>>10)&1023); w = 0xDC00 + (w&1023);\n        }\n        if(ww !== 0) { out[k++] = ww&255; out[k++] = ww>>>8; ww = 0; }\n        out[k++] = w%256; out[k++] = w>>>8;\n      }\n      return out.slice(0,k).toString('ucs2');\n    };\n    var corpus = \"foo bar baz\\u00e2\\u0098\\u0083\\u00f0\\u009f\\u008d\\u00a3\";\n    if(utf8read(corpus) == utf8readb(corpus)) utf8read = utf8readb;\n    // $FlowIgnore\n    var utf8readc = function utf8readc(data) { return Buffer_from(data, 'binary').toString('utf8'); };\n    if(utf8read(corpus) == utf8readc(corpus)) utf8read = utf8readc;\n\n    // $FlowIgnore\n    utf8write = function(data) { return Buffer_from(data, 'utf8').toString(\"binary\"); };\n  }\n\n// matches <foo>...</foo> extracts content\n  var matchtag = (function() {\n    var mtcache = ({});\n    return function matchtag(f,g) {\n      var t = f+\"|\"+(g||\"\");\n      if(mtcache[t]) return mtcache[t];\n      return (mtcache[t] = new RegExp('<(?:\\\\w+:)?'+f+'(?: xml:space=\"preserve\")?(?:[^>]*)>([\\\\s\\\\S]*?)</(?:\\\\w+:)?'+f+'>',((g||\"\"))));\n    };\n  })();\n\n  var htmldecode = (function() {\n    var entities = [\n      ['nbsp', ' '], ['middot', '·'],\n      ['quot', '\"'], ['apos', \"'\"], ['gt',   '>'], ['lt',   '<'], ['amp',  '&']\n    ].map(function(x) { return [new RegExp('&' + x[0] + ';', \"g\"), x[1]]; });\n    return function htmldecode(str) {\n      var o = str.replace(/^[\\t\\n\\r ]+/, \"\").replace(/[\\t\\n\\r ]+$/,\"\").replace(/[\\t\\n\\r ]+/g, \" \").replace(/<\\s*[bB][rR]\\s*\\/?>/g,\"\\n\").replace(/<[^>]*>/g,\"\");\n      for(var i = 0; i < entities.length; ++i) o = o.replace(entities[i][0], entities[i][1]);\n      return o;\n    };\n  })();\n\n  var vtregex = (function(){ var vt_cache = {};\n    return function vt_regex(bt) {\n      if(vt_cache[bt] !== undefined) return vt_cache[bt];\n      return (vt_cache[bt] = new RegExp(\"<(?:vt:)?\" + bt + \">([\\\\s\\\\S]*?)</(?:vt:)?\" + bt + \">\", 'g') );\n    };})();\n  var vtvregex = /<\\/?(?:vt:)?variant>/g, vtmregex = /<(?:vt:)([^>]*)>([\\s\\S]*)</;\n  function parseVector(data, opts) {\n    var h = parsexmltag(data);\n\n    var matches = data.match(vtregex(h.baseType))||[];\n    var res = [];\n    if(matches.length != h.size) {\n      if(opts.WTF) throw new Error(\"unexpected vector length \" + matches.length + \" != \" + h.size);\n      return res;\n    }\n    matches.forEach(function(x) {\n      var v = x.replace(vtvregex,\"\").match(vtmregex);\n      if(v) res.push({v:utf8read(v[2]), t:v[1]});\n    });\n    return res;\n  }\n\n  var wtregex = /(^\\s|\\s$|\\n)/;\n  function writetag(f,g) { return '<' + f + (g.match(wtregex)?' xml:space=\"preserve\"' : \"\") + '>' + g + '</' + f + '>'; }\n\n  function wxt_helper(h) { return keys(h).map(function(k) { return \" \" + k + '=\"' + h[k] + '\"';}).join(\"\"); }\n  function writextag(f,g,h) { return '<' + f + ((h != null) ? wxt_helper(h) : \"\") + ((g != null) ? (g.match(wtregex)?' xml:space=\"preserve\"' : \"\") + '>' + g + '</' + f : \"/\") + '>';}\n\n  function write_w3cdtf(d, t) { try { return d.toISOString().replace(/\\.\\d*/,\"\"); } catch(e) { if(t) throw e; } return \"\"; }\n\n  function write_vt(s) {\n    switch(typeof s) {\n      case 'string': return writextag('vt:lpwstr', s);\n      case 'number': return writextag((s|0)==s?'vt:i4':'vt:r8', String(s));\n      case 'boolean': return writextag('vt:bool',s?'true':'false');\n    }\n    if(s instanceof Date) return writextag('vt:filetime', write_w3cdtf(s));\n    throw new Error(\"Unable to serialize \" + s);\n  }\n\n  var XMLNS = ({\n    'dc': 'http://purl.org/dc/elements/1.1/',\n    'dcterms': 'http://purl.org/dc/terms/',\n    'dcmitype': 'http://purl.org/dc/dcmitype/',\n    'mx': 'http://schemas.microsoft.com/office/mac/excel/2008/main',\n    'r': 'http://schemas.openxmlformats.org/officeDocument/2006/relationships',\n    'sjs': 'http://schemas.openxmlformats.org/package/2006/sheetjs/core-properties',\n    'vt': 'http://schemas.openxmlformats.org/officeDocument/2006/docPropsVTypes',\n    'xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsd': 'http://www.w3.org/2001/XMLSchema'\n  });\n\n  XMLNS.main = [\n    'http://schemas.openxmlformats.org/spreadsheetml/2006/main',\n    'http://purl.oclc.org/ooxml/spreadsheetml/main',\n    'http://schemas.microsoft.com/office/excel/2006/main',\n    'http://schemas.microsoft.com/office/excel/2006/2'\n  ];\n\n  var XLMLNS = ({\n    'o':    'urn:schemas-microsoft-com:office:office',\n    'x':    'urn:schemas-microsoft-com:office:excel',\n    'ss':   'urn:schemas-microsoft-com:office:spreadsheet',\n    'dt':   'uuid:C2F41010-65B3-11d1-A29F-00AA00C14882',\n    'mv':   'http://macVmlSchemaUri',\n    'v':    'urn:schemas-microsoft-com:vml',\n    'html': 'http://www.w3.org/TR/REC-html40'\n  });\n  function read_double_le(b, idx) {\n    var s = 1 - 2 * (b[idx + 7] >>> 7);\n    var e = ((b[idx + 7] & 0x7f) << 4) + ((b[idx + 6] >>> 4) & 0x0f);\n    var m = (b[idx+6]&0x0f);\n    for(var i = 5; i >= 0; --i) m = m * 256 + b[idx + i];\n    if(e == 0x7ff) return m == 0 ? (s * Infinity) : NaN;\n    if(e == 0) e = -1022;\n    else { e -= 1023; m += Math.pow(2,52); }\n    return s * Math.pow(2, e - 52) * m;\n  }\n\n  function write_double_le(b, v, idx) {\n    var bs = ((((v < 0) || (1/v == -Infinity)) ? 1 : 0) << 7), e = 0, m = 0;\n    var av = bs ? (-v) : v;\n    if(!isFinite(av)) { e = 0x7ff; m = isNaN(v) ? 0x6969 : 0; }\n    else if(av == 0) e = m = 0;\n    else {\n      e = Math.floor(Math.log(av) / Math.LN2);\n      m = av * Math.pow(2, 52 - e);\n      if((e <= -1023) && (!isFinite(m) || (m < Math.pow(2,52)))) { e = -1022; }\n      else { m -= Math.pow(2,52); e+=1023; }\n    }\n    for(var i = 0; i <= 5; ++i, m/=256) b[idx + i] = m & 0xff;\n    b[idx + 6] = ((e & 0x0f) << 4) | (m & 0xf);\n    b[idx + 7] = (e >> 4) | bs;\n  }\n\n  var __toBuffer = function(bufs) { var x=[],w=10240; for(var i=0;i<bufs[0].length;++i) if(bufs[0][i]) for(var j=0,L=bufs[0][i].length;j<L;j+=w) x.push.apply(x, bufs[0][i].slice(j,j+w)); return x; };\n  var ___toBuffer = __toBuffer;\n  var __utf16le = function(b,s,e) { var ss=[]; for(var i=s; i<e; i+=2) ss.push(String.fromCharCode(__readUInt16LE(b,i))); return ss.join(\"\").replace(chr0,''); };\n  var ___utf16le = __utf16le;\n  var __hexlify = function(b,s,l) { var ss=[]; for(var i=s; i<s+l; ++i) ss.push((\"0\" + b[i].toString(16)).slice(-2)); return ss.join(\"\"); };\n  var ___hexlify = __hexlify;\n  var __utf8 = function(b,s,e) { var ss=[]; for(var i=s; i<e; i++) ss.push(String.fromCharCode(__readUInt8(b,i))); return ss.join(\"\"); };\n  var ___utf8 = __utf8;\n  var __lpstr = function(b,i) { var len = __readUInt32LE(b,i); return len > 0 ? __utf8(b, i+4,i+4+len-1) : \"\";};\n  var ___lpstr = __lpstr;\n  var __cpstr = function(b,i) { var len = __readUInt32LE(b,i); return len > 0 ? __utf8(b, i+4,i+4+len-1) : \"\";};\n  var ___cpstr = __cpstr;\n  var __lpwstr = function(b,i) { var len = 2*__readUInt32LE(b,i); return len > 0 ? __utf8(b, i+4,i+4+len-1) : \"\";};\n  var ___lpwstr = __lpwstr;\n  var __lpp4, ___lpp4;\n  __lpp4 = ___lpp4 = function lpp4_(b,i) { var len = __readUInt32LE(b,i); return len > 0 ? __utf16le(b, i+4,i+4+len) : \"\";};\n  var __8lpp4 = function(b,i) { var len = __readUInt32LE(b,i); return len > 0 ? __utf8(b, i+4,i+4+len) : \"\";};\n  var ___8lpp4 = __8lpp4;\n  var __double, ___double;\n  __double = ___double = function(b, idx) { return read_double_le(b, idx);};\n  var is_buf = function is_buf_a(a) { return Array.isArray(a); };\n\n  if(has_buf) {\n    __utf16le = function(b,s,e) { if(!Buffer.isBuffer(b)) return ___utf16le(b,s,e); return b.toString('utf16le',s,e).replace(chr0,'')/*.replace(chr1,'!')*/; };\n    __hexlify = function(b,s,l) { return Buffer.isBuffer(b) ? b.toString('hex',s,s+l) : ___hexlify(b,s,l); };\n    __lpstr = function lpstr_b(b, i) { if(!Buffer.isBuffer(b)) return ___lpstr(b, i); var len = b.readUInt32LE(i); return len > 0 ? b.toString('utf8',i+4,i+4+len-1) : \"\";};\n    __cpstr = function cpstr_b(b, i) { if(!Buffer.isBuffer(b)) return ___cpstr(b, i); var len = b.readUInt32LE(i); return len > 0 ? b.toString('utf8',i+4,i+4+len-1) : \"\";};\n    __lpwstr = function lpwstr_b(b, i) { if(!Buffer.isBuffer(b)) return ___lpwstr(b, i); var len = 2*b.readUInt32LE(i); return b.toString('utf16le',i+4,i+4+len-1);};\n    __lpp4 = function lpp4_b(b, i) { if(!Buffer.isBuffer(b)) return ___lpp4(b, i); var len = b.readUInt32LE(i); return b.toString('utf16le',i+4,i+4+len);};\n    __8lpp4 = function lpp4_8b(b, i) { if(!Buffer.isBuffer(b)) return ___8lpp4(b, i); var len = b.readUInt32LE(i); return b.toString('utf8',i+4,i+4+len);};\n    __utf8 = function utf8_b(b, s, e) { return (Buffer.isBuffer(b)) ? b.toString('utf8',s,e) : ___utf8(b,s,e); };\n    __toBuffer = function(bufs) { return (bufs[0].length > 0 && Buffer.isBuffer(bufs[0][0])) ? Buffer.concat(bufs[0]) : ___toBuffer(bufs);};\n    bconcat = function(bufs) { return Buffer.isBuffer(bufs[0]) ? Buffer.concat(bufs) : [].concat.apply([], bufs); };\n    __double = function double_(b, i) { if(Buffer.isBuffer(b)) return b.readDoubleLE(i); return ___double(b,i); };\n    is_buf = function is_buf_b(a) { return Buffer.isBuffer(a) || Array.isArray(a); };\n  }\n\n  /* from js-xls */\n  if(typeof cptable !== 'undefined') {\n    __utf16le = function(b,s,e) { return cptable.utils.decode(1200, b.slice(s,e)).replace(chr0, ''); };\n    __utf8 = function(b,s,e) { return cptable.utils.decode(65001, b.slice(s,e)); };\n    __lpstr = function(b,i) { var len = __readUInt32LE(b,i); return len > 0 ? cptable.utils.decode(current_ansi, b.slice(i+4, i+4+len-1)) : \"\";};\n    __cpstr = function(b,i) { var len = __readUInt32LE(b,i); return len > 0 ? cptable.utils.decode(current_codepage, b.slice(i+4, i+4+len-1)) : \"\";};\n    __lpwstr = function(b,i) { var len = 2*__readUInt32LE(b,i); return len > 0 ? cptable.utils.decode(1200, b.slice(i+4,i+4+len-1)) : \"\";};\n    __lpp4 = function(b,i) { var len = __readUInt32LE(b,i); return len > 0 ? cptable.utils.decode(1200, b.slice(i+4,i+4+len)) : \"\";};\n    __8lpp4 = function(b,i) { var len = __readUInt32LE(b,i); return len > 0 ? cptable.utils.decode(65001, b.slice(i+4,i+4+len)) : \"\";};\n  }\n\n  var __readUInt8 = function(b, idx) { return b[idx]; };\n  var __readUInt16LE = function(b, idx) { return (b[idx+1]*(1<<8))+b[idx]; };\n  var __readInt16LE = function(b, idx) { var u = (b[idx+1]*(1<<8))+b[idx]; return (u < 0x8000) ? u : ((0xffff - u + 1) * -1); };\n  var __readUInt32LE = function(b, idx) { return b[idx+3]*(1<<24)+(b[idx+2]<<16)+(b[idx+1]<<8)+b[idx]; };\n  var __readInt32LE = function(b, idx) { return (b[idx+3]<<24)|(b[idx+2]<<16)|(b[idx+1]<<8)|b[idx]; };\n  var __readInt32BE = function(b, idx) { return (b[idx]<<24)|(b[idx+1]<<16)|(b[idx+2]<<8)|b[idx+3]; };\n\n  function ReadShift(size, t) {\n    var o=\"\", oI, oR, oo=[], w, vv, i, loc;\n    switch(t) {\n      case 'dbcs':\n        loc = this.l;\n        if(has_buf && Buffer.isBuffer(this)) o = this.slice(this.l, this.l+2*size).toString(\"utf16le\");\n        else for(i = 0; i < size; ++i) { o+=String.fromCharCode(__readUInt16LE(this, loc)); loc+=2; }\n        size *= 2;\n        break;\n\n      case 'utf8': o = __utf8(this, this.l, this.l + size); break;\n      case 'utf16le': size *= 2; o = __utf16le(this, this.l, this.l + size); break;\n\n      case 'wstr':\n        if(typeof cptable !== 'undefined') o = cptable.utils.decode(current_codepage, this.slice(this.l, this.l+2*size));\n        else return ReadShift.call(this, size, 'dbcs');\n        size = 2 * size; break;\n\n      /* [MS-OLEDS] 2.1.4 LengthPrefixedAnsiString */\n      case 'lpstr-ansi': o = __lpstr(this, this.l); size = 4 + __readUInt32LE(this, this.l); break;\n      case 'lpstr-cp': o = __cpstr(this, this.l); size = 4 + __readUInt32LE(this, this.l); break;\n      /* [MS-OLEDS] 2.1.5 LengthPrefixedUnicodeString */\n      case 'lpwstr': o = __lpwstr(this, this.l); size = 4 + 2 * __readUInt32LE(this, this.l); break;\n      /* [MS-OFFCRYPTO] 2.1.2 Length-Prefixed Padded Unicode String (UNICODE-LP-P4) */\n      case 'lpp4': size = 4 +  __readUInt32LE(this, this.l); o = __lpp4(this, this.l); if(size & 0x02) size += 2; break;\n      /* [MS-OFFCRYPTO] 2.1.3 Length-Prefixed UTF-8 String (UTF-8-LP-P4) */\n      case '8lpp4': size = 4 +  __readUInt32LE(this, this.l); o = __8lpp4(this, this.l); if(size & 0x03) size += 4 - (size & 0x03); break;\n\n      case 'cstr': size = 0; o = \"\";\n        while((w=__readUInt8(this, this.l + size++))!==0) oo.push(_getchar(w));\n        o = oo.join(\"\"); break;\n      case '_wstr': size = 0; o = \"\";\n        while((w=__readUInt16LE(this,this.l +size))!==0){oo.push(_getchar(w));size+=2;}\n        size+=2; o = oo.join(\"\"); break;\n\n      /* sbcs and dbcs support continue records in the SST way TODO codepages */\n      case 'dbcs-cont': o = \"\"; loc = this.l;\n        for(i = 0; i < size; ++i) {\n          if(this.lens && this.lens.indexOf(loc) !== -1) {\n            w = __readUInt8(this, loc);\n            this.l = loc + 1;\n            vv = ReadShift.call(this, size-i, w ? 'dbcs-cont' : 'sbcs-cont');\n            return oo.join(\"\") + vv;\n          }\n          oo.push(_getchar(__readUInt16LE(this, loc)));\n          loc+=2;\n        } o = oo.join(\"\"); size *= 2; break;\n\n      case 'cpstr':\n        if(typeof cptable !== 'undefined') {\n          o = cptable.utils.decode(current_codepage, this.slice(this.l, this.l + size));\n          break;\n        }\n      /* falls through */\n      case 'sbcs-cont': o = \"\"; loc = this.l;\n        for(i = 0; i != size; ++i) {\n          if(this.lens && this.lens.indexOf(loc) !== -1) {\n            w = __readUInt8(this, loc);\n            this.l = loc + 1;\n            vv = ReadShift.call(this, size-i, w ? 'dbcs-cont' : 'sbcs-cont');\n            return oo.join(\"\") + vv;\n          }\n          oo.push(_getchar(__readUInt8(this, loc)));\n          loc+=1;\n        } o = oo.join(\"\"); break;\n\n      default:\n        switch(size) {\n          case 1: oI = __readUInt8(this, this.l); this.l++; return oI;\n          case 2: oI = (t === 'i' ? __readInt16LE : __readUInt16LE)(this, this.l); this.l += 2; return oI;\n          case 4: case -4:\n            if(t === 'i' || ((this[this.l+3] & 0x80)===0)) { oI = ((size > 0) ? __readInt32LE : __readInt32BE)(this, this.l); this.l += 4; return oI; }\n            else { oR = __readUInt32LE(this, this.l); this.l += 4; } return oR;\n          case 8: case -8:\n            if(t === 'f') {\n              if(size == 8) oR = __double(this, this.l);\n              else oR = __double([this[this.l+7],this[this.l+6],this[this.l+5],this[this.l+4],this[this.l+3],this[this.l+2],this[this.l+1],this[this.l+0]], 0);\n              this.l += 8; return oR;\n            } else size = 8;\n          /* falls through */\n          case 16: o = __hexlify(this, this.l, size); break;\n        }}\n    this.l+=size; return o;\n  }\n\n  var __writeUInt32LE = function(b, val, idx) { b[idx] = (val & 0xFF); b[idx+1] = ((val >>> 8) & 0xFF); b[idx+2] = ((val >>> 16) & 0xFF); b[idx+3] = ((val >>> 24) & 0xFF); };\n  var __writeInt32LE  = function(b, val, idx) { b[idx] = (val & 0xFF); b[idx+1] = ((val >> 8) & 0xFF); b[idx+2] = ((val >> 16) & 0xFF); b[idx+3] = ((val >> 24) & 0xFF); };\n  var __writeUInt16LE = function(b, val, idx) { b[idx] = (val & 0xFF); b[idx+1] = ((val >>> 8) & 0xFF); };\n\n  function WriteShift(t, val, f) {\n    var size = 0, i = 0;\n    if(f === 'dbcs') {\n      for(i = 0; i != val.length; ++i) __writeUInt16LE(this, val.charCodeAt(i), this.l + 2 * i);\n      size = 2 * val.length;\n    } else if(f === 'sbcs') {\n      /* TODO: codepage */\n      val = val.replace(/[^\\x00-\\x7F]/g, \"_\");\n      for(i = 0; i != val.length; ++i) this[this.l + i] = (val.charCodeAt(i) & 0xFF);\n      size = val.length;\n    } else if(f === 'hex') {\n      for(; i < t; ++i) {\n        this[this.l++] = (parseInt(val.slice(2*i, 2*i+2), 16)||0);\n      } return this;\n    } else if(f === 'utf16le') {\n      var end = Math.min(this.l + t, this.length);\n      for(i = 0; i < Math.min(val.length, t); ++i) {\n        var cc = val.charCodeAt(i);\n        this[this.l++] = (cc & 0xff);\n        this[this.l++] = (cc >> 8);\n      }\n      while(this.l < end) this[this.l++] = 0;\n      return this;\n    } else  switch(t) {\n      case  1: size = 1; this[this.l] = val&0xFF; break;\n      case  2: size = 2; this[this.l] = val&0xFF; val >>>= 8; this[this.l+1] = val&0xFF; break;\n      case  3: size = 3; this[this.l] = val&0xFF; val >>>= 8; this[this.l+1] = val&0xFF; val >>>= 8; this[this.l+2] = val&0xFF; break;\n      case  4: size = 4; __writeUInt32LE(this, val, this.l); break;\n      case  8: size = 8; if(f === 'f') { write_double_le(this, val, this.l); break; }\n      /* falls through */\n      case 16: break;\n      case -4: size = 4; __writeInt32LE(this, val, this.l); break;\n    }\n    this.l += size; return this;\n  }\n\n  function CheckField(hexstr, fld) {\n    var m = __hexlify(this,this.l,hexstr.length>>1);\n    if(m !== hexstr) throw new Error(fld + 'Expected ' + hexstr + ' saw ' + m);\n    this.l += hexstr.length>>1;\n  }\n\n  function prep_blob(blob, pos) {\n    blob.l = pos;\n    blob.read_shift = ReadShift;\n    blob.chk = CheckField;\n    blob.write_shift = WriteShift;\n  }\n\n  function parsenoop(blob, length) { blob.l += length; }\n\n  function new_buf(sz) {\n    var o = new_raw_buf(sz);\n    prep_blob(o, 0);\n    return o;\n  }\n\n  /* [MS-XLSB] 2.1.4 Record */\n  function recordhopper(data, cb, opts) {\n    if(!data) return;\n    var tmpbyte, cntbyte, length;\n    prep_blob(data, data.l || 0);\n    var L = data.length, RT = 0, tgt = 0;\n    while(data.l < L) {\n      RT = data.read_shift(1);\n      if(RT & 0x80) RT = (RT & 0x7F) + ((data.read_shift(1) & 0x7F)<<7);\n      var R = XLSBRecordEnum[RT] || XLSBRecordEnum[0xFFFF];\n      tmpbyte = data.read_shift(1);\n      length = tmpbyte & 0x7F;\n      for(cntbyte = 1; cntbyte <4 && (tmpbyte & 0x80); ++cntbyte) length += ((tmpbyte = data.read_shift(1)) & 0x7F)<<(7*cntbyte);\n      tgt = data.l + length;\n      var d = (R.f||parsenoop)(data, length, opts);\n      data.l = tgt;\n      if(cb(d, R.n, RT)) return;\n    }\n  }\n\n  /* control buffer usage for fixed-length buffers */\n  function buf_array() {\n    var bufs = [], blksz = has_buf ? 256 : 2048;\n    var newblk = function ba_newblk(sz) {\n      var o = (new_buf(sz));\n      prep_blob(o, 0);\n      return o;\n    };\n\n    var curbuf = newblk(blksz);\n\n    var endbuf = function ba_endbuf() {\n      if(!curbuf) return;\n      if(curbuf.length > curbuf.l) { curbuf = curbuf.slice(0, curbuf.l); curbuf.l = curbuf.length; }\n      if(curbuf.length > 0) bufs.push(curbuf);\n      curbuf = null;\n    };\n\n    var next = function ba_next(sz) {\n      if(curbuf && (sz < (curbuf.length - curbuf.l))) return curbuf;\n      endbuf();\n      return (curbuf = newblk(Math.max(sz+1, blksz)));\n    };\n\n    var end = function ba_end() {\n      endbuf();\n      return __toBuffer([bufs]);\n    };\n\n    var push = function ba_push(buf) { endbuf(); curbuf = buf; if(curbuf.l == null) curbuf.l = curbuf.length; next(blksz); };\n\n    return ({ next:next, push:push, end:end, _bufs:bufs });\n  }\n\n  function write_record(ba, type, payload, length) {\n    var t = +XLSBRE[type], l;\n    if(isNaN(t)) return; // TODO: throw something here?\n    if(!length) length = XLSBRecordEnum[t].p || (payload||[]).length || 0;\n    l = 1 + (t >= 0x80 ? 1 : 0) + 1/* + length*/;\n    if(length >= 0x80) ++l; if(length >= 0x4000) ++l; if(length >= 0x200000) ++l;\n    var o = ba.next(l);\n    if(t <= 0x7F) o.write_shift(1, t);\n    else {\n      o.write_shift(1, (t & 0x7F) + 0x80);\n      o.write_shift(1, (t >> 7));\n    }\n    for(var i = 0; i != 4; ++i) {\n      if(length >= 0x80) { o.write_shift(1, (length & 0x7F)+0x80); length >>= 7; }\n      else { o.write_shift(1, length); break; }\n    }\n    if(length > 0 && is_buf(payload)) ba.push(payload);\n  }\n  /* XLS ranges enforced */\n  function shift_cell_xls(cell, tgt, opts) {\n    var out = dup(cell);\n    if(tgt.s) {\n      if(out.cRel) out.c += tgt.s.c;\n      if(out.rRel) out.r += tgt.s.r;\n    } else {\n      if(out.cRel) out.c += tgt.c;\n      if(out.rRel) out.r += tgt.r;\n    }\n    if(!opts || opts.biff < 12) {\n      while(out.c >= 0x100) out.c -= 0x100;\n      while(out.r >= 0x10000) out.r -= 0x10000;\n    }\n    return out;\n  }\n\n  function shift_range_xls(cell, range, opts) {\n    var out = dup(cell);\n    out.s = shift_cell_xls(out.s, range.s, opts);\n    out.e = shift_cell_xls(out.e, range.s, opts);\n    return out;\n  }\n\n  function encode_cell_xls(c, biff) {\n    if(c.cRel && c.c < 0) { c = dup(c); c.c += (biff > 8) ? 0x4000 : 0x100; }\n    if(c.rRel && c.r < 0) { c = dup(c); c.r += (biff > 8) ? 0x100000 : ((biff > 5) ? 0x10000 : 0x4000); }\n    var s = encode_cell(c);\n    if(c.cRel === 0) s = fix_col(s);\n    if(c.rRel === 0) s = fix_row(s);\n    return s;\n  }\n\n  function encode_range_xls(r, opts) {\n    if(r.s.r == 0 && !r.s.rRel) {\n      if(r.e.r == (opts.biff >= 12 ? 0xFFFFF : (opts.biff >= 8 ? 0x10000 : 0x4000)) && !r.e.rRel) {\n        return (r.s.cRel ? \"\" : \"$\") + encode_col(r.s.c) + \":\" + (r.e.cRel ? \"\" : \"$\") + encode_col(r.e.c);\n      }\n    }\n    if(r.s.c == 0 && !r.s.cRel) {\n      if(r.e.c == (opts.biff >= 12 ? 0xFFFF : 0xFF) && !r.e.cRel) {\n        return (r.s.rRel ? \"\" : \"$\") + encode_row(r.s.r) + \":\" + (r.e.rRel ? \"\" : \"$\") + encode_row(r.e.r);\n      }\n    }\n    return encode_cell_xls(r.s, opts.biff) + \":\" + encode_cell_xls(r.e, opts.biff);\n  }\n  var OFFCRYPTO = {};\n\n  var make_offcrypto = function(O, _crypto) {\n    var crypto;\n    if(typeof _crypto !== 'undefined') crypto = _crypto;\n    else if(typeof require !== 'undefined') {\n      try { crypto = undefined; }\n      catch(e) { crypto = null; }\n    }\n\n    O.rc4 = function(key, data) {\n      var S = new Array(256);\n      var c = 0, i = 0, j = 0, t = 0;\n      for(i = 0; i != 256; ++i) S[i] = i;\n      for(i = 0; i != 256; ++i) {\n        j = (j + S[i] + (key[i%key.length]).charCodeAt(0))&255;\n        t = S[i]; S[i] = S[j]; S[j] = t;\n      }\n      // $FlowIgnore\n      i = j = 0; var out = Buffer(data.length);\n      for(c = 0; c != data.length; ++c) {\n        i = (i + 1)&255;\n        j = (j + S[i])%256;\n        t = S[i]; S[i] = S[j]; S[j] = t;\n        out[c] = (data[c] ^ S[(S[i]+S[j])&255]);\n      }\n      return out;\n    };\n\n    O.md5 = function(hex) {\n      if(!crypto) throw new Error(\"Unsupported crypto\");\n      return crypto.createHash('md5').update(hex).digest('hex');\n    };\n  };\n  /*global crypto:true */\n  make_offcrypto(OFFCRYPTO, typeof crypto !== \"undefined\" ? crypto : undefined);\n\n  function decode_row(rowstr) { return parseInt(unfix_row(rowstr),10) - 1; }\n  function encode_row(row) { return \"\" + (row + 1); }\n  function fix_row(cstr) { return cstr.replace(/([A-Z]|^)(\\d+)$/,\"$1$$$2\"); }\n  function unfix_row(cstr) { return cstr.replace(/\\$(\\d+)$/,\"$1\"); }\n\n  function decode_col(colstr) { var c = unfix_col(colstr), d = 0, i = 0; for(; i !== c.length; ++i) d = 26*d + c.charCodeAt(i) - 64; return d - 1; }\n  function encode_col(col) { var s=\"\"; for(++col; col; col=Math.floor((col-1)/26)) s = String.fromCharCode(((col-1)%26) + 65) + s; return s; }\n  function fix_col(cstr) { return cstr.replace(/^([A-Z])/,\"$$$1\"); }\n  function unfix_col(cstr) { return cstr.replace(/^\\$([A-Z])/,\"$1\"); }\n\n  function split_cell(cstr) { return cstr.replace(/(\\$?[A-Z]*)(\\$?\\d*)/,\"$1,$2\").split(\",\"); }\n  function decode_cell(cstr) { var splt = split_cell(cstr); return { c:decode_col(splt[0]), r:decode_row(splt[1]) }; }\n  function encode_cell(cell) { return encode_col(cell.c) + encode_row(cell.r); }\n  function decode_range(range) { var x =range.split(\":\").map(decode_cell); return {s:x[0],e:x[x.length-1]}; }\n  function encode_range(cs,ce) {\n    if(typeof ce === 'undefined' || typeof ce === 'number') {\n      return encode_range(cs.s, cs.e);\n    }\n    if(typeof cs !== 'string') cs = encode_cell((cs));\n    if(typeof ce !== 'string') ce = encode_cell((ce));\n    return cs == ce ? cs : cs + \":\" + ce;\n  }\n\n  function safe_decode_range(range) {\n    var o = {s:{c:0,r:0},e:{c:0,r:0}};\n    var idx = 0, i = 0, cc = 0;\n    var len = range.length;\n    for(idx = 0; i < len; ++i) {\n      if((cc=range.charCodeAt(i)-64) < 1 || cc > 26) break;\n      idx = 26*idx + cc;\n    }\n    o.s.c = --idx;\n\n    for(idx = 0; i < len; ++i) {\n      if((cc=range.charCodeAt(i)-48) < 0 || cc > 9) break;\n      idx = 10*idx + cc;\n    }\n    o.s.r = --idx;\n\n    if(i === len || range.charCodeAt(++i) === 58) { o.e.c=o.s.c; o.e.r=o.s.r; return o; }\n\n    for(idx = 0; i != len; ++i) {\n      if((cc=range.charCodeAt(i)-64) < 1 || cc > 26) break;\n      idx = 26*idx + cc;\n    }\n    o.e.c = --idx;\n\n    for(idx = 0; i != len; ++i) {\n      if((cc=range.charCodeAt(i)-48) < 0 || cc > 9) break;\n      idx = 10*idx + cc;\n    }\n    o.e.r = --idx;\n    return o;\n  }\n\n  function safe_format_cell(cell, v) {\n    var q = (cell.t == 'd' && v instanceof Date);\n    if(cell.z != null) try { return (cell.w = SSF.format(cell.z, q ? datenum(v) : v)); } catch(e) { }\n    try { return (cell.w = SSF.format((cell.XF||{}).numFmtId||(q ? 14 : 0),  q ? datenum(v) : v)); } catch(e) { return ''+v; }\n  }\n\n  function format_cell(cell, v, o) {\n    if(cell == null || cell.t == null || cell.t == 'z') return \"\";\n    if(cell.w !== undefined) return cell.w;\n    if(cell.t == 'd' && !cell.z && o && o.dateNF) cell.z = o.dateNF;\n    if(v == undefined) return safe_format_cell(cell, cell.v);\n    return safe_format_cell(cell, v);\n  }\n\n  function sheet_to_workbook(sheet, opts) {\n    var n = opts && opts.sheet ? opts.sheet : \"Sheet1\";\n    var sheets = {}; sheets[n] = sheet;\n    return { SheetNames: [n], Sheets: sheets };\n  }\n\n  function sheet_add_aoa(_ws, data, opts) {\n    var o = opts || {};\n    var dense = _ws ? Array.isArray(_ws) : o.dense;\n    if(DENSE != null && dense == null) dense = DENSE;\n    var ws = _ws || (dense ? ([]) : ({}));\n    var _R = 0, _C = 0;\n    if(ws && o.origin != null) {\n      if(typeof o.origin == 'number') _R = o.origin;\n      else {\n        var _origin = typeof o.origin == \"string\" ? decode_cell(o.origin) : o.origin;\n        _R = _origin.r; _C = _origin.c;\n      }\n    }\n    var range = ({s: {c:10000000, r:10000000}, e: {c:0, r:0}});\n    if(ws['!ref']) {\n      var _range = safe_decode_range(ws['!ref']);\n      range.s.c = _range.s.c;\n      range.s.r = _range.s.r;\n      range.e.c = Math.max(range.e.c, _range.e.c);\n      range.e.r = Math.max(range.e.r, _range.e.r);\n      if(_R == -1) range.e.r = _R = _range.e.r + 1;\n    }\n    for(var R = 0; R != data.length; ++R) {\n      if(!data[R]) continue;\n      if(!Array.isArray(data[R])) throw new Error(\"aoa_to_sheet expects an array of arrays\");\n      for(var C = 0; C != data[R].length; ++C) {\n        if(typeof data[R][C] === 'undefined') continue;\n        var cell = ({v: data[R][C] });\n        var __R = _R + R, __C = _C + C;\n        if(range.s.r > __R) range.s.r = __R;\n        if(range.s.c > __C) range.s.c = __C;\n        if(range.e.r < __R) range.e.r = __R;\n        if(range.e.c < __C) range.e.c = __C;\n        if(data[R][C] && typeof data[R][C] === 'object' && !Array.isArray(data[R][C]) && !(data[R][C] instanceof Date)) cell = data[R][C];\n        else {\n          if(Array.isArray(cell.v)) { cell.f = data[R][C][1]; cell.v = cell.v[0]; }\n          if(cell.v === null) { if(cell.f) cell.t = 'n'; else if(!o.sheetStubs) continue; else cell.t = 'z'; }\n          else if(typeof cell.v === 'number') cell.t = 'n';\n          else if(typeof cell.v === 'boolean') cell.t = 'b';\n          else if(cell.v instanceof Date) {\n            cell.z = o.dateNF || SSF._table[14];\n            if(o.cellDates) { cell.t = 'd'; cell.w = SSF.format(cell.z, datenum(cell.v)); }\n            else { cell.t = 'n'; cell.v = datenum(cell.v); cell.w = SSF.format(cell.z, cell.v); }\n          }\n          else cell.t = 's';\n        }\n        if(dense) {\n          if(!ws[__R]) ws[__R] = [];\n          ws[__R][__C] = cell;\n        } else {\n          var cell_ref = encode_cell(({c:__C,r:__R}));\n          ws[cell_ref] = cell;\n        }\n      }\n    }\n    if(range.s.c < 10000000) ws['!ref'] = encode_range(range);\n    return ws;\n  }\n  function aoa_to_sheet(data, opts) { return sheet_add_aoa(null, data, opts); }\n\n  function write_UInt32LE(x, o) {\n    if(!o) o = new_buf(4);\n    o.write_shift(4, x);\n    return o;\n  }\n\n  /* [MS-XLSB] 2.5.168 */\n  function parse_XLWideString(data) {\n    var cchCharacters = data.read_shift(4);\n    return cchCharacters === 0 ? \"\" : data.read_shift(cchCharacters, 'dbcs');\n  }\n  function write_XLWideString(data, o) {\n    var _null = false; if(o == null) { _null = true; o = new_buf(4+2*data.length); }\n    o.write_shift(4, data.length);\n    if(data.length > 0) o.write_shift(0, data, 'dbcs');\n    return _null ? o.slice(0, o.l) : o;\n  }\n\n  /* [MS-XLSB] 2.5.143 */\n  function parse_StrRun(data) {\n    return { ich: data.read_shift(2), ifnt: data.read_shift(2) };\n  }\n  function write_StrRun(run, o) {\n    if(!o) o = new_buf(4);\n    o.write_shift(2, run.ich || 0);\n    o.write_shift(2, run.ifnt || 0);\n    return o;\n  }\n\n  /* [MS-XLSB] 2.5.121 */\n  function parse_RichStr(data, length) {\n    var start = data.l;\n    var flags = data.read_shift(1);\n    var str = parse_XLWideString(data);\n    var rgsStrRun = [];\n    var z = ({ t: str, h: str });\n    if((flags & 1) !== 0) { /* fRichStr */\n      /* TODO: formatted string */\n      var dwSizeStrRun = data.read_shift(4);\n      for(var i = 0; i != dwSizeStrRun; ++i) rgsStrRun.push(parse_StrRun(data));\n      z.r = rgsStrRun;\n    }\n    else z.r = [{ich:0, ifnt:0}];\n    //if((flags & 2) !== 0) { /* fExtStr */\n    //\t/* TODO: phonetic string */\n    //}\n    data.l = start + length;\n    return z;\n  }\n  function write_RichStr(str, o) {\n    /* TODO: formatted string */\n    var _null = false; if(o == null) { _null = true; o = new_buf(15+4*str.t.length); }\n    o.write_shift(1,0);\n    write_XLWideString(str.t, o);\n    return _null ? o.slice(0, o.l) : o;\n  }\n  /* [MS-XLSB] 2.4.328 BrtCommentText (RichStr w/1 run) */\n  var parse_BrtCommentText = parse_RichStr;\n  function write_BrtCommentText(str, o) {\n    /* TODO: formatted string */\n    var _null = false; if(o == null) { _null = true; o = new_buf(23+4*str.t.length); }\n    o.write_shift(1,1);\n    write_XLWideString(str.t, o);\n    o.write_shift(4,1);\n    write_StrRun({ich:0,ifnt:0}, o);\n    return _null ? o.slice(0, o.l) : o;\n  }\n\n  /* [MS-XLSB] 2.5.9 */\n  function parse_XLSBCell(data) {\n    var col = data.read_shift(4);\n    var iStyleRef = data.read_shift(2);\n    iStyleRef += data.read_shift(1) <<16;\n    data.l++; //var fPhShow = data.read_shift(1);\n    return { c:col, iStyleRef: iStyleRef };\n  }\n  function write_XLSBCell(cell, o) {\n    if(o == null) o = new_buf(8);\n    o.write_shift(-4, cell.c);\n    o.write_shift(3, cell.iStyleRef || cell.s);\n    o.write_shift(1, 0); /* fPhShow */\n    return o;\n  }\n\n\n  /* [MS-XLSB] 2.5.21 */\n  var parse_XLSBCodeName = parse_XLWideString;\n  var write_XLSBCodeName = write_XLWideString;\n\n  /* [MS-XLSB] 2.5.166 */\n  function parse_XLNullableWideString(data) {\n    var cchCharacters = data.read_shift(4);\n    return cchCharacters === 0 || cchCharacters === 0xFFFFFFFF ? \"\" : data.read_shift(cchCharacters, 'dbcs');\n  }\n  function write_XLNullableWideString(data, o) {\n    var _null = false; if(o == null) { _null = true; o = new_buf(127); }\n    o.write_shift(4, data.length > 0 ? data.length : 0xFFFFFFFF);\n    if(data.length > 0) o.write_shift(0, data, 'dbcs');\n    return _null ? o.slice(0, o.l) : o;\n  }\n\n  /* [MS-XLSB] 2.5.165 */\n  var parse_XLNameWideString = parse_XLWideString;\n//var write_XLNameWideString = write_XLWideString;\n\n  /* [MS-XLSB] 2.5.114 */\n  var parse_RelID = parse_XLNullableWideString;\n  var write_RelID = write_XLNullableWideString;\n\n\n  /* [MS-XLS] 2.5.217 ; [MS-XLSB] 2.5.122 */\n  function parse_RkNumber(data) {\n    var b = data.slice(data.l, data.l+4);\n    var fX100 = (b[0] & 1), fInt = (b[0] & 2);\n    data.l+=4;\n    b[0] &= 0xFC; // b[0] &= ~3;\n    var RK = fInt === 0 ? __double([0,0,0,0,b[0],b[1],b[2],b[3]],0) : __readInt32LE(b,0)>>2;\n    return fX100 ? (RK/100) : RK;\n  }\n  function write_RkNumber(data, o) {\n    if(o == null) o = new_buf(4);\n    var fX100 = 0, fInt = 0, d100 = data * 100;\n    if((data == (data | 0)) && (data >= -(1<<29)) && (data < (1 << 29))) { fInt = 1; }\n    else if((d100 == (d100 | 0)) && (d100 >= -(1<<29)) && (d100 < (1 << 29))) { fInt = 1; fX100 = 1; }\n    if(fInt) o.write_shift(-4, ((fX100 ? d100 : data) << 2) + (fX100 + 2));\n    else throw new Error(\"unsupported RkNumber \" + data); // TODO\n  }\n\n\n  /* [MS-XLSB] 2.5.117 RfX */\n  function parse_RfX(data ) {\n    var cell = ({s: {}, e: {}});\n    cell.s.r = data.read_shift(4);\n    cell.e.r = data.read_shift(4);\n    cell.s.c = data.read_shift(4);\n    cell.e.c = data.read_shift(4);\n    return cell;\n  }\n  function write_RfX(r, o) {\n    if(!o) o = new_buf(16);\n    o.write_shift(4, r.s.r);\n    o.write_shift(4, r.e.r);\n    o.write_shift(4, r.s.c);\n    o.write_shift(4, r.e.c);\n    return o;\n  }\n\n  /* [MS-XLSB] 2.5.153 UncheckedRfX */\n  var parse_UncheckedRfX = parse_RfX;\n  var write_UncheckedRfX = write_RfX;\n\n  /* [MS-XLS] 2.5.342 ; [MS-XLSB] 2.5.171 */\n  /* TODO: error checking, NaN and Infinity values are not valid Xnum */\n  function parse_Xnum(data) { return data.read_shift(8, 'f'); }\n  function write_Xnum(data, o) { return (o || new_buf(8)).write_shift(8, data, 'f'); }\n\n  /* [MS-XLSB] 2.5.97.2 */\n  var BErr = {\n    0x00: \"#NULL!\",\n    0x07: \"#DIV/0!\",\n    0x0F: \"#VALUE!\",\n    0x17: \"#REF!\",\n    0x1D: \"#NAME?\",\n    0x24: \"#NUM!\",\n    0x2A: \"#N/A\",\n    0x2B: \"#GETTING_DATA\",\n    0xFF: \"#WTF?\"\n  };\n  var RBErr = evert_num(BErr);\n\n  /* [MS-XLSB] 2.4.324 BrtColor */\n  function parse_BrtColor(data) {\n    var out = {};\n    var d = data.read_shift(1);\n\n    //var fValidRGB = d & 1;\n    var xColorType = d >>> 1;\n\n    var index = data.read_shift(1);\n    var nTS = data.read_shift(2, 'i');\n    var bR = data.read_shift(1);\n    var bG = data.read_shift(1);\n    var bB = data.read_shift(1);\n    data.l++; //var bAlpha = data.read_shift(1);\n\n    switch(xColorType) {\n      case 0: out.auto = 1; break;\n      case 1:\n        out.index = index;\n        var icv = XLSIcv[index];\n        /* automatic pseudo index 81 */\n        if(icv) out.rgb = rgb2Hex(icv);\n        break;\n      case 2:\n        /* if(!fValidRGB) throw new Error(\"invalid\"); */\n        out.rgb = rgb2Hex([bR, bG, bB]);\n        break;\n      case 3: out.theme = index; break;\n    }\n    if(nTS != 0) out.tint = nTS > 0 ? nTS / 32767 : nTS / 32768;\n\n    return out;\n  }\n  function write_BrtColor(color, o) {\n    if(!o) o = new_buf(8);\n    if(!color||color.auto) { o.write_shift(4, 0); o.write_shift(4, 0); return o; }\n    if(color.index) {\n      o.write_shift(1, 0x02);\n      o.write_shift(1, color.index);\n    } else if(color.theme) {\n      o.write_shift(1, 0x06);\n      o.write_shift(1, color.theme);\n    } else {\n      o.write_shift(1, 0x05);\n      o.write_shift(1, 0);\n    }\n    var nTS = color.tint || 0;\n    if(nTS > 0) nTS *= 32767;\n    else if(nTS < 0) nTS *= 32768;\n    o.write_shift(2, nTS);\n    if(!color.rgb) {\n      o.write_shift(2, 0);\n      o.write_shift(1, 0);\n      o.write_shift(1, 0);\n    } else {\n      var rgb = (color.rgb || 'FFFFFF');\n      o.write_shift(1, parseInt(rgb.slice(0,2),16));\n      o.write_shift(1, parseInt(rgb.slice(2,4),16));\n      o.write_shift(1, parseInt(rgb.slice(4,6),16));\n      o.write_shift(1, 0xFF);\n    }\n    return o;\n  }\n\n  /* [MS-XLSB] 2.5.52 */\n  function parse_FontFlags(data) {\n    var d = data.read_shift(1);\n    data.l++;\n    var out = {\n      /* fBold: d & 0x01 */\n      fItalic: d & 0x02,\n      /* fUnderline: d & 0x04 */\n      fStrikeout: d & 0x08,\n      fOutline: d & 0x10,\n      fShadow: d & 0x20,\n      fCondense: d & 0x40,\n      fExtend: d & 0x80\n    };\n    return out;\n  }\n  function write_FontFlags(font, o) {\n    if(!o) o = new_buf(2);\n    var grbit =\n      (font.italic   ? 0x02 : 0) |\n      (font.strike   ? 0x08 : 0) |\n      (font.outline  ? 0x10 : 0) |\n      (font.shadow   ? 0x20 : 0) |\n      (font.condense ? 0x40 : 0) |\n      (font.extend   ? 0x80 : 0);\n    o.write_shift(1, grbit);\n    o.write_shift(1, 0);\n    return o;\n  }\n\n  /* [MS-OLEDS] 2.3.1 and 2.3.2 */\n  function parse_ClipboardFormatOrString(o, w) {\n    // $FlowIgnore\n    var ClipFmt = {2:\"BITMAP\",3:\"METAFILEPICT\",8:\"DIB\",14:\"ENHMETAFILE\"};\n    var m = o.read_shift(4);\n    switch(m) {\n      case 0x00000000: return \"\";\n      case 0xffffffff: case 0xfffffffe: return ClipFmt[o.read_shift(4)]||\"\";\n    }\n    if(m > 0x190) throw new Error(\"Unsupported Clipboard: \" + m.toString(16));\n    o.l -= 4;\n    return o.read_shift(0, w == 1 ? \"lpstr\" : \"lpwstr\");\n  }\n  function parse_ClipboardFormatOrAnsiString(o) { return parse_ClipboardFormatOrString(o, 1); }\n  function parse_ClipboardFormatOrUnicodeString(o) { return parse_ClipboardFormatOrString(o, 2); }\n\n  /* [MS-OLEPS] 2.2 PropertyType */\n//var VT_EMPTY    = 0x0000;\n//var VT_NULL     = 0x0001;\n  var VT_I2       = 0x0002;\n  var VT_I4       = 0x0003;\n//var VT_R4       = 0x0004;\n//var VT_R8       = 0x0005;\n//var VT_CY       = 0x0006;\n//var VT_DATE     = 0x0007;\n//var VT_BSTR     = 0x0008;\n//var VT_ERROR    = 0x000A;\n  var VT_BOOL     = 0x000B;\n  var VT_VARIANT  = 0x000C;\n//var VT_DECIMAL  = 0x000E;\n//var VT_I1       = 0x0010;\n//var VT_UI1      = 0x0011;\n//var VT_UI2      = 0x0012;\n  var VT_UI4      = 0x0013;\n//var VT_I8       = 0x0014;\n//var VT_UI8      = 0x0015;\n//var VT_INT      = 0x0016;\n//var VT_UINT     = 0x0017;\n  var VT_LPSTR    = 0x001E;\n//var VT_LPWSTR   = 0x001F;\n  var VT_FILETIME = 0x0040;\n  var VT_BLOB     = 0x0041;\n//var VT_STREAM   = 0x0042;\n//var VT_STORAGE  = 0x0043;\n//var VT_STREAMED_Object  = 0x0044;\n//var VT_STORED_Object    = 0x0045;\n//var VT_BLOB_Object      = 0x0046;\n  var VT_CF       = 0x0047;\n//var VT_CLSID    = 0x0048;\n//var VT_VERSIONED_STREAM = 0x0049;\n  var VT_VECTOR   = 0x1000;\n//var VT_ARRAY    = 0x2000;\n\n  var VT_STRING   = 0x0050; // 2.3.3.1.11 VtString\n  var VT_USTR     = 0x0051; // 2.3.3.1.12 VtUnalignedString\n  var VT_CUSTOM   = [VT_STRING, VT_USTR];\n\n  /* [MS-OSHARED] 2.3.3.2.2.1 Document Summary Information PIDDSI */\n  var DocSummaryPIDDSI = {\n    0x01: { n: 'CodePage', t: VT_I2 },\n    0x02: { n: 'Category', t: VT_STRING },\n    0x03: { n: 'PresentationFormat', t: VT_STRING },\n    0x04: { n: 'ByteCount', t: VT_I4 },\n    0x05: { n: 'LineCount', t: VT_I4 },\n    0x06: { n: 'ParagraphCount', t: VT_I4 },\n    0x07: { n: 'SlideCount', t: VT_I4 },\n    0x08: { n: 'NoteCount', t: VT_I4 },\n    0x09: { n: 'HiddenCount', t: VT_I4 },\n    0x0a: { n: 'MultimediaClipCount', t: VT_I4 },\n    0x0b: { n: 'ScaleCrop', t: VT_BOOL },\n    0x0c: { n: 'HeadingPairs', t: VT_VECTOR | VT_VARIANT },\n    0x0d: { n: 'TitlesOfParts', t: VT_VECTOR | VT_LPSTR },\n    0x0e: { n: 'Manager', t: VT_STRING },\n    0x0f: { n: 'Company', t: VT_STRING },\n    0x10: { n: 'LinksUpToDate', t: VT_BOOL },\n    0x11: { n: 'CharacterCount', t: VT_I4 },\n    0x13: { n: 'SharedDoc', t: VT_BOOL },\n    0x16: { n: 'HyperlinksChanged', t: VT_BOOL },\n    0x17: { n: 'AppVersion', t: VT_I4, p: 'version' },\n    0x18: { n: 'DigSig', t: VT_BLOB },\n    0x1A: { n: 'ContentType', t: VT_STRING },\n    0x1B: { n: 'ContentStatus', t: VT_STRING },\n    0x1C: { n: 'Language', t: VT_STRING },\n    0x1D: { n: 'Version', t: VT_STRING },\n    0xFF: {}\n  };\n\n  /* [MS-OSHARED] 2.3.3.2.1.1 Summary Information Property Set PIDSI */\n  var SummaryPIDSI = {\n    0x01: { n: 'CodePage', t: VT_I2 },\n    0x02: { n: 'Title', t: VT_STRING },\n    0x03: { n: 'Subject', t: VT_STRING },\n    0x04: { n: 'Author', t: VT_STRING },\n    0x05: { n: 'Keywords', t: VT_STRING },\n    0x06: { n: 'Comments', t: VT_STRING },\n    0x07: { n: 'Template', t: VT_STRING },\n    0x08: { n: 'LastAuthor', t: VT_STRING },\n    0x09: { n: 'RevNumber', t: VT_STRING },\n    0x0A: { n: 'EditTime', t: VT_FILETIME },\n    0x0B: { n: 'LastPrinted', t: VT_FILETIME },\n    0x0C: { n: 'CreatedDate', t: VT_FILETIME },\n    0x0D: { n: 'ModifiedDate', t: VT_FILETIME },\n    0x0E: { n: 'PageCount', t: VT_I4 },\n    0x0F: { n: 'WordCount', t: VT_I4 },\n    0x10: { n: 'CharCount', t: VT_I4 },\n    0x11: { n: 'Thumbnail', t: VT_CF },\n    0x12: { n: 'Application', t: VT_STRING },\n    0x13: { n: 'DocSecurity', t: VT_I4 },\n    0xFF: {}\n  };\n\n  /* [MS-OLEPS] 2.18 */\n  var SpecialProperties = {\n    0x80000000: { n: 'Locale', t: VT_UI4 },\n    0x80000003: { n: 'Behavior', t: VT_UI4 },\n    0x72627262: {}\n  };\n\n  (function() {\n    for(var y in SpecialProperties) if(SpecialProperties.hasOwnProperty(y))\n      DocSummaryPIDDSI[y] = SummaryPIDSI[y] = SpecialProperties[y];\n  })();\n\n  var DocSummaryRE = evert_key(DocSummaryPIDDSI, \"n\");\n  var SummaryRE = evert_key(SummaryPIDSI, \"n\");\n\n  /* [MS-XLS] 2.4.63 Country/Region codes */\n  var CountryEnum = {\n    0x0001: \"US\", // United States\n    0x0002: \"CA\", // Canada\n    0x0003: \"\", // Latin America (except Brazil)\n    0x0007: \"RU\", // Russia\n    0x0014: \"EG\", // Egypt\n    0x001E: \"GR\", // Greece\n    0x001F: \"NL\", // Netherlands\n    0x0020: \"BE\", // Belgium\n    0x0021: \"FR\", // France\n    0x0022: \"ES\", // Spain\n    0x0024: \"HU\", // Hungary\n    0x0027: \"IT\", // Italy\n    0x0029: \"CH\", // Switzerland\n    0x002B: \"AT\", // Austria\n    0x002C: \"GB\", // United Kingdom\n    0x002D: \"DK\", // Denmark\n    0x002E: \"SE\", // Sweden\n    0x002F: \"NO\", // Norway\n    0x0030: \"PL\", // Poland\n    0x0031: \"DE\", // Germany\n    0x0034: \"MX\", // Mexico\n    0x0037: \"BR\", // Brazil\n    0x003d: \"AU\", // Australia\n    0x0040: \"NZ\", // New Zealand\n    0x0042: \"TH\", // Thailand\n    0x0051: \"JP\", // Japan\n    0x0052: \"KR\", // Korea\n    0x0054: \"VN\", // Viet Nam\n    0x0056: \"CN\", // China\n    0x005A: \"TR\", // Turkey\n    0x0069: \"JS\", // Ramastan\n    0x00D5: \"DZ\", // Algeria\n    0x00D8: \"MA\", // Morocco\n    0x00DA: \"LY\", // Libya\n    0x015F: \"PT\", // Portugal\n    0x0162: \"IS\", // Iceland\n    0x0166: \"FI\", // Finland\n    0x01A4: \"CZ\", // Czech Republic\n    0x0376: \"TW\", // Taiwan\n    0x03C1: \"LB\", // Lebanon\n    0x03C2: \"JO\", // Jordan\n    0x03C3: \"SY\", // Syria\n    0x03C4: \"IQ\", // Iraq\n    0x03C5: \"KW\", // Kuwait\n    0x03C6: \"SA\", // Saudi Arabia\n    0x03CB: \"AE\", // United Arab Emirates\n    0x03CC: \"IL\", // Israel\n    0x03CE: \"QA\", // Qatar\n    0x03D5: \"IR\", // Iran\n    0xFFFF: \"US\"  // United States\n  };\n\n  /* [MS-XLS] 2.5.127 */\n  var XLSFillPattern = [\n    null,\n    'solid',\n    'mediumGray',\n    'darkGray',\n    'lightGray',\n    'darkHorizontal',\n    'darkVertical',\n    'darkDown',\n    'darkUp',\n    'darkGrid',\n    'darkTrellis',\n    'lightHorizontal',\n    'lightVertical',\n    'lightDown',\n    'lightUp',\n    'lightGrid',\n    'lightTrellis',\n    'gray125',\n    'gray0625'\n  ];\n\n  function rgbify(arr) { return arr.map(function(x) { return [(x>>16)&255,(x>>8)&255,x&255]; }); }\n\n  /* [MS-XLS] 2.5.161 */\n  /* [MS-XLSB] 2.5.75 Icv */\n  var XLSIcv = rgbify([\n    /* Color Constants */\n    0x000000,\n    0xFFFFFF,\n    0xFF0000,\n    0x00FF00,\n    0x0000FF,\n    0xFFFF00,\n    0xFF00FF,\n    0x00FFFF,\n\n    /* Overridable Defaults */\n    0x000000,\n    0xFFFFFF,\n    0xFF0000,\n    0x00FF00,\n    0x0000FF,\n    0xFFFF00,\n    0xFF00FF,\n    0x00FFFF,\n\n    0x800000,\n    0x008000,\n    0x000080,\n    0x808000,\n    0x800080,\n    0x008080,\n    0xC0C0C0,\n    0x808080,\n    0x9999FF,\n    0x993366,\n    0xFFFFCC,\n    0xCCFFFF,\n    0x660066,\n    0xFF8080,\n    0x0066CC,\n    0xCCCCFF,\n\n    0x000080,\n    0xFF00FF,\n    0xFFFF00,\n    0x00FFFF,\n    0x800080,\n    0x800000,\n    0x008080,\n    0x0000FF,\n    0x00CCFF,\n    0xCCFFFF,\n    0xCCFFCC,\n    0xFFFF99,\n    0x99CCFF,\n    0xFF99CC,\n    0xCC99FF,\n    0xFFCC99,\n\n    0x3366FF,\n    0x33CCCC,\n    0x99CC00,\n    0xFFCC00,\n    0xFF9900,\n    0xFF6600,\n    0x666699,\n    0x969696,\n    0x003366,\n    0x339966,\n    0x003300,\n    0x333300,\n    0x993300,\n    0x993366,\n    0x333399,\n    0x333333,\n\n    /* Other entries to appease BIFF8/12 */\n    0xFFFFFF, /* 0x40 icvForeground ?? */\n    0x000000, /* 0x41 icvBackground ?? */\n    0x000000, /* 0x42 icvFrame ?? */\n    0x000000, /* 0x43 icv3D ?? */\n    0x000000, /* 0x44 icv3DText ?? */\n    0x000000, /* 0x45 icv3DHilite ?? */\n    0x000000, /* 0x46 icv3DShadow ?? */\n    0x000000, /* 0x47 icvHilite ?? */\n    0x000000, /* 0x48 icvCtlText ?? */\n    0x000000, /* 0x49 icvCtlScrl ?? */\n    0x000000, /* 0x4A icvCtlInv ?? */\n    0x000000, /* 0x4B icvCtlBody ?? */\n    0x000000, /* 0x4C icvCtlFrame ?? */\n    0x000000, /* 0x4D icvCtlFore ?? */\n    0x000000, /* 0x4E icvCtlBack ?? */\n    0x000000, /* 0x4F icvCtlNeutral */\n    0x000000, /* 0x50 icvInfoBk ?? */\n    0x000000 /* 0x51 icvInfoText ?? */\n  ]);\n\n  /* Parts enumerated in OPC spec, MS-XLSB and MS-XLSX */\n  /* 12.3 Part Summary <SpreadsheetML> */\n  /* 14.2 Part Summary <DrawingML> */\n  /* [MS-XLSX] 2.1 Part Enumerations ; [MS-XLSB] 2.1.7 Part Enumeration */\n  var ct2type/*{[string]:string}*/ = ({\n    /* Workbook */\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\": \"workbooks\",\n\n    /* Worksheet */\n    \"application/vnd.ms-excel.binIndexWs\": \"TODO\", /* Binary Index */\n\n    /* Macrosheet */\n    \"application/vnd.ms-excel.intlmacrosheet\": \"TODO\",\n    \"application/vnd.ms-excel.binIndexMs\": \"TODO\", /* Binary Index */\n\n    /* File Properties */\n    \"application/vnd.openxmlformats-package.core-properties+xml\": \"coreprops\",\n    \"application/vnd.openxmlformats-officedocument.custom-properties+xml\": \"custprops\",\n    \"application/vnd.openxmlformats-officedocument.extended-properties+xml\": \"extprops\",\n\n    /* Custom Data Properties */\n    \"application/vnd.openxmlformats-officedocument.customXmlProperties+xml\": \"TODO\",\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.customProperty\": \"TODO\",\n\n    /* PivotTable */\n    \"application/vnd.ms-excel.pivotTable\": \"TODO\",\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotTable+xml\": \"TODO\",\n\n    /* Chart Colors */\n    \"application/vnd.ms-office.chartcolorstyle+xml\": \"TODO\",\n\n    /* Chart Style */\n    \"application/vnd.ms-office.chartstyle+xml\": \"TODO\",\n\n    /* Calculation Chain */\n    \"application/vnd.ms-excel.calcChain\": \"calcchains\",\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.calcChain+xml\": \"calcchains\",\n\n    /* Printer Settings */\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.printerSettings\": \"TODO\",\n\n    /* ActiveX */\n    \"application/vnd.ms-office.activeX\": \"TODO\",\n    \"application/vnd.ms-office.activeX+xml\": \"TODO\",\n\n    /* Custom Toolbars */\n    \"application/vnd.ms-excel.attachedToolbars\": \"TODO\",\n\n    /* External Data Connections */\n    \"application/vnd.ms-excel.connections\": \"TODO\",\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml\": \"TODO\",\n\n    /* External Links */\n    \"application/vnd.ms-excel.externalLink\": \"links\",\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.externalLink+xml\": \"links\",\n\n    /* Metadata */\n    \"application/vnd.ms-excel.sheetMetadata\": \"TODO\",\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml\": \"TODO\",\n\n    /* PivotCache */\n    \"application/vnd.ms-excel.pivotCacheDefinition\": \"TODO\",\n    \"application/vnd.ms-excel.pivotCacheRecords\": \"TODO\",\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheDefinition+xml\": \"TODO\",\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheRecords+xml\": \"TODO\",\n\n    /* Query Table */\n    \"application/vnd.ms-excel.queryTable\": \"TODO\",\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.queryTable+xml\": \"TODO\",\n\n    /* Shared Workbook */\n    \"application/vnd.ms-excel.userNames\": \"TODO\",\n    \"application/vnd.ms-excel.revisionHeaders\": \"TODO\",\n    \"application/vnd.ms-excel.revisionLog\": \"TODO\",\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionHeaders+xml\": \"TODO\",\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionLog+xml\": \"TODO\",\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.userNames+xml\": \"TODO\",\n\n    /* Single Cell Table */\n    \"application/vnd.ms-excel.tableSingleCells\": \"TODO\",\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.tableSingleCells+xml\": \"TODO\",\n\n    /* Slicer */\n    \"application/vnd.ms-excel.slicer\": \"TODO\",\n    \"application/vnd.ms-excel.slicerCache\": \"TODO\",\n    \"application/vnd.ms-excel.slicer+xml\": \"TODO\",\n    \"application/vnd.ms-excel.slicerCache+xml\": \"TODO\",\n\n    /* Sort Map */\n    \"application/vnd.ms-excel.wsSortMap\": \"TODO\",\n\n    /* Table */\n    \"application/vnd.ms-excel.table\": \"TODO\",\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml\": \"TODO\",\n\n    /* Themes */\n    \"application/vnd.openxmlformats-officedocument.theme+xml\": \"themes\",\n\n    /* Theme Override */\n    \"application/vnd.openxmlformats-officedocument.themeOverride+xml\": \"TODO\",\n\n    /* Timeline */\n    \"application/vnd.ms-excel.Timeline+xml\": \"TODO\", /* verify */\n    \"application/vnd.ms-excel.TimelineCache+xml\": \"TODO\", /* verify */\n\n    /* VBA */\n    \"application/vnd.ms-office.vbaProject\": \"vba\",\n    \"application/vnd.ms-office.vbaProjectSignature\": \"vba\",\n\n    /* Volatile Dependencies */\n    \"application/vnd.ms-office.volatileDependencies\": \"TODO\",\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.volatileDependencies+xml\": \"TODO\",\n\n    /* Control Properties */\n    \"application/vnd.ms-excel.controlproperties+xml\": \"TODO\",\n\n    /* Data Model */\n    \"application/vnd.openxmlformats-officedocument.model+data\": \"TODO\",\n\n    /* Survey */\n    \"application/vnd.ms-excel.Survey+xml\": \"TODO\",\n\n    /* Drawing */\n    \"application/vnd.openxmlformats-officedocument.drawing+xml\": \"drawings\",\n    \"application/vnd.openxmlformats-officedocument.drawingml.chart+xml\": \"TODO\",\n    \"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml\": \"TODO\",\n    \"application/vnd.openxmlformats-officedocument.drawingml.diagramColors+xml\": \"TODO\",\n    \"application/vnd.openxmlformats-officedocument.drawingml.diagramData+xml\": \"TODO\",\n    \"application/vnd.openxmlformats-officedocument.drawingml.diagramLayout+xml\": \"TODO\",\n    \"application/vnd.openxmlformats-officedocument.drawingml.diagramStyle+xml\": \"TODO\",\n\n    /* VML */\n    \"application/vnd.openxmlformats-officedocument.vmlDrawing\": \"TODO\",\n\n    \"application/vnd.openxmlformats-package.relationships+xml\": \"rels\",\n    \"application/vnd.openxmlformats-officedocument.oleObject\": \"TODO\",\n\n    /* Image */\n    \"image/png\": \"TODO\",\n\n    \"sheet\": \"js\"\n  });\n\n  var CT_LIST = (function(){\n    var o = {\n      workbooks: {\n        xlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\",\n        xlsm: \"application/vnd.ms-excel.sheet.macroEnabled.main+xml\",\n        xlsb: \"application/vnd.ms-excel.sheet.binary.macroEnabled.main\",\n        xlam: \"application/vnd.ms-excel.addin.macroEnabled.main+xml\",\n        xltx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml\"\n      },\n      strs: { /* Shared Strings */\n        xlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml\",\n        xlsb: \"application/vnd.ms-excel.sharedStrings\"\n      },\n      comments: { /* Comments */\n        xlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml\",\n        xlsb: \"application/vnd.ms-excel.comments\"\n      },\n      sheets: { /* Worksheet */\n        xlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\",\n        xlsb: \"application/vnd.ms-excel.worksheet\"\n      },\n      charts: { /* Chartsheet */\n        xlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml\",\n        xlsb: \"application/vnd.ms-excel.chartsheet\"\n      },\n      dialogs: { /* Dialogsheet */\n        xlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml\",\n        xlsb: \"application/vnd.ms-excel.dialogsheet\"\n      },\n      macros: { /* Macrosheet (Excel 4.0 Macros) */\n        xlsx: \"application/vnd.ms-excel.macrosheet+xml\",\n        xlsb: \"application/vnd.ms-excel.macrosheet\"\n      },\n      styles: { /* Styles */\n        xlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\",\n        xlsb: \"application/vnd.ms-excel.styles\"\n      }\n    };\n    keys(o).forEach(function(k) { [\"xlsm\", \"xlam\"].forEach(function(v) { if(!o[k][v]) o[k][v] = o[k].xlsx; }); });\n    keys(o).forEach(function(k){ keys(o[k]).forEach(function(v) { ct2type[o[k][v]] = k; }); });\n    return o;\n  })();\n\n  var type2ct/*{[string]:Array<string>}*/ = evert_arr(ct2type);\n\n  XMLNS.CT = 'http://schemas.openxmlformats.org/package/2006/content-types';\n\n  function new_ct() {\n    return ({\n      workbooks:[], sheets:[], charts:[], dialogs:[], macros:[],\n      rels:[], strs:[], comments:[], links:[],\n      coreprops:[], extprops:[], custprops:[], themes:[], styles:[],\n      calcchains:[], vba: [], drawings: [],\n      TODO:[], xmlns: \"\" });\n  }\n\n  function parse_ct(data) {\n    var ct = new_ct();\n    if(!data || !data.match) return ct;\n    var ctext = {};\n    (data.match(tagregex)||[]).forEach(function(x) {\n      var y = parsexmltag(x);\n      switch(y[0].replace(nsregex,\"<\")) {\n        case '<?xml': break;\n        case '<Types': ct.xmlns = y['xmlns' + (y[0].match(/<(\\w+):/)||[\"\",\"\"])[1] ]; break;\n        case '<Default': ctext[y.Extension] = y.ContentType; break;\n        case '<Override':\n          if(ct[ct2type[y.ContentType]] !== undefined) ct[ct2type[y.ContentType]].push(y.PartName);\n          break;\n      }\n    });\n    if(ct.xmlns !== XMLNS.CT) throw new Error(\"Unknown Namespace: \" + ct.xmlns);\n    ct.calcchain = ct.calcchains.length > 0 ? ct.calcchains[0] : \"\";\n    ct.sst = ct.strs.length > 0 ? ct.strs[0] : \"\";\n    ct.style = ct.styles.length > 0 ? ct.styles[0] : \"\";\n    ct.defaults = ctext;\n    delete ct.calcchains;\n    return ct;\n  }\n\n  var CTYPE_XML_ROOT = writextag('Types', null, {\n    'xmlns': XMLNS.CT,\n    'xmlns:xsd': XMLNS.xsd,\n    'xmlns:xsi': XMLNS.xsi\n  });\n\n  var CTYPE_DEFAULTS = [\n    ['xml', 'application/xml'],\n    ['bin', 'application/vnd.ms-excel.sheet.binary.macroEnabled.main'],\n    ['vml', 'application/vnd.openxmlformats-officedocument.vmlDrawing'],\n    /* from test files */\n    ['bmp', 'image/bmp'],\n    ['png', 'image/png'],\n    ['gif', 'image/gif'],\n    ['emf', 'image/x-emf'],\n    ['wmf', 'image/x-wmf'],\n    ['jpg', 'image/jpeg'], ['jpeg', 'image/jpeg'],\n    ['tif', 'image/tiff'], ['tiff', 'image/tiff'],\n    ['pdf', 'application/pdf'],\n    ['rels', type2ct.rels[0]]\n  ].map(function(x) {\n    return writextag('Default', null, {'Extension':x[0], 'ContentType': x[1]});\n  });\n\n  function write_ct(ct, opts) {\n    var o = [], v;\n    o[o.length] = (XML_HEADER);\n    o[o.length] = (CTYPE_XML_ROOT);\n    o = o.concat(CTYPE_DEFAULTS);\n    var f1 = function(w) {\n      if(ct[w] && ct[w].length > 0) {\n        v = ct[w][0];\n        o[o.length] = (writextag('Override', null, {\n          'PartName': (v[0] == '/' ? \"\":\"/\") + v,\n          'ContentType': CT_LIST[w][opts.bookType || 'xlsx']\n        }));\n      }\n    };\n    var f2 = function(w) {\n      (ct[w]||[]).forEach(function(v) {\n        o[o.length] = (writextag('Override', null, {\n          'PartName': (v[0] == '/' ? \"\":\"/\") + v,\n          'ContentType': CT_LIST[w][opts.bookType || 'xlsx']\n        }));\n      });\n    };\n    var f3 = function(t) {\n      (ct[t]||[]).forEach(function(v) {\n        o[o.length] = (writextag('Override', null, {\n          'PartName': (v[0] == '/' ? \"\":\"/\") + v,\n          'ContentType': type2ct[t][0]\n        }));\n      });\n    };\n    f1('workbooks');\n    f2('sheets');\n    f2('charts');\n    f3('themes');\n    ['strs', 'styles'].forEach(f1);\n    ['coreprops', 'extprops', 'custprops'].forEach(f3);\n    f3('vba');\n    f3('comments');\n    f3('drawings');\n    if(o.length>2){ o[o.length] = ('</Types>'); o[1]=o[1].replace(\"/>\",\">\"); }\n    return o.join(\"\");\n  }\n  /* 9.3 Relationships */\n  var RELS = ({\n    WB: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\",\n    SHEET: \"http://sheetjs.openxmlformats.org/officeDocument/2006/relationships/officeDocument\",\n    HLINK: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink\",\n    VML: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/vmlDrawing\",\n    VBA: \"http://schemas.microsoft.com/office/2006/relationships/vbaProject\"\n  });\n\n  /* 9.3.3 Representing Relationships */\n  function get_rels_path(file) {\n    var n = file.lastIndexOf(\"/\");\n    return file.slice(0,n+1) + '_rels/' + file.slice(n+1) + \".rels\";\n  }\n\n  function parse_rels(data, currentFilePath) {\n    if (!data) return data;\n    if (currentFilePath.charAt(0) !== '/') {\n      currentFilePath = '/'+currentFilePath;\n    }\n    var rels = {};\n    var hash = {};\n\n    (data.match(tagregex)||[]).forEach(function(x) {\n      var y = parsexmltag(x);\n      /* 9.3.2.2 OPC_Relationships */\n      if (y[0] === '<Relationship') {\n        var rel = {}; rel.Type = y.Type; rel.Target = y.Target; rel.Id = y.Id; rel.TargetMode = y.TargetMode;\n        var canonictarget = y.TargetMode === 'External' ? y.Target : resolve_path(y.Target, currentFilePath);\n        rels[canonictarget] = rel;\n        hash[y.Id] = rel;\n      }\n    });\n    rels[\"!id\"] = hash;\n    return rels;\n  }\n\n  XMLNS.RELS = 'http://schemas.openxmlformats.org/package/2006/relationships';\n\n  var RELS_ROOT = writextag('Relationships', null, {\n    //'xmlns:ns0': XMLNS.RELS,\n    'xmlns': XMLNS.RELS\n  });\n\n  /* TODO */\n  function write_rels(rels) {\n    var o = [XML_HEADER, RELS_ROOT];\n    keys(rels['!id']).forEach(function(rid) {\n      o[o.length] = (writextag('Relationship', null, rels['!id'][rid]));\n    });\n    if(o.length>2){ o[o.length] = ('</Relationships>'); o[1]=o[1].replace(\"/>\",\">\"); }\n    return o.join(\"\");\n  }\n\n  function add_rels(rels, rId, f, type, relobj) {\n    if(!relobj) relobj = {};\n    if(!rels['!id']) rels['!id'] = {};\n    if(rId < 0) for(rId = 1; rels['!id']['rId' + rId]; ++rId){/* empty */}\n    relobj.Id = 'rId' + rId;\n    relobj.Type = type;\n    relobj.Target = f;\n    if(relobj.Type == RELS.HLINK) relobj.TargetMode = \"External\";\n    if(rels['!id'][relobj.Id]) throw new Error(\"Cannot rewrite rId \" + rId);\n    rels['!id'][relobj.Id] = relobj;\n    rels[('/' + relobj.Target).replace(\"//\",\"/\")] = relobj;\n    return rId;\n  }\n  /* Open Document Format for Office Applications (OpenDocument) Version 1.2 */\n  /* Part 3 Section 4 Manifest File */\n  var CT_ODS = \"application/vnd.oasis.opendocument.spreadsheet\";\n  function parse_manifest(d, opts) {\n    var str = xlml_normalize(d);\n    var Rn;\n    var FEtag;\n    while((Rn = xlmlregex.exec(str))) switch(Rn[3]) {\n      case 'manifest': break; // 4.2 <manifest:manifest>\n      case 'file-entry': // 4.3 <manifest:file-entry>\n        FEtag = parsexmltag(Rn[0], false);\n        if(FEtag.path == '/' && FEtag.type !== CT_ODS) throw new Error(\"This OpenDocument is not a spreadsheet\");\n        break;\n      case 'encryption-data': // 4.4 <manifest:encryption-data>\n      case 'algorithm': // 4.5 <manifest:algorithm>\n      case 'start-key-generation': // 4.6 <manifest:start-key-generation>\n      case 'key-derivation': // 4.7 <manifest:key-derivation>\n        throw new Error(\"Unsupported ODS Encryption\");\n      default: if(opts && opts.WTF) throw Rn;\n    }\n  }\n\n  function write_manifest(manifest) {\n    var o = [XML_HEADER];\n    o.push('<manifest:manifest xmlns:manifest=\"urn:oasis:names:tc:opendocument:xmlns:manifest:1.0\" manifest:version=\"1.2\">\\n');\n    o.push('  <manifest:file-entry manifest:full-path=\"/\" manifest:version=\"1.2\" manifest:media-type=\"application/vnd.oasis.opendocument.spreadsheet\"/>\\n');\n    for(var i = 0; i < manifest.length; ++i) o.push('  <manifest:file-entry manifest:full-path=\"' + manifest[i][0] + '\" manifest:media-type=\"' + manifest[i][1] + '\"/>\\n');\n    o.push('</manifest:manifest>');\n    return o.join(\"\");\n  }\n\n  /* Part 3 Section 6 Metadata Manifest File */\n  function write_rdf_type(file, res, tag) {\n    return [\n      '  <rdf:Description rdf:about=\"' + file + '\">\\n',\n      '    <rdf:type rdf:resource=\"http://docs.oasis-open.org/ns/office/1.2/meta/' + (tag || \"odf\") + '#' + res + '\"/>\\n',\n      '  </rdf:Description>\\n'\n    ].join(\"\");\n  }\n  function write_rdf_has(base, file) {\n    return [\n      '  <rdf:Description rdf:about=\"' + base + '\">\\n',\n      '    <ns0:hasPart xmlns:ns0=\"http://docs.oasis-open.org/ns/office/1.2/meta/pkg#\" rdf:resource=\"' + file + '\"/>\\n',\n      '  </rdf:Description>\\n'\n    ].join(\"\");\n  }\n  function write_rdf(rdf) {\n    var o = [XML_HEADER];\n    o.push('<rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\\n');\n    for(var i = 0; i != rdf.length; ++i) {\n      o.push(write_rdf_type(rdf[i][0], rdf[i][1]));\n      o.push(write_rdf_has(\"\",rdf[i][0]));\n    }\n    o.push(write_rdf_type(\"\",\"Document\", \"pkg\"));\n    o.push('</rdf:RDF>');\n    return o.join(\"\");\n  }\n  /* TODO: pull properties */\n  var write_meta_ods = (function() {\n    var payload = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><office:document-meta xmlns:office=\"urn:oasis:names:tc:opendocument:xmlns:office:1.0\" xmlns:meta=\"urn:oasis:names:tc:opendocument:xmlns:meta:1.0\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" office:version=\"1.2\"><office:meta><meta:generator>Sheet' + 'JS ' + XLSX.version + '</meta:generator></office:meta></office:document-meta>';\n    return function wmo() {\n      return payload;\n    };\n  })();\n\n  /* ECMA-376 Part II 11.1 Core Properties Part */\n  /* [MS-OSHARED] 2.3.3.2.[1-2].1 (PIDSI/PIDDSI) */\n  var CORE_PROPS = [\n    [\"cp:category\", \"Category\"],\n    [\"cp:contentStatus\", \"ContentStatus\"],\n    [\"cp:keywords\", \"Keywords\"],\n    [\"cp:lastModifiedBy\", \"LastAuthor\"],\n    [\"cp:lastPrinted\", \"LastPrinted\"],\n    [\"cp:revision\", \"RevNumber\"],\n    [\"cp:version\", \"Version\"],\n    [\"dc:creator\", \"Author\"],\n    [\"dc:description\", \"Comments\"],\n    [\"dc:identifier\", \"Identifier\"],\n    [\"dc:language\", \"Language\"],\n    [\"dc:subject\", \"Subject\"],\n    [\"dc:title\", \"Title\"],\n    [\"dcterms:created\", \"CreatedDate\", 'date'],\n    [\"dcterms:modified\", \"ModifiedDate\", 'date']\n  ];\n\n  XMLNS.CORE_PROPS = \"http://schemas.openxmlformats.org/package/2006/metadata/core-properties\";\n  RELS.CORE_PROPS  = 'http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties';\n\n  var CORE_PROPS_REGEX = (function() {\n    var r = new Array(CORE_PROPS.length);\n    for(var i = 0; i < CORE_PROPS.length; ++i) {\n      var f = CORE_PROPS[i];\n      var g = \"(?:\"+ f[0].slice(0,f[0].indexOf(\":\")) +\":)\"+ f[0].slice(f[0].indexOf(\":\")+1);\n      r[i] = new RegExp(\"<\" + g + \"[^>]*>([\\\\s\\\\S]*?)<\\/\" + g + \">\");\n    }\n    return r;\n  })();\n\n  function parse_core_props(data) {\n    var p = {};\n    data = utf8read(data);\n\n    for(var i = 0; i < CORE_PROPS.length; ++i) {\n      var f = CORE_PROPS[i], cur = data.match(CORE_PROPS_REGEX[i]);\n      if(cur != null && cur.length > 0) p[f[1]] = cur[1];\n      if(f[2] === 'date' && p[f[1]]) p[f[1]] = parseDate(p[f[1]]);\n    }\n\n    return p;\n  }\n\n  var CORE_PROPS_XML_ROOT = writextag('cp:coreProperties', null, {\n    //'xmlns': XMLNS.CORE_PROPS,\n    'xmlns:cp': XMLNS.CORE_PROPS,\n    'xmlns:dc': XMLNS.dc,\n    'xmlns:dcterms': XMLNS.dcterms,\n    'xmlns:dcmitype': XMLNS.dcmitype,\n    'xmlns:xsi': XMLNS.xsi\n  });\n\n  function cp_doit(f, g, h, o, p) {\n    if(p[f] != null || g == null || g === \"\") return;\n    p[f] = g;\n    o[o.length] = (h ? writextag(f,g,h) : writetag(f,g));\n  }\n\n  function write_core_props(cp, _opts) {\n    var opts = _opts || {};\n    var o = [XML_HEADER, CORE_PROPS_XML_ROOT], p = {};\n    if(!cp && !opts.Props) return o.join(\"\");\n\n    if(cp) {\n      if(cp.CreatedDate != null) cp_doit(\"dcterms:created\", typeof cp.CreatedDate === \"string\" ? cp.CreatedDate : write_w3cdtf(cp.CreatedDate, opts.WTF), {\"xsi:type\":\"dcterms:W3CDTF\"}, o, p);\n      if(cp.ModifiedDate != null) cp_doit(\"dcterms:modified\", typeof cp.ModifiedDate === \"string\" ? cp.ModifiedDate : write_w3cdtf(cp.ModifiedDate, opts.WTF), {\"xsi:type\":\"dcterms:W3CDTF\"}, o, p);\n    }\n\n    for(var i = 0; i != CORE_PROPS.length; ++i) {\n      var f = CORE_PROPS[i];\n      var v = opts.Props && opts.Props[f[1]] != null ? opts.Props[f[1]] : cp ? cp[f[1]] : null;\n      if(v === true) v = \"1\";\n      else if(v === false) v = \"0\";\n      else if(typeof v == \"number\") v = String(v);\n      if(v != null) cp_doit(f[0], v, null, o, p);\n    }\n    if(o.length>2){ o[o.length] = ('</cp:coreProperties>'); o[1]=o[1].replace(\"/>\",\">\"); }\n    return o.join(\"\");\n  }\n  /* 15.2.12.3 Extended File Properties Part */\n  /* [MS-OSHARED] 2.3.3.2.[1-2].1 (PIDSI/PIDDSI) */\n  var EXT_PROPS = [\n    [\"Application\", \"Application\", \"string\"],\n    [\"AppVersion\", \"AppVersion\", \"string\"],\n    [\"Company\", \"Company\", \"string\"],\n    [\"DocSecurity\", \"DocSecurity\", \"string\"],\n    [\"Manager\", \"Manager\", \"string\"],\n    [\"HyperlinksChanged\", \"HyperlinksChanged\", \"bool\"],\n    [\"SharedDoc\", \"SharedDoc\", \"bool\"],\n    [\"LinksUpToDate\", \"LinksUpToDate\", \"bool\"],\n    [\"ScaleCrop\", \"ScaleCrop\", \"bool\"],\n    [\"HeadingPairs\", \"HeadingPairs\", \"raw\"],\n    [\"TitlesOfParts\", \"TitlesOfParts\", \"raw\"]\n  ];\n\n  XMLNS.EXT_PROPS = \"http://schemas.openxmlformats.org/officeDocument/2006/extended-properties\";\n  RELS.EXT_PROPS  = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties';\n\n  var PseudoPropsPairs = [\n    \"Worksheets\",  \"SheetNames\",\n    \"NamedRanges\", \"DefinedNames\",\n    \"Chartsheets\", \"ChartNames\"\n  ];\n  function load_props_pairs(HP, TOP, props, opts) {\n    var v = [];\n    if(typeof HP == \"string\") v = parseVector(HP, opts);\n    else for(var j = 0; j < HP.length; ++j) v = v.concat(HP[j].map(function(hp) { return {v:hp}; }));\n    var parts = (typeof TOP == \"string\") ? parseVector(TOP, opts).map(function (x) { return x.v; }) : TOP;\n    var idx = 0, len = 0;\n    if(parts.length > 0) for(var i = 0; i !== v.length; i += 2) {\n      len = +(v[i+1].v);\n      switch(v[i].v) {\n        case \"Worksheets\":\n        case \"工作表\":\n        case \"Листы\":\n        case \"أوراق العمل\":\n        case \"ワークシート\":\n        case \"גליונות עבודה\":\n        case \"Arbeitsblätter\":\n        case \"Çalışma Sayfaları\":\n        case \"Feuilles de calcul\":\n        case \"Fogli di lavoro\":\n        case \"Folhas de cálculo\":\n        case \"Planilhas\":\n        case \"Regneark\":\n        case \"Werkbladen\":\n          props.Worksheets = len;\n          props.SheetNames = parts.slice(idx, idx + len);\n          break;\n\n        case \"Named Ranges\":\n        case \"名前付き一覧\":\n        case \"Benannte Bereiche\":\n        case \"Navngivne områder\":\n          props.NamedRanges = len;\n          props.DefinedNames = parts.slice(idx, idx + len);\n          break;\n\n        case \"Charts\":\n        case \"Diagramme\":\n          props.Chartsheets = len;\n          props.ChartNames = parts.slice(idx, idx + len);\n          break;\n      }\n      idx += len;\n    }\n  }\n\n  function parse_ext_props(data, p, opts) {\n    var q = {}; if(!p) p = {};\n    data = utf8read(data);\n\n    EXT_PROPS.forEach(function(f) {\n      switch(f[2]) {\n        case \"string\": p[f[1]] = (data.match(matchtag(f[0]))||[])[1]; break;\n        case \"bool\": p[f[1]] = (data.match(matchtag(f[0]))||[])[1] === \"true\"; break;\n        case \"raw\":\n          var cur = data.match(new RegExp(\"<\" + f[0] + \"[^>]*>([\\\\s\\\\S]*?)<\\/\" + f[0] + \">\"));\n          if(cur && cur.length > 0) q[f[1]] = cur[1];\n          break;\n      }\n    });\n\n    if(q.HeadingPairs && q.TitlesOfParts) load_props_pairs(q.HeadingPairs, q.TitlesOfParts, p, opts);\n\n    return p;\n  }\n\n  var EXT_PROPS_XML_ROOT = writextag('Properties', null, {\n    'xmlns': XMLNS.EXT_PROPS,\n    'xmlns:vt': XMLNS.vt\n  });\n\n  function write_ext_props(cp) {\n    var o = [], W = writextag;\n    if(!cp) cp = {};\n    cp.Application = \"SheetJS\";\n    o[o.length] = (XML_HEADER);\n    o[o.length] = (EXT_PROPS_XML_ROOT);\n\n    EXT_PROPS.forEach(function(f) {\n      if(cp[f[1]] === undefined) return;\n      var v;\n      switch(f[2]) {\n        case 'string': v = String(cp[f[1]]); break;\n        case 'bool': v = cp[f[1]] ? 'true' : 'false'; break;\n      }\n      if(v !== undefined) o[o.length] = (W(f[0], v));\n    });\n\n    /* TODO: HeadingPairs, TitlesOfParts */\n    o[o.length] = (W('HeadingPairs', W('vt:vector', W('vt:variant', '<vt:lpstr>Worksheets</vt:lpstr>')+W('vt:variant', W('vt:i4', String(cp.Worksheets))), {size:2, baseType:\"variant\"})));\n    o[o.length] = (W('TitlesOfParts', W('vt:vector', cp.SheetNames.map(function(s) { return \"<vt:lpstr>\" + escapexml(s) + \"</vt:lpstr>\"; }).join(\"\"), {size: cp.Worksheets, baseType:\"lpstr\"})));\n    if(o.length>2){ o[o.length] = ('</Properties>'); o[1]=o[1].replace(\"/>\",\">\"); }\n    return o.join(\"\");\n  }\n  /* 15.2.12.2 Custom File Properties Part */\n  XMLNS.CUST_PROPS = \"http://schemas.openxmlformats.org/officeDocument/2006/custom-properties\";\n  RELS.CUST_PROPS  = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/custom-properties';\n\n  var custregex = /<[^>]+>[^<]*/g;\n  function parse_cust_props(data, opts) {\n    var p = {}, name = \"\";\n    var m = data.match(custregex);\n    if(m) for(var i = 0; i != m.length; ++i) {\n      var x = m[i], y = parsexmltag(x);\n      switch(y[0]) {\n        case '<?xml': break;\n        case '<Properties': break;\n        case '<property': name = y.name; break;\n        case '</property>': name = null; break;\n        default: if (x.indexOf('<vt:') === 0) {\n          var toks = x.split('>');\n          var type = toks[0].slice(4), text = toks[1];\n          /* 22.4.2.32 (CT_Variant). Omit the binary types from 22.4 (Variant Types) */\n          switch(type) {\n            case 'lpstr': case 'bstr': case 'lpwstr':\n              p[name] = unescapexml(text);\n              break;\n            case 'bool':\n              p[name] = parsexmlbool(text);\n              break;\n            case 'i1': case 'i2': case 'i4': case 'i8': case 'int': case 'uint':\n              p[name] = parseInt(text, 10);\n              break;\n            case 'r4': case 'r8': case 'decimal':\n              p[name] = parseFloat(text);\n              break;\n            case 'filetime': case 'date':\n              p[name] = parseDate(text);\n              break;\n            case 'cy': case 'error':\n              p[name] = unescapexml(text);\n              break;\n            default:\n              if(type.slice(-1) == '/') break;\n              if(opts.WTF && typeof console !== 'undefined') console.warn('Unexpected', x, type, toks);\n          }\n        } else if(x.slice(0,2) === \"</\") {/* empty */\n        } else if(opts.WTF) throw new Error(x);\n      }\n    }\n    return p;\n  }\n\n  var CUST_PROPS_XML_ROOT = writextag('Properties', null, {\n    'xmlns': XMLNS.CUST_PROPS,\n    'xmlns:vt': XMLNS.vt\n  });\n\n  function write_cust_props(cp) {\n    var o = [XML_HEADER, CUST_PROPS_XML_ROOT];\n    if(!cp) return o.join(\"\");\n    var pid = 1;\n    keys(cp).forEach(function custprop(k) { ++pid;\n      o[o.length] = (writextag('property', write_vt(cp[k]), {\n        'fmtid': '{D5CDD505-2E9C-101B-9397-08002B2CF9AE}',\n        'pid': pid,\n        'name': k\n      }));\n    });\n    if(o.length>2){ o[o.length] = '</Properties>'; o[1]=o[1].replace(\"/>\",\">\"); }\n    return o.join(\"\");\n  }\n  /* Common Name -> XLML Name */\n  var XLMLDocPropsMap = {\n    Title: 'Title',\n    Subject: 'Subject',\n    Author: 'Author',\n    Keywords: 'Keywords',\n    Comments: 'Description',\n    LastAuthor: 'LastAuthor',\n    RevNumber: 'Revision',\n    Application: 'AppName',\n    /* TotalTime: 'TotalTime', */\n    LastPrinted: 'LastPrinted',\n    CreatedDate: 'Created',\n    ModifiedDate: 'LastSaved',\n    /* Pages */\n    /* Words */\n    /* Characters */\n    Category: 'Category',\n    /* PresentationFormat */\n    Manager: 'Manager',\n    Company: 'Company',\n    /* Guid */\n    /* HyperlinkBase */\n    /* Bytes */\n    /* Lines */\n    /* Paragraphs */\n    /* CharactersWithSpaces */\n    AppVersion: 'Version',\n\n    ContentStatus: 'ContentStatus', /* NOTE: missing from schema */\n    Identifier: 'Identifier', /* NOTE: missing from schema */\n    Language: 'Language' /* NOTE: missing from schema */\n  };\n  var evert_XLMLDPM = evert(XLMLDocPropsMap);\n\n  function xlml_set_prop(Props, tag, val) {\n    tag = evert_XLMLDPM[tag] || tag;\n    Props[tag] = val;\n  }\n\n  function xlml_write_docprops(Props, opts) {\n    var o = [];\n    keys(XLMLDocPropsMap).map(function(m) {\n      for(var i = 0; i < CORE_PROPS.length; ++i) if(CORE_PROPS[i][1] == m) return CORE_PROPS[i];\n      for(i = 0; i < EXT_PROPS.length; ++i) if(EXT_PROPS[i][1] == m) return EXT_PROPS[i];\n      throw m;\n    }).forEach(function(p) {\n      if(Props[p[1]] == null) return;\n      var m = opts && opts.Props && opts.Props[p[1]] != null ? opts.Props[p[1]] : Props[p[1]];\n      switch(p[2]) {\n        case 'date': m = new Date(m).toISOString().replace(/\\.\\d*Z/,\"Z\"); break;\n      }\n      if(typeof m == 'number') m = String(m);\n      else if(m === true || m === false) { m = m ? \"1\" : \"0\"; }\n      else if(m instanceof Date) m = new Date(m).toISOString().replace(/\\.\\d*Z/,\"\");\n      o.push(writetag(XLMLDocPropsMap[p[1]] || p[1], m));\n    });\n    return writextag('DocumentProperties', o.join(\"\"), {xmlns:XLMLNS.o });\n  }\n  function xlml_write_custprops(Props, Custprops) {\n    var BLACKLIST = [\"Worksheets\",\"SheetNames\"];\n    var T = 'CustomDocumentProperties';\n    var o = [];\n    if(Props) keys(Props).forEach(function(k) {\n      if(!Props.hasOwnProperty(k)) return;\n      for(var i = 0; i < CORE_PROPS.length; ++i) if(k == CORE_PROPS[i][1]) return;\n      for(i = 0; i < EXT_PROPS.length; ++i) if(k == EXT_PROPS[i][1]) return;\n      for(i = 0; i < BLACKLIST.length; ++i) if(k == BLACKLIST[i]) return;\n\n      var m = Props[k];\n      var t = \"string\";\n      if(typeof m == 'number') { t = \"float\"; m = String(m); }\n      else if(m === true || m === false) { t = \"boolean\"; m = m ? \"1\" : \"0\"; }\n      else m = String(m);\n      o.push(writextag(escapexmltag(k), m, {\"dt:dt\":t}));\n    });\n    if(Custprops) keys(Custprops).forEach(function(k) {\n      if(!Custprops.hasOwnProperty(k)) return;\n      if(Props && Props.hasOwnProperty(k)) return;\n      var m = Custprops[k];\n      var t = \"string\";\n      if(typeof m == 'number') { t = \"float\"; m = String(m); }\n      else if(m === true || m === false) { t = \"boolean\"; m = m ? \"1\" : \"0\"; }\n      else if(m instanceof Date) { t = \"dateTime.tz\"; m = m.toISOString(); }\n      else m = String(m);\n      o.push(writextag(escapexmltag(k), m, {\"dt:dt\":t}));\n    });\n    return '<' + T + ' xmlns=\"' + XLMLNS.o + '\">' + o.join(\"\") + '</' + T + '>';\n  }\n  /* [MS-DTYP] 2.3.3 FILETIME */\n  /* [MS-OLEDS] 2.1.3 FILETIME (Packet Version) */\n  /* [MS-OLEPS] 2.8 FILETIME (Packet Version) */\n  function parse_FILETIME(blob) {\n    var dwLowDateTime = blob.read_shift(4), dwHighDateTime = blob.read_shift(4);\n    return new Date(((dwHighDateTime/1e7*Math.pow(2,32) + dwLowDateTime/1e7) - 11644473600)*1000).toISOString().replace(/\\.000/,\"\");\n  }\n  function write_FILETIME(time) {\n    var date = (typeof time == \"string\") ? new Date(Date.parse(time)) : time;\n    var t = date.getTime() / 1000 + 11644473600;\n    var l = t % Math.pow(2,32), h = (t - l) / Math.pow(2,32);\n    l *= 1e7; h *= 1e7;\n    var w = (l / Math.pow(2,32)) | 0;\n    if(w > 0) { l = l % Math.pow(2,32); h += w; }\n    var o = new_buf(8); o.write_shift(4, l); o.write_shift(4, h); return o;\n  }\n\n  /* [MS-OSHARED] 2.3.3.1.4 Lpstr */\n  function parse_lpstr(blob, type, pad) {\n    var start = blob.l;\n    var str = blob.read_shift(0, 'lpstr-cp');\n    if(pad) while((blob.l - start) & 3) ++blob.l;\n    return str;\n  }\n\n  /* [MS-OSHARED] 2.3.3.1.6 Lpwstr */\n  function parse_lpwstr(blob, type, pad) {\n    var str = blob.read_shift(0, 'lpwstr');\n    if(pad) blob.l += (4 - ((str.length+1) & 3)) & 3;\n    return str;\n  }\n\n\n  /* [MS-OSHARED] 2.3.3.1.11 VtString */\n  /* [MS-OSHARED] 2.3.3.1.12 VtUnalignedString */\n  function parse_VtStringBase(blob, stringType, pad) {\n    if(stringType === 0x1F /*VT_LPWSTR*/) return parse_lpwstr(blob);\n    return parse_lpstr(blob, stringType, pad);\n  }\n\n  function parse_VtString(blob, t, pad) { return parse_VtStringBase(blob, t, pad === false ? 0: 4); }\n  function parse_VtUnalignedString(blob, t) { if(!t) throw new Error(\"VtUnalignedString must have positive length\"); return parse_VtStringBase(blob, t, 0); }\n\n  /* [MS-OSHARED] 2.3.3.1.9 VtVecUnalignedLpstrValue */\n  function parse_VtVecUnalignedLpstrValue(blob) {\n    var length = blob.read_shift(4);\n    var ret = [];\n    for(var i = 0; i != length; ++i) ret[i] = blob.read_shift(0, 'lpstr-cp').replace(chr0,'');\n    return ret;\n  }\n\n  /* [MS-OSHARED] 2.3.3.1.10 VtVecUnalignedLpstr */\n  function parse_VtVecUnalignedLpstr(blob) {\n    return parse_VtVecUnalignedLpstrValue(blob);\n  }\n\n  /* [MS-OSHARED] 2.3.3.1.13 VtHeadingPair */\n  function parse_VtHeadingPair(blob) {\n    var headingString = parse_TypedPropertyValue(blob, VT_USTR);\n    var headerParts = parse_TypedPropertyValue(blob, VT_I4);\n    return [headingString, headerParts];\n  }\n\n  /* [MS-OSHARED] 2.3.3.1.14 VtVecHeadingPairValue */\n  function parse_VtVecHeadingPairValue(blob) {\n    var cElements = blob.read_shift(4);\n    var out = [];\n    for(var i = 0; i != cElements / 2; ++i) out.push(parse_VtHeadingPair(blob));\n    return out;\n  }\n\n  /* [MS-OSHARED] 2.3.3.1.15 VtVecHeadingPair */\n  function parse_VtVecHeadingPair(blob) {\n    // NOTE: When invoked, wType & padding were already consumed\n    return parse_VtVecHeadingPairValue(blob);\n  }\n\n  /* [MS-OLEPS] 2.18.1 Dictionary (uses 2.17, 2.16) */\n  function parse_dictionary(blob,CodePage) {\n    var cnt = blob.read_shift(4);\n    var dict = ({});\n    for(var j = 0; j != cnt; ++j) {\n      var pid = blob.read_shift(4);\n      var len = blob.read_shift(4);\n      dict[pid] = blob.read_shift(len, (CodePage === 0x4B0 ?'utf16le':'utf8')).replace(chr0,'').replace(chr1,'!');\n      if(CodePage === 0x4B0 && (len % 2)) blob.l += 2;\n    }\n    if(blob.l & 3) blob.l = (blob.l>>2+1)<<2;\n    return dict;\n  }\n\n  /* [MS-OLEPS] 2.9 BLOB */\n  function parse_BLOB(blob) {\n    var size = blob.read_shift(4);\n    var bytes = blob.slice(blob.l,blob.l+size);\n    blob.l += size;\n    if((size & 3) > 0) blob.l += (4 - (size & 3)) & 3;\n    return bytes;\n  }\n\n  /* [MS-OLEPS] 2.11 ClipboardData */\n  function parse_ClipboardData(blob) {\n    // TODO\n    var o = {};\n    o.Size = blob.read_shift(4);\n    //o.Format = blob.read_shift(4);\n    blob.l += o.Size + 3 - (o.Size - 1) % 4;\n    return o;\n  }\n\n  /* [MS-OLEPS] 2.15 TypedPropertyValue */\n  function parse_TypedPropertyValue(blob, type, _opts) {\n    var t = blob.read_shift(2), ret, opts = _opts||{};\n    blob.l += 2;\n    if(type !== VT_VARIANT)\n      if(t !== type && VT_CUSTOM.indexOf(type)===-1) throw new Error('Expected type ' + type + ' saw ' + t);\n    switch(type === VT_VARIANT ? t : type) {\n      case 0x02 /*VT_I2*/: ret = blob.read_shift(2, 'i'); if(!opts.raw) blob.l += 2; return ret;\n      case 0x03 /*VT_I4*/: ret = blob.read_shift(4, 'i'); return ret;\n      case 0x0B /*VT_BOOL*/: return blob.read_shift(4) !== 0x0;\n      case 0x13 /*VT_UI4*/: ret = blob.read_shift(4); return ret;\n      case 0x1E /*VT_LPSTR*/: return parse_lpstr(blob, t, 4).replace(chr0,'');\n      case 0x1F /*VT_LPWSTR*/: return parse_lpwstr(blob);\n      case 0x40 /*VT_FILETIME*/: return parse_FILETIME(blob);\n      case 0x41 /*VT_BLOB*/: return parse_BLOB(blob);\n      case 0x47 /*VT_CF*/: return parse_ClipboardData(blob);\n      case 0x50 /*VT_STRING*/: return parse_VtString(blob, t, !opts.raw).replace(chr0,'');\n      case 0x51 /*VT_USTR*/: return parse_VtUnalignedString(blob, t/*, 4*/).replace(chr0,'');\n      case 0x100C /*VT_VECTOR|VT_VARIANT*/: return parse_VtVecHeadingPair(blob);\n      case 0x101E /*VT_LPSTR*/: return parse_VtVecUnalignedLpstr(blob);\n      default: throw new Error(\"TypedPropertyValue unrecognized type \" + type + \" \" + t);\n    }\n  }\n  function write_TypedPropertyValue(type, value) {\n    var o = new_buf(4), p = new_buf(4);\n    o.write_shift(4, type == 0x50 ? 0x1F : type);\n    switch(type) {\n      case 0x03 /*VT_I4*/: p.write_shift(-4, value); break;\n      case 0x05 /*VT_I4*/: p = new_buf(8); p.write_shift(8, value, 'f'); break;\n      case 0x0B /*VT_BOOL*/: p.write_shift(4, value ? 0x01 : 0x00); break;\n      case 0x40 /*VT_FILETIME*/:  p = write_FILETIME(value); break;\n      case 0x1F /*VT_LPWSTR*/:\n      case 0x50 /*VT_STRING*/:\n        p = new_buf(4 + 2 * (value.length + 1) + (value.length % 2 ? 0 : 2));\n        p.write_shift(4, value.length + 1);\n        p.write_shift(0, value, \"dbcs\");\n        while(p.l != p.length) p.write_shift(1, 0);\n        break;\n      default: throw new Error(\"TypedPropertyValue unrecognized type \" + type + \" \" + value);\n    }\n    return bconcat([o, p]);\n  }\n\n  /* [MS-OLEPS] 2.20 PropertySet */\n  function parse_PropertySet(blob, PIDSI) {\n    var start_addr = blob.l;\n    var size = blob.read_shift(4);\n    var NumProps = blob.read_shift(4);\n    var Props = [], i = 0;\n    var CodePage = 0;\n    var Dictionary = -1, DictObj = ({});\n    for(i = 0; i != NumProps; ++i) {\n      var PropID = blob.read_shift(4);\n      var Offset = blob.read_shift(4);\n      Props[i] = [PropID, Offset + start_addr];\n    }\n    Props.sort(function(x,y) { return x[1] - y[1]; });\n    var PropH = {};\n    for(i = 0; i != NumProps; ++i) {\n      if(blob.l !== Props[i][1]) {\n        var fail = true;\n        if(i>0 && PIDSI) switch(PIDSI[Props[i-1][0]].t) {\n          case 0x02 /*VT_I2*/: if(blob.l+2 === Props[i][1]) { blob.l+=2; fail = false; } break;\n          case 0x50 /*VT_STRING*/: if(blob.l <= Props[i][1]) { blob.l=Props[i][1]; fail = false; } break;\n          case 0x100C /*VT_VECTOR|VT_VARIANT*/: if(blob.l <= Props[i][1]) { blob.l=Props[i][1]; fail = false; } break;\n        }\n        if((!PIDSI||i==0) && blob.l <= Props[i][1]) { fail=false; blob.l = Props[i][1]; }\n        if(fail) throw new Error(\"Read Error: Expected address \" + Props[i][1] + ' at ' + blob.l + ' :' + i);\n      }\n      if(PIDSI) {\n        var piddsi = PIDSI[Props[i][0]];\n        PropH[piddsi.n] = parse_TypedPropertyValue(blob, piddsi.t, {raw:true});\n        if(piddsi.p === 'version') PropH[piddsi.n] = String(PropH[piddsi.n] >> 16) + \".\" + (\"0000\" + String(PropH[piddsi.n] & 0xFFFF)).slice(-4);\n        if(piddsi.n == \"CodePage\") switch(PropH[piddsi.n]) {\n          case 0: PropH[piddsi.n] = 1252;\n          /* falls through */\n          case 874:\n          case 932:\n          case 936:\n          case 949:\n          case 950:\n          case 1250:\n          case 1251:\n          case 1253:\n          case 1254:\n          case 1255:\n          case 1256:\n          case 1257:\n          case 1258:\n          case 10000:\n          case 1200:\n          case 1201:\n          case 1252:\n          case 65000: case -536:\n          case 65001: case -535:\n            set_cp(CodePage = (PropH[piddsi.n]>>>0) & 0xFFFF); break;\n          default: throw new Error(\"Unsupported CodePage: \" + PropH[piddsi.n]);\n        }\n      } else {\n        if(Props[i][0] === 0x1) {\n          CodePage = PropH.CodePage = (parse_TypedPropertyValue(blob, VT_I2));\n          set_cp(CodePage);\n          if(Dictionary !== -1) {\n            var oldpos = blob.l;\n            blob.l = Props[Dictionary][1];\n            DictObj = parse_dictionary(blob,CodePage);\n            blob.l = oldpos;\n          }\n        } else if(Props[i][0] === 0) {\n          if(CodePage === 0) { Dictionary = i; blob.l = Props[i+1][1]; continue; }\n          DictObj = parse_dictionary(blob,CodePage);\n        } else {\n          var name = DictObj[Props[i][0]];\n          var val;\n          /* [MS-OSHARED] 2.3.3.2.3.1.2 + PROPVARIANT */\n          switch(blob[blob.l]) {\n            case 0x41 /*VT_BLOB*/: blob.l += 4; val = parse_BLOB(blob); break;\n            case 0x1E /*VT_LPSTR*/: blob.l += 4; val = parse_VtString(blob, blob[blob.l-4]).replace(/\\u0000+$/,\"\"); break;\n            case 0x1F /*VT_LPWSTR*/: blob.l += 4; val = parse_VtString(blob, blob[blob.l-4]).replace(/\\u0000+$/,\"\"); break;\n            case 0x03 /*VT_I4*/: blob.l += 4; val = blob.read_shift(4, 'i'); break;\n            case 0x13 /*VT_UI4*/: blob.l += 4; val = blob.read_shift(4); break;\n            case 0x05 /*VT_R8*/: blob.l += 4; val = blob.read_shift(8, 'f'); break;\n            case 0x0B /*VT_BOOL*/: blob.l += 4; val = parsebool(blob, 4); break;\n            case 0x40 /*VT_FILETIME*/: blob.l += 4; val = parseDate(parse_FILETIME(blob)); break;\n            default: throw new Error(\"unparsed value: \" + blob[blob.l]);\n          }\n          PropH[name] = val;\n        }\n      }\n    }\n    blob.l = start_addr + size; /* step ahead to skip padding */\n    return PropH;\n  }\n  var XLSPSSkip = [ \"CodePage\", \"Thumbnail\", \"_PID_LINKBASE\", \"_PID_HLINKS\", \"SystemIdentifier\", \"FMTID\" ].concat(PseudoPropsPairs);\n  function guess_property_type(val) {\n    switch(typeof val) {\n      case \"boolean\": return 0x0B;\n      case \"number\": return ((val|0)==val) ? 0x03 : 0x05;\n      case \"string\": return 0x1F;\n      case \"object\": if(val instanceof Date) return 0x40; break;\n    }\n    return -1;\n  }\n  function write_PropertySet(entries, RE, PIDSI) {\n    var hdr = new_buf(8), piao = [], prop = [];\n    var sz = 8, i = 0;\n\n    var pr = new_buf(8), pio = new_buf(8);\n    pr.write_shift(4, 0x0002);\n    pr.write_shift(4, 0x04B0);\n    pio.write_shift(4, 0x0001);\n    prop.push(pr); piao.push(pio);\n    sz += 8 + pr.length;\n\n    if(!RE) {\n      pio = new_buf(8);\n      pio.write_shift(4, 0);\n      piao.unshift(pio);\n\n      var bufs = [new_buf(4)];\n      bufs[0].write_shift(4, entries.length);\n      for(i = 0; i < entries.length; ++i) {\n        var value = entries[i][0];\n        pr = new_buf(4 + 4 + 2 * (value.length + 1) + (value.length % 2 ? 0 : 2));\n        pr.write_shift(4, i+2);\n        pr.write_shift(4, value.length + 1);\n        pr.write_shift(0, value, \"dbcs\");\n        while(pr.l != pr.length) pr.write_shift(1, 0);\n        bufs.push(pr);\n      }\n      pr = bconcat(bufs);\n      prop.unshift(pr);\n      sz += 8 + pr.length;\n    }\n\n    for(i = 0; i < entries.length; ++i) {\n      if(RE && !RE[entries[i][0]]) continue;\n      if(XLSPSSkip.indexOf(entries[i][0]) > -1) continue;\n      if(entries[i][1] == null) continue;\n\n      var val = entries[i][1], idx = 0;\n      if(RE) {\n        idx = +RE[entries[i][0]];\n        var pinfo = (PIDSI)[idx];\n        if(pinfo.p == \"version\" && typeof val == \"string\") {\n          var arr = val.split(\".\");\n          val = ((+arr[0])<<16) + ((+arr[1])||0);\n        }\n        pr = write_TypedPropertyValue(pinfo.t, val);\n      } else {\n        var T = guess_property_type(val);\n        if(T == -1) { T = 0x1F; val = String(val); }\n        pr = write_TypedPropertyValue(T, val);\n      }\n      prop.push(pr);\n\n      pio = new_buf(8);\n      pio.write_shift(4, !RE ? 2+i : idx);\n      piao.push(pio);\n\n      sz += 8 + pr.length;\n    }\n\n    var w = 8 * (prop.length + 1);\n    for(i = 0; i < prop.length; ++i) { piao[i].write_shift(4, w); w += prop[i].length; }\n    hdr.write_shift(4, sz);\n    hdr.write_shift(4, prop.length);\n    return bconcat([hdr].concat(piao).concat(prop));\n  }\n\n  /* [MS-OLEPS] 2.21 PropertySetStream */\n  function parse_PropertySetStream(file, PIDSI, clsid) {\n    var blob = file.content;\n    if(!blob) return ({});\n    prep_blob(blob, 0);\n\n    var NumSets, FMTID0, FMTID1, Offset0, Offset1 = 0;\n    blob.chk('feff', 'Byte Order: ');\n\n    /*var vers = */blob.read_shift(2); // TODO: check version\n    var SystemIdentifier = blob.read_shift(4);\n    var CLSID = blob.read_shift(16);\n    if(CLSID !== CFB.utils.consts.HEADER_CLSID && CLSID !== clsid) throw new Error(\"Bad PropertySet CLSID \" + CLSID);\n    NumSets = blob.read_shift(4);\n    if(NumSets !== 1 && NumSets !== 2) throw new Error(\"Unrecognized #Sets: \" + NumSets);\n    FMTID0 = blob.read_shift(16); Offset0 = blob.read_shift(4);\n\n    if(NumSets === 1 && Offset0 !== blob.l) throw new Error(\"Length mismatch: \" + Offset0 + \" !== \" + blob.l);\n    else if(NumSets === 2) { FMTID1 = blob.read_shift(16); Offset1 = blob.read_shift(4); }\n    var PSet0 = parse_PropertySet(blob, PIDSI);\n\n    var rval = ({ SystemIdentifier: SystemIdentifier });\n    for(var y in PSet0) rval[y] = PSet0[y];\n    //rval.blob = blob;\n    rval.FMTID = FMTID0;\n    //rval.PSet0 = PSet0;\n    if(NumSets === 1) return rval;\n    if(Offset1 - blob.l == 2) blob.l += 2;\n    if(blob.l !== Offset1) throw new Error(\"Length mismatch 2: \" + blob.l + \" !== \" + Offset1);\n    var PSet1;\n    try { PSet1 = parse_PropertySet(blob, null); } catch(e) {/* empty */}\n    for(y in PSet1) rval[y] = PSet1[y];\n    rval.FMTID = [FMTID0, FMTID1]; // TODO: verify FMTID0/1\n    return rval;\n  }\n  function write_PropertySetStream(entries, clsid, RE, PIDSI, entries2, clsid2) {\n    var hdr = new_buf(entries2 ? 68 : 48);\n    var bufs = [hdr];\n    hdr.write_shift(2, 0xFFFE);\n    hdr.write_shift(2, 0x0000); /* TODO: type 1 props */\n    hdr.write_shift(4, 0x32363237);\n    hdr.write_shift(16, CFB.utils.consts.HEADER_CLSID, \"hex\");\n    hdr.write_shift(4, (entries2 ? 2 : 1));\n    hdr.write_shift(16, clsid, \"hex\");\n    hdr.write_shift(4, (entries2 ? 68 : 48));\n    var ps0 = write_PropertySet(entries, RE, PIDSI);\n    bufs.push(ps0);\n\n    if(entries2) {\n      var ps1 = write_PropertySet(entries2, null, null);\n      hdr.write_shift(16, clsid2, \"hex\");\n      hdr.write_shift(4, 68 + ps0.length);\n      bufs.push(ps1);\n    }\n    return bconcat(bufs);\n  }\n\n  function parsenoop2(blob, length) { blob.read_shift(length); return null; }\n  function writezeroes(n, o) { if(!o) o=new_buf(n); for(var j=0; j<n; ++j) o.write_shift(1, 0); return o; }\n\n  function parslurp(blob, length, cb) {\n    var arr = [], target = blob.l + length;\n    while(blob.l < target) arr.push(cb(blob, target - blob.l));\n    if(target !== blob.l) throw new Error(\"Slurp error\");\n    return arr;\n  }\n\n  function parsebool(blob, length) { return blob.read_shift(length) === 0x1; }\n  function writebool(v, o) { if(!o) o=new_buf(2); o.write_shift(2, +!!v); return o; }\n\n  function parseuint16(blob) { return blob.read_shift(2, 'u'); }\n  function writeuint16(v, o) { if(!o) o=new_buf(2); o.write_shift(2, v); return o; }\n  function parseuint16a(blob, length) { return parslurp(blob,length,parseuint16);}\n\n  /* --- 2.5 Structures --- */\n\n  /* [MS-XLS] 2.5.10 Bes (boolean or error) */\n  function parse_Bes(blob) {\n    var v = blob.read_shift(1), t = blob.read_shift(1);\n    return t === 0x01 ? v : v === 0x01;\n  }\n  function write_Bes(v, t, o) {\n    if(!o) o = new_buf(2);\n    o.write_shift(1, +v);\n    o.write_shift(1, ((t == 'e') ? 1 : 0));\n    return o;\n  }\n\n  /* [MS-XLS] 2.5.240 ShortXLUnicodeString */\n  function parse_ShortXLUnicodeString(blob, length, opts) {\n    var cch = blob.read_shift(opts && opts.biff >= 12 ? 2 : 1);\n    var encoding = 'sbcs-cont';\n    var cp = current_codepage;\n    if(opts && opts.biff >= 8) current_codepage = 1200;\n    if(!opts || opts.biff == 8 ) {\n      var fHighByte = blob.read_shift(1);\n      if(fHighByte) { encoding = 'dbcs-cont'; }\n    } else if(opts.biff == 12) {\n      encoding = 'wstr';\n    }\n    if(opts.biff >= 2 && opts.biff <= 5) encoding = 'cpstr';\n    var o = cch ? blob.read_shift(cch, encoding) : \"\";\n    current_codepage = cp;\n    return o;\n  }\n\n  /* 2.5.293 XLUnicodeRichExtendedString */\n  function parse_XLUnicodeRichExtendedString(blob) {\n    var cp = current_codepage;\n    current_codepage = 1200;\n    var cch = blob.read_shift(2), flags = blob.read_shift(1);\n    var /*fHighByte = flags & 0x1,*/ fExtSt = flags & 0x4, fRichSt = flags & 0x8;\n    var width = 1 + (flags & 0x1); // 0x0 -> utf8, 0x1 -> dbcs\n    var cRun = 0, cbExtRst;\n    var z = {};\n    if(fRichSt) cRun = blob.read_shift(2);\n    if(fExtSt) cbExtRst = blob.read_shift(4);\n    var encoding = width == 2 ? 'dbcs-cont' : 'sbcs-cont';\n    var msg = cch === 0 ? \"\" : blob.read_shift(cch, encoding);\n    if(fRichSt) blob.l += 4 * cRun; //TODO: parse this\n    if(fExtSt) blob.l += cbExtRst; //TODO: parse this\n    z.t = msg;\n    if(!fRichSt) { z.raw = \"<t>\" + z.t + \"</t>\"; z.r = z.t; }\n    current_codepage = cp;\n    return z;\n  }\n\n  /* 2.5.296 XLUnicodeStringNoCch */\n  function parse_XLUnicodeStringNoCch(blob, cch, opts) {\n    var retval;\n    if(opts) {\n      if(opts.biff >= 2 && opts.biff <= 5) return blob.read_shift(cch, 'cpstr');\n      if(opts.biff >= 12) return blob.read_shift(cch, 'dbcs-cont');\n    }\n    var fHighByte = blob.read_shift(1);\n    if(fHighByte===0) { retval = blob.read_shift(cch, 'sbcs-cont'); }\n    else { retval = blob.read_shift(cch, 'dbcs-cont'); }\n    return retval;\n  }\n\n  /* 2.5.294 XLUnicodeString */\n  function parse_XLUnicodeString(blob, length, opts) {\n    var cch = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n    if(cch === 0) { blob.l++; return \"\"; }\n    return parse_XLUnicodeStringNoCch(blob, cch, opts);\n  }\n  /* BIFF5 override */\n  function parse_XLUnicodeString2(blob, length, opts) {\n    if(opts.biff > 5) return parse_XLUnicodeString(blob, length, opts);\n    var cch = blob.read_shift(1);\n    if(cch === 0) { blob.l++; return \"\"; }\n    return blob.read_shift(cch, (opts.biff <= 4 || !blob.lens ) ? 'cpstr' : 'sbcs-cont');\n  }\n  /* TODO: BIFF5 and lower, codepage awareness */\n  function write_XLUnicodeString(str, opts, o) {\n    if(!o) o = new_buf(3 + 2 * str.length);\n    o.write_shift(2, str.length);\n    o.write_shift(1, 1);\n    o.write_shift(31, str, 'utf16le');\n    return o;\n  }\n\n  /* [MS-XLS] 2.5.61 ControlInfo */\n  function parse_ControlInfo(blob) {\n    var flags = blob.read_shift(1);\n    blob.l++;\n    var accel = blob.read_shift(2);\n    blob.l += 2;\n    return [flags, accel];\n  }\n\n  /* [MS-OSHARED] 2.3.7.6 URLMoniker TODO: flags */\n  function parse_URLMoniker(blob) {\n    var len = blob.read_shift(4), start = blob.l;\n    var extra = false;\n    if(len > 24) {\n      /* look ahead */\n      blob.l += len - 24;\n      if(blob.read_shift(16) === \"795881f43b1d7f48af2c825dc4852763\") extra = true;\n      blob.l = start;\n    }\n    var url = blob.read_shift((extra?len-24:len)>>1, 'utf16le').replace(chr0,\"\");\n    if(extra) blob.l += 24;\n    return url;\n  }\n\n  /* [MS-OSHARED] 2.3.7.8 FileMoniker TODO: all fields */\n  function parse_FileMoniker(blob) {\n    blob.l += 2; //var cAnti = blob.read_shift(2);\n    var ansiPath = blob.read_shift(0, 'lpstr-ansi');\n    blob.l += 2; //var endServer = blob.read_shift(2);\n    if(blob.read_shift(2) != 0xDEAD) throw new Error(\"Bad FileMoniker\");\n    var sz = blob.read_shift(4);\n    if(sz === 0) return ansiPath.replace(/\\\\/g,\"/\");\n    var bytes = blob.read_shift(4);\n    if(blob.read_shift(2) != 3) throw new Error(\"Bad FileMoniker\");\n    var unicodePath = blob.read_shift(bytes>>1, 'utf16le').replace(chr0,\"\");\n    return unicodePath;\n  }\n\n  /* [MS-OSHARED] 2.3.7.2 HyperlinkMoniker TODO: all the monikers */\n  function parse_HyperlinkMoniker(blob, length) {\n    var clsid = blob.read_shift(16); length -= 16;\n    switch(clsid) {\n      case \"e0c9ea79f9bace118c8200aa004ba90b\": return parse_URLMoniker(blob, length);\n      case \"0303000000000000c000000000000046\": return parse_FileMoniker(blob, length);\n      default: throw new Error(\"Unsupported Moniker \" + clsid);\n    }\n  }\n\n  /* [MS-OSHARED] 2.3.7.9 HyperlinkString */\n  function parse_HyperlinkString(blob) {\n    var len = blob.read_shift(4);\n    var o = len > 0 ? blob.read_shift(len, 'utf16le').replace(chr0, \"\") : \"\";\n    return o;\n  }\n\n  /* [MS-OSHARED] 2.3.7.1 Hyperlink Object */\n  function parse_Hyperlink(blob, length) {\n    var end = blob.l + length;\n    var sVer = blob.read_shift(4);\n    if(sVer !== 2) throw new Error(\"Unrecognized streamVersion: \" + sVer);\n    var flags = blob.read_shift(2);\n    blob.l += 2;\n    var displayName, targetFrameName, moniker, oleMoniker, Loc=\"\", guid, fileTime;\n    if(flags & 0x0010) displayName = parse_HyperlinkString(blob, end - blob.l);\n    if(flags & 0x0080) targetFrameName = parse_HyperlinkString(blob, end - blob.l);\n    if((flags & 0x0101) === 0x0101) moniker = parse_HyperlinkString(blob, end - blob.l);\n    if((flags & 0x0101) === 0x0001) oleMoniker = parse_HyperlinkMoniker(blob, end - blob.l);\n    if(flags & 0x0008) Loc = parse_HyperlinkString(blob, end - blob.l);\n    if(flags & 0x0020) guid = blob.read_shift(16);\n    if(flags & 0x0040) fileTime = parse_FILETIME(blob/*, 8*/);\n    blob.l = end;\n    var target = targetFrameName||moniker||oleMoniker||\"\";\n    if(target && Loc) target+=\"#\"+Loc;\n    if(!target) target = \"#\" + Loc;\n    var out = ({Target:target});\n    if(guid) out.guid = guid;\n    if(fileTime) out.time = fileTime;\n    if(displayName) out.Tooltip = displayName;\n    return out;\n  }\n  function write_Hyperlink(hl) {\n    var out = new_buf(512), i = 0;\n    var Target = hl.Target;\n    var F = Target.indexOf(\"#\") > -1 ? 0x1f : 0x17;\n    switch(Target.charAt(0)) { case \"#\": F=0x1c; break; case \".\": F&=~2; break; }\n    out.write_shift(4,2); out.write_shift(4, F);\n    var data = [8,6815827,6619237,4849780,83]; for(i = 0; i < data.length; ++i) out.write_shift(4, data[i]);\n    if(F == 0x1C) {\n      Target = Target.slice(1);\n      out.write_shift(4, Target.length + 1);\n      for(i = 0; i < Target.length; ++i) out.write_shift(2, Target.charCodeAt(i));\n      out.write_shift(2, 0);\n    } else if(F & 0x02) {\n      data = \"e0 c9 ea 79 f9 ba ce 11 8c 82 00 aa 00 4b a9 0b\".split(\" \");\n      for(i = 0; i < data.length; ++i) out.write_shift(1, parseInt(data[i], 16));\n      out.write_shift(4, 2*(Target.length + 1));\n      for(i = 0; i < Target.length; ++i) out.write_shift(2, Target.charCodeAt(i));\n      out.write_shift(2, 0);\n    } else {\n      data = \"03 03 00 00 00 00 00 00 c0 00 00 00 00 00 00 46\".split(\" \");\n      for(i = 0; i < data.length; ++i) out.write_shift(1, parseInt(data[i], 16));\n      var P = 0;\n      while(Target.slice(P*3,P*3+3)==\"../\"||Target.slice(P*3,P*3+3)==\"..\\\\\") ++P;\n      out.write_shift(2, P);\n      out.write_shift(4, Target.length + 1);\n      for(i = 0; i < Target.length; ++i) out.write_shift(1, Target.charCodeAt(i) & 0xFF);\n      out.write_shift(1, 0);\n      out.write_shift(2, 0xFFFF);\n      out.write_shift(2, 0xDEAD);\n      for(i = 0; i < 6; ++i) out.write_shift(4, 0);\n    }\n    return out.slice(0, out.l);\n  }\n\n  /* 2.5.178 LongRGBA */\n  function parse_LongRGBA(blob) { var r = blob.read_shift(1), g = blob.read_shift(1), b = blob.read_shift(1), a = blob.read_shift(1); return [r,g,b,a]; }\n\n  /* 2.5.177 LongRGB */\n  function parse_LongRGB(blob, length) { var x = parse_LongRGBA(blob, length); x[3] = 0; return x; }\n\n\n  /* [MS-XLS] 2.5.19 */\n  function parse_XLSCell(blob) {\n    var rw = blob.read_shift(2); // 0-indexed\n    var col = blob.read_shift(2);\n    var ixfe = blob.read_shift(2);\n    return ({r:rw, c:col, ixfe:ixfe});\n  }\n  function write_XLSCell(R, C, ixfe, o) {\n    if(!o) o = new_buf(6);\n    o.write_shift(2, R);\n    o.write_shift(2, C);\n    o.write_shift(2, ixfe||0);\n    return o;\n  }\n\n  /* [MS-XLS] 2.5.134 */\n  function parse_frtHeader(blob) {\n    var rt = blob.read_shift(2);\n    var flags = blob.read_shift(2); // TODO: parse these flags\n    blob.l += 8;\n    return {type: rt, flags: flags};\n  }\n\n\n\n  function parse_OptXLUnicodeString(blob, length, opts) { return length === 0 ? \"\" : parse_XLUnicodeString2(blob, length, opts); }\n\n  /* [MS-XLS] 2.5.344 */\n  function parse_XTI(blob, length, opts) {\n    var w = opts.biff > 8 ? 4 : 2;\n    var iSupBook = blob.read_shift(w), itabFirst = blob.read_shift(w,'i'), itabLast = blob.read_shift(w,'i');\n    return [iSupBook, itabFirst, itabLast];\n  }\n\n  /* [MS-XLS] 2.5.218 */\n  function parse_RkRec(blob) {\n    var ixfe = blob.read_shift(2);\n    var RK = parse_RkNumber(blob);\n    return [ixfe, RK];\n  }\n\n  /* [MS-XLS] 2.5.1 */\n  function parse_AddinUdf(blob, length, opts) {\n    blob.l += 4; length -= 4;\n    var l = blob.l + length;\n    var udfName = parse_ShortXLUnicodeString(blob, length, opts);\n    var cb = blob.read_shift(2);\n    l -= blob.l;\n    if(cb !== l) throw new Error(\"Malformed AddinUdf: padding = \" + l + \" != \" + cb);\n    blob.l += cb;\n    return udfName;\n  }\n\n  /* [MS-XLS] 2.5.209 TODO: Check sizes */\n  function parse_Ref8U(blob) {\n    var rwFirst = blob.read_shift(2);\n    var rwLast = blob.read_shift(2);\n    var colFirst = blob.read_shift(2);\n    var colLast = blob.read_shift(2);\n    return {s:{c:colFirst, r:rwFirst}, e:{c:colLast,r:rwLast}};\n  }\n  function write_Ref8U(r, o) {\n    if(!o) o = new_buf(8);\n    o.write_shift(2, r.s.r);\n    o.write_shift(2, r.e.r);\n    o.write_shift(2, r.s.c);\n    o.write_shift(2, r.e.c);\n    return o;\n  }\n\n  /* [MS-XLS] 2.5.211 */\n  function parse_RefU(blob) {\n    var rwFirst = blob.read_shift(2);\n    var rwLast = blob.read_shift(2);\n    var colFirst = blob.read_shift(1);\n    var colLast = blob.read_shift(1);\n    return {s:{c:colFirst, r:rwFirst}, e:{c:colLast,r:rwLast}};\n  }\n\n  /* [MS-XLS] 2.5.207 */\n  var parse_Ref = parse_RefU;\n\n  /* [MS-XLS] 2.5.143 */\n  function parse_FtCmo(blob) {\n    blob.l += 4;\n    var ot = blob.read_shift(2);\n    var id = blob.read_shift(2);\n    var flags = blob.read_shift(2);\n    blob.l+=12;\n    return [id, ot, flags];\n  }\n\n  /* [MS-XLS] 2.5.149 */\n  function parse_FtNts(blob) {\n    var out = {};\n    blob.l += 4;\n    blob.l += 16; // GUID TODO\n    out.fSharedNote = blob.read_shift(2);\n    blob.l += 4;\n    return out;\n  }\n\n  /* [MS-XLS] 2.5.142 */\n  function parse_FtCf(blob) {\n    var out = {};\n    blob.l += 4;\n    blob.cf = blob.read_shift(2);\n    return out;\n  }\n\n  /* [MS-XLS] 2.5.140 - 2.5.154 and friends */\n  function parse_FtSkip(blob) { blob.l += 2; blob.l += blob.read_shift(2); }\n  var FtTab = {\n    0x00: parse_FtSkip,      /* FtEnd */\n    0x04: parse_FtSkip,      /* FtMacro */\n    0x05: parse_FtSkip,      /* FtButton */\n    0x06: parse_FtSkip,      /* FtGmo */\n    0x07: parse_FtCf,        /* FtCf */\n    0x08: parse_FtSkip,      /* FtPioGrbit */\n    0x09: parse_FtSkip,      /* FtPictFmla */\n    0x0A: parse_FtSkip,      /* FtCbls */\n    0x0B: parse_FtSkip,      /* FtRbo */\n    0x0C: parse_FtSkip,      /* FtSbs */\n    0x0D: parse_FtNts,       /* FtNts */\n    0x0E: parse_FtSkip,      /* FtSbsFmla */\n    0x0F: parse_FtSkip,      /* FtGboData */\n    0x10: parse_FtSkip,      /* FtEdoData */\n    0x11: parse_FtSkip,      /* FtRboData */\n    0x12: parse_FtSkip,      /* FtCblsData */\n    0x13: parse_FtSkip,      /* FtLbsData */\n    0x14: parse_FtSkip,      /* FtCblsFmla */\n    0x15: parse_FtCmo\n  };\n  function parse_FtArray(blob, length) {\n    var tgt = blob.l + length;\n    var fts = [];\n    while(blob.l < tgt) {\n      var ft = blob.read_shift(2);\n      blob.l-=2;\n      try {\n        fts.push(FtTab[ft](blob, tgt - blob.l));\n      } catch(e) { blob.l = tgt; return fts; }\n    }\n    if(blob.l != tgt) blob.l = tgt; //throw new Error(\"bad Object Ft-sequence\");\n    return fts;\n  }\n\n  /* --- 2.4 Records --- */\n\n  /* [MS-XLS] 2.4.21 */\n  function parse_BOF(blob, length) {\n    var o = {BIFFVer:0, dt:0};\n    o.BIFFVer = blob.read_shift(2); length -= 2;\n    if(length >= 2) { o.dt = blob.read_shift(2); blob.l -= 2; }\n    switch(o.BIFFVer) {\n      case 0x0600: /* BIFF8 */\n      case 0x0500: /* BIFF5 */\n      case 0x0400: /* BIFF4 */\n      case 0x0300: /* BIFF3 */\n      case 0x0200: /* BIFF2 */\n      case 0x0002: case 0x0007: /* BIFF2 */\n        break;\n      default: if(length > 6) throw new Error(\"Unexpected BIFF Ver \" + o.BIFFVer);\n    }\n\n    blob.read_shift(length);\n    return o;\n  }\n  function write_BOF(wb, t, o) {\n    var h = 0x0600, w = 16;\n    switch(o.bookType) {\n      case 'biff8': break;\n      case 'biff5': h = 0x0500; w = 8; break;\n      case 'biff4': h = 0x0004; w = 6; break;\n      case 'biff3': h = 0x0003; w = 6; break;\n      case 'biff2': h = 0x0002; w = 4; break;\n      case 'xla': break;\n      default: throw new Error(\"unsupported BIFF version\");\n    }\n    var out = new_buf(w);\n    out.write_shift(2, h);\n    out.write_shift(2, t);\n    if(w > 4) out.write_shift(2, 0x7262);\n    if(w > 6) out.write_shift(2, 0x07CD);\n    if(w > 8) {\n      out.write_shift(2, 0xC009);\n      out.write_shift(2, 0x0001);\n      out.write_shift(2, 0x0706);\n      out.write_shift(2, 0x0000);\n    }\n    return out;\n  }\n\n\n  /* [MS-XLS] 2.4.146 */\n  function parse_InterfaceHdr(blob, length) {\n    if(length === 0) return 0x04b0;\n    if((blob.read_shift(2))!==0x04b0){/* empty */}\n    return 0x04b0;\n  }\n\n\n  /* [MS-XLS] 2.4.349 */\n  function parse_WriteAccess(blob, length, opts) {\n    if(opts.enc) { blob.l += length; return \"\"; }\n    var l = blob.l;\n    // TODO: make sure XLUnicodeString doesnt overrun\n    var UserName = parse_XLUnicodeString2(blob, 0, opts);\n    blob.read_shift(length + l - blob.l);\n    return UserName;\n  }\n  function write_WriteAccess(s, opts) {\n    var b8 = !opts || opts.biff == 8;\n    var o = new_buf(b8 ? 112 : 54);\n    o.write_shift(opts.biff == 8 ? 2 : 1, 7);\n    if(b8) o.write_shift(1, 0);\n    o.write_shift(4, 0x33336853);\n    o.write_shift(4, (0x00534A74 | (b8 ? 0 : 0x20000000)));\n    while(o.l < o.length) o.write_shift(1, (b8 ? 0 : 32));\n    return o;\n  }\n\n  /* [MS-XLS] 2.4.351 */\n  function parse_WsBool(blob, length, opts) {\n    var flags = opts && opts.biff == 8 || length == 2 ? blob.read_shift(2) : (blob.l += length, 0);\n    return { fDialog: flags & 0x10 };\n  }\n\n  /* [MS-XLS] 2.4.28 */\n  function parse_BoundSheet8(blob, length, opts) {\n    var pos = blob.read_shift(4);\n    var hidden = blob.read_shift(1) & 0x03;\n    var dt = blob.read_shift(1);\n    switch(dt) {\n      case 0: dt = 'Worksheet'; break;\n      case 1: dt = 'Macrosheet'; break;\n      case 2: dt = 'Chartsheet'; break;\n      case 6: dt = 'VBAModule'; break;\n    }\n    var name = parse_ShortXLUnicodeString(blob, 0, opts);\n    if(name.length === 0) name = \"Sheet1\";\n    return { pos:pos, hs:hidden, dt:dt, name:name };\n  }\n  function write_BoundSheet8(data, opts) {\n    var w = (!opts || opts.biff >= 8 ? 2 : 1);\n    var o = new_buf(8 + w * data.name.length);\n    o.write_shift(4, data.pos);\n    o.write_shift(1, data.hs || 0);\n    o.write_shift(1, data.dt);\n    o.write_shift(1, data.name.length);\n    if(opts.biff >= 8) o.write_shift(1, 1);\n    o.write_shift(w * data.name.length, data.name, opts.biff < 8 ? 'sbcs' : 'utf16le');\n    var out = o.slice(0, o.l);\n    out.l = o.l; return out;\n  }\n\n  /* [MS-XLS] 2.4.265 TODO */\n  function parse_SST(blob, length) {\n    var end = blob.l + length;\n    var cnt = blob.read_shift(4);\n    var ucnt = blob.read_shift(4);\n    var strs = ([]);\n    for(var i = 0; i != ucnt && blob.l < end; ++i) {\n      strs.push(parse_XLUnicodeRichExtendedString(blob));\n    }\n    strs.Count = cnt; strs.Unique = ucnt;\n    return strs;\n  }\n\n  /* [MS-XLS] 2.4.107 */\n  function parse_ExtSST(blob, length) {\n    var extsst = {};\n    extsst.dsst = blob.read_shift(2);\n    blob.l += length-2;\n    return extsst;\n  }\n\n\n  /* [MS-XLS] 2.4.221 TODO: check BIFF2-4 */\n  function parse_Row(blob) {\n    var z = ({});\n    z.r = blob.read_shift(2);\n    z.c = blob.read_shift(2);\n    z.cnt = blob.read_shift(2) - z.c;\n    var miyRw = blob.read_shift(2);\n    blob.l += 4; // reserved(2), unused(2)\n    var flags = blob.read_shift(1); // various flags\n    blob.l += 3; // reserved(8), ixfe(12), flags(4)\n    if(flags & 0x07) z.level = flags & 0x07;\n    // collapsed: flags & 0x10\n    if(flags & 0x20) z.hidden = true;\n    if(flags & 0x40) z.hpt = miyRw / 20;\n    return z;\n  }\n\n\n  /* [MS-XLS] 2.4.125 */\n  function parse_ForceFullCalculation(blob) {\n    var header = parse_frtHeader(blob);\n    if(header.type != 0x08A3) throw new Error(\"Invalid Future Record \" + header.type);\n    var fullcalc = blob.read_shift(4);\n    return fullcalc !== 0x0;\n  }\n\n\n\n\n\n  /* [MS-XLS] 2.4.215 rt */\n  function parse_RecalcId(blob) {\n    blob.read_shift(2);\n    return blob.read_shift(4);\n  }\n\n  /* [MS-XLS] 2.4.87 */\n  function parse_DefaultRowHeight(blob, length, opts) {\n    var f = 0;\n    if(!(opts && opts.biff == 2)) {\n      f = blob.read_shift(2);\n    }\n    var miyRw = blob.read_shift(2);\n    if((opts && opts.biff == 2)) {\n      f = 1 - (miyRw >> 15); miyRw &= 0x7fff;\n    }\n    var fl = {Unsynced:f&1,DyZero:(f&2)>>1,ExAsc:(f&4)>>2,ExDsc:(f&8)>>3};\n    return [fl, miyRw];\n  }\n\n  /* [MS-XLS] 2.4.345 TODO */\n  function parse_Window1(blob) {\n    var xWn = blob.read_shift(2), yWn = blob.read_shift(2), dxWn = blob.read_shift(2), dyWn = blob.read_shift(2);\n    var flags = blob.read_shift(2), iTabCur = blob.read_shift(2), iTabFirst = blob.read_shift(2);\n    var ctabSel = blob.read_shift(2), wTabRatio = blob.read_shift(2);\n    return { Pos: [xWn, yWn], Dim: [dxWn, dyWn], Flags: flags, CurTab: iTabCur,\n      FirstTab: iTabFirst, Selected: ctabSel, TabRatio: wTabRatio };\n  }\n  function write_Window1() {\n    var o = new_buf(18);\n    o.write_shift(2, 0);\n    o.write_shift(2, 0);\n    o.write_shift(2, 0x7260);\n    o.write_shift(2, 0x44c0);\n    o.write_shift(2, 0x38);\n    o.write_shift(2, 0);\n    o.write_shift(2, 0);\n    o.write_shift(2, 1);\n    o.write_shift(2, 0x01f4);\n    return o;\n  }\n  /* [MS-XLS] 2.4.346 TODO */\n  function parse_Window2(blob, length, opts) {\n    if(opts && opts.biff >= 2 && opts.biff < 8) return {};\n    var f = blob.read_shift(2);\n    return { RTL: f & 0x40 };\n  }\n  function write_Window2(view) {\n    var o = new_buf(18), f = 0x6b6;\n    if(view && view.RTL) f |= 0x40;\n    o.write_shift(2, f);\n    o.write_shift(4, 0);\n    o.write_shift(4, 64);\n    o.write_shift(4, 0);\n    o.write_shift(4, 0);\n    return o;\n  }\n\n  /* [MS-XLS] 2.4.122 TODO */\n  function parse_Font(blob, length, opts) {\n    var o = {\n      dyHeight: blob.read_shift(2),\n      fl: blob.read_shift(2)\n    };\n    switch((opts && opts.biff) || 8) {\n      case 2: break;\n      case 3: case 4: blob.l += 2; break;\n      default: blob.l += 10; break;\n    }\n    o.name = parse_ShortXLUnicodeString(blob, 0, opts);\n    return o;\n  }\n  function write_Font(data, opts) {\n    var name = data.name || \"Arial\";\n    var b5 = (opts && (opts.biff == 5)), w = (b5 ? (15 + name.length) : (16 + 2 * name.length));\n    var o = new_buf(w);\n    o.write_shift(2, (data.sz || 12) * 20);\n    o.write_shift(4, 0);\n    o.write_shift(2, 400);\n    o.write_shift(4, 0);\n    o.write_shift(2, 0);\n    o.write_shift(1, name.length);\n    if(!b5) o.write_shift(1, 1);\n    o.write_shift((b5 ? 1 : 2) * name.length, name, (b5 ? \"sbcs\" : \"utf16le\"));\n    return o;\n  }\n\n  /* [MS-XLS] 2.4.149 */\n  function parse_LabelSst(blob) {\n    var cell = parse_XLSCell(blob);\n    cell.isst = blob.read_shift(4);\n    return cell;\n  }\n\n  /* [MS-XLS] 2.4.148 */\n  function parse_Label(blob, length, opts) {\n    var target = blob.l + length;\n    var cell = parse_XLSCell(blob, 6);\n    if(opts.biff == 2) blob.l++;\n    var str = parse_XLUnicodeString(blob, target - blob.l, opts);\n    cell.val = str;\n    return cell;\n  }\n  function write_Label(R, C, v, os, opts) {\n    var b8 = !opts || opts.biff == 8;\n    var o = new_buf(6 + 2 + (+b8) + (1 + b8) * v.length);\n    write_XLSCell(R, C, os, o);\n    o.write_shift(2, v.length);\n    if(b8) o.write_shift(1, 1);\n    o.write_shift((1 + b8) * v.length, v, b8 ? 'utf16le' : 'sbcs');\n    return o;\n  }\n\n\n  /* [MS-XLS] 2.4.126 Number Formats */\n  function parse_Format(blob, length, opts) {\n    var numFmtId = blob.read_shift(2);\n    var fmtstr = parse_XLUnicodeString2(blob, 0, opts);\n    return [numFmtId, fmtstr];\n  }\n  function write_Format(i, f, opts, o) {\n    var b5 = (opts && (opts.biff == 5));\n    if(!o) o = new_buf(b5 ? (3 + f.length) : (5 + 2 * f.length));\n    o.write_shift(2, i);\n    o.write_shift((b5 ? 1 : 2), f.length);\n    if(!b5) o.write_shift(1, 1);\n    o.write_shift((b5 ? 1 : 2) * f.length, f, (b5 ? 'sbcs' : 'utf16le'));\n    var out = (o.length > o.l) ? o.slice(0, o.l) : o;\n    if(out.l == null) out.l = out.length;\n    return out;\n  }\n  var parse_BIFF2Format = parse_XLUnicodeString2;\n\n  /* [MS-XLS] 2.4.90 */\n  function parse_Dimensions(blob, length, opts) {\n    var end = blob.l + length;\n    var w = opts.biff == 8 || !opts.biff ? 4 : 2;\n    var r = blob.read_shift(w), R = blob.read_shift(w);\n    var c = blob.read_shift(2), C = blob.read_shift(2);\n    blob.l = end;\n    return {s: {r:r, c:c}, e: {r:R, c:C}};\n  }\n  function write_Dimensions(range, opts) {\n    var w = opts.biff == 8 || !opts.biff ? 4 : 2;\n    var o = new_buf(2*w + 6);\n    o.write_shift(w, range.s.r);\n    o.write_shift(w, range.e.r + 1);\n    o.write_shift(2, range.s.c);\n    o.write_shift(2, range.e.c + 1);\n    o.write_shift(2, 0);\n    return o;\n  }\n\n  /* [MS-XLS] 2.4.220 */\n  function parse_RK(blob) {\n    var rw = blob.read_shift(2), col = blob.read_shift(2);\n    var rkrec = parse_RkRec(blob);\n    return {r:rw, c:col, ixfe:rkrec[0], rknum:rkrec[1]};\n  }\n\n  /* [MS-XLS] 2.4.175 */\n  function parse_MulRk(blob, length) {\n    var target = blob.l + length - 2;\n    var rw = blob.read_shift(2), col = blob.read_shift(2);\n    var rkrecs = [];\n    while(blob.l < target) rkrecs.push(parse_RkRec(blob));\n    if(blob.l !== target) throw new Error(\"MulRK read error\");\n    var lastcol = blob.read_shift(2);\n    if(rkrecs.length != lastcol - col + 1) throw new Error(\"MulRK length mismatch\");\n    return {r:rw, c:col, C:lastcol, rkrec:rkrecs};\n  }\n  /* [MS-XLS] 2.4.174 */\n  function parse_MulBlank(blob, length) {\n    var target = blob.l + length - 2;\n    var rw = blob.read_shift(2), col = blob.read_shift(2);\n    var ixfes = [];\n    while(blob.l < target) ixfes.push(blob.read_shift(2));\n    if(blob.l !== target) throw new Error(\"MulBlank read error\");\n    var lastcol = blob.read_shift(2);\n    if(ixfes.length != lastcol - col + 1) throw new Error(\"MulBlank length mismatch\");\n    return {r:rw, c:col, C:lastcol, ixfe:ixfes};\n  }\n\n  /* [MS-XLS] 2.5.20 2.5.249 TODO: interpret values here */\n  function parse_CellStyleXF(blob, length, style, opts) {\n    var o = {};\n    var a = blob.read_shift(4), b = blob.read_shift(4);\n    var c = blob.read_shift(4), d = blob.read_shift(2);\n    o.patternType = XLSFillPattern[c >> 26];\n\n    if(!opts.cellStyles) return o;\n    o.alc = a & 0x07;\n    o.fWrap = (a >> 3) & 0x01;\n    o.alcV = (a >> 4) & 0x07;\n    o.fJustLast = (a >> 7) & 0x01;\n    o.trot = (a >> 8) & 0xFF;\n    o.cIndent = (a >> 16) & 0x0F;\n    o.fShrinkToFit = (a >> 20) & 0x01;\n    o.iReadOrder = (a >> 22) & 0x02;\n    o.fAtrNum = (a >> 26) & 0x01;\n    o.fAtrFnt = (a >> 27) & 0x01;\n    o.fAtrAlc = (a >> 28) & 0x01;\n    o.fAtrBdr = (a >> 29) & 0x01;\n    o.fAtrPat = (a >> 30) & 0x01;\n    o.fAtrProt = (a >> 31) & 0x01;\n\n    o.dgLeft = b & 0x0F;\n    o.dgRight = (b >> 4) & 0x0F;\n    o.dgTop = (b >> 8) & 0x0F;\n    o.dgBottom = (b >> 12) & 0x0F;\n    o.icvLeft = (b >> 16) & 0x7F;\n    o.icvRight = (b >> 23) & 0x7F;\n    o.grbitDiag = (b >> 30) & 0x03;\n\n    o.icvTop = c & 0x7F;\n    o.icvBottom = (c >> 7) & 0x7F;\n    o.icvDiag = (c >> 14) & 0x7F;\n    o.dgDiag = (c >> 21) & 0x0F;\n\n    o.icvFore = d & 0x7F;\n    o.icvBack = (d >> 7) & 0x7F;\n    o.fsxButton = (d >> 14) & 0x01;\n    return o;\n  }\n//function parse_CellXF(blob, length, opts) {return parse_CellStyleXF(blob,length,0, opts);}\n//function parse_StyleXF(blob, length, opts) {return parse_CellStyleXF(blob,length,1, opts);}\n\n  /* [MS-XLS] 2.4.353 TODO: actually do this right */\n  function parse_XF(blob, length, opts) {\n    var o = {};\n    o.ifnt = blob.read_shift(2); o.numFmtId = blob.read_shift(2); o.flags = blob.read_shift(2);\n    o.fStyle = (o.flags >> 2) & 0x01;\n    length -= 6;\n    o.data = parse_CellStyleXF(blob, length, o.fStyle, opts);\n    return o;\n  }\n  function write_XF(data, ixfeP, opts, o) {\n    var b5 = (opts && (opts.biff == 5));\n    if(!o) o = new_buf(b5 ? 16 : 20);\n    o.write_shift(2, 0);\n    if(data.style) {\n      o.write_shift(2, (data.numFmtId||0));\n      o.write_shift(2, 0xFFF4);\n    } else {\n      o.write_shift(2, (data.numFmtId||0));\n      o.write_shift(2, (ixfeP<<4));\n    }\n    o.write_shift(4, 0);\n    o.write_shift(4, 0);\n    if(!b5) o.write_shift(4, 0);\n    o.write_shift(2, 0);\n    return o;\n  }\n\n  /* [MS-XLS] 2.4.134 */\n  function parse_Guts(blob) {\n    blob.l += 4;\n    var out = [blob.read_shift(2), blob.read_shift(2)];\n    if(out[0] !== 0) out[0]--;\n    if(out[1] !== 0) out[1]--;\n    if(out[0] > 7 || out[1] > 7) throw new Error(\"Bad Gutters: \" + out.join(\"|\"));\n    return out;\n  }\n  function write_Guts(guts) {\n    var o = new_buf(8);\n    o.write_shift(4, 0);\n    o.write_shift(2, guts[0] ? guts[0] + 1 : 0);\n    o.write_shift(2, guts[1] ? guts[1] + 1 : 0);\n    return o;\n  }\n\n  /* [MS-XLS] 2.4.24 */\n  function parse_BoolErr(blob, length, opts) {\n    var cell = parse_XLSCell(blob, 6);\n    if(opts.biff == 2) ++blob.l;\n    var val = parse_Bes(blob, 2);\n    cell.val = val;\n    cell.t = (val === true || val === false) ? 'b' : 'e';\n    return cell;\n  }\n  function write_BoolErr(R, C, v, os, opts, t) {\n    var o = new_buf(8);\n    write_XLSCell(R, C, os, o);\n    write_Bes(v, t, o);\n    return o;\n  }\n\n  /* [MS-XLS] 2.4.180 Number */\n  function parse_Number(blob) {\n    var cell = parse_XLSCell(blob, 6);\n    var xnum = parse_Xnum(blob, 8);\n    cell.val = xnum;\n    return cell;\n  }\n  function write_Number(R, C, v, os) {\n    var o = new_buf(14);\n    write_XLSCell(R, C, os, o);\n    write_Xnum(v, o);\n    return o;\n  }\n\n  var parse_XLHeaderFooter = parse_OptXLUnicodeString; // TODO: parse 2.4.136\n\n  /* [MS-XLS] 2.4.271 */\n  function parse_SupBook(blob, length, opts) {\n    var end = blob.l + length;\n    var ctab = blob.read_shift(2);\n    var cch = blob.read_shift(2);\n    opts.sbcch = cch;\n    if(cch == 0x0401 || cch == 0x3A01) return [cch, ctab];\n    if(cch < 0x01 || cch >0xff) throw new Error(\"Unexpected SupBook type: \"+cch);\n    var virtPath = parse_XLUnicodeStringNoCch(blob, cch);\n    /* TODO: 2.5.277 Virtual Path */\n    var rgst = [];\n    while(end > blob.l) rgst.push(parse_XLUnicodeString(blob));\n    return [cch, ctab, virtPath, rgst];\n  }\n\n  /* [MS-XLS] 2.4.105 TODO */\n  function parse_ExternName(blob, length, opts) {\n    var flags = blob.read_shift(2);\n    var body;\n    var o = ({\n      fBuiltIn: flags & 0x01,\n      fWantAdvise: (flags >>> 1) & 0x01,\n      fWantPict: (flags >>> 2) & 0x01,\n      fOle: (flags >>> 3) & 0x01,\n      fOleLink: (flags >>> 4) & 0x01,\n      cf: (flags >>> 5) & 0x3FF,\n      fIcon: flags >>> 15 & 0x01\n    });\n    if(opts.sbcch === 0x3A01) body = parse_AddinUdf(blob, length-2, opts);\n    //else throw new Error(\"unsupported SupBook cch: \" + opts.sbcch);\n    o.body = body || blob.read_shift(length-2);\n    if(typeof body === \"string\") o.Name = body;\n    return o;\n  }\n\n  /* [MS-XLS] 2.4.150 TODO */\n  var XLSLblBuiltIn = [\n    \"_xlnm.Consolidate_Area\",\n    \"_xlnm.Auto_Open\",\n    \"_xlnm.Auto_Close\",\n    \"_xlnm.Extract\",\n    \"_xlnm.Database\",\n    \"_xlnm.Criteria\",\n    \"_xlnm.Print_Area\",\n    \"_xlnm.Print_Titles\",\n    \"_xlnm.Recorder\",\n    \"_xlnm.Data_Form\",\n    \"_xlnm.Auto_Activate\",\n    \"_xlnm.Auto_Deactivate\",\n    \"_xlnm.Sheet_Title\",\n    \"_xlnm._FilterDatabase\"\n  ];\n  function parse_Lbl(blob, length, opts) {\n    var target = blob.l + length;\n    var flags = blob.read_shift(2);\n    var chKey = blob.read_shift(1);\n    var cch = blob.read_shift(1);\n    var cce = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n    var itab = 0;\n    if(!opts || opts.biff >= 5) {\n      if(opts.biff != 5) blob.l += 2;\n      itab = blob.read_shift(2);\n      if(opts.biff == 5) blob.l += 2;\n      blob.l += 4;\n    }\n    var name = parse_XLUnicodeStringNoCch(blob, cch, opts);\n    if(flags & 0x20) name = XLSLblBuiltIn[name.charCodeAt(0)];\n    var npflen = target - blob.l; if(opts && opts.biff == 2) --npflen;\n    var rgce = target == blob.l || cce === 0 ? [] : parse_NameParsedFormula(blob, npflen, opts, cce);\n    return {\n      chKey: chKey,\n      Name: name,\n      itab: itab,\n      rgce: rgce\n    };\n  }\n\n  /* [MS-XLS] 2.4.106 TODO: verify filename encoding */\n  function parse_ExternSheet(blob, length, opts) {\n    if(opts.biff < 8) return parse_BIFF5ExternSheet(blob, length, opts);\n    var o = [], target = blob.l + length, len = blob.read_shift(opts.biff > 8 ? 4 : 2);\n    while(len-- !== 0) o.push(parse_XTI(blob, opts.biff > 8 ? 12 : 6, opts));\n    // [iSupBook, itabFirst, itabLast];\n    if(blob.l != target) throw new Error(\"Bad ExternSheet: \" + blob.l + \" != \" + target);\n    return o;\n  }\n  function parse_BIFF5ExternSheet(blob, length, opts) {\n    if(blob[blob.l + 1] == 0x03) blob[blob.l]++;\n    var o = parse_ShortXLUnicodeString(blob, length, opts);\n    return o.charCodeAt(0) == 0x03 ? o.slice(1) : o;\n  }\n\n  /* [MS-XLS] 2.4.176 TODO: check older biff */\n  function parse_NameCmt(blob, length, opts) {\n    if(opts.biff < 8) { blob.l += length; return; }\n    var cchName = blob.read_shift(2);\n    var cchComment = blob.read_shift(2);\n    var name = parse_XLUnicodeStringNoCch(blob, cchName, opts);\n    var comment = parse_XLUnicodeStringNoCch(blob, cchComment, opts);\n    return [name, comment];\n  }\n\n  /* [MS-XLS] 2.4.260 */\n  function parse_ShrFmla(blob, length, opts) {\n    var ref = parse_RefU(blob, 6);\n    blob.l++;\n    var cUse = blob.read_shift(1);\n    length -= 8;\n    return [parse_SharedParsedFormula(blob, length, opts), cUse, ref];\n  }\n\n  /* [MS-XLS] 2.4.4 TODO */\n  function parse_Array(blob, length, opts) {\n    var ref = parse_Ref(blob, 6);\n    /* TODO: fAlwaysCalc */\n    switch(opts.biff) {\n      case 2: blob.l ++; length -= 7; break;\n      case 3: case 4: blob.l += 2; length -= 8; break;\n      default: blob.l += 6; length -= 12;\n    }\n    return [ref, parse_ArrayParsedFormula(blob, length, opts, ref)];\n  }\n\n  /* [MS-XLS] 2.4.173 */\n  function parse_MTRSettings(blob) {\n    var fMTREnabled = blob.read_shift(4) !== 0x00;\n    var fUserSetThreadCount = blob.read_shift(4) !== 0x00;\n    var cUserThreadCount = blob.read_shift(4);\n    return [fMTREnabled, fUserSetThreadCount, cUserThreadCount];\n  }\n\n  /* [MS-XLS] 2.5.186 TODO: BIFF5 */\n  function parse_NoteSh(blob, length, opts) {\n    if(opts.biff < 8) return;\n    var row = blob.read_shift(2), col = blob.read_shift(2);\n    var flags = blob.read_shift(2), idObj = blob.read_shift(2);\n    var stAuthor = parse_XLUnicodeString2(blob, 0, opts);\n    if(opts.biff < 8) blob.read_shift(1);\n    return [{r:row,c:col}, stAuthor, idObj, flags];\n  }\n\n  /* [MS-XLS] 2.4.179 */\n  function parse_Note(blob, length, opts) {\n    /* TODO: Support revisions */\n    return parse_NoteSh(blob, length, opts);\n  }\n\n  /* [MS-XLS] 2.4.168 */\n  function parse_MergeCells(blob, length) {\n    var merges = [];\n    var cmcs = blob.read_shift(2);\n    while (cmcs--) merges.push(parse_Ref8U(blob,length));\n    return merges;\n  }\n  function write_MergeCells(merges) {\n    var o = new_buf(2 + merges.length * 8);\n    o.write_shift(2, merges.length);\n    for(var i = 0; i < merges.length; ++i) write_Ref8U(merges[i], o);\n    return o;\n  }\n\n  /* [MS-XLS] 2.4.181 TODO: parse all the things! */\n  function parse_Obj(blob, length, opts) {\n    if(opts && opts.biff < 8) return parse_BIFF5Obj(blob, length, opts);\n    var cmo = parse_FtCmo(blob, 22); // id, ot, flags\n    var fts = parse_FtArray(blob, length-22, cmo[1]);\n    return { cmo: cmo, ft:fts };\n  }\n  /* from older spec */\n  var parse_BIFF5OT = [];\n  parse_BIFF5OT[0x08] = function(blob, length) {\n    var tgt = blob.l + length;\n    blob.l += 10; // todo\n    var cf = blob.read_shift(2);\n    blob.l += 4;\n    blob.l += 2; //var cbPictFmla = blob.read_shift(2);\n    blob.l += 2;\n    blob.l += 2; //var grbit = blob.read_shift(2);\n    blob.l += 4;\n    var cchName = blob.read_shift(1);\n    blob.l += cchName; // TODO: stName\n    blob.l = tgt; // TODO: fmla\n    return { fmt:cf };\n  };\n\n  function parse_BIFF5Obj(blob, length, opts) {\n    blob.l += 4; //var cnt = blob.read_shift(4);\n    var ot = blob.read_shift(2);\n    var id = blob.read_shift(2);\n    var grbit = blob.read_shift(2);\n    blob.l += 2; //var colL = blob.read_shift(2);\n    blob.l += 2; //var dxL = blob.read_shift(2);\n    blob.l += 2; //var rwT = blob.read_shift(2);\n    blob.l += 2; //var dyT = blob.read_shift(2);\n    blob.l += 2; //var colR = blob.read_shift(2);\n    blob.l += 2; //var dxR = blob.read_shift(2);\n    blob.l += 2; //var rwB = blob.read_shift(2);\n    blob.l += 2; //var dyB = blob.read_shift(2);\n    blob.l += 2; //var cbMacro = blob.read_shift(2);\n    blob.l += 6;\n    length -= 36;\n    var fts = [];\n    fts.push((parse_BIFF5OT[ot]||parsenoop)(blob, length, opts));\n    return { cmo: [id, ot, grbit], ft:fts };\n  }\n\n  /* [MS-XLS] 2.4.329 TODO: parse properly */\n  function parse_TxO(blob, length, opts) {\n    var s = blob.l;\n    var texts = \"\";\n    try {\n      blob.l += 4;\n      var ot = (opts.lastobj||{cmo:[0,0]}).cmo[1];\n      var controlInfo; // eslint-disable-line no-unused-vars\n      if([0,5,7,11,12,14].indexOf(ot) == -1) blob.l += 6;\n      else controlInfo = parse_ControlInfo(blob, 6, opts);\n      var cchText = blob.read_shift(2);\n      /*var cbRuns = */blob.read_shift(2);\n      /*var ifntEmpty = */parseuint16(blob, 2);\n      var len = blob.read_shift(2);\n      blob.l += len;\n      //var fmla = parse_ObjFmla(blob, s + length - blob.l);\n\n      for(var i = 1; i < blob.lens.length-1; ++i) {\n        if(blob.l-s != blob.lens[i]) throw new Error(\"TxO: bad continue record\");\n        var hdr = blob[blob.l];\n        var t = parse_XLUnicodeStringNoCch(blob, blob.lens[i+1]-blob.lens[i]-1);\n        texts += t;\n        if(texts.length >= (hdr ? cchText : 2*cchText)) break;\n      }\n      if(texts.length !== cchText && texts.length !== cchText*2) {\n        throw new Error(\"cchText: \" + cchText + \" != \" + texts.length);\n      }\n\n      blob.l = s + length;\n      /* [MS-XLS] 2.5.272 TxORuns */\n//\tvar rgTxoRuns = [];\n//\tfor(var j = 0; j != cbRuns/8-1; ++j) blob.l += 8;\n//\tvar cchText2 = blob.read_shift(2);\n//\tif(cchText2 !== cchText) throw new Error(\"TxOLastRun mismatch: \" + cchText2 + \" \" + cchText);\n//\tblob.l += 6;\n//\tif(s + length != blob.l) throw new Error(\"TxO \" + (s + length) + \", at \" + blob.l);\n      return { t: texts };\n    } catch(e) { blob.l = s + length; return { t: texts }; }\n  }\n\n  /* [MS-XLS] 2.4.140 */\n  function parse_HLink(blob, length) {\n    var ref = parse_Ref8U(blob, 8);\n    blob.l += 16; /* CLSID */\n    var hlink = parse_Hyperlink(blob, length-24);\n    return [ref, hlink];\n  }\n  function write_HLink(hl) {\n    var O = new_buf(24);\n    var ref = decode_cell(hl[0]);\n    O.write_shift(2, ref.r); O.write_shift(2, ref.r);\n    O.write_shift(2, ref.c); O.write_shift(2, ref.c);\n    var clsid = \"d0 c9 ea 79 f9 ba ce 11 8c 82 00 aa 00 4b a9 0b\".split(\" \");\n    for(var i = 0; i < 16; ++i) O.write_shift(1, parseInt(clsid[i], 16));\n    return bconcat([O, write_Hyperlink(hl[1])]);\n  }\n\n\n  /* [MS-XLS] 2.4.141 */\n  function parse_HLinkTooltip(blob, length) {\n    blob.read_shift(2);\n    var ref = parse_Ref8U(blob, 8);\n    var wzTooltip = blob.read_shift((length-10)/2, 'dbcs-cont');\n    wzTooltip = wzTooltip.replace(chr0,\"\");\n    return [ref, wzTooltip];\n  }\n  function write_HLinkTooltip(hl) {\n    var TT = hl[1].Tooltip;\n    var O = new_buf(10 + 2 * (TT.length + 1));\n    O.write_shift(2, 0x0800);\n    var ref = decode_cell(hl[0]);\n    O.write_shift(2, ref.r); O.write_shift(2, ref.r);\n    O.write_shift(2, ref.c); O.write_shift(2, ref.c);\n    for(var i = 0; i < TT.length; ++i) O.write_shift(2, TT.charCodeAt(i));\n    O.write_shift(2, 0);\n    return O;\n  }\n\n  /* [MS-XLS] 2.4.63 */\n  function parse_Country(blob) {\n    var o = [0,0], d;\n    d = blob.read_shift(2); o[0] = CountryEnum[d] || d;\n    d = blob.read_shift(2); o[1] = CountryEnum[d] || d;\n    return o;\n  }\n  function write_Country(o) {\n    if(!o) o = new_buf(4);\n    o.write_shift(2, 0x01);\n    o.write_shift(2, 0x01);\n    return o;\n  }\n\n  /* [MS-XLS] 2.4.50 ClrtClient */\n  function parse_ClrtClient(blob) {\n    var ccv = blob.read_shift(2);\n    var o = [];\n    while(ccv-->0) o.push(parse_LongRGB(blob, 8));\n    return o;\n  }\n\n  /* [MS-XLS] 2.4.188 */\n  function parse_Palette(blob) {\n    var ccv = blob.read_shift(2);\n    var o = [];\n    while(ccv-->0) o.push(parse_LongRGB(blob, 8));\n    return o;\n  }\n\n  /* [MS-XLS] 2.4.354 */\n  function parse_XFCRC(blob) {\n    blob.l += 2;\n    var o = {cxfs:0, crc:0};\n    o.cxfs = blob.read_shift(2);\n    o.crc = blob.read_shift(4);\n    return o;\n  }\n\n  /* [MS-XLS] 2.4.53 TODO: parse flags */\n  /* [MS-XLSB] 2.4.323 TODO: parse flags */\n  function parse_ColInfo(blob, length, opts) {\n    if(!opts.cellStyles) return parsenoop(blob, length);\n    var w = opts && opts.biff >= 12 ? 4 : 2;\n    var colFirst = blob.read_shift(w);\n    var colLast = blob.read_shift(w);\n    var coldx = blob.read_shift(w);\n    var ixfe = blob.read_shift(w);\n    var flags = blob.read_shift(2);\n    if(w == 2) blob.l += 2;\n    return {s:colFirst, e:colLast, w:coldx, ixfe:ixfe, flags:flags};\n  }\n\n  /* [MS-XLS] 2.4.257 */\n  function parse_Setup(blob, length) {\n    var o = {};\n    if(length < 32) return o;\n    blob.l += 16;\n    o.header = parse_Xnum(blob, 8);\n    o.footer = parse_Xnum(blob, 8);\n    blob.l += 2;\n    return o;\n  }\n\n  /* [MS-XLS] 2.4.261 */\n  function parse_ShtProps(blob, length, opts) {\n    var def = {area:false};\n    if(opts.biff != 5) { blob.l += length; return def; }\n    var d = blob.read_shift(1); blob.l += 3;\n    if((d & 0x10)) def.area = true;\n    return def;\n  }\n\n  /* [MS-XLS] 2.4.241 */\n  function write_RRTabId(n) {\n    var out = new_buf(2 * n);\n    for(var i = 0; i < n; ++i) out.write_shift(2, i+1);\n    return out;\n  }\n\n  var parse_Blank = parse_XLSCell; /* [MS-XLS] 2.4.20 Just the cell */\n  var parse_Scl = parseuint16a; /* [MS-XLS] 2.4.247 num, den */\n  var parse_String = parse_XLUnicodeString; /* [MS-XLS] 2.4.268 */\n\n  /* --- Specific to versions before BIFF8 --- */\n  function parse_ImData(blob) {\n    var cf = blob.read_shift(2);\n    var env = blob.read_shift(2);\n    var lcb = blob.read_shift(4);\n    var o = {fmt:cf, env:env, len:lcb, data:blob.slice(blob.l,blob.l+lcb)};\n    blob.l += lcb;\n    return o;\n  }\n\n  /* BIFF2_??? where ??? is the name from [XLS] */\n  function parse_BIFF2STR(blob, length, opts) {\n    var cell = parse_XLSCell(blob, 6);\n    ++blob.l;\n    var str = parse_XLUnicodeString2(blob, length-7, opts);\n    cell.t = 'str';\n    cell.val = str;\n    return cell;\n  }\n\n  function parse_BIFF2NUM(blob) {\n    var cell = parse_XLSCell(blob, 6);\n    ++blob.l;\n    var num = parse_Xnum(blob, 8);\n    cell.t = 'n';\n    cell.val = num;\n    return cell;\n  }\n  function write_BIFF2NUM(r, c, val) {\n    var out = new_buf(15);\n    write_BIFF2Cell(out, r, c);\n    out.write_shift(8, val, 'f');\n    return out;\n  }\n\n  function parse_BIFF2INT(blob) {\n    var cell = parse_XLSCell(blob, 6);\n    ++blob.l;\n    var num = blob.read_shift(2);\n    cell.t = 'n';\n    cell.val = num;\n    return cell;\n  }\n  function write_BIFF2INT(r, c, val) {\n    var out = new_buf(9);\n    write_BIFF2Cell(out, r, c);\n    out.write_shift(2, val);\n    return out;\n  }\n\n  function parse_BIFF2STRING(blob) {\n    var cch = blob.read_shift(1);\n    if(cch === 0) { blob.l++; return \"\"; }\n    return blob.read_shift(cch, 'sbcs-cont');\n  }\n\n  /* TODO: convert to BIFF8 font struct */\n  function parse_BIFF2FONTXTRA(blob, length) {\n    blob.l += 6; // unknown\n    blob.l += 2; // font weight \"bls\"\n    blob.l += 1; // charset\n    blob.l += 3; // unknown\n    blob.l += 1; // font family\n    blob.l += length - 13;\n  }\n\n  /* TODO: parse rich text runs */\n  function parse_RString(blob, length, opts) {\n    var end = blob.l + length;\n    var cell = parse_XLSCell(blob, 6);\n    var cch = blob.read_shift(2);\n    var str = parse_XLUnicodeStringNoCch(blob, cch, opts);\n    blob.l = end;\n    cell.t = 'str';\n    cell.val = str;\n    return cell;\n  }\n  /* from js-harb (C) 2014-present  SheetJS */\n  var DBF = (function() {\n    var dbf_codepage_map = {\n      /* Code Pages Supported by Visual FoxPro */\n      0x01:   437,           0x02:   850,\n      0x03:  1252,           0x04: 10000,\n      0x64:   852,           0x65:   866,\n      0x66:   865,           0x67:   861,\n      0x68:   895,           0x69:   620,\n      0x6A:   737,           0x6B:   857,\n      0x78:   950,           0x79:   949,\n      0x7A:   936,           0x7B:   932,\n      0x7C:   874,           0x7D:  1255,\n      0x7E:  1256,           0x96: 10007,\n      0x97: 10029,           0x98: 10006,\n      0xC8:  1250,           0xC9:  1251,\n      0xCA:  1254,           0xCB:  1253,\n\n      /* shapefile DBF extension */\n      0x00: 20127,           0x08:   865,\n      0x09:   437,           0x0A:   850,\n      0x0B:   437,           0x0D:   437,\n      0x0E:   850,           0x0F:   437,\n      0x10:   850,           0x11:   437,\n      0x12:   850,           0x13:   932,\n      0x14:   850,           0x15:   437,\n      0x16:   850,           0x17:   865,\n      0x18:   437,           0x19:   437,\n      0x1A:   850,           0x1B:   437,\n      0x1C:   863,           0x1D:   850,\n      0x1F:   852,           0x22:   852,\n      0x23:   852,           0x24:   860,\n      0x25:   850,           0x26:   866,\n      0x37:   850,           0x40:   852,\n      0x4D:   936,           0x4E:   949,\n      0x4F:   950,           0x50:   874,\n      0x57:  1252,           0x58:  1252,\n      0x59:  1252,\n\n      0xFF: 16969\n    };\n\n    /* TODO: find an actual specification */\n    function dbf_to_aoa(buf, opts) {\n      var out = [];\n      /* TODO: browser based */\n      var d = (new_raw_buf(1));\n      switch(opts.type) {\n        case 'base64': d = s2a(Base64.decode(buf)); break;\n        case 'binary': d = s2a(buf); break;\n        case 'buffer':\n        case 'array': d = buf; break;\n      }\n      prep_blob(d, 0);\n      /* header */\n      var ft = d.read_shift(1);\n      var memo = false;\n      var vfp = false, l7 = false;\n      switch(ft) {\n        case 0x02: case 0x03: break;\n        case 0x30: vfp = true; memo = true; break;\n        case 0x31: vfp = true; break;\n        case 0x83: memo = true; break;\n        case 0x8B: memo = true; break;\n        case 0x8C: memo = true; l7 = true; break;\n        case 0xF5: memo = true; break;\n        default: throw new Error(\"DBF Unsupported Version: \" + ft.toString(16));\n      }\n      var /*filedate = new Date(),*/ nrow = 0, fpos = 0;\n      if(ft == 0x02) nrow = d.read_shift(2);\n      /*filedate = new Date(d.read_shift(1) + 1900, d.read_shift(1) - 1, d.read_shift(1));*/d.l += 3;\n      if(ft != 0x02) nrow = d.read_shift(4);\n      if(ft != 0x02) fpos = d.read_shift(2);\n      var rlen = d.read_shift(2);\n\n      var /*flags = 0,*/ current_cp = 1252;\n      if(ft != 0x02) {\n        d.l+=16;\n        /*flags = */d.read_shift(1);\n        //if(memo && ((flags & 0x02) === 0)) throw new Error(\"DBF Flags \" + flags.toString(16) + \" ft \" + ft.toString(16));\n\n        /* codepage present in FoxPro */\n        if(d[d.l] !== 0) current_cp = dbf_codepage_map[d[d.l]];\n        d.l+=1;\n\n        d.l+=2;\n      }\n      if(l7) d.l += 36;\n      var fields = [], field = ({});\n      var hend = fpos - 10 - (vfp ? 264 : 0), ww = l7 ? 32 : 11;\n      while(ft == 0x02 ? d.l < d.length && d[d.l] != 0x0d: d.l < hend) {\n        field = ({});\n        field.name = cptable.utils.decode(current_cp, d.slice(d.l, d.l+ww)).replace(/[\\u0000\\r\\n].*$/g,\"\");\n        d.l += ww;\n        field.type = String.fromCharCode(d.read_shift(1));\n        if(ft != 0x02 && !l7) field.offset = d.read_shift(4);\n        field.len = d.read_shift(1);\n        if(ft == 0x02) field.offset = d.read_shift(2);\n        field.dec = d.read_shift(1);\n        if(field.name.length) fields.push(field);\n        if(ft != 0x02) d.l += l7 ? 13 : 14;\n        switch(field.type) {\n          case 'B': // VFP Double\n            if((!vfp || field.len != 8) && opts.WTF) console.log('Skipping ' + field.name + ':' + field.type);\n            break;\n          case 'G': // General\n          case 'P': // Picture\n            if(opts.WTF) console.log('Skipping ' + field.name + ':' + field.type);\n            break;\n          case 'C': // character\n          case 'D': // date\n          case 'F': // floating point\n          case 'I': // long\n          case 'L': // boolean\n          case 'M': // memo\n          case 'N': // number\n          case 'O': // double\n          case 'T': // datetime\n          case 'Y': // currency\n          case '0': // VFP _NullFlags\n          case '@': // timestamp\n          case '+': // autoincrement\n            break;\n          default: throw new Error('Unknown Field Type: ' + field.type);\n        }\n      }\n      if(d[d.l] !== 0x0D) d.l = fpos-1;\n      else if(ft == 0x02) d.l = 0x209;\n      if(ft != 0x02) {\n        if(d.read_shift(1) !== 0x0D) throw new Error(\"DBF Terminator not found \" + d.l + \" \" + d[d.l]);\n        d.l = fpos;\n      }\n      /* data */\n      var R = 0, C = 0;\n      out[0] = [];\n      for(C = 0; C != fields.length; ++C) out[0][C] = fields[C].name;\n      while(nrow-- > 0) {\n        if(d[d.l] === 0x2A) { d.l+=rlen; continue; }\n        ++d.l;\n        out[++R] = []; C = 0;\n        for(C = 0; C != fields.length; ++C) {\n          var dd = d.slice(d.l, d.l+fields[C].len); d.l+=fields[C].len;\n          prep_blob(dd, 0);\n          var s = cptable.utils.decode(current_cp, dd);\n          switch(fields[C].type) {\n            case 'C':\n              out[R][C] = cptable.utils.decode(current_cp, dd);\n              out[R][C] = out[R][C].trim();\n              break;\n            case 'D':\n              if(s.length === 8) out[R][C] = new Date(+s.slice(0,4), +s.slice(4,6)-1, +s.slice(6,8));\n              else out[R][C] = s;\n              break;\n            case 'F': out[R][C] = parseFloat(s.trim()); break;\n            case '+': case 'I': out[R][C] = l7 ? dd.read_shift(-4, 'i') ^ 0x80000000 : dd.read_shift(4, 'i'); break;\n            case 'L': switch(s.toUpperCase()) {\n              case 'Y': case 'T': out[R][C] = true; break;\n              case 'N': case 'F': out[R][C] = false; break;\n              case ' ': case '?': out[R][C] = false; break; /* NOTE: technically uninitialized */\n              default: throw new Error(\"DBF Unrecognized L:|\" + s + \"|\");\n            } break;\n            case 'M': /* TODO: handle memo files */\n              if(!memo) throw new Error(\"DBF Unexpected MEMO for type \" + ft.toString(16));\n              out[R][C] = \"##MEMO##\" + (l7 ? parseInt(s.trim(), 10): dd.read_shift(4));\n              break;\n            case 'N': out[R][C] = +s.replace(/\\u0000/g,\"\").trim(); break;\n            case '@': out[R][C] = new Date(dd.read_shift(-8, 'f') - 0x388317533400); break;\n            case 'T': out[R][C] = new Date((dd.read_shift(4) - 0x253D8C) * 0x5265C00 + dd.read_shift(4)); break;\n            case 'Y': out[R][C] = dd.read_shift(4,'i')/1e4; break;\n            case 'O': out[R][C] = -dd.read_shift(-8, 'f'); break;\n            case 'B': if(vfp && fields[C].len == 8) { out[R][C] = dd.read_shift(8,'f'); break; }\n            /* falls through */\n            case 'G': case 'P': dd.l += fields[C].len; break;\n            case '0':\n              if(fields[C].name === '_NullFlags') break;\n            /* falls through */\n            default: throw new Error(\"DBF Unsupported data type \" + fields[C].type);\n          }\n        }\n      }\n      if(ft != 0x02) if(d.l < d.length && d[d.l++] != 0x1A) throw new Error(\"DBF EOF Marker missing \" + (d.l-1) + \" of \" + d.length + \" \" + d[d.l-1].toString(16));\n      if(opts && opts.sheetRows) out = out.slice(0, opts.sheetRows);\n      return out;\n    }\n\n    function dbf_to_sheet(buf, opts) {\n      var o = opts || {};\n      if(!o.dateNF) o.dateNF = \"yyyymmdd\";\n      return aoa_to_sheet(dbf_to_aoa(buf, o), o);\n    }\n\n    function dbf_to_workbook(buf, opts) {\n      try { return sheet_to_workbook(dbf_to_sheet(buf, opts), opts); }\n      catch(e) { if(opts && opts.WTF) throw e; }\n      return ({SheetNames:[],Sheets:{}});\n    }\n\n    var _RLEN = { 'B': 8, 'C': 250, 'L': 1, 'D': 8, '?': 0, '': 0 };\n    function sheet_to_dbf(ws, opts) {\n      var o = opts || {};\n      if(o.type == \"string\") throw new Error(\"Cannot write DBF to JS string\");\n      var ba = buf_array();\n      var aoa = sheet_to_json(ws, {header:1, cellDates:true});\n      var headers = aoa[0], data = aoa.slice(1);\n      var i = 0, j = 0, hcnt = 0, rlen = 1;\n      for(i = 0; i < headers.length; ++i) {\n        if(i == null) continue;\n        ++hcnt;\n        if(typeof headers[i] === 'number') headers[i] = headers[i].toString(10);\n        if(typeof headers[i] !== 'string') throw new Error(\"DBF Invalid column name \" + headers[i] + \" |\" + (typeof headers[i]) + \"|\");\n        if(headers.indexOf(headers[i]) !== i) for(j=0; j<1024;++j)\n          if(headers.indexOf(headers[i] + \"_\" + j) == -1) { headers[i] += \"_\" + j; break; }\n      }\n      var range = safe_decode_range(ws['!ref']);\n      var coltypes = [];\n      for(i = 0; i <= range.e.c - range.s.c; ++i) {\n        var col = [];\n        for(j=0; j < data.length; ++j) {\n          if(data[j][i] != null) col.push(data[j][i]);\n        }\n        if(col.length == 0 || headers[i] == null) { coltypes[i] = '?'; continue; }\n        var guess = '', _guess = '';\n        for(j = 0; j < col.length; ++j) {\n          switch(typeof col[j]) {\n            /* TODO: check if L2 compat is desired */\n            case 'number': _guess = 'B'; break;\n            case 'string': _guess = 'C'; break;\n            case 'boolean': _guess = 'L'; break;\n            case 'object': _guess = col[j] instanceof Date ? 'D' : 'C'; break;\n            default: _guess = 'C';\n          }\n          guess = guess && guess != _guess ? 'C' : _guess;\n          if(guess == 'C') break;\n        }\n        rlen += _RLEN[guess] || 0;\n        coltypes[i] = guess;\n      }\n\n      var h = ba.next(32);\n      h.write_shift(4, 0x13021130);\n      h.write_shift(4, data.length);\n      h.write_shift(2, 296 + 32 * hcnt);\n      h.write_shift(2, rlen);\n      for(i=0; i < 4; ++i) h.write_shift(4, 0);\n      h.write_shift(4, 0x00000300); // TODO: CP\n\n      for(i = 0, j = 0; i < headers.length; ++i) {\n        if(headers[i] == null) continue;\n        var hf = ba.next(32);\n        var _f = (headers[i].slice(-10) + \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\").slice(0, 11);\n        hf.write_shift(1, _f, \"sbcs\");\n        hf.write_shift(1, coltypes[i] == '?' ? 'C' : coltypes[i], \"sbcs\");\n        hf.write_shift(4, j);\n        hf.write_shift(1, _RLEN[coltypes[i]] || 0);\n        hf.write_shift(1, 0);\n        hf.write_shift(1, 0x02);\n        hf.write_shift(4, 0);\n        hf.write_shift(1, 0);\n        hf.write_shift(4, 0);\n        hf.write_shift(4, 0);\n        j += _RLEN[coltypes[i]] || 0;\n      }\n\n      var hb = ba.next(264);\n      hb.write_shift(4, 0x0000000D);\n      for(i=0; i < 65;++i) hb.write_shift(4, 0x00000000);\n      for(i=0; i < data.length; ++i) {\n        var rout = ba.next(rlen);\n        rout.write_shift(1, 0);\n        for(j=0; j<headers.length; ++j) {\n          if(headers[j] == null) continue;\n          switch(coltypes[j]) {\n            case 'L': rout.write_shift(1, data[i][j] == null ? 0x3F : data[i][j] ? 0x54 : 0x46); break;\n            case 'B': rout.write_shift(8, data[i][j]||0, 'f'); break;\n            case 'D':\n              if(!data[i][j]) rout.write_shift(8, \"00000000\", \"sbcs\");\n              else {\n                rout.write_shift(4, (\"0000\"+data[i][j].getFullYear()).slice(-4), \"sbcs\");\n                rout.write_shift(2, (\"00\"+(data[i][j].getMonth()+1)).slice(-2), \"sbcs\");\n                rout.write_shift(2, (\"00\"+data[i][j].getDate()).slice(-2), \"sbcs\");\n              } break;\n            case 'C':\n              var _s = String(data[i][j]||\"\");\n              rout.write_shift(1, _s, \"sbcs\");\n              for(hcnt=0; hcnt < 250-_s.length; ++hcnt) rout.write_shift(1, 0x20); break;\n          }\n        }\n        // data\n      }\n      ba.next(1).write_shift(1, 0x1A);\n      return ba.end();\n    }\n    return {\n      to_workbook: dbf_to_workbook,\n      to_sheet: dbf_to_sheet,\n      from_sheet: sheet_to_dbf\n    };\n  })();\n\n  var SYLK = (function() {\n    /* TODO: find an actual specification */\n    function sylk_to_aoa(d, opts) {\n      switch(opts.type) {\n        case 'base64': return sylk_to_aoa_str(Base64.decode(d), opts);\n        case 'binary': return sylk_to_aoa_str(d, opts);\n        case 'buffer': return sylk_to_aoa_str(d.toString('binary'), opts);\n        case 'array': return sylk_to_aoa_str(cc2str(d), opts);\n      }\n      throw new Error(\"Unrecognized type \" + opts.type);\n    }\n    function sylk_to_aoa_str(str, opts) {\n      var records = str.split(/[\\n\\r]+/), R = -1, C = -1, ri = 0, rj = 0, arr = [];\n      var formats = [];\n      var next_cell_format = null;\n      var sht = {}, rowinfo = [], colinfo = [], cw = [];\n      var Mval = 0, j;\n      for (; ri !== records.length; ++ri) {\n        Mval = 0;\n        var rstr=records[ri].trim();\n        var record=rstr.replace(/;;/g, \"\\u0001\").split(\";\").map(function(x) { return x.replace(/\\u0001/g, \";\"); });\n        var RT=record[0], val;\n        if(rstr.length > 0) switch(RT) {\n          case 'ID': break; /* header */\n          case 'E': break; /* EOF */\n          case 'B': break; /* dimensions */\n          case 'O': break; /* options? */\n          case 'P':\n            if(record[1].charAt(0) == 'P')\n              formats.push(rstr.slice(3).replace(/;;/g, \";\"));\n            break;\n          case 'C':\n            var C_seen_K = false, C_seen_X = false;\n            for(rj=1; rj<record.length; ++rj) switch(record[rj].charAt(0)) {\n              case 'X': C = parseInt(record[rj].slice(1))-1; C_seen_X = true; break;\n              case 'Y':\n                R = parseInt(record[rj].slice(1))-1; if(!C_seen_X) C = 0;\n                for(j = arr.length; j <= R; ++j) arr[j] = [];\n                break;\n              case 'K':\n                val = record[rj].slice(1);\n                if(val.charAt(0) === '\"') val = val.slice(1,val.length - 1);\n                else if(val === 'TRUE') val = true;\n                else if(val === 'FALSE') val = false;\n                else if(!isNaN(fuzzynum(val))) {\n                  val = fuzzynum(val);\n                  if(next_cell_format !== null && SSF.is_date(next_cell_format)) val = numdate(val);\n                } else if(!isNaN(fuzzydate(val).getDate())) {\n                  val = parseDate(val);\n                }\n                if(typeof cptable !== 'undefined' && typeof val == \"string\" && ((opts||{}).type != \"string\") && (opts||{}).codepage) val = cptable.utils.decode(opts.codepage, val);\n                C_seen_K = true;\n                break;\n              case 'E':\n                var formula = rc_to_a1(record[rj].slice(1), {r:R,c:C});\n                arr[R][C] = [arr[R][C], formula];\n                break;\n              default: if(opts && opts.WTF) throw new Error(\"SYLK bad record \" + rstr);\n            }\n            if(C_seen_K) { arr[R][C] = val; next_cell_format = null; }\n            break;\n          case 'F':\n            var F_seen = 0;\n            for(rj=1; rj<record.length; ++rj) switch(record[rj].charAt(0)) {\n              case 'X': C = parseInt(record[rj].slice(1))-1; ++F_seen; break;\n              case 'Y':\n                R = parseInt(record[rj].slice(1))-1; /*C = 0;*/\n                for(j = arr.length; j <= R; ++j) arr[j] = [];\n                break;\n              case 'M': Mval = parseInt(record[rj].slice(1)) / 20; break;\n              case 'F': break; /* ??? */\n              case 'G': break; /* hide grid */\n              case 'P':\n                next_cell_format = formats[parseInt(record[rj].slice(1))];\n                break;\n              case 'S': break; /* cell style */\n              case 'D': break; /* column */\n              case 'N': break; /* font */\n              case 'W':\n                cw = record[rj].slice(1).split(\" \");\n                for(j = parseInt(cw[0], 10); j <= parseInt(cw[1], 10); ++j) {\n                  Mval = parseInt(cw[2], 10);\n                  colinfo[j-1] = Mval === 0 ? {hidden:true}: {wch:Mval}; process_col(colinfo[j-1]);\n                } break;\n              case 'C': /* default column format */\n                C = parseInt(record[rj].slice(1))-1;\n                if(!colinfo[C]) colinfo[C] = {};\n                break;\n              case 'R': /* row properties */\n                R = parseInt(record[rj].slice(1))-1;\n                if(!rowinfo[R]) rowinfo[R] = {};\n                if(Mval > 0) { rowinfo[R].hpt = Mval; rowinfo[R].hpx = pt2px(Mval); }\n                else if(Mval === 0) rowinfo[R].hidden = true;\n                break;\n              default: if(opts && opts.WTF) throw new Error(\"SYLK bad record \" + rstr);\n            }\n            if(F_seen < 1) next_cell_format = null; break;\n          default: if(opts && opts.WTF) throw new Error(\"SYLK bad record \" + rstr);\n        }\n      }\n      if(rowinfo.length > 0) sht['!rows'] = rowinfo;\n      if(colinfo.length > 0) sht['!cols'] = colinfo;\n      if(opts && opts.sheetRows) arr = arr.slice(0, opts.sheetRows);\n      return [arr, sht];\n    }\n\n    function sylk_to_sheet(d, opts) {\n      var aoasht = sylk_to_aoa(d, opts);\n      var aoa = aoasht[0], ws = aoasht[1];\n      var o = aoa_to_sheet(aoa, opts);\n      keys(ws).forEach(function(k) { o[k] = ws[k]; });\n      return o;\n    }\n\n    function sylk_to_workbook(d, opts) { return sheet_to_workbook(sylk_to_sheet(d, opts), opts); }\n\n    function write_ws_cell_sylk(cell, ws, R, C) {\n      var o = \"C;Y\" + (R+1) + \";X\" + (C+1) + \";K\";\n      switch(cell.t) {\n        case 'n':\n          o += (cell.v||0);\n          if(cell.f && !cell.F) o += \";E\" + a1_to_rc(cell.f, {r:R, c:C}); break;\n        case 'b': o += cell.v ? \"TRUE\" : \"FALSE\"; break;\n        case 'e': o += cell.w || cell.v; break;\n        case 'd': o += '\"' + (cell.w || cell.v) + '\"'; break;\n        case 's': o += '\"' + cell.v.replace(/\"/g,\"\") + '\"'; break;\n      }\n      return o;\n    }\n\n    function write_ws_cols_sylk(out, cols) {\n      cols.forEach(function(col, i) {\n        var rec = \"F;W\" + (i+1) + \" \" + (i+1) + \" \";\n        if(col.hidden) rec += \"0\";\n        else {\n          if(typeof col.width == 'number') col.wpx = width2px(col.width);\n          if(typeof col.wpx == 'number') col.wch = px2char(col.wpx);\n          if(typeof col.wch == 'number') rec += Math.round(col.wch);\n        }\n        if(rec.charAt(rec.length - 1) != \" \") out.push(rec);\n      });\n    }\n\n    function write_ws_rows_sylk(out, rows) {\n      rows.forEach(function(row, i) {\n        var rec = \"F;\";\n        if(row.hidden) rec += \"M0;\";\n        else if(row.hpt) rec += \"M\" + 20 * row.hpt + \";\";\n        else if(row.hpx) rec += \"M\" + 20 * px2pt(row.hpx) + \";\";\n        if(rec.length > 2) out.push(rec + \"R\" + (i+1));\n      });\n    }\n\n    function sheet_to_sylk(ws, opts) {\n      var preamble = [\"ID;PWXL;N;E\"], o = [];\n      var r = safe_decode_range(ws['!ref']), cell;\n      var dense = Array.isArray(ws);\n      var RS = \"\\r\\n\";\n\n      preamble.push(\"P;PGeneral\");\n      preamble.push(\"F;P0;DG0G8;M255\");\n      if(ws['!cols']) write_ws_cols_sylk(preamble, ws['!cols']);\n      if(ws['!rows']) write_ws_rows_sylk(preamble, ws['!rows']);\n\n      preamble.push(\"B;Y\" + (r.e.r - r.s.r + 1) + \";X\" + (r.e.c - r.s.c + 1) + \";D\" + [r.s.c,r.s.r,r.e.c,r.e.r].join(\" \"));\n      for(var R = r.s.r; R <= r.e.r; ++R) {\n        for(var C = r.s.c; C <= r.e.c; ++C) {\n          var coord = encode_cell({r:R,c:C});\n          cell = dense ? (ws[R]||[])[C]: ws[coord];\n          if(!cell || (cell.v == null && (!cell.f || cell.F))) continue;\n          o.push(write_ws_cell_sylk(cell, ws, R, C, opts));\n        }\n      }\n      return preamble.join(RS) + RS + o.join(RS) + RS + \"E\" + RS;\n    }\n\n    return {\n      to_workbook: sylk_to_workbook,\n      to_sheet: sylk_to_sheet,\n      from_sheet: sheet_to_sylk\n    };\n  })();\n\n  var DIF = (function() {\n    function dif_to_aoa(d, opts) {\n      switch(opts.type) {\n        case 'base64': return dif_to_aoa_str(Base64.decode(d), opts);\n        case 'binary': return dif_to_aoa_str(d, opts);\n        case 'buffer': return dif_to_aoa_str(d.toString('binary'), opts);\n        case 'array': return dif_to_aoa_str(cc2str(d), opts);\n      }\n      throw new Error(\"Unrecognized type \" + opts.type);\n    }\n    function dif_to_aoa_str(str, opts) {\n      var records = str.split('\\n'), R = -1, C = -1, ri = 0, arr = [];\n      for (; ri !== records.length; ++ri) {\n        if (records[ri].trim() === 'BOT') { arr[++R] = []; C = 0; continue; }\n        if (R < 0) continue;\n        var metadata = records[ri].trim().split(\",\");\n        var type = metadata[0], value = metadata[1];\n        ++ri;\n        var data = records[ri].trim();\n        switch (+type) {\n          case -1:\n            if (data === 'BOT') { arr[++R] = []; C = 0; continue; }\n            else if (data !== 'EOD') throw new Error(\"Unrecognized DIF special command \" + data);\n            break;\n          case 0:\n            if(data === 'TRUE') arr[R][C] = true;\n            else if(data === 'FALSE') arr[R][C] = false;\n            else if(!isNaN(fuzzynum(value))) arr[R][C] = fuzzynum(value);\n            else if(!isNaN(fuzzydate(value).getDate())) arr[R][C] = parseDate(value);\n            else arr[R][C] = value;\n            ++C; break;\n          case 1:\n            data = data.slice(1,data.length-1);\n            arr[R][C++] = data !== '' ? data : null;\n            break;\n        }\n        if (data === 'EOD') break;\n      }\n      if(opts && opts.sheetRows) arr = arr.slice(0, opts.sheetRows);\n      return arr;\n    }\n\n    function dif_to_sheet(str, opts) { return aoa_to_sheet(dif_to_aoa(str, opts), opts); }\n    function dif_to_workbook(str, opts) { return sheet_to_workbook(dif_to_sheet(str, opts), opts); }\n\n    var sheet_to_dif = (function() {\n      var push_field = function pf(o, topic, v, n, s) {\n        o.push(topic);\n        o.push(v + \",\" + n);\n        o.push('\"' + s.replace(/\"/g,'\"\"') + '\"');\n      };\n      var push_value = function po(o, type, v, s) {\n        o.push(type + \",\" + v);\n        o.push(type == 1 ? '\"' + s.replace(/\"/g,'\"\"') + '\"' : s);\n      };\n      return function sheet_to_dif(ws) {\n        var o = [];\n        var r = safe_decode_range(ws['!ref']), cell;\n        var dense = Array.isArray(ws);\n        push_field(o, \"TABLE\", 0, 1, \"sheetjs\");\n        push_field(o, \"VECTORS\", 0, r.e.r - r.s.r + 1,\"\");\n        push_field(o, \"TUPLES\", 0, r.e.c - r.s.c + 1,\"\");\n        push_field(o, \"DATA\", 0, 0,\"\");\n        for(var R = r.s.r; R <= r.e.r; ++R) {\n          push_value(o, -1, 0, \"BOT\");\n          for(var C = r.s.c; C <= r.e.c; ++C) {\n            var coord = encode_cell({r:R,c:C});\n            cell = dense ? (ws[R]||[])[C] : ws[coord];\n            if(!cell) { push_value(o, 1, 0, \"\"); continue;}\n            switch(cell.t) {\n              case 'n':\n                var val = DIF_XL ? cell.w : cell.v;\n                if(!val && cell.v != null) val = cell.v;\n                if(val == null) {\n                  if(DIF_XL && cell.f && !cell.F) push_value(o, 1, 0, \"=\" + cell.f);\n                  else push_value(o, 1, 0, \"\");\n                }\n                else push_value(o, 0, val, \"V\");\n                break;\n              case 'b':\n                push_value(o, 0, cell.v ? 1 : 0, cell.v ? \"TRUE\" : \"FALSE\");\n                break;\n              case 's':\n                push_value(o, 1, 0, (!DIF_XL || isNaN(cell.v)) ? cell.v : '=\"' + cell.v + '\"');\n                break;\n              case 'd':\n                if(!cell.w) cell.w = SSF.format(cell.z || SSF._table[14], datenum(parseDate(cell.v)));\n                if(DIF_XL) push_value(o, 0, cell.w, \"V\");\n                else push_value(o, 1, 0, cell.w);\n                break;\n              default: push_value(o, 1, 0, \"\");\n            }\n          }\n        }\n        push_value(o, -1, 0, \"EOD\");\n        var RS = \"\\r\\n\";\n        var oo = o.join(RS);\n        //while((oo.length & 0x7F) != 0) oo += \"\\0\";\n        return oo;\n      };\n    })();\n    return {\n      to_workbook: dif_to_workbook,\n      to_sheet: dif_to_sheet,\n      from_sheet: sheet_to_dif\n    };\n  })();\n\n  var ETH = (function() {\n    function decode(s) { return s.replace(/\\\\b/g,\"\\\\\").replace(/\\\\c/g,\":\").replace(/\\\\n/g,\"\\n\"); }\n    function encode(s) { return s.replace(/\\\\/g, \"\\\\b\").replace(/:/g, \"\\\\c\").replace(/\\n/g,\"\\\\n\"); }\n\n    function eth_to_aoa(str, opts) {\n      var records = str.split('\\n'), R = -1, C = -1, ri = 0, arr = [];\n      for (; ri !== records.length; ++ri) {\n        var record = records[ri].trim().split(\":\");\n        if(record[0] !== 'cell') continue;\n        var addr = decode_cell(record[1]);\n        if(arr.length <= addr.r) for(R = arr.length; R <= addr.r; ++R) if(!arr[R]) arr[R] = [];\n        R = addr.r; C = addr.c;\n        switch(record[2]) {\n          case 't': arr[R][C] = decode(record[3]); break;\n          case 'v': arr[R][C] = +record[3]; break;\n          case 'vtf': var _f = record[record.length - 1];\n          /* falls through */\n          case 'vtc':\n            switch(record[3]) {\n              case 'nl': arr[R][C] = +record[4] ? true : false; break;\n              default: arr[R][C] = +record[4]; break;\n            }\n            if(record[2] == 'vtf') arr[R][C] = [arr[R][C], _f];\n        }\n      }\n      if(opts && opts.sheetRows) arr = arr.slice(0, opts.sheetRows);\n      return arr;\n    }\n\n    function eth_to_sheet(d, opts) { return aoa_to_sheet(eth_to_aoa(d, opts), opts); }\n    function eth_to_workbook(d, opts) { return sheet_to_workbook(eth_to_sheet(d, opts), opts); }\n\n    var header = [\n      \"socialcalc:version:1.5\",\n      \"MIME-Version: 1.0\",\n      \"Content-Type: multipart/mixed; boundary=SocialCalcSpreadsheetControlSave\"\n    ].join(\"\\n\");\n\n    var sep = [\n      \"--SocialCalcSpreadsheetControlSave\",\n      \"Content-type: text/plain; charset=UTF-8\"\n    ].join(\"\\n\") + \"\\n\";\n\n    /* TODO: the other parts */\n    var meta = [\n      \"# SocialCalc Spreadsheet Control Save\",\n      \"part:sheet\"\n    ].join(\"\\n\");\n\n    var end = \"--SocialCalcSpreadsheetControlSave--\";\n\n    function sheet_to_eth_data(ws) {\n      if(!ws || !ws['!ref']) return \"\";\n      var o = [], oo = [], cell, coord = \"\";\n      var r = decode_range(ws['!ref']);\n      var dense = Array.isArray(ws);\n      for(var R = r.s.r; R <= r.e.r; ++R) {\n        for(var C = r.s.c; C <= r.e.c; ++C) {\n          coord = encode_cell({r:R,c:C});\n          cell = dense ? (ws[R]||[])[C] : ws[coord];\n          if(!cell || cell.v == null || cell.t === 'z') continue;\n          oo = [\"cell\", coord, 't'];\n          switch(cell.t) {\n            case 's': case 'str': oo.push(encode(cell.v)); break;\n            case 'n':\n              if(!cell.f) { oo[2]='v'; oo[3]=cell.v; }\n              else { oo[2]='vtf'; oo[3]='n'; oo[4]=cell.v; oo[5]=encode(cell.f); }\n              break;\n            case 'b':\n              oo[2] = 'vt'+(cell.f?'f':'c'); oo[3]='nl'; oo[4]=cell.v?\"1\":\"0\";\n              oo[5] = encode(cell.f||(cell.v?'TRUE':'FALSE'));\n              break;\n            case 'd':\n              var t = datenum(parseDate(cell.v));\n              oo[2] = 'vtc'; oo[3] = 'nd'; oo[4] = \"\"+t;\n              oo[5] = cell.w || SSF.format(cell.z || SSF._table[14], t);\n              break;\n            case 'e': continue;\n          }\n          o.push(oo.join(\":\"));\n        }\n      }\n      o.push(\"sheet:c:\" + (r.e.c-r.s.c+1) + \":r:\" + (r.e.r-r.s.r+1) + \":tvf:1\");\n      o.push(\"valueformat:1:text-wiki\");\n      //o.push(\"copiedfrom:\" + ws['!ref']); // clipboard only\n      return o.join(\"\\n\");\n    }\n\n    function sheet_to_eth(ws) {\n      return [header, sep, meta, sep, sheet_to_eth_data(ws), end].join(\"\\n\");\n      // return [\"version:1.5\", sheet_to_eth_data(ws)].join(\"\\n\"); // clipboard form\n    }\n\n    return {\n      to_workbook: eth_to_workbook,\n      to_sheet: eth_to_sheet,\n      from_sheet: sheet_to_eth\n    };\n  })();\n\n  var PRN = (function() {\n    function set_text_arr(data, arr, R, C, o) {\n      if(o.raw) arr[R][C] = data;\n      else if(data === 'TRUE') arr[R][C] = true;\n      else if(data === 'FALSE') arr[R][C] = false;\n      else if(data === \"\"){/* empty */}\n      else if(!isNaN(fuzzynum(data))) arr[R][C] = fuzzynum(data);\n      else if(!isNaN(fuzzydate(data).getDate())) arr[R][C] = parseDate(data);\n      else arr[R][C] = data;\n    }\n\n    function prn_to_aoa_str(f, opts) {\n      var o = opts || {};\n      var arr = ([]);\n      if(!f || f.length === 0) return arr;\n      var lines = f.split(/[\\r\\n]/);\n      var L = lines.length - 1;\n      while(L >= 0 && lines[L].length === 0) --L;\n      var start = 10, idx = 0;\n      var R = 0;\n      for(; R <= L; ++R) {\n        idx = lines[R].indexOf(\" \");\n        if(idx == -1) idx = lines[R].length; else idx++;\n        start = Math.max(start, idx);\n      }\n      for(R = 0; R <= L; ++R) {\n        arr[R] = [];\n        /* TODO: confirm that widths are always 10 */\n        var C = 0;\n        set_text_arr(lines[R].slice(0, start).trim(), arr, R, C, o);\n        for(C = 1; C <= (lines[R].length - start)/10 + 1; ++C)\n          set_text_arr(lines[R].slice(start+(C-1)*10,start+C*10).trim(),arr,R,C,o);\n      }\n      if(o.sheetRows) arr = arr.slice(0, o.sheetRows);\n      return arr;\n    }\n\n    // List of accepted CSV separators\n    var guess_seps = {\n      0x2C: ',',\n      0x09: \"\\t\",\n      0x3B: ';'\n    };\n\n    // CSV separator weights to be used in case of equal numbers\n    var guess_sep_weights = {\n      0x2C: 3,\n      0x09: 2,\n      0x3B: 1\n    };\n\n    function guess_sep(str) {\n      var cnt = {}, instr = false, end = 0, cc = 0;\n      for(;end < str.length;++end) {\n        if((cc=str.charCodeAt(end)) == 0x22) instr = !instr;\n        else if(!instr && cc in guess_seps) cnt[cc] = (cnt[cc]||0)+1;\n      }\n\n      cc = [];\n      for(end in cnt) if ( cnt.hasOwnProperty(end) ) {\n        cc.push([ cnt[end], end ]);\n      }\n\n      if ( !cc.length ) {\n        cnt = guess_sep_weights;\n        for(end in cnt) if ( cnt.hasOwnProperty(end) ) {\n          cc.push([ cnt[end], end ]);\n        }\n      }\n\n      cc.sort(function(a, b) { return a[0] - b[0] || guess_sep_weights[a[1]] - guess_sep_weights[b[1]]; });\n\n      return guess_seps[cc.pop()[1]];\n    }\n\n    function dsv_to_sheet_str(str, opts) {\n      var o = opts || {};\n      var sep = \"\";\n      if(DENSE != null && o.dense == null) o.dense = DENSE;\n      var ws = o.dense ? ([]) : ({});\n      var range = ({s: {c:0, r:0}, e: {c:0, r:0}});\n\n      if(str.slice(0,4) == \"sep=\" && str.charCodeAt(5) == 10) { sep = str.charAt(4); str = str.slice(6); }\n      else sep = guess_sep(str.slice(0,1024));\n      var R = 0, C = 0, v = 0;\n      var start = 0, end = 0, sepcc = sep.charCodeAt(0), instr = false, cc=0;\n      str = str.replace(/\\r\\n/mg, \"\\n\");\n      var _re = o.dateNF != null ? dateNF_regex(o.dateNF) : null;\n      function finish_cell() {\n        var s = str.slice(start, end);\n        var cell = ({});\n        if(s.charAt(0) == '\"' && s.charAt(s.length - 1) == '\"') s = s.slice(1,-1).replace(/\"\"/g,'\"');\n        if(s.length === 0) cell.t = 'z';\n        else if(o.raw) { cell.t = 's'; cell.v = s; }\n        else if(s.trim().length === 0) { cell.t = 's'; cell.v = s; }\n        else if(s.charCodeAt(0) == 0x3D) {\n          if(s.charCodeAt(1) == 0x22 && s.charCodeAt(s.length - 1) == 0x22) { cell.t = 's'; cell.v = s.slice(2,-1).replace(/\"\"/g,'\"'); }\n          else if(fuzzyfmla(s)) { cell.t = 'n'; cell.f = s.slice(1); }\n          else { cell.t = 's'; cell.v = s; } }\n        else if(s == \"TRUE\") { cell.t = 'b'; cell.v = true; }\n        else if(s == \"FALSE\") { cell.t = 'b'; cell.v = false; }\n        else if(!isNaN(v = fuzzynum(s))) { cell.t = 'n'; if(o.cellText !== false) cell.w = s; cell.v = v; }\n        else if(!isNaN(fuzzydate(s).getDate()) || _re && s.match(_re)) {\n          cell.z = o.dateNF || SSF._table[14];\n          var k = 0;\n          if(_re && s.match(_re)){ s=dateNF_fix(s, o.dateNF, (s.match(_re)||[])); k=1; }\n          if(o.cellDates) { cell.t = 'd'; cell.v = parseDate(s, k); }\n          else { cell.t = 'n'; cell.v = datenum(parseDate(s, k)); }\n          if(o.cellText !== false) cell.w = SSF.format(cell.z, cell.v instanceof Date ? datenum(cell.v):cell.v);\n          if(!o.cellNF) delete cell.z;\n        } else {\n          cell.t = 's';\n          cell.v = s;\n        }\n        if(cell.t == 'z'){}\n        else if(o.dense) { if(!ws[R]) ws[R] = []; ws[R][C] = cell; }\n        else ws[encode_cell({c:C,r:R})] = cell;\n        start = end+1;\n        if(range.e.c < C) range.e.c = C;\n        if(range.e.r < R) range.e.r = R;\n        if(cc == sepcc) ++C; else { C = 0; ++R; if(o.sheetRows && o.sheetRows <= R) return true; }\n      }\n      outer: for(;end < str.length;++end) switch((cc=str.charCodeAt(end))) {\n        case 0x22: instr = !instr; break;\n        case sepcc: case 0x0a: case 0x0d: if(!instr && finish_cell()) break outer; break;\n        default: break;\n      }\n      if(end - start > 0) finish_cell();\n\n      ws['!ref'] = encode_range(range);\n      return ws;\n    }\n\n    function prn_to_sheet_str(str, opts) {\n      if(str.slice(0,4) == \"sep=\") return dsv_to_sheet_str(str, opts);\n      if(str.indexOf(\"\\t\") >= 0 || str.indexOf(\",\") >= 0 || str.indexOf(\";\") >= 0) return dsv_to_sheet_str(str, opts);\n      return aoa_to_sheet(prn_to_aoa_str(str, opts), opts);\n    }\n\n    function prn_to_sheet(d, opts) {\n      var str = \"\", bytes = opts.type == 'string' ? [0,0,0,0] : firstbyte(d, opts);\n      switch(opts.type) {\n        case 'base64': str = Base64.decode(d); break;\n        case 'binary': str = d; break;\n        case 'buffer':\n          if(opts.codepage == 65001) str = d.toString('utf8');\n          else if(opts.codepage && typeof cptable !== 'undefined') str = cptable.utils.decode(opts.codepage, d);\n          else str = d.toString('binary');\n          break;\n        case 'array': str = cc2str(d); break;\n        case 'string': str = d; break;\n        default: throw new Error(\"Unrecognized type \" + opts.type);\n      }\n      if(bytes[0] == 0xEF && bytes[1] == 0xBB && bytes[2] == 0xBF) str = utf8read(str.slice(3));\n      else if((opts.type == 'binary') && typeof cptable !== 'undefined' && opts.codepage)  str = cptable.utils.decode(opts.codepage, cptable.utils.encode(1252,str));\n      if(str.slice(0,19) == \"socialcalc:version:\") return ETH.to_sheet(opts.type == 'string' ? str : utf8read(str), opts);\n      return prn_to_sheet_str(str, opts);\n    }\n\n    function prn_to_workbook(d, opts) { return sheet_to_workbook(prn_to_sheet(d, opts), opts); }\n\n    function sheet_to_prn(ws) {\n      var o = [];\n      var r = safe_decode_range(ws['!ref']), cell;\n      var dense = Array.isArray(ws);\n      for(var R = r.s.r; R <= r.e.r; ++R) {\n        var oo = [];\n        for(var C = r.s.c; C <= r.e.c; ++C) {\n          var coord = encode_cell({r:R,c:C});\n          cell = dense ? (ws[R]||[])[C] : ws[coord];\n          if(!cell || cell.v == null) { oo.push(\"          \"); continue; }\n          var w = (cell.w || (format_cell(cell), cell.w) || \"\").slice(0,10);\n          while(w.length < 10) w += \" \";\n          oo.push(w + (C === 0 ? \" \" : \"\"));\n        }\n        o.push(oo.join(\"\"));\n      }\n      return o.join(\"\\n\");\n    }\n\n    return {\n      to_workbook: prn_to_workbook,\n      to_sheet: prn_to_sheet,\n      from_sheet: sheet_to_prn\n    };\n  })();\n\n  /* Excel defaults to SYLK but warns if data is not valid */\n  function read_wb_ID(d, opts) {\n    var o = opts || {}, OLD_WTF = !!o.WTF; o.WTF = true;\n    try {\n      var out = SYLK.to_workbook(d, o);\n      o.WTF = OLD_WTF;\n      return out;\n    } catch(e) {\n      o.WTF = OLD_WTF;\n      if(!e.message.match(/SYLK bad record ID/) && OLD_WTF) throw e;\n      return PRN.to_workbook(d, opts);\n    }\n  }\n  var WK_ = (function() {\n    function lotushopper(data, cb, opts) {\n      if(!data) return;\n      prep_blob(data, data.l || 0);\n      var Enum = opts.Enum || WK1Enum;\n      while(data.l < data.length) {\n        var RT = data.read_shift(2);\n        var R = Enum[RT] || Enum[0xFF];\n        var length = data.read_shift(2);\n        var tgt = data.l + length;\n        var d = (R.f||parsenoop)(data, length, opts);\n        data.l = tgt;\n        if(cb(d, R.n, RT)) return;\n      }\n    }\n\n    function lotus_to_workbook(d, opts) {\n      switch(opts.type) {\n        case 'base64': return lotus_to_workbook_buf(s2a(Base64.decode(d)), opts);\n        case 'binary': return lotus_to_workbook_buf(s2a(d), opts);\n        case 'buffer':\n        case 'array': return lotus_to_workbook_buf(d, opts);\n      }\n      throw \"Unsupported type \" + opts.type;\n    }\n\n    function lotus_to_workbook_buf(d, opts) {\n      if(!d) return d;\n      var o = opts || {};\n      if(DENSE != null && o.dense == null) o.dense = DENSE;\n      var s = ((o.dense ? [] : {})), n = \"Sheet1\", sidx = 0;\n      var sheets = {}, snames = [n];\n\n      var refguess = {s: {r:0, c:0}, e: {r:0, c:0} };\n      var sheetRows = o.sheetRows || 0;\n\n      if(d[2] == 0x02) o.Enum = WK1Enum;\n      else if(d[2] == 0x1a) o.Enum = WK3Enum;\n      else if(d[2] == 0x0e) { o.Enum = WK3Enum; o.qpro = true; d.l = 0; }\n      else throw new Error(\"Unrecognized LOTUS BOF \" + d[2]);\n      lotushopper(d, function(val, Rn, RT) {\n        if(d[2] == 0x02) switch(RT) {\n          case 0x00:\n            o.vers = val;\n            if(val >= 0x1000) o.qpro = true;\n            break;\n          case 0x06: refguess = val; break; /* RANGE */\n          case 0x0F: /* LABEL */\n            if(!o.qpro) val[1].v = val[1].v.slice(1);\n          /* falls through */\n          case 0x0D: /* INTEGER */\n          case 0x0E: /* NUMBER */\n          case 0x10: /* FORMULA */\n          case 0x33: /* STRING */\n            /* TODO: actual translation of the format code */\n            if(RT == 0x0E && (val[2] & 0x70) == 0x70 && (val[2] & 0x0F) > 1 && (val[2] & 0x0F) < 15) {\n              val[1].z = o.dateNF || SSF._table[14];\n              if(o.cellDates) { val[1].t = 'd'; val[1].v = numdate(val[1].v); }\n            }\n            if(o.dense) {\n              if(!s[val[0].r]) s[val[0].r] = [];\n              s[val[0].r][val[0].c] = val[1];\n            } else s[encode_cell(val[0])] = val[1];\n            break;\n        } else switch(RT) {\n          case 0x16: /* LABEL16 */\n            val[1].v = val[1].v.slice(1);\n          /* falls through */\n          case 0x17: /* NUMBER17 */\n          case 0x18: /* NUMBER18 */\n          case 0x19: /* FORMULA19 */\n          case 0x25: /* NUMBER25 */\n          case 0x27: /* NUMBER27 */\n          case 0x28: /* FORMULA28 */\n            if(val[3] > sidx) {\n              s[\"!ref\"] = encode_range(refguess);\n              sheets[n] = s;\n              s = (o.dense ? [] : {});\n              refguess = {s: {r:0, c:0}, e: {r:0, c:0} };\n              sidx = val[3]; n = \"Sheet\" + (sidx + 1);\n              snames.push(n);\n            }\n            if(sheetRows > 0 && val[0].r >= sheetRows) break;\n            if(o.dense) {\n              if(!s[val[0].r]) s[val[0].r] = [];\n              s[val[0].r][val[0].c] = val[1];\n            } else s[encode_cell(val[0])] = val[1];\n            if(refguess.e.c < val[0].c) refguess.e.c = val[0].c;\n            if(refguess.e.r < val[0].r) refguess.e.r = val[0].r;\n            break;\n          default: break;\n        }\n      }, o);\n\n      s[\"!ref\"] = encode_range(refguess);\n      sheets[n] = s;\n      return { SheetNames: snames, Sheets:sheets };\n    }\n\n    function parse_RANGE(blob) {\n      var o = {s:{c:0,r:0},e:{c:0,r:0}};\n      o.s.c = blob.read_shift(2);\n      o.s.r = blob.read_shift(2);\n      o.e.c = blob.read_shift(2);\n      o.e.r = blob.read_shift(2);\n      if(o.s.c == 0xFFFF) o.s.c = o.e.c = o.s.r = o.e.r = 0;\n      return o;\n    }\n\n    function parse_cell(blob, length, opts) {\n      var o = [{c:0,r:0}, {t:'n',v:0}, 0];\n      if(opts.qpro && opts.vers != 0x5120) {\n        o[0].c = blob.read_shift(1);\n        blob.l++;\n        o[0].r = blob.read_shift(2);\n        blob.l+=2;\n      } else {\n        o[2] = blob.read_shift(1);\n        o[0].c = blob.read_shift(2); o[0].r = blob.read_shift(2);\n      }\n      return o;\n    }\n\n    function parse_LABEL(blob, length, opts) {\n      var tgt = blob.l + length;\n      var o = parse_cell(blob, length, opts);\n      o[1].t = 's';\n      if(opts.vers == 0x5120) {\n        blob.l++;\n        var len = blob.read_shift(1);\n        o[1].v = blob.read_shift(len, 'utf8');\n        return o;\n      }\n      if(opts.qpro) blob.l++;\n      o[1].v = blob.read_shift(tgt - blob.l, 'cstr');\n      return o;\n    }\n\n    function parse_INTEGER(blob, length, opts) {\n      var o = parse_cell(blob, length, opts);\n      o[1].v = blob.read_shift(2, 'i');\n      return o;\n    }\n\n    function parse_NUMBER(blob, length, opts) {\n      var o = parse_cell(blob, length, opts);\n      o[1].v = blob.read_shift(8, 'f');\n      return o;\n    }\n\n    function parse_FORMULA(blob, length, opts) {\n      var tgt = blob.l + length;\n      var o = parse_cell(blob, length, opts);\n      /* TODO: formula */\n      o[1].v = blob.read_shift(8, 'f');\n      if(opts.qpro) blob.l = tgt;\n      else {\n        var flen = blob.read_shift(2);\n        blob.l += flen;\n      }\n      return o;\n    }\n\n    function parse_cell_3(blob) {\n      var o = [{c:0,r:0}, {t:'n',v:0}, 0];\n      o[0].r = blob.read_shift(2); o[3] = blob[blob.l++]; o[0].c = blob[blob.l++];\n      return o;\n    }\n\n    function parse_LABEL_16(blob, length) {\n      var o = parse_cell_3(blob, length);\n      o[1].t = 's';\n      o[1].v = blob.read_shift(length - 4, 'cstr');\n      return o;\n    }\n\n    function parse_NUMBER_18(blob, length) {\n      var o = parse_cell_3(blob, length);\n      o[1].v = blob.read_shift(2);\n      var v = o[1].v >> 1;\n      /* TODO: figure out all of the corner cases */\n      if(o[1].v & 0x1) {\n        switch(v & 0x07) {\n          case 1: v = (v >> 3) * 500; break;\n          case 2: v = (v >> 3) / 20; break;\n          case 4: v = (v >> 3) / 2000; break;\n          case 6: v = (v >> 3) / 16; break;\n          case 7: v = (v >> 3) / 64; break;\n          default: throw \"unknown NUMBER_18 encoding \" + (v & 0x07);\n        }\n      }\n      o[1].v = v;\n      return o;\n    }\n\n    function parse_NUMBER_17(blob, length) {\n      var o = parse_cell_3(blob, length);\n      var v1 = blob.read_shift(4);\n      var v2 = blob.read_shift(4);\n      var e = blob.read_shift(2);\n      if(e == 0xFFFF) { o[1].v = 0; return o; }\n      var s = e & 0x8000; e = (e&0x7FFF) - 16446;\n      o[1].v = (s*2 - 1) * ((e > 0 ? (v2 << e) : (v2 >>> -e)) + (e > -32 ? (v1 << (e + 32)) : (v1 >>> -(e + 32))));\n      return o;\n    }\n\n    function parse_FORMULA_19(blob, length) {\n      var o = parse_NUMBER_17(blob, 14);\n      blob.l += length - 14; /* TODO: formula */\n      return o;\n    }\n\n    function parse_NUMBER_25(blob, length) {\n      var o = parse_cell_3(blob, length);\n      var v1 = blob.read_shift(4);\n      o[1].v = v1 >> 6;\n      return o;\n    }\n\n    function parse_NUMBER_27(blob, length) {\n      var o = parse_cell_3(blob, length);\n      var v1 = blob.read_shift(8,'f');\n      o[1].v = v1;\n      return o;\n    }\n\n    function parse_FORMULA_28(blob, length) {\n      var o = parse_NUMBER_27(blob, 14);\n      blob.l += length - 10; /* TODO: formula */\n      return o;\n    }\n\n    var WK1Enum = {\n      0x0000: { n:\"BOF\", f:parseuint16 },\n      0x0001: { n:\"EOF\" },\n      0x0002: { n:\"CALCMODE\" },\n      0x0003: { n:\"CALCORDER\" },\n      0x0004: { n:\"SPLIT\" },\n      0x0005: { n:\"SYNC\" },\n      0x0006: { n:\"RANGE\", f:parse_RANGE },\n      0x0007: { n:\"WINDOW1\" },\n      0x0008: { n:\"COLW1\" },\n      0x0009: { n:\"WINTWO\" },\n      0x000A: { n:\"COLW2\" },\n      0x000B: { n:\"NAME\" },\n      0x000C: { n:\"BLANK\" },\n      0x000D: { n:\"INTEGER\", f:parse_INTEGER },\n      0x000E: { n:\"NUMBER\", f:parse_NUMBER },\n      0x000F: { n:\"LABEL\", f:parse_LABEL },\n      0x0010: { n:\"FORMULA\", f:parse_FORMULA },\n      0x0018: { n:\"TABLE\" },\n      0x0019: { n:\"ORANGE\" },\n      0x001A: { n:\"PRANGE\" },\n      0x001B: { n:\"SRANGE\" },\n      0x001C: { n:\"FRANGE\" },\n      0x001D: { n:\"KRANGE1\" },\n      0x0020: { n:\"HRANGE\" },\n      0x0023: { n:\"KRANGE2\" },\n      0x0024: { n:\"PROTEC\" },\n      0x0025: { n:\"FOOTER\" },\n      0x0026: { n:\"HEADER\" },\n      0x0027: { n:\"SETUP\" },\n      0x0028: { n:\"MARGINS\" },\n      0x0029: { n:\"LABELFMT\" },\n      0x002A: { n:\"TITLES\" },\n      0x002B: { n:\"SHEETJS\" },\n      0x002D: { n:\"GRAPH\" },\n      0x002E: { n:\"NGRAPH\" },\n      0x002F: { n:\"CALCCOUNT\" },\n      0x0030: { n:\"UNFORMATTED\" },\n      0x0031: { n:\"CURSORW12\" },\n      0x0032: { n:\"WINDOW\" },\n      0x0033: { n:\"STRING\", f:parse_LABEL },\n      0x0037: { n:\"PASSWORD\" },\n      0x0038: { n:\"LOCKED\" },\n      0x003C: { n:\"QUERY\" },\n      0x003D: { n:\"QUERYNAME\" },\n      0x003E: { n:\"PRINT\" },\n      0x003F: { n:\"PRINTNAME\" },\n      0x0040: { n:\"GRAPH2\" },\n      0x0041: { n:\"GRAPHNAME\" },\n      0x0042: { n:\"ZOOM\" },\n      0x0043: { n:\"SYMSPLIT\" },\n      0x0044: { n:\"NSROWS\" },\n      0x0045: { n:\"NSCOLS\" },\n      0x0046: { n:\"RULER\" },\n      0x0047: { n:\"NNAME\" },\n      0x0048: { n:\"ACOMM\" },\n      0x0049: { n:\"AMACRO\" },\n      0x004A: { n:\"PARSE\" },\n      0x00FF: { n:\"\", f:parsenoop }\n    };\n\n    var WK3Enum = {\n      0x0000: { n:\"BOF\" },\n      0x0001: { n:\"EOF\" },\n      0x0003: { n:\"??\" },\n      0x0004: { n:\"??\" },\n      0x0005: { n:\"??\" },\n      0x0006: { n:\"??\" },\n      0x0007: { n:\"??\" },\n      0x0009: { n:\"??\" },\n      0x000a: { n:\"??\" },\n      0x000b: { n:\"??\" },\n      0x000c: { n:\"??\" },\n      0x000e: { n:\"??\" },\n      0x000f: { n:\"??\" },\n      0x0010: { n:\"??\" },\n      0x0011: { n:\"??\" },\n      0x0012: { n:\"??\" },\n      0x0013: { n:\"??\" },\n      0x0015: { n:\"??\" },\n      0x0016: { n:\"LABEL16\", f:parse_LABEL_16},\n      0x0017: { n:\"NUMBER17\", f:parse_NUMBER_17 },\n      0x0018: { n:\"NUMBER18\", f:parse_NUMBER_18 },\n      0x0019: { n:\"FORMULA19\", f:parse_FORMULA_19},\n      0x001a: { n:\"??\" },\n      0x001b: { n:\"??\" },\n      0x001c: { n:\"??\" },\n      0x001d: { n:\"??\" },\n      0x001e: { n:\"??\" },\n      0x001f: { n:\"??\" },\n      0x0021: { n:\"??\" },\n      0x0025: { n:\"NUMBER25\", f:parse_NUMBER_25 },\n      0x0027: { n:\"NUMBER27\", f:parse_NUMBER_27 },\n      0x0028: { n:\"FORMULA28\", f:parse_FORMULA_28 },\n      0x00FF: { n:\"\", f:parsenoop }\n    };\n    return {\n      to_workbook: lotus_to_workbook\n    };\n  })();\n  /* Parse a list of <r> tags */\n  var parse_rs = (function parse_rs_factory() {\n    var tregex = matchtag(\"t\"), rpregex = matchtag(\"rPr\"), rregex = /<(?:\\w+:)?r>/g, rend = /<\\/(?:\\w+:)?r>/, nlregex = /\\r\\n/g;\n    /* 18.4.7 rPr CT_RPrElt */\n    var parse_rpr = function parse_rpr(rpr, intro, outro) {\n      var font = {}, cp = 65001, align = \"\";\n      var pass = false;\n      var m = rpr.match(tagregex), i = 0;\n      if(m) for(;i!=m.length; ++i) {\n        var y = parsexmltag(m[i]);\n        switch(y[0].replace(/\\w*:/g,\"\")) {\n          /* 18.8.12 condense CT_BooleanProperty */\n          /* ** not required . */\n          case '<condense': break;\n          /* 18.8.17 extend CT_BooleanProperty */\n          /* ** not required . */\n          case '<extend': break;\n          /* 18.8.36 shadow CT_BooleanProperty */\n          /* ** not required . */\n          case '<shadow':\n            if(!y.val) break;\n          /* falls through */\n          case '<shadow>':\n          case '<shadow/>': font.shadow = 1; break;\n          case '</shadow>': break;\n\n          /* 18.4.1 charset CT_IntProperty TODO */\n          case '<charset':\n            if(y.val == '1') break;\n            cp = CS2CP[parseInt(y.val, 10)];\n            break;\n\n          /* 18.4.2 outline CT_BooleanProperty TODO */\n          case '<outline':\n            if(!y.val) break;\n          /* falls through */\n          case '<outline>':\n          case '<outline/>': font.outline = 1; break;\n          case '</outline>': break;\n\n          /* 18.4.5 rFont CT_FontName */\n          case '<rFont': font.name = y.val; break;\n\n          /* 18.4.11 sz CT_FontSize */\n          case '<sz': font.sz = y.val; break;\n\n          /* 18.4.10 strike CT_BooleanProperty */\n          case '<strike':\n            if(!y.val) break;\n          /* falls through */\n          case '<strike>':\n          case '<strike/>': font.strike = 1; break;\n          case '</strike>': break;\n\n          /* 18.4.13 u CT_UnderlineProperty */\n          case '<u':\n            if(!y.val) break;\n            switch(y.val) {\n              case 'double': font.uval = \"double\"; break;\n              case 'singleAccounting': font.uval = \"single-accounting\"; break;\n              case 'doubleAccounting': font.uval = \"double-accounting\"; break;\n            }\n          /* falls through */\n          case '<u>':\n          case '<u/>': font.u = 1; break;\n          case '</u>': break;\n\n          /* 18.8.2 b */\n          case '<b':\n            if(y.val == '0') break;\n          /* falls through */\n          case '<b>':\n          case '<b/>': font.b = 1; break;\n          case '</b>': break;\n\n          /* 18.8.26 i */\n          case '<i':\n            if(y.val == '0') break;\n          /* falls through */\n          case '<i>':\n          case '<i/>': font.i = 1; break;\n          case '</i>': break;\n\n          /* 18.3.1.15 color CT_Color TODO: tint, theme, auto, indexed */\n          case '<color':\n            if(y.rgb) font.color = y.rgb.slice(2,8);\n            break;\n\n          /* 18.8.18 family ST_FontFamily */\n          case '<family': font.family = y.val; break;\n\n          /* 18.4.14 vertAlign CT_VerticalAlignFontProperty TODO */\n          case '<vertAlign': align = y.val; break;\n\n          /* 18.8.35 scheme CT_FontScheme TODO */\n          case '<scheme': break;\n\n          /* 18.2.10 extLst CT_ExtensionList ? */\n          case '<extLst': case '<extLst>': case '</extLst>': break;\n          case '<ext': pass = true; break;\n          case '</ext>': pass = false; break;\n          default:\n            if(y[0].charCodeAt(1) !== 47 && !pass) throw new Error('Unrecognized rich format ' + y[0]);\n        }\n      }\n      var style = [];\n\n      if(font.u) style.push(\"text-decoration: underline;\");\n      if(font.uval) style.push(\"text-underline-style:\" + font.uval + \";\");\n      if(font.sz) style.push(\"font-size:\" + font.sz + \"pt;\");\n      if(font.outline) style.push(\"text-effect: outline;\");\n      if(font.shadow) style.push(\"text-shadow: auto;\");\n      intro.push('<span style=\"' + style.join(\"\") + '\">');\n\n      if(font.b) { intro.push(\"<b>\"); outro.push(\"</b>\"); }\n      if(font.i) { intro.push(\"<i>\"); outro.push(\"</i>\"); }\n      if(font.strike) { intro.push(\"<s>\"); outro.push(\"</s>\"); }\n\n      if(align == \"superscript\") align = \"sup\";\n      else if(align == \"subscript\") align = \"sub\";\n      if(align != \"\") { intro.push(\"<\" + align + \">\"); outro.push(\"</\" + align + \">\"); }\n\n      outro.push(\"</span>\");\n      return cp;\n    };\n\n    /* 18.4.4 r CT_RElt */\n    function parse_r(r) {\n      var terms = [[],\"\",[]];\n      /* 18.4.12 t ST_Xstring */\n      var t = r.match(tregex)/*, cp = 65001*/;\n      if(!t) return \"\";\n      terms[1] = t[1];\n\n      var rpr = r.match(rpregex);\n      if(rpr) /*cp = */parse_rpr(rpr[1], terms[0], terms[2]);\n\n      return terms[0].join(\"\") + terms[1].replace(nlregex,'<br/>') + terms[2].join(\"\");\n    }\n    return function parse_rs(rs) {\n      return rs.replace(rregex,\"\").split(rend).map(parse_r).join(\"\");\n    };\n  })();\n\n  /* 18.4.8 si CT_Rst */\n  var sitregex = /<(?:\\w+:)?t[^>]*>([^<]*)<\\/(?:\\w+:)?t>/g, sirregex = /<(?:\\w+:)?r>/;\n  var sirphregex = /<(?:\\w+:)?rPh.*?>([\\s\\S]*?)<\\/(?:\\w+:)?rPh>/g;\n  function parse_si(x, opts) {\n    var html = opts ? opts.cellHTML : true;\n    var z = {};\n    if(!x) return null;\n    //var y;\n    /* 18.4.12 t ST_Xstring (Plaintext String) */\n    // TODO: is whitespace actually valid here?\n    if(x.match(/^\\s*<(?:\\w+:)?t[^>]*>/)) {\n      z.t = unescapexml(utf8read(x.slice(x.indexOf(\">\")+1).split(/<\\/(?:\\w+:)?t>/)[0]||\"\"));\n      z.r = utf8read(x);\n      if(html) z.h = escapehtml(z.t);\n    }\n    /* 18.4.4 r CT_RElt (Rich Text Run) */\n    else if((/*y = */x.match(sirregex))) {\n      z.r = utf8read(x);\n      z.t = unescapexml(utf8read((x.replace(sirphregex, '').match(sitregex)||[]).join(\"\").replace(tagregex,\"\")));\n      if(html) z.h = parse_rs(z.r);\n    }\n    /* 18.4.3 phoneticPr CT_PhoneticPr (TODO: needed for Asian support) */\n    /* 18.4.6 rPh CT_PhoneticRun (TODO: needed for Asian support) */\n    return z;\n  }\n\n  /* 18.4 Shared String Table */\n  var sstr0 = /<(?:\\w+:)?sst([^>]*)>([\\s\\S]*)<\\/(?:\\w+:)?sst>/;\n  var sstr1 = /<(?:\\w+:)?(?:si|sstItem)>/g;\n  var sstr2 = /<\\/(?:\\w+:)?(?:si|sstItem)>/;\n  function parse_sst_xml(data, opts) {\n    var s = ([]), ss = \"\";\n    if(!data) return s;\n    /* 18.4.9 sst CT_Sst */\n    var sst = data.match(sstr0);\n    if(sst) {\n      ss = sst[2].replace(sstr1,\"\").split(sstr2);\n      for(var i = 0; i != ss.length; ++i) {\n        var o = parse_si(ss[i].trim(), opts);\n        if(o != null) s[s.length] = o;\n      }\n      sst = parsexmltag(sst[1]); s.Count = sst.count; s.Unique = sst.uniqueCount;\n    }\n    return s;\n  }\n\n  RELS.SST = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings\";\n  var straywsregex = /^\\s|\\s$|[\\t\\n\\r]/;\n  function write_sst_xml(sst, opts) {\n    if(!opts.bookSST) return \"\";\n    var o = [XML_HEADER];\n    o[o.length] = (writextag('sst', null, {\n      xmlns: XMLNS.main[0],\n      count: sst.Count,\n      uniqueCount: sst.Unique\n    }));\n    for(var i = 0; i != sst.length; ++i) { if(sst[i] == null) continue;\n      var s = sst[i];\n      var sitag = \"<si>\";\n      if(s.r) sitag += s.r;\n      else {\n        sitag += \"<t\";\n        if(!s.t) s.t = \"\";\n        if(s.t.match(straywsregex)) sitag += ' xml:space=\"preserve\"';\n        sitag += \">\" + escapexml(s.t) + \"</t>\";\n      }\n      sitag += \"</si>\";\n      o[o.length] = (sitag);\n    }\n    if(o.length>2){ o[o.length] = ('</sst>'); o[1]=o[1].replace(\"/>\",\">\"); }\n    return o.join(\"\");\n  }\n  /* [MS-XLSB] 2.4.221 BrtBeginSst */\n  function parse_BrtBeginSst(data) {\n    return [data.read_shift(4), data.read_shift(4)];\n  }\n\n  /* [MS-XLSB] 2.1.7.45 Shared Strings */\n  function parse_sst_bin(data, opts) {\n    var s = ([]);\n    var pass = false;\n    recordhopper(data, function hopper_sst(val, R_n, RT) {\n      switch(RT) {\n        case 0x009F: /* 'BrtBeginSst' */\n          s.Count = val[0]; s.Unique = val[1]; break;\n        case 0x0013: /* 'BrtSSTItem' */\n          s.push(val); break;\n        case 0x00A0: /* 'BrtEndSst' */\n          return true;\n\n        case 0x0023: /* 'BrtFRTBegin' */\n          pass = true; break;\n        case 0x0024: /* 'BrtFRTEnd' */\n          pass = false; break;\n\n        default:\n          if(R_n.indexOf(\"Begin\") > 0){/* empty */}\n          else if(R_n.indexOf(\"End\") > 0){/* empty */}\n          if(!pass || opts.WTF) throw new Error(\"Unexpected record \" + RT + \" \" + R_n);\n      }\n    });\n    return s;\n  }\n\n  function write_BrtBeginSst(sst, o) {\n    if(!o) o = new_buf(8);\n    o.write_shift(4, sst.Count);\n    o.write_shift(4, sst.Unique);\n    return o;\n  }\n\n  var write_BrtSSTItem = write_RichStr;\n\n  function write_sst_bin(sst) {\n    var ba = buf_array();\n    write_record(ba, \"BrtBeginSst\", write_BrtBeginSst(sst));\n    for(var i = 0; i < sst.length; ++i) write_record(ba, \"BrtSSTItem\", write_BrtSSTItem(sst[i]));\n    /* FRTSST */\n    write_record(ba, \"BrtEndSst\");\n    return ba.end();\n  }\n  function _JS2ANSI(str) {\n    if(typeof cptable !== 'undefined') return cptable.utils.encode(current_ansi, str);\n    var o = [], oo = str.split(\"\");\n    for(var i = 0; i < oo.length; ++i) o[i] = oo[i].charCodeAt(0);\n    return o;\n  }\n\n  /* [MS-OFFCRYPTO] 2.1.4 Version */\n  function parse_CRYPTOVersion(blob, length) {\n    var o = {};\n    o.Major = blob.read_shift(2);\n    o.Minor = blob.read_shift(2);\n    if(length >= 4) blob.l += length - 4;\n    return o;\n  }\n\n  /* [MS-OFFCRYPTO] 2.1.5 DataSpaceVersionInfo */\n  function parse_DataSpaceVersionInfo(blob) {\n    var o = {};\n    o.id = blob.read_shift(0, 'lpp4');\n    o.R = parse_CRYPTOVersion(blob, 4);\n    o.U = parse_CRYPTOVersion(blob, 4);\n    o.W = parse_CRYPTOVersion(blob, 4);\n    return o;\n  }\n\n  /* [MS-OFFCRYPTO] 2.1.6.1 DataSpaceMapEntry Structure */\n  function parse_DataSpaceMapEntry(blob) {\n    var len = blob.read_shift(4);\n    var end = blob.l + len - 4;\n    var o = {};\n    var cnt = blob.read_shift(4);\n    var comps = [];\n    /* [MS-OFFCRYPTO] 2.1.6.2 DataSpaceReferenceComponent Structure */\n    while(cnt-- > 0) comps.push({ t: blob.read_shift(4), v: blob.read_shift(0, 'lpp4') });\n    o.name = blob.read_shift(0, 'lpp4');\n    o.comps = comps;\n    if(blob.l != end) throw new Error(\"Bad DataSpaceMapEntry: \" + blob.l + \" != \" + end);\n    return o;\n  }\n\n  /* [MS-OFFCRYPTO] 2.1.6 DataSpaceMap */\n  function parse_DataSpaceMap(blob) {\n    var o = [];\n    blob.l += 4; // must be 0x8\n    var cnt = blob.read_shift(4);\n    while(cnt-- > 0) o.push(parse_DataSpaceMapEntry(blob));\n    return o;\n  }\n\n  /* [MS-OFFCRYPTO] 2.1.7 DataSpaceDefinition */\n  function parse_DataSpaceDefinition(blob) {\n    var o = [];\n    blob.l += 4; // must be 0x8\n    var cnt = blob.read_shift(4);\n    while(cnt-- > 0) o.push(blob.read_shift(0, 'lpp4'));\n    return o;\n  }\n\n  /* [MS-OFFCRYPTO] 2.1.8 DataSpaceDefinition */\n  function parse_TransformInfoHeader(blob) {\n    var o = {};\n    /*var len = */blob.read_shift(4);\n    blob.l += 4; // must be 0x1\n    o.id = blob.read_shift(0, 'lpp4');\n    o.name = blob.read_shift(0, 'lpp4');\n    o.R = parse_CRYPTOVersion(blob, 4);\n    o.U = parse_CRYPTOVersion(blob, 4);\n    o.W = parse_CRYPTOVersion(blob, 4);\n    return o;\n  }\n\n  function parse_Primary(blob) {\n    /* [MS-OFFCRYPTO] 2.2.6 IRMDSTransformInfo */\n    var hdr = parse_TransformInfoHeader(blob);\n    /* [MS-OFFCRYPTO] 2.1.9 EncryptionTransformInfo */\n    hdr.ename = blob.read_shift(0, '8lpp4');\n    hdr.blksz = blob.read_shift(4);\n    hdr.cmode = blob.read_shift(4);\n    if(blob.read_shift(4) != 0x04) throw new Error(\"Bad !Primary record\");\n    return hdr;\n  }\n\n  /* [MS-OFFCRYPTO] 2.3.2 Encryption Header */\n  function parse_EncryptionHeader(blob, length) {\n    var tgt = blob.l + length;\n    var o = {};\n    o.Flags = (blob.read_shift(4) & 0x3F);\n    blob.l += 4;\n    o.AlgID = blob.read_shift(4);\n    var valid = false;\n    switch(o.AlgID) {\n      case 0x660E: case 0x660F: case 0x6610: valid = (o.Flags == 0x24); break;\n      case 0x6801: valid = (o.Flags == 0x04); break;\n      case 0: valid = (o.Flags == 0x10 || o.Flags == 0x04 || o.Flags == 0x24); break;\n      default: throw 'Unrecognized encryption algorithm: ' + o.AlgID;\n    }\n    if(!valid) throw new Error(\"Encryption Flags/AlgID mismatch\");\n    o.AlgIDHash = blob.read_shift(4);\n    o.KeySize = blob.read_shift(4);\n    o.ProviderType = blob.read_shift(4);\n    blob.l += 8;\n    o.CSPName = blob.read_shift((tgt-blob.l)>>1, 'utf16le');\n    blob.l = tgt;\n    return o;\n  }\n\n  /* [MS-OFFCRYPTO] 2.3.3 Encryption Verifier */\n  function parse_EncryptionVerifier(blob, length) {\n    var o = {}, tgt = blob.l + length;\n    blob.l += 4; // SaltSize must be 0x10\n    o.Salt = blob.slice(blob.l, blob.l+16); blob.l += 16;\n    o.Verifier = blob.slice(blob.l, blob.l+16); blob.l += 16;\n    /*var sz = */blob.read_shift(4);\n    o.VerifierHash = blob.slice(blob.l, tgt); blob.l = tgt;\n    return o;\n  }\n\n  /* [MS-OFFCRYPTO] 2.3.4.* EncryptionInfo Stream */\n  function parse_EncryptionInfo(blob) {\n    var vers = parse_CRYPTOVersion(blob);\n    switch(vers.Minor) {\n      case 0x02: return [vers.Minor, parse_EncInfoStd(blob, vers)];\n      case 0x03: return [vers.Minor, parse_EncInfoExt(blob, vers)];\n      case 0x04: return [vers.Minor, parse_EncInfoAgl(blob, vers)];\n    }\n    throw new Error(\"ECMA-376 Encrypted file unrecognized Version: \" + vers.Minor);\n  }\n\n  /* [MS-OFFCRYPTO] 2.3.4.5  EncryptionInfo Stream (Standard Encryption) */\n  function parse_EncInfoStd(blob) {\n    var flags = blob.read_shift(4);\n    if((flags & 0x3F) != 0x24) throw new Error(\"EncryptionInfo mismatch\");\n    var sz = blob.read_shift(4);\n    //var tgt = blob.l + sz;\n    var hdr = parse_EncryptionHeader(blob, sz);\n    var verifier = parse_EncryptionVerifier(blob, blob.length - blob.l);\n    return { t:\"Std\", h:hdr, v:verifier };\n  }\n  /* [MS-OFFCRYPTO] 2.3.4.6  EncryptionInfo Stream (Extensible Encryption) */\n  function parse_EncInfoExt() { throw new Error(\"File is password-protected: ECMA-376 Extensible\"); }\n  /* [MS-OFFCRYPTO] 2.3.4.10 EncryptionInfo Stream (Agile Encryption) */\n  function parse_EncInfoAgl(blob) {\n    var KeyData = [\"saltSize\",\"blockSize\",\"keyBits\",\"hashSize\",\"cipherAlgorithm\",\"cipherChaining\",\"hashAlgorithm\",\"saltValue\"];\n    blob.l+=4;\n    var xml = blob.read_shift(blob.length - blob.l, 'utf8');\n    var o = {};\n    xml.replace(tagregex, function xml_agile(x) {\n      var y = parsexmltag(x);\n      switch(strip_ns(y[0])) {\n        case '<?xml': break;\n        case '<encryption': case '</encryption>': break;\n        case '<keyData': KeyData.forEach(function(k) { o[k] = y[k]; }); break;\n        case '<dataIntegrity': o.encryptedHmacKey = y.encryptedHmacKey; o.encryptedHmacValue = y.encryptedHmacValue; break;\n        case '<keyEncryptors>': case '<keyEncryptors': o.encs = []; break;\n        case '</keyEncryptors>': break;\n\n        case '<keyEncryptor': o.uri = y.uri; break;\n        case '</keyEncryptor>': break;\n        case '<encryptedKey': o.encs.push(y); break;\n        default: throw y[0];\n      }\n    });\n    return o;\n  }\n\n  /* [MS-OFFCRYPTO] 2.3.5.1 RC4 CryptoAPI Encryption Header */\n  function parse_RC4CryptoHeader(blob, length) {\n    var o = {};\n    var vers = o.EncryptionVersionInfo = parse_CRYPTOVersion(blob, 4); length -= 4;\n    if(vers.Minor != 2) throw new Error('unrecognized minor version code: ' + vers.Minor);\n    if(vers.Major > 4 || vers.Major < 2) throw new Error('unrecognized major version code: ' + vers.Major);\n    o.Flags = blob.read_shift(4); length -= 4;\n    var sz = blob.read_shift(4); length -= 4;\n    o.EncryptionHeader = parse_EncryptionHeader(blob, sz); length -= sz;\n    o.EncryptionVerifier = parse_EncryptionVerifier(blob, length);\n    return o;\n  }\n  /* [MS-OFFCRYPTO] 2.3.6.1 RC4 Encryption Header */\n  function parse_RC4Header(blob) {\n    var o = {};\n    var vers = o.EncryptionVersionInfo = parse_CRYPTOVersion(blob, 4);\n    if(vers.Major != 1 || vers.Minor != 1) throw 'unrecognized version code ' + vers.Major + ' : ' + vers.Minor;\n    o.Salt = blob.read_shift(16);\n    o.EncryptedVerifier = blob.read_shift(16);\n    o.EncryptedVerifierHash = blob.read_shift(16);\n    return o;\n  }\n\n  /* [MS-OFFCRYPTO] 2.3.7.1 Binary Document Password Verifier Derivation */\n  function crypto_CreatePasswordVerifier_Method1(Password) {\n    var Verifier = 0x0000, PasswordArray;\n    var PasswordDecoded = _JS2ANSI(Password);\n    var len = PasswordDecoded.length + 1, i, PasswordByte;\n    var Intermediate1, Intermediate2, Intermediate3;\n    PasswordArray = new_raw_buf(len);\n    PasswordArray[0] = PasswordDecoded.length;\n    for(i = 1; i != len; ++i) PasswordArray[i] = PasswordDecoded[i-1];\n    for(i = len-1; i >= 0; --i) {\n      PasswordByte = PasswordArray[i];\n      Intermediate1 = ((Verifier & 0x4000) === 0x0000) ? 0 : 1;\n      Intermediate2 = (Verifier << 1) & 0x7FFF;\n      Intermediate3 = Intermediate1 | Intermediate2;\n      Verifier = Intermediate3 ^ PasswordByte;\n    }\n    return Verifier ^ 0xCE4B;\n  }\n\n  /* [MS-OFFCRYPTO] 2.3.7.2 Binary Document XOR Array Initialization */\n  var crypto_CreateXorArray_Method1 = (function() {\n    var PadArray = [0xBB, 0xFF, 0xFF, 0xBA, 0xFF, 0xFF, 0xB9, 0x80, 0x00, 0xBE, 0x0F, 0x00, 0xBF, 0x0F, 0x00];\n    var InitialCode = [0xE1F0, 0x1D0F, 0xCC9C, 0x84C0, 0x110C, 0x0E10, 0xF1CE, 0x313E, 0x1872, 0xE139, 0xD40F, 0x84F9, 0x280C, 0xA96A, 0x4EC3];\n    var XorMatrix = [0xAEFC, 0x4DD9, 0x9BB2, 0x2745, 0x4E8A, 0x9D14, 0x2A09, 0x7B61, 0xF6C2, 0xFDA5, 0xEB6B, 0xC6F7, 0x9DCF, 0x2BBF, 0x4563, 0x8AC6, 0x05AD, 0x0B5A, 0x16B4, 0x2D68, 0x5AD0, 0x0375, 0x06EA, 0x0DD4, 0x1BA8, 0x3750, 0x6EA0, 0xDD40, 0xD849, 0xA0B3, 0x5147, 0xA28E, 0x553D, 0xAA7A, 0x44D5, 0x6F45, 0xDE8A, 0xAD35, 0x4A4B, 0x9496, 0x390D, 0x721A, 0xEB23, 0xC667, 0x9CEF, 0x29FF, 0x53FE, 0xA7FC, 0x5FD9, 0x47D3, 0x8FA6, 0x0F6D, 0x1EDA, 0x3DB4, 0x7B68, 0xF6D0, 0xB861, 0x60E3, 0xC1C6, 0x93AD, 0x377B, 0x6EF6, 0xDDEC, 0x45A0, 0x8B40, 0x06A1, 0x0D42, 0x1A84, 0x3508, 0x6A10, 0xAA51, 0x4483, 0x8906, 0x022D, 0x045A, 0x08B4, 0x1168, 0x76B4, 0xED68, 0xCAF1, 0x85C3, 0x1BA7, 0x374E, 0x6E9C, 0x3730, 0x6E60, 0xDCC0, 0xA9A1, 0x4363, 0x86C6, 0x1DAD, 0x3331, 0x6662, 0xCCC4, 0x89A9, 0x0373, 0x06E6, 0x0DCC, 0x1021, 0x2042, 0x4084, 0x8108, 0x1231, 0x2462, 0x48C4];\n    var Ror = function(Byte) { return ((Byte/2) | (Byte*128)) & 0xFF; };\n    var XorRor = function(byte1, byte2) { return Ror(byte1 ^ byte2); };\n    var CreateXorKey_Method1 = function(Password) {\n      var XorKey = InitialCode[Password.length - 1];\n      var CurrentElement = 0x68;\n      for(var i = Password.length-1; i >= 0; --i) {\n        var Char = Password[i];\n        for(var j = 0; j != 7; ++j) {\n          if(Char & 0x40) XorKey ^= XorMatrix[CurrentElement];\n          Char *= 2; --CurrentElement;\n        }\n      }\n      return XorKey;\n    };\n    return function(password) {\n      var Password = _JS2ANSI(password);\n      var XorKey = CreateXorKey_Method1(Password);\n      var Index = Password.length;\n      var ObfuscationArray = new_raw_buf(16);\n      for(var i = 0; i != 16; ++i) ObfuscationArray[i] = 0x00;\n      var Temp, PasswordLastChar, PadIndex;\n      if((Index & 1) === 1) {\n        Temp = XorKey >> 8;\n        ObfuscationArray[Index] = XorRor(PadArray[0], Temp);\n        --Index;\n        Temp = XorKey & 0xFF;\n        PasswordLastChar = Password[Password.length - 1];\n        ObfuscationArray[Index] = XorRor(PasswordLastChar, Temp);\n      }\n      while(Index > 0) {\n        --Index;\n        Temp = XorKey >> 8;\n        ObfuscationArray[Index] = XorRor(Password[Index], Temp);\n        --Index;\n        Temp = XorKey & 0xFF;\n        ObfuscationArray[Index] = XorRor(Password[Index], Temp);\n      }\n      Index = 15;\n      PadIndex = 15 - Password.length;\n      while(PadIndex > 0) {\n        Temp = XorKey >> 8;\n        ObfuscationArray[Index] = XorRor(PadArray[PadIndex], Temp);\n        --Index;\n        --PadIndex;\n        Temp = XorKey & 0xFF;\n        ObfuscationArray[Index] = XorRor(Password[Index], Temp);\n        --Index;\n        --PadIndex;\n      }\n      return ObfuscationArray;\n    };\n  })();\n\n  /* [MS-OFFCRYPTO] 2.3.7.3 Binary Document XOR Data Transformation Method 1 */\n  var crypto_DecryptData_Method1 = function(password, Data, XorArrayIndex, XorArray, O) {\n    /* If XorArray is set, use it; if O is not set, make changes in-place */\n    if(!O) O = Data;\n    if(!XorArray) XorArray = crypto_CreateXorArray_Method1(password);\n    var Index, Value;\n    for(Index = 0; Index != Data.length; ++Index) {\n      Value = Data[Index];\n      Value ^= XorArray[XorArrayIndex];\n      Value = ((Value>>5) | (Value<<3)) & 0xFF;\n      O[Index] = Value;\n      ++XorArrayIndex;\n    }\n    return [O, XorArrayIndex, XorArray];\n  };\n\n  var crypto_MakeXorDecryptor = function(password) {\n    var XorArrayIndex = 0, XorArray = crypto_CreateXorArray_Method1(password);\n    return function(Data) {\n      var O = crypto_DecryptData_Method1(\"\", Data, XorArrayIndex, XorArray);\n      XorArrayIndex = O[1];\n      return O[0];\n    };\n  };\n\n  /* 2.5.343 */\n  function parse_XORObfuscation(blob, length, opts, out) {\n    var o = ({ key: parseuint16(blob), verificationBytes: parseuint16(blob) });\n    if(opts.password) o.verifier = crypto_CreatePasswordVerifier_Method1(opts.password);\n    out.valid = o.verificationBytes === o.verifier;\n    if(out.valid) out.insitu = crypto_MakeXorDecryptor(opts.password);\n    return o;\n  }\n\n  /* 2.4.117 */\n  function parse_FilePassHeader(blob, length, oo) {\n    var o = oo || {}; o.Info = blob.read_shift(2); blob.l -= 2;\n    if(o.Info === 1) o.Data = parse_RC4Header(blob, length);\n    else o.Data = parse_RC4CryptoHeader(blob, length);\n    return o;\n  }\n  function parse_FilePass(blob, length, opts) {\n    var o = ({ Type: opts.biff >= 8 ? blob.read_shift(2) : 0 }); /* wEncryptionType */\n    if(o.Type) parse_FilePassHeader(blob, length-2, o);\n    else parse_XORObfuscation(blob, opts.biff >= 8 ? length : length - 2, opts, o);\n    return o;\n  }\n\n\n  var RTF = (function() {\n    function rtf_to_sheet(d, opts) {\n      switch(opts.type) {\n        case 'base64': return rtf_to_sheet_str(Base64.decode(d), opts);\n        case 'binary': return rtf_to_sheet_str(d, opts);\n        case 'buffer': return rtf_to_sheet_str(d.toString('binary'), opts);\n        case 'array':  return rtf_to_sheet_str(cc2str(d), opts);\n      }\n      throw new Error(\"Unrecognized type \" + opts.type);\n    }\n\n    function rtf_to_sheet_str(str, opts) {\n      var o = opts || {};\n      var ws = o.dense ? ([]) : ({});\n      var range = ({s: {c:0, r:0}, e: {c:0, r:0}});\n\n      // TODO: parse\n      if(!str.match(/\\\\trowd/)) throw new Error(\"RTF missing table\");\n\n      ws['!ref'] = encode_range(range);\n      return ws;\n    }\n\n    function rtf_to_workbook(d, opts) { return sheet_to_workbook(rtf_to_sheet(d, opts), opts); }\n\n    /* TODO: this is a stub */\n    function sheet_to_rtf(ws) {\n      var o = [\"{\\\\rtf1\\\\ansi\"];\n      var r = safe_decode_range(ws['!ref']), cell;\n      var dense = Array.isArray(ws);\n      for(var R = r.s.r; R <= r.e.r; ++R) {\n        o.push(\"\\\\trowd\\\\trautofit1\");\n        for(var C = r.s.c; C <= r.e.c; ++C) o.push(\"\\\\cellx\" + (C+1));\n        o.push(\"\\\\pard\\\\intbl\");\n        for(C = r.s.c; C <= r.e.c; ++C) {\n          var coord = encode_cell({r:R,c:C});\n          cell = dense ? (ws[R]||[])[C]: ws[coord];\n          if(!cell || cell.v == null && (!cell.f || cell.F)) continue;\n          o.push(\" \" + (cell.w || (format_cell(cell), cell.w)));\n          o.push(\"\\\\cell\");\n        }\n        o.push(\"\\\\pard\\\\intbl\\\\row\");\n      }\n      return o.join(\"\") + \"}\";\n    }\n\n    return {\n      to_workbook: rtf_to_workbook,\n      to_sheet: rtf_to_sheet,\n      from_sheet: sheet_to_rtf\n    };\n  })();\n  function hex2RGB(h) {\n    var o = h.slice(h[0]===\"#\"?1:0).slice(0,6);\n    return [parseInt(o.slice(0,2),16),parseInt(o.slice(2,4),16),parseInt(o.slice(4,6),16)];\n  }\n  function rgb2Hex(rgb) {\n    for(var i=0,o=1; i!=3; ++i) o = o*256 + (rgb[i]>255?255:rgb[i]<0?0:rgb[i]);\n    return o.toString(16).toUpperCase().slice(1);\n  }\n\n  function rgb2HSL(rgb) {\n    var R = rgb[0]/255, G = rgb[1]/255, B=rgb[2]/255;\n    var M = Math.max(R, G, B), m = Math.min(R, G, B), C = M - m;\n    if(C === 0) return [0, 0, R];\n\n    var H6 = 0, S = 0, L2 = (M + m);\n    S = C / (L2 > 1 ? 2 - L2 : L2);\n    switch(M){\n      case R: H6 = ((G - B) / C + 6)%6; break;\n      case G: H6 = ((B - R) / C + 2); break;\n      case B: H6 = ((R - G) / C + 4); break;\n    }\n    return [H6 / 6, S, L2 / 2];\n  }\n\n  function hsl2RGB(hsl){\n    var H = hsl[0], S = hsl[1], L = hsl[2];\n    var C = S * 2 * (L < 0.5 ? L : 1 - L), m = L - C/2;\n    var rgb = [m,m,m], h6 = 6*H;\n\n    var X;\n    if(S !== 0) switch(h6|0) {\n      case 0: case 6: X = C * h6; rgb[0] += C; rgb[1] += X; break;\n      case 1: X = C * (2 - h6);   rgb[0] += X; rgb[1] += C; break;\n      case 2: X = C * (h6 - 2);   rgb[1] += C; rgb[2] += X; break;\n      case 3: X = C * (4 - h6);   rgb[1] += X; rgb[2] += C; break;\n      case 4: X = C * (h6 - 4);   rgb[2] += C; rgb[0] += X; break;\n      case 5: X = C * (6 - h6);   rgb[2] += X; rgb[0] += C; break;\n    }\n    for(var i = 0; i != 3; ++i) rgb[i] = Math.round(rgb[i]*255);\n    return rgb;\n  }\n\n  /* 18.8.3 bgColor tint algorithm */\n  function rgb_tint(hex, tint) {\n    if(tint === 0) return hex;\n    var hsl = rgb2HSL(hex2RGB(hex));\n    if (tint < 0) hsl[2] = hsl[2] * (1 + tint);\n    else hsl[2] = 1 - (1 - hsl[2]) * (1 - tint);\n    return rgb2Hex(hsl2RGB(hsl));\n  }\n\n  /* 18.3.1.13 width calculations */\n  /* [MS-OI29500] 2.1.595 Column Width & Formatting */\n  var DEF_MDW = 6, MAX_MDW = 15, MIN_MDW = 1, MDW = DEF_MDW;\n  function width2px(width) { return Math.floor(( width + (Math.round(128/MDW))/256 )* MDW ); }\n  function px2char(px) { return (Math.floor((px - 5)/MDW * 100 + 0.5))/100; }\n  function char2width(chr) { return (Math.round((chr * MDW + 5)/MDW*256))/256; }\n//function px2char_(px) { return (((px - 5)/MDW * 100 + 0.5))/100; }\n//function char2width_(chr) { return (((chr * MDW + 5)/MDW*256))/256; }\n  function cycle_width(collw) { return char2width(px2char(width2px(collw))); }\n  /* XLSX/XLSB/XLS specify width in units of MDW */\n  function find_mdw_colw(collw) {\n    var delta = Math.abs(collw - cycle_width(collw)), _MDW = MDW;\n    if(delta > 0.005) for(MDW=MIN_MDW; MDW<MAX_MDW; ++MDW) if(Math.abs(collw - cycle_width(collw)) <= delta) { delta = Math.abs(collw - cycle_width(collw)); _MDW = MDW; }\n    MDW = _MDW;\n  }\n  /* XLML specifies width in terms of pixels */\n  /*function find_mdw_wpx(wpx) {\n\tvar delta = Infinity, guess = 0, _MDW = MIN_MDW;\n\tfor(MDW=MIN_MDW; MDW<MAX_MDW; ++MDW) {\n\t\tguess = char2width_(px2char_(wpx))*256;\n\t\tguess = (guess) % 1;\n\t\tif(guess > 0.5) guess--;\n\t\tif(Math.abs(guess) < delta) { delta = Math.abs(guess); _MDW = MDW; }\n\t}\n\tMDW = _MDW;\n}*/\n\n  function process_col(coll) {\n    if(coll.width) {\n      coll.wpx = width2px(coll.width);\n      coll.wch = px2char(coll.wpx);\n      coll.MDW = MDW;\n    } else if(coll.wpx) {\n      coll.wch = px2char(coll.wpx);\n      coll.width = char2width(coll.wch);\n      coll.MDW = MDW;\n    } else if(typeof coll.wch == 'number') {\n      coll.width = char2width(coll.wch);\n      coll.wpx = width2px(coll.width);\n      coll.MDW = MDW;\n    }\n    if(coll.customWidth) delete coll.customWidth;\n  }\n\n  var DEF_PPI = 96, PPI = DEF_PPI;\n  function px2pt(px) { return px * 96 / PPI; }\n  function pt2px(pt) { return pt * PPI / 96; }\n\n  /* [MS-EXSPXML3] 2.4.54 ST_enmPattern */\n  var XLMLPatternTypeMap = {\n    \"None\": \"none\",\n    \"Solid\": \"solid\",\n    \"Gray50\": \"mediumGray\",\n    \"Gray75\": \"darkGray\",\n    \"Gray25\": \"lightGray\",\n    \"HorzStripe\": \"darkHorizontal\",\n    \"VertStripe\": \"darkVertical\",\n    \"ReverseDiagStripe\": \"darkDown\",\n    \"DiagStripe\": \"darkUp\",\n    \"DiagCross\": \"darkGrid\",\n    \"ThickDiagCross\": \"darkTrellis\",\n    \"ThinHorzStripe\": \"lightHorizontal\",\n    \"ThinVertStripe\": \"lightVertical\",\n    \"ThinReverseDiagStripe\": \"lightDown\",\n    \"ThinHorzCross\": \"lightGrid\"\n  };\n\n  /* 18.8.5 borders CT_Borders */\n  function parse_borders(t, styles, themes, opts) {\n    styles.Borders = [];\n    var border = {}/*, sub_border = {}*/;\n    var pass = false;\n    t[0].match(tagregex).forEach(function(x) {\n      var y = parsexmltag(x);\n      switch(strip_ns(y[0])) {\n        case '<borders': case '<borders>': case '</borders>': break;\n\n        /* 18.8.4 border CT_Border */\n        case '<border': case '<border>': case '<border/>':\n          border = {};\n          if (y.diagonalUp) { border.diagonalUp = y.diagonalUp; }\n          if (y.diagonalDown) { border.diagonalDown = y.diagonalDown; }\n          styles.Borders.push(border);\n          break;\n        case '</border>': break;\n\n        /* note: not in spec, appears to be CT_BorderPr */\n        case '<left/>': break;\n        case '<left': case '<left>': break;\n        case '</left>': break;\n\n        /* note: not in spec, appears to be CT_BorderPr */\n        case '<right/>': break;\n        case '<right': case '<right>': break;\n        case '</right>': break;\n\n        /* 18.8.43 top CT_BorderPr */\n        case '<top/>': break;\n        case '<top': case '<top>': break;\n        case '</top>': break;\n\n        /* 18.8.6 bottom CT_BorderPr */\n        case '<bottom/>': break;\n        case '<bottom': case '<bottom>': break;\n        case '</bottom>': break;\n\n        /* 18.8.13 diagonal CT_BorderPr */\n        case '<diagonal': case '<diagonal>': case '<diagonal/>': break;\n        case '</diagonal>': break;\n\n        /* 18.8.25 horizontal CT_BorderPr */\n        case '<horizontal': case '<horizontal>': case '<horizontal/>': break;\n        case '</horizontal>': break;\n\n        /* 18.8.44 vertical CT_BorderPr */\n        case '<vertical': case '<vertical>': case '<vertical/>': break;\n        case '</vertical>': break;\n\n        /* 18.8.37 start CT_BorderPr */\n        case '<start': case '<start>': case '<start/>': break;\n        case '</start>': break;\n\n        /* 18.8.16 end CT_BorderPr */\n        case '<end': case '<end>': case '<end/>': break;\n        case '</end>': break;\n\n        /* 18.8.? color CT_Color */\n        case '<color': case '<color>': break;\n        case '<color/>': case '</color>': break;\n\n        /* 18.2.10 extLst CT_ExtensionList ? */\n        case '<extLst': case '<extLst>': case '</extLst>': break;\n        case '<ext': pass = true; break;\n        case '</ext>': pass = false; break;\n        default: if(opts && opts.WTF) {\n          if(!pass) throw new Error('unrecognized ' + y[0] + ' in borders');\n        }\n      }\n    });\n  }\n\n  /* 18.8.21 fills CT_Fills */\n  function parse_fills(t, styles, themes, opts) {\n    styles.Fills = [];\n    var fill = {};\n    var pass = false;\n    t[0].match(tagregex).forEach(function(x) {\n      var y = parsexmltag(x);\n      switch(strip_ns(y[0])) {\n        case '<fills': case '<fills>': case '</fills>': break;\n\n        /* 18.8.20 fill CT_Fill */\n        case '<fill>': case '<fill': case '<fill/>':\n          fill = {}; styles.Fills.push(fill); break;\n        case '</fill>': break;\n\n        /* 18.8.24 gradientFill CT_GradientFill */\n        case '<gradientFill>': break;\n        case '<gradientFill':\n        case '</gradientFill>': styles.Fills.push(fill); fill = {}; break;\n\n        /* 18.8.32 patternFill CT_PatternFill */\n        case '<patternFill': case '<patternFill>':\n          if(y.patternType) fill.patternType = y.patternType;\n          break;\n        case '<patternFill/>': case '</patternFill>': break;\n\n        /* 18.8.3 bgColor CT_Color */\n        case '<bgColor':\n          if(!fill.bgColor) fill.bgColor = {};\n          if(y.indexed) fill.bgColor.indexed = parseInt(y.indexed, 10);\n          if(y.theme) fill.bgColor.theme = parseInt(y.theme, 10);\n          if(y.tint) fill.bgColor.tint = parseFloat(y.tint);\n          /* Excel uses ARGB strings */\n          if(y.rgb) fill.bgColor.rgb = y.rgb.slice(-6);\n          break;\n        case '<bgColor/>': case '</bgColor>': break;\n\n        /* 18.8.19 fgColor CT_Color */\n        case '<fgColor':\n          if(!fill.fgColor) fill.fgColor = {};\n          if(y.theme) fill.fgColor.theme = parseInt(y.theme, 10);\n          if(y.tint) fill.fgColor.tint = parseFloat(y.tint);\n          /* Excel uses ARGB strings */\n          if(y.rgb) fill.fgColor.rgb = y.rgb.slice(-6);\n          break;\n        case '<fgColor/>': case '</fgColor>': break;\n\n        /* 18.8.38 stop CT_GradientStop */\n        case '<stop': case '<stop/>': break;\n        case '</stop>': break;\n\n        /* 18.8.? color CT_Color */\n        case '<color': case '<color/>': break;\n        case '</color>': break;\n\n        /* 18.2.10 extLst CT_ExtensionList ? */\n        case '<extLst': case '<extLst>': case '</extLst>': break;\n        case '<ext': pass = true; break;\n        case '</ext>': pass = false; break;\n        default: if(opts && opts.WTF) {\n          if(!pass) throw new Error('unrecognized ' + y[0] + ' in fills');\n        }\n      }\n    });\n  }\n\n  /* 18.8.23 fonts CT_Fonts */\n  function parse_fonts(t, styles, themes, opts) {\n    styles.Fonts = [];\n    var font = {};\n    var pass = false;\n    t[0].match(tagregex).forEach(function(x) {\n      var y = parsexmltag(x);\n      switch(strip_ns(y[0])) {\n        case '<fonts': case '<fonts>': case '</fonts>': break;\n\n        /* 18.8.22 font CT_Font */\n        case '<font': case '<font>': break;\n        case '</font>': case '<font/>':\n          styles.Fonts.push(font);\n          font = {};\n          break;\n\n        /* 18.8.29 name CT_FontName */\n        case '<name': if(y.val) font.name = y.val; break;\n        case '<name/>': case '</name>': break;\n\n        /* 18.8.2  b CT_BooleanProperty */\n        case '<b': font.bold = y.val ? parsexmlbool(y.val) : 1; break;\n        case '<b/>': font.bold = 1; break;\n\n        /* 18.8.26 i CT_BooleanProperty */\n        case '<i': font.italic = y.val ? parsexmlbool(y.val) : 1; break;\n        case '<i/>': font.italic = 1; break;\n\n        /* 18.4.13 u CT_UnderlineProperty */\n        case '<u':\n          switch(y.val) {\n            case \"none\": font.underline = 0x00; break;\n            case \"single\": font.underline = 0x01; break;\n            case \"double\": font.underline = 0x02; break;\n            case \"singleAccounting\": font.underline = 0x21; break;\n            case \"doubleAccounting\": font.underline = 0x22; break;\n          } break;\n        case '<u/>': font.underline = 1; break;\n\n        /* 18.4.10 strike CT_BooleanProperty */\n        case '<strike': font.strike = y.val ? parsexmlbool(y.val) : 1; break;\n        case '<strike/>': font.strike = 1; break;\n\n        /* 18.4.2  outline CT_BooleanProperty */\n        case '<outline': font.outline = y.val ? parsexmlbool(y.val) : 1; break;\n        case '<outline/>': font.outline = 1; break;\n\n        /* 18.8.36 shadow CT_BooleanProperty */\n        case '<shadow': font.shadow = y.val ? parsexmlbool(y.val) : 1; break;\n        case '<shadow/>': font.shadow = 1; break;\n\n        /* 18.8.12 condense CT_BooleanProperty */\n        case '<condense': font.condense = y.val ? parsexmlbool(y.val) : 1; break;\n        case '<condense/>': font.condense = 1; break;\n\n        /* 18.8.17 extend CT_BooleanProperty */\n        case '<extend': font.extend = y.val ? parsexmlbool(y.val) : 1; break;\n        case '<extend/>': font.extend = 1; break;\n\n        /* 18.4.11 sz CT_FontSize */\n        case '<sz': if(y.val) font.sz = +y.val; break;\n        case '<sz/>': case '</sz>': break;\n\n        /* 18.4.14 vertAlign CT_VerticalAlignFontProperty */\n        case '<vertAlign': if(y.val) font.vertAlign = y.val; break;\n        case '<vertAlign/>': case '</vertAlign>': break;\n\n        /* 18.8.18 family CT_FontFamily */\n        case '<family': if(y.val) font.family = parseInt(y.val,10); break;\n        case '<family/>': case '</family>': break;\n\n        /* 18.8.35 scheme CT_FontScheme */\n        case '<scheme': if(y.val) font.scheme = y.val; break;\n        case '<scheme/>': case '</scheme>': break;\n\n        /* 18.4.1 charset CT_IntProperty */\n        case '<charset':\n          if(y.val == '1') break;\n          y.codepage = CS2CP[parseInt(y.val, 10)];\n          break;\n\n        /* 18.?.? color CT_Color */\n        case '<color':\n          if(!font.color) font.color = {};\n          if(y.auto) font.color.auto = parsexmlbool(y.auto);\n\n          if(y.rgb) font.color.rgb = y.rgb.slice(-6);\n          else if(y.indexed) {\n            font.color.index = parseInt(y.indexed, 10);\n            var icv = XLSIcv[font.color.index];\n            if(font.color.index == 81) icv = XLSIcv[1];\n            if(!icv) throw new Error(x);\n            font.color.rgb = icv[0].toString(16) + icv[1].toString(16) + icv[2].toString(16);\n          } else if(y.theme) {\n            font.color.theme = parseInt(y.theme, 10);\n            if(y.tint) font.color.tint = parseFloat(y.tint);\n            if(y.theme && themes.themeElements && themes.themeElements.clrScheme) {\n              font.color.rgb = rgb_tint(themes.themeElements.clrScheme[font.color.theme].rgb, font.color.tint || 0);\n            }\n          }\n\n          break;\n        case '<color/>': case '</color>': break;\n\n        /* 18.2.10 extLst CT_ExtensionList ? */\n        case '<extLst': case '<extLst>': case '</extLst>': break;\n        case '<ext': pass = true; break;\n        case '</ext>': pass = false; break;\n        default: if(opts && opts.WTF) {\n          if(!pass) throw new Error('unrecognized ' + y[0] + ' in fonts');\n        }\n      }\n    });\n  }\n\n  /* 18.8.31 numFmts CT_NumFmts */\n  function parse_numFmts(t, styles, opts) {\n    styles.NumberFmt = [];\n    var k/*Array<number>*/ = (keys(SSF._table));\n    for(var i=0; i < k.length; ++i) styles.NumberFmt[k[i]] = SSF._table[k[i]];\n    var m = t[0].match(tagregex);\n    if(!m) return;\n    for(i=0; i < m.length; ++i) {\n      var y = parsexmltag(m[i]);\n      switch(strip_ns(y[0])) {\n        case '<numFmts': case '</numFmts>': case '<numFmts/>': case '<numFmts>': break;\n        case '<numFmt': {\n          var f=unescapexml(utf8read(y.formatCode)), j=parseInt(y.numFmtId,10);\n          styles.NumberFmt[j] = f;\n          if(j>0) {\n            if(j > 0x188) {\n              for(j = 0x188; j > 0x3c; --j) if(styles.NumberFmt[j] == null) break;\n              styles.NumberFmt[j] = f;\n            }\n            SSF.load(f,j);\n          }\n        } break;\n        case '</numFmt>': break;\n        default: if(opts.WTF) throw new Error('unrecognized ' + y[0] + ' in numFmts');\n      }\n    }\n  }\n\n  function write_numFmts(NF) {\n    var o = [\"<numFmts>\"];\n    [[5,8],[23,26],[41,44],[/*63*/50,/*66],[164,*/392]].forEach(function(r) {\n      for(var i = r[0]; i <= r[1]; ++i) if(NF[i] != null) o[o.length] = (writextag('numFmt',null,{numFmtId:i,formatCode:escapexml(NF[i])}));\n    });\n    if(o.length === 1) return \"\";\n    o[o.length] = (\"</numFmts>\");\n    o[0] = writextag('numFmts', null, { count:o.length-2 }).replace(\"/>\", \">\");\n    return o.join(\"\");\n  }\n\n  /* 18.8.10 cellXfs CT_CellXfs */\n  var cellXF_uint = [ \"numFmtId\", \"fillId\", \"fontId\", \"borderId\", \"xfId\" ];\n  var cellXF_bool = [ \"applyAlignment\", \"applyBorder\", \"applyFill\", \"applyFont\", \"applyNumberFormat\", \"applyProtection\", \"pivotButton\", \"quotePrefix\" ];\n  function parse_cellXfs(t, styles, opts) {\n    styles.CellXf = [];\n    var xf;\n    var pass = false;\n    t[0].match(tagregex).forEach(function(x) {\n      var y = parsexmltag(x), i = 0;\n      switch(strip_ns(y[0])) {\n        case '<cellXfs': case '<cellXfs>': case '<cellXfs/>': case '</cellXfs>': break;\n\n        /* 18.8.45 xf CT_Xf */\n        case '<xf': case '<xf/>':\n          xf = y;\n          delete xf[0];\n          for(i = 0; i < cellXF_uint.length; ++i) if(xf[cellXF_uint[i]])\n            xf[cellXF_uint[i]] = parseInt(xf[cellXF_uint[i]], 10);\n          for(i = 0; i < cellXF_bool.length; ++i) if(xf[cellXF_bool[i]])\n            xf[cellXF_bool[i]] = parsexmlbool(xf[cellXF_bool[i]]);\n          if(xf.numFmtId > 0x188) {\n            for(i = 0x188; i > 0x3c; --i) if(styles.NumberFmt[xf.numFmtId] == styles.NumberFmt[i]) { xf.numFmtId = i; break; }\n          }\n          styles.CellXf.push(xf); break;\n        case '</xf>': break;\n\n        /* 18.8.1 alignment CT_CellAlignment */\n        case '<alignment': case '<alignment/>':\n          var alignment = {};\n          if(y.vertical) alignment.vertical = y.vertical;\n          if(y.horizontal) alignment.horizontal = y.horizontal;\n          if(y.textRotation != null) alignment.textRotation = y.textRotation;\n          if(y.indent) alignment.indent = y.indent;\n          if(y.wrapText) alignment.wrapText = y.wrapText;\n          xf.alignment = alignment;\n          break;\n        case '</alignment>': break;\n\n        /* 18.8.33 protection CT_CellProtection */\n        case '<protection': case '</protection>': case '<protection/>': break;\n\n        /* 18.2.10 extLst CT_ExtensionList ? */\n        case '<extLst': case '<extLst>': case '</extLst>': break;\n        case '<ext': pass = true; break;\n        case '</ext>': pass = false; break;\n        default: if(opts && opts.WTF) {\n          if(!pass) throw new Error('unrecognized ' + y[0] + ' in cellXfs');\n        }\n      }\n    });\n  }\n\n  function write_cellXfs(cellXfs) {\n    var o = [];\n    o[o.length] = (writextag('cellXfs',null));\n    cellXfs.forEach(function(c) { o[o.length] = (writextag('xf', null, c)); });\n    o[o.length] = (\"</cellXfs>\");\n    if(o.length === 2) return \"\";\n    o[0] = writextag('cellXfs',null, {count:o.length-2}).replace(\"/>\",\">\");\n    return o.join(\"\");\n  }\n\n  /* 18.8 Styles CT_Stylesheet*/\n  var parse_sty_xml= (function make_pstyx() {\n    var numFmtRegex = /<(?:\\w+:)?numFmts([^>]*)>[\\S\\s]*?<\\/(?:\\w+:)?numFmts>/;\n    var cellXfRegex = /<(?:\\w+:)?cellXfs([^>]*)>[\\S\\s]*?<\\/(?:\\w+:)?cellXfs>/;\n    var fillsRegex = /<(?:\\w+:)?fills([^>]*)>[\\S\\s]*?<\\/(?:\\w+:)?fills>/;\n    var fontsRegex = /<(?:\\w+:)?fonts([^>]*)>[\\S\\s]*?<\\/(?:\\w+:)?fonts>/;\n    var bordersRegex = /<(?:\\w+:)?borders([^>]*)>[\\S\\s]*?<\\/(?:\\w+:)?borders>/;\n\n    return function parse_sty_xml(data, themes, opts) {\n      var styles = {};\n      if(!data) return styles;\n      data = data.replace(/<!--([\\s\\S]*?)-->/mg,\"\").replace(/<!DOCTYPE[^\\[]*\\[[^\\]]*\\]>/gm,\"\");\n      /* 18.8.39 styleSheet CT_Stylesheet */\n      var t;\n\n      /* 18.8.31 numFmts CT_NumFmts ? */\n      if((t=data.match(numFmtRegex))) parse_numFmts(t, styles, opts);\n\n      /* 18.8.23 fonts CT_Fonts ? */\n      if((t=data.match(fontsRegex))) parse_fonts(t, styles, themes, opts);\n\n      /* 18.8.21 fills CT_Fills ? */\n      if((t=data.match(fillsRegex))) parse_fills(t, styles, themes, opts);\n\n      /* 18.8.5  borders CT_Borders ? */\n      if((t=data.match(bordersRegex))) parse_borders(t, styles, themes, opts);\n\n      /* 18.8.9  cellStyleXfs CT_CellStyleXfs ? */\n\n      /* 18.8.10 cellXfs CT_CellXfs ? */\n      if((t=data.match(cellXfRegex))) parse_cellXfs(t, styles, opts);\n\n      /* 18.8.8  cellStyles CT_CellStyles ? */\n      /* 18.8.15 dxfs CT_Dxfs ? */\n      /* 18.8.42 tableStyles CT_TableStyles ? */\n      /* 18.8.11 colors CT_Colors ? */\n      /* 18.2.10 extLst CT_ExtensionList ? */\n\n      return styles;\n    };\n  })();\n\n  var STYLES_XML_ROOT = writextag('styleSheet', null, {\n    'xmlns': XMLNS.main[0],\n    'xmlns:vt': XMLNS.vt\n  });\n\n  RELS.STY = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\";\n\n  function write_sty_xml(wb, opts) {\n    if (typeof style_builder != 'undefined' && typeof 'require' != 'undefined') {\n      return style_builder.toXml();\n    }\n    var o = [XML_HEADER, STYLES_XML_ROOT], w;\n    if(wb.SSF && (w = write_numFmts(wb.SSF)) != null) o[o.length] = w;\n    o[o.length] = ('<fonts count=\"1\"><font><sz val=\"12\"/><color theme=\"1\"/><name val=\"Calibri\"/><family val=\"2\"/><scheme val=\"minor\"/></font></fonts>');\n    o[o.length] = ('<fills count=\"2\"><fill><patternFill patternType=\"none\"/></fill><fill><patternFill patternType=\"gray125\"/></fill></fills>');\n    o[o.length] = ('<borders count=\"1\"><border><left/><right/><top/><bottom/><diagonal/></border></borders>');\n    o[o.length] = ('<cellStyleXfs count=\"1\"><xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"0\"/></cellStyleXfs>');\n    if((w = write_cellXfs(opts.cellXfs))) o[o.length] = (w);\n    o[o.length] = ('<cellStyles count=\"1\"><cellStyle name=\"Normal\" xfId=\"0\" builtinId=\"0\"/></cellStyles>');\n    o[o.length] = ('<dxfs count=\"0\"/>');\n    o[o.length] = ('<tableStyles count=\"0\" defaultTableStyle=\"TableStyleMedium9\" defaultPivotStyle=\"PivotStyleMedium4\"/>');\n\n    if(o.length>2){ o[o.length] = ('</styleSheet>'); o[1]=o[1].replace(\"/>\",\">\"); }\n    return o.join(\"\");\n  }\n  /* [MS-XLSB] 2.4.657 BrtFmt */\n  function parse_BrtFmt(data, length) {\n    var numFmtId = data.read_shift(2);\n    var stFmtCode = parse_XLWideString(data,length-2);\n    return [numFmtId, stFmtCode];\n  }\n  function write_BrtFmt(i, f, o) {\n    if(!o) o = new_buf(6 + 4 * f.length);\n    o.write_shift(2, i);\n    write_XLWideString(f, o);\n    var out = (o.length > o.l) ? o.slice(0, o.l) : o;\n    if(o.l == null) o.l = o.length;\n    return out;\n  }\n\n  /* [MS-XLSB] 2.4.659 BrtFont TODO */\n  function parse_BrtFont(data, length, opts) {\n    var out = ({});\n\n    out.sz = data.read_shift(2) / 20;\n\n    var grbit = parse_FontFlags(data, 2, opts);\n    if(grbit.fCondense) out.condense = 1;\n    if(grbit.fExtend) out.extend = 1;\n    if(grbit.fShadow) out.shadow = 1;\n    if(grbit.fOutline) out.outline = 1;\n    if(grbit.fStrikeout) out.strike = 1;\n    if(grbit.fItalic) out.italic = 1;\n\n    var bls = data.read_shift(2);\n    if(bls === 0x02BC) out.bold = 1;\n\n    switch(data.read_shift(2)) {\n      /* case 0: out.vertAlign = \"baseline\"; break; */\n      case 1: out.vertAlign = \"superscript\"; break;\n      case 2: out.vertAlign = \"subscript\"; break;\n    }\n\n    var underline = data.read_shift(1);\n    if(underline != 0) out.underline = underline;\n\n    var family = data.read_shift(1);\n    if(family > 0) out.family = family;\n\n    var bCharSet = data.read_shift(1);\n    if(bCharSet > 0) out.charset = bCharSet;\n\n    data.l++;\n    out.color = parse_BrtColor(data, 8);\n\n    switch(data.read_shift(1)) {\n      /* case 0: out.scheme = \"none\": break; */\n      case 1: out.scheme = \"major\"; break;\n      case 2: out.scheme = \"minor\"; break;\n    }\n\n    out.name = parse_XLWideString(data, length - 21);\n\n    return out;\n  }\n  function write_BrtFont(font, o) {\n    if(!o) o = new_buf(25+4*32);\n    o.write_shift(2, font.sz * 20);\n    write_FontFlags(font, o);\n    o.write_shift(2, font.bold ? 0x02BC : 0x0190);\n    var sss = 0;\n    if(font.vertAlign == \"superscript\") sss = 1;\n    else if(font.vertAlign == \"subscript\") sss = 2;\n    o.write_shift(2, sss);\n    o.write_shift(1, font.underline || 0);\n    o.write_shift(1, font.family || 0);\n    o.write_shift(1, font.charset || 0);\n    o.write_shift(1, 0);\n    write_BrtColor(font.color, o);\n    var scheme = 0;\n    if(font.scheme == \"major\") scheme = 1;\n    if(font.scheme == \"minor\") scheme = 2;\n    o.write_shift(1, scheme);\n    write_XLWideString(font.name, o);\n    return o.length > o.l ? o.slice(0, o.l) : o;\n  }\n\n  /* [MS-XLSB] 2.4.650 BrtFill */\n  var XLSBFillPTNames = [\n    \"none\",\n    \"solid\",\n    \"mediumGray\",\n    \"darkGray\",\n    \"lightGray\",\n    \"darkHorizontal\",\n    \"darkVertical\",\n    \"darkDown\",\n    \"darkUp\",\n    \"darkGrid\",\n    \"darkTrellis\",\n    \"lightHorizontal\",\n    \"lightVertical\",\n    \"lightDown\",\n    \"lightUp\",\n    \"lightGrid\",\n    \"lightTrellis\",\n    \"gray125\",\n    \"gray0625\"\n  ];\n  var rev_XLSBFillPTNames = (evert(XLSBFillPTNames));\n  /* TODO: gradient fill representation */\n  var parse_BrtFill = parsenoop;\n  function write_BrtFill(fill, o) {\n    if(!o) o = new_buf(4*3 + 8*7 + 16*1);\n    var fls = rev_XLSBFillPTNames[fill.patternType];\n    if(fls == null) fls = 0x28;\n    o.write_shift(4, fls);\n    var j = 0;\n    if(fls != 0x28) {\n      /* TODO: custom FG Color */\n      write_BrtColor({auto:1}, o);\n      /* TODO: custom BG Color */\n      write_BrtColor({auto:1}, o);\n\n      for(; j < 12; ++j) o.write_shift(4, 0);\n    } else {\n      for(; j < 4; ++j) o.write_shift(4, 0);\n\n      for(; j < 12; ++j) o.write_shift(4, 0); /* TODO */\n      /* iGradientType */\n      /* xnumDegree */\n      /* xnumFillToLeft */\n      /* xnumFillToRight */\n      /* xnumFillToTop */\n      /* xnumFillToBottom */\n      /* cNumStop */\n      /* xfillGradientStop */\n    }\n    return o.length > o.l ? o.slice(0, o.l) : o;\n  }\n\n  /* [MS-XLSB] 2.4.824 BrtXF */\n  function parse_BrtXF(data, length) {\n    var tgt = data.l + length;\n    var ixfeParent = data.read_shift(2);\n    var ifmt = data.read_shift(2);\n    data.l = tgt;\n    return {ixfe:ixfeParent, numFmtId:ifmt };\n  }\n  function write_BrtXF(data, ixfeP, o) {\n    if(!o) o = new_buf(16);\n    o.write_shift(2, ixfeP||0);\n    o.write_shift(2, data.numFmtId||0);\n    o.write_shift(2, 0); /* iFont */\n    o.write_shift(2, 0); /* iFill */\n    o.write_shift(2, 0); /* ixBorder */\n    o.write_shift(1, 0); /* trot */\n    o.write_shift(1, 0); /* indent */\n    o.write_shift(1, 0); /* flags */\n    o.write_shift(1, 0); /* flags */\n    o.write_shift(1, 0); /* xfGrbitAtr */\n    o.write_shift(1, 0);\n    return o;\n  }\n\n  /* [MS-XLSB] 2.5.4 Blxf TODO */\n  function write_Blxf(data, o) {\n    if(!o) o = new_buf(10);\n    o.write_shift(1, 0); /* dg */\n    o.write_shift(1, 0);\n    o.write_shift(4, 0); /* color */\n    o.write_shift(4, 0); /* color */\n    return o;\n  }\n  /* [MS-XLSB] 2.4.302 BrtBorder TODO */\n  var parse_BrtBorder = parsenoop;\n  function write_BrtBorder(border, o) {\n    if(!o) o = new_buf(51);\n    o.write_shift(1, 0); /* diagonal */\n    write_Blxf(null, o); /* top */\n    write_Blxf(null, o); /* bottom */\n    write_Blxf(null, o); /* left */\n    write_Blxf(null, o); /* right */\n    write_Blxf(null, o); /* diag */\n    return o.length > o.l ? o.slice(0, o.l) : o;\n  }\n\n  /* [MS-XLSB] 2.4.763 BrtStyle TODO */\n  function write_BrtStyle(style, o) {\n    if(!o) o = new_buf(12+4*10);\n    o.write_shift(4, style.xfId);\n    o.write_shift(2, 1);\n    o.write_shift(1, +style.builtinId);\n    o.write_shift(1, 0); /* iLevel */\n    write_XLNullableWideString(style.name || \"\", o);\n    return o.length > o.l ? o.slice(0, o.l) : o;\n  }\n\n  /* [MS-XLSB] 2.4.272 BrtBeginTableStyles */\n  function write_BrtBeginTableStyles(cnt, defTableStyle, defPivotStyle) {\n    var o = new_buf(4+256*2*4);\n    o.write_shift(4, cnt);\n    write_XLNullableWideString(defTableStyle, o);\n    write_XLNullableWideString(defPivotStyle, o);\n    return o.length > o.l ? o.slice(0, o.l) : o;\n  }\n\n  /* [MS-XLSB] 2.1.7.50 Styles */\n  function parse_sty_bin(data, themes, opts) {\n    var styles = {};\n    styles.NumberFmt = ([]);\n    for(var y in SSF._table) styles.NumberFmt[y] = SSF._table[y];\n\n    styles.CellXf = [];\n    styles.Fonts = [];\n    var state = [];\n    var pass = false;\n    recordhopper(data, function hopper_sty(val, R_n, RT) {\n      switch(RT) {\n        case 0x002C: /* 'BrtFmt' */\n          styles.NumberFmt[val[0]] = val[1]; SSF.load(val[1], val[0]);\n          break;\n        case 0x002B: /* 'BrtFont' */\n          styles.Fonts.push(val);\n          if(val.color.theme != null && themes && themes.themeElements && themes.themeElements.clrScheme) {\n            val.color.rgb = rgb_tint(themes.themeElements.clrScheme[val.color.theme].rgb, val.color.tint || 0);\n          }\n          break;\n        case 0x0401: /* 'BrtKnownFonts' */ break;\n        case 0x002D: /* 'BrtFill' */ break;\n        case 0x002E: /* 'BrtBorder' */ break;\n        case 0x002F: /* 'BrtXF' */\n          if(state[state.length - 1] == \"BrtBeginCellXFs\") {\n            styles.CellXf.push(val);\n          }\n          break;\n        case 0x0030: /* 'BrtStyle' */\n        case 0x01FB: /* 'BrtDXF' */\n        case 0x023C: /* 'BrtMRUColor' */\n        case 0x01DB: /* 'BrtIndexedColor': */\n          break;\n\n        case 0x0493: /* 'BrtDXF14' */\n        case 0x0836: /* 'BrtDXF15' */\n        case 0x046A: /* 'BrtSlicerStyleElement' */\n        case 0x0200: /* 'BrtTableStyleElement' */\n        case 0x082F: /* 'BrtTimelineStyleElement' */\n        case 0x0C00: /* 'BrtUid' */\n          break;\n\n        case 0x0023: /* 'BrtFRTBegin' */\n          pass = true; break;\n        case 0x0024: /* 'BrtFRTEnd' */\n          pass = false; break;\n        case 0x0025: /* 'BrtACBegin' */\n          state.push(R_n); break;\n        case 0x0026: /* 'BrtACEnd' */\n          state.pop(); break;\n\n        default:\n          if((R_n||\"\").indexOf(\"Begin\") > 0) state.push(R_n);\n          else if((R_n||\"\").indexOf(\"End\") > 0) state.pop();\n          else if(!pass || opts.WTF) throw new Error(\"Unexpected record \" + RT + \" \" + R_n);\n      }\n    });\n    return styles;\n  }\n\n  function write_FMTS_bin(ba, NF) {\n    if(!NF) return;\n    var cnt = 0;\n    [[5,8],[23,26],[41,44],[/*63*/50,/*66],[164,*/392]].forEach(function(r) {\n      for(var i = r[0]; i <= r[1]; ++i) if(NF[i] != null) ++cnt;\n    });\n\n    if(cnt == 0) return;\n    write_record(ba, \"BrtBeginFmts\", write_UInt32LE(cnt));\n    [[5,8],[23,26],[41,44],[/*63*/50,/*66],[164,*/392]].forEach(function(r) {\n      for(var i = r[0]; i <= r[1]; ++i) if(NF[i] != null) write_record(ba, \"BrtFmt\", write_BrtFmt(i, NF[i]));\n    });\n    write_record(ba, \"BrtEndFmts\");\n  }\n\n  function write_FONTS_bin(ba) {\n    var cnt = 1;\n\n    if(cnt == 0) return;\n    write_record(ba, \"BrtBeginFonts\", write_UInt32LE(cnt));\n    write_record(ba, \"BrtFont\", write_BrtFont({\n      sz:12,\n      color: {theme:1},\n      name: \"Calibri\",\n      family: 2,\n      scheme: \"minor\"\n    }));\n    /* 1*65491BrtFont [ACFONTS] */\n    write_record(ba, \"BrtEndFonts\");\n  }\n\n  function write_FILLS_bin(ba) {\n    var cnt = 2;\n\n    if(cnt == 0) return;\n    write_record(ba, \"BrtBeginFills\", write_UInt32LE(cnt));\n    write_record(ba, \"BrtFill\", write_BrtFill({patternType:\"none\"}));\n    write_record(ba, \"BrtFill\", write_BrtFill({patternType:\"gray125\"}));\n    /* 1*65431BrtFill */\n    write_record(ba, \"BrtEndFills\");\n  }\n\n  function write_BORDERS_bin(ba) {\n    var cnt = 1;\n\n    if(cnt == 0) return;\n    write_record(ba, \"BrtBeginBorders\", write_UInt32LE(cnt));\n    write_record(ba, \"BrtBorder\", write_BrtBorder({}));\n    /* 1*65430BrtBorder */\n    write_record(ba, \"BrtEndBorders\");\n  }\n\n  function write_CELLSTYLEXFS_bin(ba) {\n    var cnt = 1;\n    write_record(ba, \"BrtBeginCellStyleXFs\", write_UInt32LE(cnt));\n    write_record(ba, \"BrtXF\", write_BrtXF({\n      numFmtId:0,\n      fontId:0,\n      fillId:0,\n      borderId:0\n    }, 0xFFFF));\n    /* 1*65430(BrtXF *FRT) */\n    write_record(ba, \"BrtEndCellStyleXFs\");\n  }\n\n  function write_CELLXFS_bin(ba, data) {\n    write_record(ba, \"BrtBeginCellXFs\", write_UInt32LE(data.length));\n    data.forEach(function(c) { write_record(ba, \"BrtXF\", write_BrtXF(c,0)); });\n    /* 1*65430(BrtXF *FRT) */\n    write_record(ba, \"BrtEndCellXFs\");\n  }\n\n  function write_STYLES_bin(ba) {\n    var cnt = 1;\n\n    write_record(ba, \"BrtBeginStyles\", write_UInt32LE(cnt));\n    write_record(ba, \"BrtStyle\", write_BrtStyle({\n      xfId:0,\n      builtinId:0,\n      name:\"Normal\"\n    }));\n    /* 1*65430(BrtStyle *FRT) */\n    write_record(ba, \"BrtEndStyles\");\n  }\n\n  function write_DXFS_bin(ba) {\n    var cnt = 0;\n\n    write_record(ba, \"BrtBeginDXFs\", write_UInt32LE(cnt));\n    /* *2147483647(BrtDXF *FRT) */\n    write_record(ba, \"BrtEndDXFs\");\n  }\n\n  function write_TABLESTYLES_bin(ba) {\n    var cnt = 0;\n\n    write_record(ba, \"BrtBeginTableStyles\", write_BrtBeginTableStyles(cnt, \"TableStyleMedium9\", \"PivotStyleMedium4\"));\n    /* *TABLESTYLE */\n    write_record(ba, \"BrtEndTableStyles\");\n  }\n\n  function write_COLORPALETTE_bin() {\n    return;\n    /* BrtBeginColorPalette [INDEXEDCOLORS] [MRUCOLORS] BrtEndColorPalette */\n  }\n\n  /* [MS-XLSB] 2.1.7.50 Styles */\n  function write_sty_bin(wb, opts) {\n    var ba = buf_array();\n    write_record(ba, \"BrtBeginStyleSheet\");\n    write_FMTS_bin(ba, wb.SSF);\n    write_FONTS_bin(ba, wb);\n    write_FILLS_bin(ba, wb);\n    write_BORDERS_bin(ba, wb);\n    write_CELLSTYLEXFS_bin(ba, wb);\n    write_CELLXFS_bin(ba, opts.cellXfs);\n    write_STYLES_bin(ba, wb);\n    write_DXFS_bin(ba, wb);\n    write_TABLESTYLES_bin(ba, wb);\n    write_COLORPALETTE_bin(ba, wb);\n    /* FRTSTYLESHEET*/\n    write_record(ba, \"BrtEndStyleSheet\");\n    return ba.end();\n  }\n  RELS.THEME = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme\";\n\n  /* 20.1.6.2 clrScheme CT_ColorScheme */\n  function parse_clrScheme(t, themes, opts) {\n    themes.themeElements.clrScheme = [];\n    var color = {};\n    (t[0].match(tagregex)||[]).forEach(function(x) {\n      var y = parsexmltag(x);\n      switch(y[0]) {\n        /* 20.1.6.2 clrScheme (Color Scheme) CT_ColorScheme */\n        case '<a:clrScheme': case '</a:clrScheme>': break;\n\n        /* 20.1.2.3.32 srgbClr CT_SRgbColor */\n        case '<a:srgbClr':\n          color.rgb = y.val; break;\n\n        /* 20.1.2.3.33 sysClr CT_SystemColor */\n        case '<a:sysClr':\n          color.rgb = y.lastClr; break;\n\n        /* 20.1.4.1.1 accent1 (Accent 1) */\n        /* 20.1.4.1.2 accent2 (Accent 2) */\n        /* 20.1.4.1.3 accent3 (Accent 3) */\n        /* 20.1.4.1.4 accent4 (Accent 4) */\n        /* 20.1.4.1.5 accent5 (Accent 5) */\n        /* 20.1.4.1.6 accent6 (Accent 6) */\n        /* 20.1.4.1.9 dk1 (Dark 1) */\n        /* 20.1.4.1.10 dk2 (Dark 2) */\n        /* 20.1.4.1.15 folHlink (Followed Hyperlink) */\n        /* 20.1.4.1.19 hlink (Hyperlink) */\n        /* 20.1.4.1.22 lt1 (Light 1) */\n        /* 20.1.4.1.23 lt2 (Light 2) */\n        case '<a:dk1>': case '</a:dk1>':\n        case '<a:lt1>': case '</a:lt1>':\n        case '<a:dk2>': case '</a:dk2>':\n        case '<a:lt2>': case '</a:lt2>':\n        case '<a:accent1>': case '</a:accent1>':\n        case '<a:accent2>': case '</a:accent2>':\n        case '<a:accent3>': case '</a:accent3>':\n        case '<a:accent4>': case '</a:accent4>':\n        case '<a:accent5>': case '</a:accent5>':\n        case '<a:accent6>': case '</a:accent6>':\n        case '<a:hlink>': case '</a:hlink>':\n        case '<a:folHlink>': case '</a:folHlink>':\n          if (y[0].charAt(1) === '/') {\n            themes.themeElements.clrScheme.push(color);\n            color = {};\n          } else {\n            color.name = y[0].slice(3, y[0].length - 1);\n          }\n          break;\n\n        default: if(opts && opts.WTF) throw new Error('Unrecognized ' + y[0] + ' in clrScheme');\n      }\n    });\n  }\n\n  /* 20.1.4.1.18 fontScheme CT_FontScheme */\n  function parse_fontScheme() { }\n\n  /* 20.1.4.1.15 fmtScheme CT_StyleMatrix */\n  function parse_fmtScheme() { }\n\n  var clrsregex = /<a:clrScheme([^>]*)>[\\s\\S]*<\\/a:clrScheme>/;\n  var fntsregex = /<a:fontScheme([^>]*)>[\\s\\S]*<\\/a:fontScheme>/;\n  var fmtsregex = /<a:fmtScheme([^>]*)>[\\s\\S]*<\\/a:fmtScheme>/;\n\n  /* 20.1.6.10 themeElements CT_BaseStyles */\n  function parse_themeElements(data, themes, opts) {\n    themes.themeElements = {};\n\n    var t;\n\n    [\n      /* clrScheme CT_ColorScheme */\n      ['clrScheme', clrsregex, parse_clrScheme],\n      /* fontScheme CT_FontScheme */\n      ['fontScheme', fntsregex, parse_fontScheme],\n      /* fmtScheme CT_StyleMatrix */\n      ['fmtScheme', fmtsregex, parse_fmtScheme]\n    ].forEach(function(m) {\n      if(!(t=data.match(m[1]))) throw new Error(m[0] + ' not found in themeElements');\n      m[2](t, themes, opts);\n    });\n  }\n\n  var themeltregex = /<a:themeElements([^>]*)>[\\s\\S]*<\\/a:themeElements>/;\n\n  /* 14.2.7 Theme Part */\n  function parse_theme_xml(data, opts) {\n    /* 20.1.6.9 theme CT_OfficeStyleSheet */\n    if(!data || data.length === 0) return parse_theme_xml(write_theme());\n\n    var t;\n    var themes = {};\n\n    /* themeElements CT_BaseStyles */\n    if(!(t=data.match(themeltregex))) throw new Error('themeElements not found in theme');\n    parse_themeElements(t[0], themes, opts);\n\n    return themes;\n  }\n\n  function write_theme(Themes, opts) {\n    if(opts && opts.themeXLSX) return opts.themeXLSX;\n    var o = [XML_HEADER];\n    o[o.length] = '<a:theme xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" name=\"Office Theme\">';\n    o[o.length] =  '<a:themeElements>';\n\n    o[o.length] =   '<a:clrScheme name=\"Office\">';\n    o[o.length] =    '<a:dk1><a:sysClr val=\"windowText\" lastClr=\"000000\"/></a:dk1>';\n    o[o.length] =    '<a:lt1><a:sysClr val=\"window\" lastClr=\"FFFFFF\"/></a:lt1>';\n    o[o.length] =    '<a:dk2><a:srgbClr val=\"1F497D\"/></a:dk2>';\n    o[o.length] =    '<a:lt2><a:srgbClr val=\"EEECE1\"/></a:lt2>';\n    o[o.length] =    '<a:accent1><a:srgbClr val=\"4F81BD\"/></a:accent1>';\n    o[o.length] =    '<a:accent2><a:srgbClr val=\"C0504D\"/></a:accent2>';\n    o[o.length] =    '<a:accent3><a:srgbClr val=\"9BBB59\"/></a:accent3>';\n    o[o.length] =    '<a:accent4><a:srgbClr val=\"8064A2\"/></a:accent4>';\n    o[o.length] =    '<a:accent5><a:srgbClr val=\"4BACC6\"/></a:accent5>';\n    o[o.length] =    '<a:accent6><a:srgbClr val=\"F79646\"/></a:accent6>';\n    o[o.length] =    '<a:hlink><a:srgbClr val=\"0000FF\"/></a:hlink>';\n    o[o.length] =    '<a:folHlink><a:srgbClr val=\"800080\"/></a:folHlink>';\n    o[o.length] =   '</a:clrScheme>';\n\n    o[o.length] =   '<a:fontScheme name=\"Office\">';\n    o[o.length] =    '<a:majorFont>';\n    o[o.length] =     '<a:latin typeface=\"Cambria\"/>';\n    o[o.length] =     '<a:ea typeface=\"\"/>';\n    o[o.length] =     '<a:cs typeface=\"\"/>';\n    o[o.length] =     '<a:font script=\"Jpan\" typeface=\"ＭＳ Ｐゴシック\"/>';\n    o[o.length] =     '<a:font script=\"Hang\" typeface=\"맑은 고딕\"/>';\n    o[o.length] =     '<a:font script=\"Hans\" typeface=\"宋体\"/>';\n    o[o.length] =     '<a:font script=\"Hant\" typeface=\"新細明體\"/>';\n    o[o.length] =     '<a:font script=\"Arab\" typeface=\"Times New Roman\"/>';\n    o[o.length] =     '<a:font script=\"Hebr\" typeface=\"Times New Roman\"/>';\n    o[o.length] =     '<a:font script=\"Thai\" typeface=\"Tahoma\"/>';\n    o[o.length] =     '<a:font script=\"Ethi\" typeface=\"Nyala\"/>';\n    o[o.length] =     '<a:font script=\"Beng\" typeface=\"Vrinda\"/>';\n    o[o.length] =     '<a:font script=\"Gujr\" typeface=\"Shruti\"/>';\n    o[o.length] =     '<a:font script=\"Khmr\" typeface=\"MoolBoran\"/>';\n    o[o.length] =     '<a:font script=\"Knda\" typeface=\"Tunga\"/>';\n    o[o.length] =     '<a:font script=\"Guru\" typeface=\"Raavi\"/>';\n    o[o.length] =     '<a:font script=\"Cans\" typeface=\"Euphemia\"/>';\n    o[o.length] =     '<a:font script=\"Cher\" typeface=\"Plantagenet Cherokee\"/>';\n    o[o.length] =     '<a:font script=\"Yiii\" typeface=\"Microsoft Yi Baiti\"/>';\n    o[o.length] =     '<a:font script=\"Tibt\" typeface=\"Microsoft Himalaya\"/>';\n    o[o.length] =     '<a:font script=\"Thaa\" typeface=\"MV Boli\"/>';\n    o[o.length] =     '<a:font script=\"Deva\" typeface=\"Mangal\"/>';\n    o[o.length] =     '<a:font script=\"Telu\" typeface=\"Gautami\"/>';\n    o[o.length] =     '<a:font script=\"Taml\" typeface=\"Latha\"/>';\n    o[o.length] =     '<a:font script=\"Syrc\" typeface=\"Estrangelo Edessa\"/>';\n    o[o.length] =     '<a:font script=\"Orya\" typeface=\"Kalinga\"/>';\n    o[o.length] =     '<a:font script=\"Mlym\" typeface=\"Kartika\"/>';\n    o[o.length] =     '<a:font script=\"Laoo\" typeface=\"DokChampa\"/>';\n    o[o.length] =     '<a:font script=\"Sinh\" typeface=\"Iskoola Pota\"/>';\n    o[o.length] =     '<a:font script=\"Mong\" typeface=\"Mongolian Baiti\"/>';\n    o[o.length] =     '<a:font script=\"Viet\" typeface=\"Times New Roman\"/>';\n    o[o.length] =     '<a:font script=\"Uigh\" typeface=\"Microsoft Uighur\"/>';\n    o[o.length] =     '<a:font script=\"Geor\" typeface=\"Sylfaen\"/>';\n    o[o.length] =    '</a:majorFont>';\n    o[o.length] =    '<a:minorFont>';\n    o[o.length] =     '<a:latin typeface=\"Calibri\"/>';\n    o[o.length] =     '<a:ea typeface=\"\"/>';\n    o[o.length] =     '<a:cs typeface=\"\"/>';\n    o[o.length] =     '<a:font script=\"Jpan\" typeface=\"ＭＳ Ｐゴシック\"/>';\n    o[o.length] =     '<a:font script=\"Hang\" typeface=\"맑은 고딕\"/>';\n    o[o.length] =     '<a:font script=\"Hans\" typeface=\"宋体\"/>';\n    o[o.length] =     '<a:font script=\"Hant\" typeface=\"新細明體\"/>';\n    o[o.length] =     '<a:font script=\"Arab\" typeface=\"Arial\"/>';\n    o[o.length] =     '<a:font script=\"Hebr\" typeface=\"Arial\"/>';\n    o[o.length] =     '<a:font script=\"Thai\" typeface=\"Tahoma\"/>';\n    o[o.length] =     '<a:font script=\"Ethi\" typeface=\"Nyala\"/>';\n    o[o.length] =     '<a:font script=\"Beng\" typeface=\"Vrinda\"/>';\n    o[o.length] =     '<a:font script=\"Gujr\" typeface=\"Shruti\"/>';\n    o[o.length] =     '<a:font script=\"Khmr\" typeface=\"DaunPenh\"/>';\n    o[o.length] =     '<a:font script=\"Knda\" typeface=\"Tunga\"/>';\n    o[o.length] =     '<a:font script=\"Guru\" typeface=\"Raavi\"/>';\n    o[o.length] =     '<a:font script=\"Cans\" typeface=\"Euphemia\"/>';\n    o[o.length] =     '<a:font script=\"Cher\" typeface=\"Plantagenet Cherokee\"/>';\n    o[o.length] =     '<a:font script=\"Yiii\" typeface=\"Microsoft Yi Baiti\"/>';\n    o[o.length] =     '<a:font script=\"Tibt\" typeface=\"Microsoft Himalaya\"/>';\n    o[o.length] =     '<a:font script=\"Thaa\" typeface=\"MV Boli\"/>';\n    o[o.length] =     '<a:font script=\"Deva\" typeface=\"Mangal\"/>';\n    o[o.length] =     '<a:font script=\"Telu\" typeface=\"Gautami\"/>';\n    o[o.length] =     '<a:font script=\"Taml\" typeface=\"Latha\"/>';\n    o[o.length] =     '<a:font script=\"Syrc\" typeface=\"Estrangelo Edessa\"/>';\n    o[o.length] =     '<a:font script=\"Orya\" typeface=\"Kalinga\"/>';\n    o[o.length] =     '<a:font script=\"Mlym\" typeface=\"Kartika\"/>';\n    o[o.length] =     '<a:font script=\"Laoo\" typeface=\"DokChampa\"/>';\n    o[o.length] =     '<a:font script=\"Sinh\" typeface=\"Iskoola Pota\"/>';\n    o[o.length] =     '<a:font script=\"Mong\" typeface=\"Mongolian Baiti\"/>';\n    o[o.length] =     '<a:font script=\"Viet\" typeface=\"Arial\"/>';\n    o[o.length] =     '<a:font script=\"Uigh\" typeface=\"Microsoft Uighur\"/>';\n    o[o.length] =     '<a:font script=\"Geor\" typeface=\"Sylfaen\"/>';\n    o[o.length] =    '</a:minorFont>';\n    o[o.length] =   '</a:fontScheme>';\n\n    o[o.length] =   '<a:fmtScheme name=\"Office\">';\n    o[o.length] =    '<a:fillStyleLst>';\n    o[o.length] =     '<a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill>';\n    o[o.length] =     '<a:gradFill rotWithShape=\"1\">';\n    o[o.length] =      '<a:gsLst>';\n    o[o.length] =       '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"50000\"/><a:satMod val=\"300000\"/></a:schemeClr></a:gs>';\n    o[o.length] =       '<a:gs pos=\"35000\"><a:schemeClr val=\"phClr\"><a:tint val=\"37000\"/><a:satMod val=\"300000\"/></a:schemeClr></a:gs>';\n    o[o.length] =       '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:tint val=\"15000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\n    o[o.length] =      '</a:gsLst>';\n    o[o.length] =      '<a:lin ang=\"16200000\" scaled=\"1\"/>';\n    o[o.length] =     '</a:gradFill>';\n    o[o.length] =     '<a:gradFill rotWithShape=\"1\">';\n    o[o.length] =      '<a:gsLst>';\n    o[o.length] =       '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"100000\"/><a:shade val=\"100000\"/><a:satMod val=\"130000\"/></a:schemeClr></a:gs>';\n    o[o.length] =       '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:tint val=\"50000\"/><a:shade val=\"100000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\n    o[o.length] =      '</a:gsLst>';\n    o[o.length] =      '<a:lin ang=\"16200000\" scaled=\"0\"/>';\n    o[o.length] =     '</a:gradFill>';\n    o[o.length] =    '</a:fillStyleLst>';\n    o[o.length] =    '<a:lnStyleLst>';\n    o[o.length] =     '<a:ln w=\"9525\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\"><a:shade val=\"95000\"/><a:satMod val=\"105000\"/></a:schemeClr></a:solidFill><a:prstDash val=\"solid\"/></a:ln>';\n    o[o.length] =     '<a:ln w=\"25400\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill><a:prstDash val=\"solid\"/></a:ln>';\n    o[o.length] =     '<a:ln w=\"38100\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill><a:prstDash val=\"solid\"/></a:ln>';\n    o[o.length] =    '</a:lnStyleLst>';\n    o[o.length] =    '<a:effectStyleLst>';\n    o[o.length] =     '<a:effectStyle>';\n    o[o.length] =      '<a:effectLst>';\n    o[o.length] =       '<a:outerShdw blurRad=\"40000\" dist=\"20000\" dir=\"5400000\" rotWithShape=\"0\"><a:srgbClr val=\"000000\"><a:alpha val=\"38000\"/></a:srgbClr></a:outerShdw>';\n    o[o.length] =      '</a:effectLst>';\n    o[o.length] =     '</a:effectStyle>';\n    o[o.length] =     '<a:effectStyle>';\n    o[o.length] =      '<a:effectLst>';\n    o[o.length] =       '<a:outerShdw blurRad=\"40000\" dist=\"23000\" dir=\"5400000\" rotWithShape=\"0\"><a:srgbClr val=\"000000\"><a:alpha val=\"35000\"/></a:srgbClr></a:outerShdw>';\n    o[o.length] =      '</a:effectLst>';\n    o[o.length] =     '</a:effectStyle>';\n    o[o.length] =     '<a:effectStyle>';\n    o[o.length] =      '<a:effectLst>';\n    o[o.length] =       '<a:outerShdw blurRad=\"40000\" dist=\"23000\" dir=\"5400000\" rotWithShape=\"0\"><a:srgbClr val=\"000000\"><a:alpha val=\"35000\"/></a:srgbClr></a:outerShdw>';\n    o[o.length] =      '</a:effectLst>';\n    o[o.length] =      '<a:scene3d><a:camera prst=\"orthographicFront\"><a:rot lat=\"0\" lon=\"0\" rev=\"0\"/></a:camera><a:lightRig rig=\"threePt\" dir=\"t\"><a:rot lat=\"0\" lon=\"0\" rev=\"1200000\"/></a:lightRig></a:scene3d>';\n    o[o.length] =      '<a:sp3d><a:bevelT w=\"63500\" h=\"25400\"/></a:sp3d>';\n    o[o.length] =     '</a:effectStyle>';\n    o[o.length] =    '</a:effectStyleLst>';\n    o[o.length] =    '<a:bgFillStyleLst>';\n    o[o.length] =     '<a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill>';\n    o[o.length] =     '<a:gradFill rotWithShape=\"1\">';\n    o[o.length] =      '<a:gsLst>';\n    o[o.length] =       '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"40000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\n    o[o.length] =       '<a:gs pos=\"40000\"><a:schemeClr val=\"phClr\"><a:tint val=\"45000\"/><a:shade val=\"99000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\n    o[o.length] =       '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:shade val=\"20000\"/><a:satMod val=\"255000\"/></a:schemeClr></a:gs>';\n    o[o.length] =      '</a:gsLst>';\n    o[o.length] =      '<a:path path=\"circle\"><a:fillToRect l=\"50000\" t=\"-80000\" r=\"50000\" b=\"180000\"/></a:path>';\n    o[o.length] =     '</a:gradFill>';\n    o[o.length] =     '<a:gradFill rotWithShape=\"1\">';\n    o[o.length] =      '<a:gsLst>';\n    o[o.length] =       '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"80000\"/><a:satMod val=\"300000\"/></a:schemeClr></a:gs>';\n    o[o.length] =       '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:shade val=\"30000\"/><a:satMod val=\"200000\"/></a:schemeClr></a:gs>';\n    o[o.length] =      '</a:gsLst>';\n    o[o.length] =      '<a:path path=\"circle\"><a:fillToRect l=\"50000\" t=\"50000\" r=\"50000\" b=\"50000\"/></a:path>';\n    o[o.length] =     '</a:gradFill>';\n    o[o.length] =    '</a:bgFillStyleLst>';\n    o[o.length] =   '</a:fmtScheme>';\n    o[o.length] =  '</a:themeElements>';\n\n    o[o.length] =  '<a:objectDefaults>';\n    o[o.length] =   '<a:spDef>';\n    o[o.length] =    '<a:spPr/><a:bodyPr/><a:lstStyle/><a:style><a:lnRef idx=\"1\"><a:schemeClr val=\"accent1\"/></a:lnRef><a:fillRef idx=\"3\"><a:schemeClr val=\"accent1\"/></a:fillRef><a:effectRef idx=\"2\"><a:schemeClr val=\"accent1\"/></a:effectRef><a:fontRef idx=\"minor\"><a:schemeClr val=\"lt1\"/></a:fontRef></a:style>';\n    o[o.length] =   '</a:spDef>';\n    o[o.length] =   '<a:lnDef>';\n    o[o.length] =    '<a:spPr/><a:bodyPr/><a:lstStyle/><a:style><a:lnRef idx=\"2\"><a:schemeClr val=\"accent1\"/></a:lnRef><a:fillRef idx=\"0\"><a:schemeClr val=\"accent1\"/></a:fillRef><a:effectRef idx=\"1\"><a:schemeClr val=\"accent1\"/></a:effectRef><a:fontRef idx=\"minor\"><a:schemeClr val=\"tx1\"/></a:fontRef></a:style>';\n    o[o.length] =   '</a:lnDef>';\n    o[o.length] =  '</a:objectDefaults>';\n    o[o.length] =  '<a:extraClrSchemeLst/>';\n    o[o.length] = '</a:theme>';\n    return o.join(\"\");\n  }\n  /* [MS-XLS] 2.4.326 TODO: payload is a zip file */\n  function parse_Theme(blob, length, opts) {\n    var end = blob.l + length;\n    var dwThemeVersion = blob.read_shift(4);\n    if(dwThemeVersion === 124226) return;\n    if(!opts.cellStyles || !jszip) { blob.l = end; return; }\n    var data = blob.slice(blob.l);\n    blob.l = end;\n    var zip; try { zip = new jszip(data); } catch(e) { return; }\n    var themeXML = getzipstr(zip, \"theme/theme/theme1.xml\", true);\n    if(!themeXML) return;\n    return parse_theme_xml(themeXML, opts);\n  }\n\n  /* 2.5.49 */\n  function parse_ColorTheme(blob) { return blob.read_shift(4); }\n\n  /* 2.5.155 */\n  function parse_FullColorExt(blob) {\n    var o = {};\n    o.xclrType = blob.read_shift(2);\n    o.nTintShade = blob.read_shift(2);\n    switch(o.xclrType) {\n      case 0: blob.l += 4; break;\n      case 1: o.xclrValue = parse_IcvXF(blob, 4); break;\n      case 2: o.xclrValue = parse_LongRGBA(blob, 4); break;\n      case 3: o.xclrValue = parse_ColorTheme(blob, 4); break;\n      case 4: blob.l += 4; break;\n    }\n    blob.l += 8;\n    return o;\n  }\n\n  /* 2.5.164 TODO: read 7 bits*/\n  function parse_IcvXF(blob, length) {\n    return parsenoop(blob, length);\n  }\n\n  /* 2.5.280 */\n  function parse_XFExtGradient(blob, length) {\n    return parsenoop(blob, length);\n  }\n\n  /* [MS-XLS] 2.5.108 */\n  function parse_ExtProp(blob) {\n    var extType = blob.read_shift(2);\n    var cb = blob.read_shift(2) - 4;\n    var o = [extType];\n    switch(extType) {\n      case 0x04: case 0x05: case 0x07: case 0x08:\n      case 0x09: case 0x0A: case 0x0B: case 0x0D:\n        o[1] = parse_FullColorExt(blob, cb); break;\n      case 0x06: o[1] = parse_XFExtGradient(blob, cb); break;\n      case 0x0E: case 0x0F: o[1] = blob.read_shift(cb === 1 ? 1 : 2); break;\n      default: throw new Error(\"Unrecognized ExtProp type: \" + extType + \" \" + cb);\n    }\n    return o;\n  }\n\n  /* 2.4.355 */\n  function parse_XFExt(blob, length) {\n    var end = blob.l + length;\n    blob.l += 2;\n    var ixfe = blob.read_shift(2);\n    blob.l += 2;\n    var cexts = blob.read_shift(2);\n    var ext = [];\n    while(cexts-- > 0) ext.push(parse_ExtProp(blob, end-blob.l));\n    return {ixfe:ixfe, ext:ext};\n  }\n\n  /* xf is an XF, see parse_XFExt for xfext */\n  function update_xfext(xf, xfext) {\n    xfext.forEach(function(xfe) {\n      switch(xfe[0]) { /* 2.5.108 extPropData */\n        case 0x04: break; /* foreground color */\n        case 0x05: break; /* background color */\n        case 0x06: break; /* gradient fill */\n        case 0x07: break; /* top cell border color */\n        case 0x08: break; /* bottom cell border color */\n        case 0x09: break; /* left cell border color */\n        case 0x0a: break; /* right cell border color */\n        case 0x0b: break; /* diagonal cell border color */\n        case 0x0d: break; /* text color */\n        case 0x0e: break; /* font scheme */\n        case 0x0f: break; /* indentation level */\n      }\n    });\n  }\n\n  /* 18.6 Calculation Chain */\n  function parse_cc_xml(data) {\n    var d = [];\n    if(!data) return d;\n    var i = 1;\n    (data.match(tagregex)||[]).forEach(function(x) {\n      var y = parsexmltag(x);\n      switch(y[0]) {\n        case '<?xml': break;\n        /* 18.6.2  calcChain CT_CalcChain 1 */\n        case '<calcChain': case '<calcChain>': case '</calcChain>': break;\n        /* 18.6.1  c CT_CalcCell 1 */\n        case '<c': delete y[0]; if(y.i) i = y.i; else y.i = i; d.push(y); break;\n      }\n    });\n    return d;\n  }\n\n//function write_cc_xml(data, opts) { }\n\n  /* [MS-XLSB] 2.6.4.1 */\n  function parse_BrtCalcChainItem$(data) {\n    var out = {};\n    out.i = data.read_shift(4);\n    var cell = {};\n    cell.r = data.read_shift(4);\n    cell.c = data.read_shift(4);\n    out.r = encode_cell(cell);\n    var flags = data.read_shift(1);\n    if(flags & 0x2) out.l = '1';\n    if(flags & 0x8) out.a = '1';\n    return out;\n  }\n\n  /* 18.6 Calculation Chain */\n  function parse_cc_bin(data, name, opts) {\n    var out = [];\n    var pass = false;\n    recordhopper(data, function hopper_cc(val, R_n, RT) {\n      switch(RT) {\n        case 0x003F: /* 'BrtCalcChainItem$' */\n          out.push(val); break;\n\n        default:\n          if((R_n||\"\").indexOf(\"Begin\") > 0){/* empty */}\n          else if((R_n||\"\").indexOf(\"End\") > 0){/* empty */}\n          else if(!pass || opts.WTF) throw new Error(\"Unexpected record \" + RT + \" \" + R_n);\n      }\n    });\n    return out;\n  }\n\n//function write_cc_bin(data, opts) { }\n  /* 18.14 Supplementary Workbook Data */\n  function parse_xlink_xml() {\n    //var opts = _opts || {};\n    //if(opts.WTF) throw \"XLSX External Link\";\n  }\n\n  /* [MS-XLSB] 2.1.7.25 External Link */\n  function parse_xlink_bin(data, name, _opts) {\n    if(!data) return data;\n    var opts = _opts || {};\n\n    var pass = false, end = false;\n\n    recordhopper(data, function xlink_parse(val, R_n, RT) {\n      if(end) return;\n      switch(RT) {\n        case 0x0167: /* 'BrtSupTabs' */\n        case 0x016B: /* 'BrtExternTableStart' */\n        case 0x016C: /* 'BrtExternTableEnd' */\n        case 0x016E: /* 'BrtExternRowHdr' */\n        case 0x016F: /* 'BrtExternCellBlank' */\n        case 0x0170: /* 'BrtExternCellReal' */\n        case 0x0171: /* 'BrtExternCellBool' */\n        case 0x0172: /* 'BrtExternCellError' */\n        case 0x0173: /* 'BrtExternCellString' */\n        case 0x01D8: /* 'BrtExternValueMeta' */\n        case 0x0241: /* 'BrtSupNameStart' */\n        case 0x0242: /* 'BrtSupNameValueStart' */\n        case 0x0243: /* 'BrtSupNameValueEnd' */\n        case 0x0244: /* 'BrtSupNameNum' */\n        case 0x0245: /* 'BrtSupNameErr' */\n        case 0x0246: /* 'BrtSupNameSt' */\n        case 0x0247: /* 'BrtSupNameNil' */\n        case 0x0248: /* 'BrtSupNameBool' */\n        case 0x0249: /* 'BrtSupNameFmla' */\n        case 0x024A: /* 'BrtSupNameBits' */\n        case 0x024B: /* 'BrtSupNameEnd' */\n          break;\n\n        case 0x0023: /* 'BrtFRTBegin' */\n          pass = true; break;\n        case 0x0024: /* 'BrtFRTEnd' */\n          pass = false; break;\n\n        default:\n          if((R_n||\"\").indexOf(\"Begin\") > 0){/* empty */}\n          else if((R_n||\"\").indexOf(\"End\") > 0){/* empty */}\n          else if(!pass || opts.WTF) throw new Error(\"Unexpected record \" + RT.toString(16) + \" \" + R_n);\n      }\n    }, opts);\n  }\n  RELS.IMG = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\";\n  RELS.DRAW = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/drawing\";\n  /* 20.5 DrawingML - SpreadsheetML Drawing */\n  function parse_drawing(data, rels) {\n    if(!data) return \"??\";\n    /*\n\t  Chartsheet Drawing:\n\t   - 20.5.2.35 wsDr CT_Drawing\n\t    - 20.5.2.1  absoluteAnchor CT_AbsoluteAnchor\n\t     - 20.5.2.16 graphicFrame CT_GraphicalObjectFrame\n\t      - 20.1.2.2.16 graphic CT_GraphicalObject\n\t       - 20.1.2.2.17 graphicData CT_GraphicalObjectData\n          - chart reference\n\t   the actual type is based on the URI of the graphicData\n\t\tTODO: handle embedded charts and other types of graphics\n\t*/\n    var id = (data.match(/<c:chart [^>]*r:id=\"([^\"]*)\"/)||[\"\",\"\"])[1];\n\n    return rels['!id'][id].Target;\n  }\n\n  /* L.5.5.2 SpreadsheetML Comments + VML Schema */\n  var _shapeid = 1024;\n  function write_comments_vml(rId, comments) {\n    var csize = [21600, 21600];\n    /* L.5.2.1.2 Path Attribute */\n    var bbox = [\"m0,0l0\",csize[1],csize[0],csize[1],csize[0],\"0xe\"].join(\",\");\n    var o = [\n      writextag(\"xml\", null, { 'xmlns:v': XLMLNS.v, 'xmlns:o': XLMLNS.o, 'xmlns:x': XLMLNS.x, 'xmlns:mv': XLMLNS.mv }).replace(/\\/>/,\">\"),\n      writextag(\"o:shapelayout\", writextag(\"o:idmap\", null, {'v:ext':\"edit\", 'data':rId}), {'v:ext':\"edit\"}),\n      writextag(\"v:shapetype\", [\n        writextag(\"v:stroke\", null, {joinstyle:\"miter\"}),\n        writextag(\"v:path\", null, {gradientshapeok:\"t\", 'o:connecttype':\"rect\"})\n      ].join(\"\"), {id:\"_x0000_t202\", 'o:spt':202, coordsize:csize.join(\",\"),path:bbox})\n    ];\n    while(_shapeid < rId * 1000) _shapeid += 1000;\n\n    comments.forEach(function(x) { var c = decode_cell(x[0]);\n      o = o.concat([\n        '<v:shape' + wxt_helper({\n          id:'_x0000_s' + (++_shapeid),\n          type:\"#_x0000_t202\",\n          style:\"position:absolute; margin-left:80pt;margin-top:5pt;width:104pt;height:64pt;z-index:10\" + (x[1].hidden ? \";visibility:hidden\" : \"\") ,\n          fillcolor:\"#ECFAD4\",\n          strokecolor:\"#edeaa1\"\n        }) + '>',\n        writextag('v:fill', writextag(\"o:fill\", null, {type:\"gradientUnscaled\", 'v:ext':\"view\"}), {'color2':\"#BEFF82\", 'angle':\"-180\", 'type':\"gradient\"}),\n        writextag(\"v:shadow\", null, {on:\"t\", 'obscured':\"t\"}),\n        writextag(\"v:path\", null, {'o:connecttype':\"none\"}),\n        '<v:textbox><div style=\"text-align:left\"></div></v:textbox>',\n        '<x:ClientData ObjectType=\"Note\">',\n        '<x:MoveWithCells/>',\n        '<x:SizeWithCells/>',\n        /* Part 4 19.4.2.3 Anchor (Anchor) */\n        writetag('x:Anchor', [c.c, 0, c.r, 0, c.c+3, 100, c.r+5, 100].join(\",\")),\n        writetag('x:AutoFill', \"False\"),\n        writetag('x:Row', String(c.r)),\n        writetag('x:Column', String(c.c)),\n        x[1].hidden ? '' : '<x:Visible/>',\n        '</x:ClientData>',\n        '</v:shape>'\n      ]); });\n    o.push('</xml>');\n    return o.join(\"\");\n  }\n\n  RELS.CMNT = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/comments\";\n\n  function parse_comments(zip, dirComments, sheets, sheetRels, opts) {\n    for(var i = 0; i != dirComments.length; ++i) {\n      var canonicalpath=dirComments[i];\n      var comments=parse_cmnt(getzipdata(zip, canonicalpath.replace(/^\\//,''), true), canonicalpath, opts);\n      if(!comments || !comments.length) continue;\n      // find the sheets targeted by these comments\n      var sheetNames = keys(sheets);\n      for(var j = 0; j != sheetNames.length; ++j) {\n        var sheetName = sheetNames[j];\n        var rels = sheetRels[sheetName];\n        if(rels) {\n          var rel = rels[canonicalpath];\n          if(rel) insertCommentsIntoSheet(sheetName, sheets[sheetName], comments);\n        }\n      }\n    }\n  }\n\n  function insertCommentsIntoSheet(sheetName, sheet, comments) {\n    var dense = Array.isArray(sheet);\n    var cell;\n    comments.forEach(function(comment) {\n      var r = decode_cell(comment.ref);\n      if(dense) {\n        if(!sheet[r.r]) sheet[r.r] = [];\n        cell = sheet[r.r][r.c];\n      } else cell = sheet[comment.ref];\n      if (!cell) {\n        cell = {};\n        if(dense) sheet[r.r][r.c] = cell;\n        else sheet[comment.ref] = cell;\n        var range = safe_decode_range(sheet[\"!ref\"]||\"BDWGO1000001:A1\");\n        if(range.s.r > r.r) range.s.r = r.r;\n        if(range.e.r < r.r) range.e.r = r.r;\n        if(range.s.c > r.c) range.s.c = r.c;\n        if(range.e.c < r.c) range.e.c = r.c;\n        var encoded = encode_range(range);\n        if (encoded !== sheet[\"!ref\"]) sheet[\"!ref\"] = encoded;\n      }\n\n      if (!cell.c) cell.c = [];\n      var o = ({a: comment.author, t: comment.t, r: comment.r});\n      if(comment.h) o.h = comment.h;\n      cell.c.push(o);\n    });\n  }\n\n  /* 18.7 Comments */\n  function parse_comments_xml(data, opts) {\n    /* 18.7.6 CT_Comments */\n    if(data.match(/<(?:\\w+:)?comments *\\/>/)) return [];\n    var authors = [];\n    var commentList = [];\n    var authtag = data.match(/<(?:\\w+:)?authors>([\\s\\S]*)<\\/(?:\\w+:)?authors>/);\n    if(authtag && authtag[1]) authtag[1].split(/<\\/\\w*:?author>/).forEach(function(x) {\n      if(x === \"\" || x.trim() === \"\") return;\n      var a = x.match(/<(?:\\w+:)?author[^>]*>(.*)/);\n      if(a) authors.push(a[1]);\n    });\n    var cmnttag = data.match(/<(?:\\w+:)?commentList>([\\s\\S]*)<\\/(?:\\w+:)?commentList>/);\n    if(cmnttag && cmnttag[1]) cmnttag[1].split(/<\\/\\w*:?comment>/).forEach(function(x) {\n      if(x === \"\" || x.trim() === \"\") return;\n      var cm = x.match(/<(?:\\w+:)?comment[^>]*>/);\n      if(!cm) return;\n      var y = parsexmltag(cm[0]);\n      var comment = ({ author: y.authorId && authors[y.authorId] || \"sheetjsghost\", ref: y.ref, guid: y.guid });\n      var cell = decode_cell(y.ref);\n      if(opts.sheetRows && opts.sheetRows <= cell.r) return;\n      var textMatch = x.match(/<(?:\\w+:)?text>([\\s\\S]*)<\\/(?:\\w+:)?text>/);\n      var rt = !!textMatch && !!textMatch[1] && parse_si(textMatch[1]) || {r:\"\",t:\"\",h:\"\"};\n      comment.r = rt.r;\n      if(rt.r == \"<t></t>\") rt.t = rt.h = \"\";\n      comment.t = rt.t.replace(/\\r\\n/g,\"\\n\").replace(/\\r/g,\"\\n\");\n      if(opts.cellHTML) comment.h = rt.h;\n      commentList.push(comment);\n    });\n    return commentList;\n  }\n\n  var CMNT_XML_ROOT = writextag('comments', null, { 'xmlns': XMLNS.main[0] });\n  function write_comments_xml(data) {\n    var o = [XML_HEADER, CMNT_XML_ROOT];\n\n    var iauthor = [];\n    o.push(\"<authors>\");\n    data.forEach(function(x) { x[1].forEach(function(w) { var a = escapexml(w.a);\n      if(iauthor.indexOf(a) > -1) return;\n      iauthor.push(a);\n      o.push(\"<author>\" + a + \"</author>\");\n    }); });\n    o.push(\"</authors>\");\n    o.push(\"<commentList>\");\n    data.forEach(function(d) {\n      d[1].forEach(function(c) {\n        /* 18.7.3 CT_Comment */\n        o.push('<comment ref=\"' + d[0] + '\" authorId=\"' + iauthor.indexOf(escapexml(c.a)) + '\"><text>');\n        o.push(writetag(\"t\", c.t == null ? \"\" : escapexml(c.t)));\n        o.push('</text></comment>');\n      });\n    });\n    o.push(\"</commentList>\");\n    if(o.length>2) { o[o.length] = ('</comments>'); o[1]=o[1].replace(\"/>\",\">\"); }\n    return o.join(\"\");\n  }\n  /* [MS-XLSB] 2.4.28 BrtBeginComment */\n  function parse_BrtBeginComment(data) {\n    var out = {};\n    out.iauthor = data.read_shift(4);\n    var rfx = parse_UncheckedRfX(data, 16);\n    out.rfx = rfx.s;\n    out.ref = encode_cell(rfx.s);\n    data.l += 16; /*var guid = parse_GUID(data); */\n    return out;\n  }\n  function write_BrtBeginComment(data, o) {\n    if(o == null) o = new_buf(36);\n    o.write_shift(4, data[1].iauthor);\n    write_UncheckedRfX((data[0]), o);\n    o.write_shift(4, 0);\n    o.write_shift(4, 0);\n    o.write_shift(4, 0);\n    o.write_shift(4, 0);\n    return o;\n  }\n\n  /* [MS-XLSB] 2.4.327 BrtCommentAuthor */\n  var parse_BrtCommentAuthor = parse_XLWideString;\n  function write_BrtCommentAuthor(data) { return write_XLWideString(data.slice(0, 54)); }\n\n  /* [MS-XLSB] 2.1.7.8 Comments */\n  function parse_comments_bin(data, opts) {\n    var out = [];\n    var authors = [];\n    var c = {};\n    var pass = false;\n    recordhopper(data, function hopper_cmnt(val, R_n, RT) {\n      switch(RT) {\n        case 0x0278: /* 'BrtCommentAuthor' */\n          authors.push(val); break;\n        case 0x027B: /* 'BrtBeginComment' */\n          c = val; break;\n        case 0x027D: /* 'BrtCommentText' */\n          c.t = val.t; c.h = val.h; c.r = val.r; break;\n        case 0x027C: /* 'BrtEndComment' */\n          c.author = authors[c.iauthor];\n          delete c.iauthor;\n          if(opts.sheetRows && opts.sheetRows <= c.rfx.r) break;\n          if(!c.t) c.t = \"\";\n          delete c.rfx; out.push(c); break;\n\n        case 0x0C00: /* 'BrtUid' */\n          break;\n\n        case 0x0023: /* 'BrtFRTBegin' */\n          pass = true; break;\n        case 0x0024: /* 'BrtFRTEnd' */\n          pass = false; break;\n        case 0x0025: /* 'BrtACBegin' */ break;\n        case 0x0026: /* 'BrtACEnd' */ break;\n\n\n        default:\n          if((R_n||\"\").indexOf(\"Begin\") > 0){/* empty */}\n          else if((R_n||\"\").indexOf(\"End\") > 0){/* empty */}\n          else if(!pass || opts.WTF) throw new Error(\"Unexpected record \" + RT + \" \" + R_n);\n      }\n    });\n    return out;\n  }\n\n  function write_comments_bin(data) {\n    var ba = buf_array();\n    var iauthor = [];\n    write_record(ba, \"BrtBeginComments\");\n\n    write_record(ba, \"BrtBeginCommentAuthors\");\n    data.forEach(function(comment) {\n      comment[1].forEach(function(c) {\n        if(iauthor.indexOf(c.a) > -1) return;\n        iauthor.push(c.a.slice(0,54));\n        write_record(ba, \"BrtCommentAuthor\", write_BrtCommentAuthor(c.a));\n      });\n    });\n    write_record(ba, \"BrtEndCommentAuthors\");\n\n    write_record(ba, \"BrtBeginCommentList\");\n    data.forEach(function(comment) {\n      comment[1].forEach(function(c) {\n        c.iauthor = iauthor.indexOf(c.a);\n        var range = {s:decode_cell(comment[0]),e:decode_cell(comment[0])};\n        write_record(ba, \"BrtBeginComment\", write_BrtBeginComment([range, c]));\n        if(c.t && c.t.length > 0) write_record(ba, \"BrtCommentText\", write_BrtCommentText(c));\n        write_record(ba, \"BrtEndComment\");\n        delete c.iauthor;\n      });\n    });\n    write_record(ba, \"BrtEndCommentList\");\n\n    write_record(ba, \"BrtEndComments\");\n    return ba.end();\n  }\n  var CT_VBA = \"application/vnd.ms-office.vbaProject\";\n  function make_vba_xls(cfb) {\n    var newcfb = CFB.utils.cfb_new({root:\"R\"});\n    cfb.FullPaths.forEach(function(p, i) {\n      if(p.slice(-1) === \"/\" || !p.match(/_VBA_PROJECT_CUR/)) return;\n      var newpath = p.replace(/^[^\\/]*/,\"R\").replace(/\\/_VBA_PROJECT_CUR\\u0000*/, \"\");\n      CFB.utils.cfb_add(newcfb, newpath, cfb.FileIndex[i].content);\n    });\n    return CFB.write(newcfb);\n  }\n\n  function fill_vba_xls(cfb, vba) {\n    vba.FullPaths.forEach(function(p, i) {\n      if(i == 0) return;\n      var newpath = p.replace(/[^\\/]*[\\/]/, \"/_VBA_PROJECT_CUR/\");\n      if(newpath.slice(-1) !== \"/\") CFB.utils.cfb_add(cfb, newpath, vba.FileIndex[i].content);\n    });\n  }\n\n  var VBAFMTS = [ \"xlsb\", \"xlsm\", \"xlam\", \"biff8\", \"xla\" ];\n\n  RELS.DS = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/dialogsheet\";\n  RELS.MS = \"http://schemas.microsoft.com/office/2006/relationships/xlMacrosheet\";\n\n  /* macro and dialog sheet stubs */\n  function parse_ds_bin() { return {'!type':'dialog'}; }\n  function parse_ds_xml() { return {'!type':'dialog'}; }\n  function parse_ms_bin() { return {'!type':'macro'}; }\n  function parse_ms_xml() { return {'!type':'macro'}; }\n  /* TODO: it will be useful to parse the function str */\n  var rc_to_a1 = (function(){\n    var rcregex = /(^|[^A-Za-z])R(\\[?)(-?\\d+|)\\]?C(\\[?)(-?\\d+|)\\]?/g;\n    var rcbase = ({r:0,c:0});\n    function rcfunc($$,$1,$2,$3,$4,$5) {\n      var R = $3.length>0?parseInt($3,10)|0:0, C = $5.length>0?parseInt($5,10)|0:0;\n      if(C<0 && $4.length === 0) C=0;\n      var cRel = false, rRel = false;\n      if($4.length > 0 || $5.length == 0) cRel = true; if(cRel) C += rcbase.c; else --C;\n      if($2.length > 0 || $3.length == 0) rRel = true; if(rRel) R += rcbase.r; else --R;\n      return $1 + (cRel ? \"\" : \"$\") + encode_col(C) + (rRel ? \"\" : \"$\") + encode_row(R);\n    }\n    return function rc_to_a1(fstr, base) {\n      rcbase = base;\n      return fstr.replace(rcregex, rcfunc);\n    };\n  })();\n\n  var crefregex = /(^|[^._A-Z0-9])([$]?)([A-Z]{1,2}|[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D])([$]?)([1-9]\\d{0,5}|10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6])(?![_.\\(A-Za-z0-9])/g;\n  var a1_to_rc =(function(){\n    return function a1_to_rc(fstr, base) {\n      return fstr.replace(crefregex, function($0, $1, $2, $3, $4, $5) {\n        var c = decode_col($3) - ($2 ? 0 : base.c);\n        var r = decode_row($5) - ($4 ? 0 : base.r);\n        var R = (r == 0 ? \"\" : !$4 ? \"[\" + r + \"]\" : (r+1));\n        var C = (c == 0 ? \"\" : !$2 ? \"[\" + c + \"]\" : (c+1));\n        return $1 + \"R\" + R + \"C\" + C;\n      });\n    };\n  })();\n\n  /* no defined name can collide with a valid cell address A1:XFD1048576 ... except LOG10! */\n  function shift_formula_str(f, delta) {\n    return f.replace(crefregex, function($0, $1, $2, $3, $4, $5) {\n      return $1+($2==\"$\" ? $2+$3 : encode_col(decode_col($3)+delta.c))+($4==\"$\" ? $4+$5 : encode_row(decode_row($5) + delta.r));\n    });\n  }\n\n  function shift_formula_xlsx(f, range, cell) {\n    var r = decode_range(range), s = r.s, c = decode_cell(cell);\n    var delta = {r:c.r - s.r, c:c.c - s.c};\n    return shift_formula_str(f, delta);\n  }\n\n  /* TODO: parse formula */\n  function fuzzyfmla(f) {\n    if(f.length == 1) return false;\n    return true;\n  }\n\n  function _xlfn(f) {\n    return f.replace(/_xlfn\\./g,\"\");\n  }\n  function parseread1(blob) { blob.l+=1; return; }\n\n  /* [MS-XLS] 2.5.51 */\n  function parse_ColRelU(blob, length) {\n    var c = blob.read_shift(length == 1 ? 1 : 2);\n    return [c & 0x3FFF, (c >> 14) & 1, (c >> 15) & 1];\n  }\n\n  /* [MS-XLS] 2.5.198.105 ; [MS-XLSB] 2.5.97.89 */\n  function parse_RgceArea(blob, length, opts) {\n    var w = 2;\n    if(opts) {\n      if(opts.biff >= 2 && opts.biff <= 5) return parse_RgceArea_BIFF2(blob, length, opts);\n      else if(opts.biff == 12) w = 4;\n    }\n    var r=blob.read_shift(w), R=blob.read_shift(w);\n    var c=parse_ColRelU(blob, 2);\n    var C=parse_ColRelU(blob, 2);\n    return { s:{r:r, c:c[0], cRel:c[1], rRel:c[2]}, e:{r:R, c:C[0], cRel:C[1], rRel:C[2]} };\n  }\n  /* BIFF 2-5 encodes flags in the row field */\n  function parse_RgceArea_BIFF2(blob) {\n    var r=parse_ColRelU(blob, 2), R=parse_ColRelU(blob, 2);\n    var c=blob.read_shift(1);\n    var C=blob.read_shift(1);\n    return { s:{r:r[0], c:c, cRel:r[1], rRel:r[2]}, e:{r:R[0], c:C, cRel:R[1], rRel:R[2]} };\n  }\n\n  /* [MS-XLS] 2.5.198.105 ; [MS-XLSB] 2.5.97.90 */\n  function parse_RgceAreaRel(blob, length, opts) {\n    if(opts.biff < 8) return parse_RgceArea_BIFF2(blob, length, opts);\n    var r=blob.read_shift(opts.biff == 12 ? 4 : 2), R=blob.read_shift(opts.biff == 12 ? 4 : 2);\n    var c=parse_ColRelU(blob, 2);\n    var C=parse_ColRelU(blob, 2);\n    return { s:{r:r, c:c[0], cRel:c[1], rRel:c[2]}, e:{r:R, c:C[0], cRel:C[1], rRel:C[2]} };\n  }\n\n  /* [MS-XLS] 2.5.198.109 ; [MS-XLSB] 2.5.97.91 */\n  function parse_RgceLoc(blob, length, opts) {\n    if(opts && opts.biff >= 2 && opts.biff <= 5) return parse_RgceLoc_BIFF2(blob, length, opts);\n    var r = blob.read_shift(opts && opts.biff == 12 ? 4 : 2);\n    var c = parse_ColRelU(blob, 2);\n    return {r:r, c:c[0], cRel:c[1], rRel:c[2]};\n  }\n  function parse_RgceLoc_BIFF2(blob) {\n    var r = parse_ColRelU(blob, 2);\n    var c = blob.read_shift(1);\n    return {r:r[0], c:c, cRel:r[1], rRel:r[2]};\n  }\n\n  /* [MS-XLS] 2.5.198.107, 2.5.47 */\n  function parse_RgceElfLoc(blob) {\n    var r = blob.read_shift(2);\n    var c = blob.read_shift(2);\n    return {r:r, c:c & 0xFF, fQuoted:!!(c & 0x4000), cRel:c>>15, rRel:c>>15 };\n  }\n\n  /* [MS-XLS] 2.5.198.111 ; [MS-XLSB] 2.5.97.92 TODO */\n  function parse_RgceLocRel(blob, length, opts) {\n    var biff = opts && opts.biff ? opts.biff : 8;\n    if(biff >= 2 && biff <= 5) return parse_RgceLocRel_BIFF2(blob, length, opts);\n    var r = blob.read_shift(biff >= 12 ? 4 : 2);\n    var cl = blob.read_shift(2);\n    var cRel = (cl & 0x4000) >> 14, rRel = (cl & 0x8000) >> 15;\n    cl &= 0x3FFF;\n    if(rRel == 1) while(r > 0x7FFFF) r -= 0x100000;\n    if(cRel == 1) while(cl > 0x1FFF) cl = cl - 0x4000;\n    return {r:r,c:cl,cRel:cRel,rRel:rRel};\n  }\n  function parse_RgceLocRel_BIFF2(blob) {\n    var rl = blob.read_shift(2);\n    var c = blob.read_shift(1);\n    var rRel = (rl & 0x8000) >> 15, cRel = (rl & 0x4000) >> 14;\n    rl &= 0x3FFF;\n    if(rRel == 1 && rl >= 0x2000) rl = rl - 0x4000;\n    if(cRel == 1 && c >= 0x80) c = c - 0x100;\n    return {r:rl,c:c,cRel:cRel,rRel:rRel};\n  }\n\n  /* [MS-XLS] 2.5.198.27 ; [MS-XLSB] 2.5.97.18 */\n  function parse_PtgArea(blob, length, opts) {\n    var type = (blob[blob.l++] & 0x60) >> 5;\n    var area = parse_RgceArea(blob, opts.biff >= 2 && opts.biff <= 5 ? 6 : 8, opts);\n    return [type, area];\n  }\n\n  /* [MS-XLS] 2.5.198.28 ; [MS-XLSB] 2.5.97.19 */\n  function parse_PtgArea3d(blob, length, opts) {\n    var type = (blob[blob.l++] & 0x60) >> 5;\n    var ixti = blob.read_shift(2, 'i');\n    var w = 8;\n    if(opts) switch(opts.biff) {\n      case 5: blob.l += 12; w = 6; break;\n      case 12: w = 12; break;\n    }\n    var area = parse_RgceArea(blob, w, opts);\n    return [type, ixti, area];\n  }\n\n  /* [MS-XLS] 2.5.198.29 ; [MS-XLSB] 2.5.97.20 */\n  function parse_PtgAreaErr(blob, length, opts) {\n    var type = (blob[blob.l++] & 0x60) >> 5;\n    blob.l += opts && (opts.biff > 8) ? 12 : (opts.biff < 8 ? 6 : 8);\n    return [type];\n  }\n  /* [MS-XLS] 2.5.198.30 ; [MS-XLSB] 2.5.97.21 */\n  function parse_PtgAreaErr3d(blob, length, opts) {\n    var type = (blob[blob.l++] & 0x60) >> 5;\n    var ixti = blob.read_shift(2);\n    var w = 8;\n    if(opts) switch(opts.biff) {\n      case 5: blob.l += 12; w = 6; break;\n      case 12: w = 12; break;\n    }\n    blob.l += w;\n    return [type, ixti];\n  }\n\n  /* [MS-XLS] 2.5.198.31 ; [MS-XLSB] 2.5.97.22 */\n  function parse_PtgAreaN(blob, length, opts) {\n    var type = (blob[blob.l++] & 0x60) >> 5;\n    var area = parse_RgceAreaRel(blob, length - 1, opts);\n    return [type, area];\n  }\n\n  /* [MS-XLS] 2.5.198.32 ; [MS-XLSB] 2.5.97.23 */\n  function parse_PtgArray(blob, length, opts) {\n    var type = (blob[blob.l++] & 0x60) >> 5;\n    blob.l += opts.biff == 2 ? 6 : opts.biff == 12 ? 14 : 7;\n    return [type];\n  }\n\n  /* [MS-XLS] 2.5.198.33 ; [MS-XLSB] 2.5.97.24 */\n  function parse_PtgAttrBaxcel(blob) {\n    var bitSemi = blob[blob.l+1] & 0x01; /* 1 = volatile */\n    var bitBaxcel = 1;\n    blob.l += 4;\n    return [bitSemi, bitBaxcel];\n  }\n\n  /* [MS-XLS] 2.5.198.34 ; [MS-XLSB] 2.5.97.25 */\n  function parse_PtgAttrChoose(blob, length, opts) {\n    blob.l +=2;\n    var offset = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n    var o = [];\n    /* offset is 1 less than the number of elements */\n    for(var i = 0; i <= offset; ++i) o.push(blob.read_shift(opts && opts.biff == 2 ? 1 : 2));\n    return o;\n  }\n\n  /* [MS-XLS] 2.5.198.35 ; [MS-XLSB] 2.5.97.26 */\n  function parse_PtgAttrGoto(blob, length, opts) {\n    var bitGoto = (blob[blob.l+1] & 0xFF) ? 1 : 0;\n    blob.l += 2;\n    return [bitGoto, blob.read_shift(opts && opts.biff == 2 ? 1 : 2)];\n  }\n\n  /* [MS-XLS] 2.5.198.36 ; [MS-XLSB] 2.5.97.27 */\n  function parse_PtgAttrIf(blob, length, opts) {\n    var bitIf = (blob[blob.l+1] & 0xFF) ? 1 : 0;\n    blob.l += 2;\n    return [bitIf, blob.read_shift(opts && opts.biff == 2 ? 1 : 2)];\n  }\n\n  /* [MS-XLSB] 2.5.97.28 */\n  function parse_PtgAttrIfError(blob) {\n    var bitIf = (blob[blob.l+1] & 0xFF) ? 1 : 0;\n    blob.l += 2;\n    return [bitIf, blob.read_shift(2)];\n  }\n\n  /* [MS-XLS] 2.5.198.37 ; [MS-XLSB] 2.5.97.29 */\n  function parse_PtgAttrSemi(blob, length, opts) {\n    var bitSemi = (blob[blob.l+1] & 0xFF) ? 1 : 0;\n    blob.l += opts && opts.biff == 2 ? 3 : 4;\n    return [bitSemi];\n  }\n\n  /* [MS-XLS] 2.5.198.40 ; [MS-XLSB] 2.5.97.32 */\n  function parse_PtgAttrSpaceType(blob) {\n    var type = blob.read_shift(1), cch = blob.read_shift(1);\n    return [type, cch];\n  }\n\n  /* [MS-XLS] 2.5.198.38 ; [MS-XLSB] 2.5.97.30 */\n  function parse_PtgAttrSpace(blob) {\n    blob.read_shift(2);\n    return parse_PtgAttrSpaceType(blob, 2);\n  }\n\n  /* [MS-XLS] 2.5.198.39 ; [MS-XLSB] 2.5.97.31 */\n  function parse_PtgAttrSpaceSemi(blob) {\n    blob.read_shift(2);\n    return parse_PtgAttrSpaceType(blob, 2);\n  }\n\n  /* [MS-XLS] 2.5.198.84 ; [MS-XLSB] 2.5.97.68 TODO */\n  function parse_PtgRef(blob, length, opts) {\n    //var ptg = blob[blob.l] & 0x1F;\n    var type = (blob[blob.l] & 0x60)>>5;\n    blob.l += 1;\n    var loc = parse_RgceLoc(blob, 0, opts);\n    return [type, loc];\n  }\n\n  /* [MS-XLS] 2.5.198.88 ; [MS-XLSB] 2.5.97.72 TODO */\n  function parse_PtgRefN(blob, length, opts) {\n    var type = (blob[blob.l] & 0x60)>>5;\n    blob.l += 1;\n    var loc = parse_RgceLocRel(blob, 0, opts);\n    return [type, loc];\n  }\n\n  /* [MS-XLS] 2.5.198.85 ; [MS-XLSB] 2.5.97.69 TODO */\n  function parse_PtgRef3d(blob, length, opts) {\n    var type = (blob[blob.l] & 0x60)>>5;\n    blob.l += 1;\n    var ixti = blob.read_shift(2); // XtiIndex\n    if(opts && opts.biff == 5) blob.l += 12;\n    var loc = parse_RgceLoc(blob, 0, opts); // TODO: or RgceLocRel\n    return [type, ixti, loc];\n  }\n\n\n  /* [MS-XLS] 2.5.198.62 ; [MS-XLSB] 2.5.97.45 TODO */\n  function parse_PtgFunc(blob, length, opts) {\n    //var ptg = blob[blob.l] & 0x1F;\n    var type = (blob[blob.l] & 0x60)>>5;\n    blob.l += 1;\n    var iftab = blob.read_shift(opts && opts.biff <= 3 ? 1 : 2);\n    return [FtabArgc[iftab], Ftab[iftab], type];\n  }\n  /* [MS-XLS] 2.5.198.63 ; [MS-XLSB] 2.5.97.46 TODO */\n  function parse_PtgFuncVar(blob, length, opts) {\n    var type = blob[blob.l++];\n    var cparams = blob.read_shift(1), tab = opts && opts.biff <= 3 ? [(type == 0x58 ? -1 : 0), blob.read_shift(1)]: parsetab(blob);\n    return [cparams, (tab[0] === 0 ? Ftab : Cetab)[tab[1]]];\n  }\n\n  function parsetab(blob) {\n    return [blob[blob.l+1]>>7, blob.read_shift(2) & 0x7FFF];\n  }\n\n  /* [MS-XLS] 2.5.198.41 ; [MS-XLSB] 2.5.97.33 */\n  function parse_PtgAttrSum(blob, length, opts) {\n    blob.l += opts && opts.biff == 2 ? 3 : 4; return;\n  }\n\n  /* [MS-XLS] 2.5.198.58 ; [MS-XLSB] 2.5.97.40 */\n  function parse_PtgExp(blob, length, opts) {\n    blob.l++;\n    if(opts && opts.biff == 12) return [blob.read_shift(4, 'i'), 0];\n    var row = blob.read_shift(2);\n    var col = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n    return [row, col];\n  }\n\n  /* [MS-XLS] 2.5.198.57 ; [MS-XLSB] 2.5.97.39 */\n  function parse_PtgErr(blob) { blob.l++; return BErr[blob.read_shift(1)]; }\n\n  /* [MS-XLS] 2.5.198.66 ; [MS-XLSB] 2.5.97.49 */\n  function parse_PtgInt(blob) { blob.l++; return blob.read_shift(2); }\n\n  /* [MS-XLS] 2.5.198.42 ; [MS-XLSB] 2.5.97.34 */\n  function parse_PtgBool(blob) { blob.l++; return blob.read_shift(1)!==0;}\n\n  /* [MS-XLS] 2.5.198.79 ; [MS-XLSB] 2.5.97.63 */\n  function parse_PtgNum(blob) { blob.l++; return parse_Xnum(blob, 8); }\n\n  /* [MS-XLS] 2.5.198.89 ; [MS-XLSB] 2.5.97.74 */\n  function parse_PtgStr(blob, length, opts) { blob.l++; return parse_ShortXLUnicodeString(blob, length-1, opts); }\n\n  /* [MS-XLS] 2.5.192.112 + 2.5.192.11{3,4,5,6,7} */\n  /* [MS-XLSB] 2.5.97.93 + 2.5.97.9{4,5,6,7} */\n  function parse_SerAr(blob, biff) {\n    var val = [blob.read_shift(1)];\n    if(biff == 12) switch(val[0]) {\n      case 0x02: val[0] = 0x04; break; /* SerBool */\n      case 0x04: val[0] = 0x10; break; /* SerErr */\n      case 0x00: val[0] = 0x01; break; /* SerNum */\n      case 0x01: val[0] = 0x02; break; /* SerStr */\n    }\n    switch(val[0]) {\n      case 0x04: /* SerBool -- boolean */\n        val[1] = parsebool(blob, 1) ? 'TRUE' : 'FALSE';\n        if(biff != 12) blob.l += 7; break;\n      case 0x25: /* appears to be an alias */\n      case 0x10: /* SerErr -- error */\n        val[1] = BErr[blob[blob.l]];\n        blob.l += ((biff == 12) ? 4 : 8); break;\n      case 0x00: /* SerNil -- honestly, I'm not sure how to reproduce this */\n        blob.l += 8; break;\n      case 0x01: /* SerNum -- Xnum */\n        val[1] = parse_Xnum(blob, 8); break;\n      case 0x02: /* SerStr -- XLUnicodeString (<256 chars) */\n        val[1] = parse_XLUnicodeString2(blob, 0, {biff:biff > 0 && biff < 8 ? 2 : biff}); break;\n      default: throw new Error(\"Bad SerAr: \" + val[0]); /* Unreachable */\n    }\n    return val;\n  }\n\n  /* [MS-XLS] 2.5.198.61 ; [MS-XLSB] 2.5.97.44 */\n  function parse_PtgExtraMem(blob, cce, opts) {\n    var count = blob.read_shift((opts.biff == 12) ? 4 : 2);\n    var out = [];\n    for(var i = 0; i != count; ++i) out.push(((opts.biff == 12) ? parse_UncheckedRfX : parse_Ref8U)(blob, 8));\n    return out;\n  }\n\n  /* [MS-XLS] 2.5.198.59 ; [MS-XLSB] 2.5.97.41 */\n  function parse_PtgExtraArray(blob, length, opts) {\n    var rows = 0, cols = 0;\n    if(opts.biff == 12) {\n      rows = blob.read_shift(4); // DRw\n      cols = blob.read_shift(4); // DCol\n    } else {\n      cols = 1 + blob.read_shift(1); //DColByteU\n      rows = 1 + blob.read_shift(2); //DRw\n    }\n    if(opts.biff >= 2 && opts.biff < 8) { --rows; if(--cols == 0) cols = 0x100; }\n    // $FlowIgnore\n    for(var i = 0, o = []; i != rows && (o[i] = []); ++i)\n      for(var j = 0; j != cols; ++j) o[i][j] = parse_SerAr(blob, opts.biff);\n    return o;\n  }\n\n  /* [MS-XLS] 2.5.198.76 ; [MS-XLSB] 2.5.97.60 */\n  function parse_PtgName(blob, length, opts) {\n    var type = (blob.read_shift(1) >>> 5) & 0x03;\n    var w = (!opts || (opts.biff >= 8)) ? 4 : 2;\n    var nameindex = blob.read_shift(w);\n    switch(opts.biff) {\n      case 2: blob.l += 5; break;\n      case 3: case 4: blob.l += 8; break;\n      case 5: blob.l += 12; break;\n    }\n    return [type, 0, nameindex];\n  }\n\n  /* [MS-XLS] 2.5.198.77 ; [MS-XLSB] 2.5.97.61 */\n  function parse_PtgNameX(blob, length, opts) {\n    if(opts.biff == 5) return parse_PtgNameX_BIFF5(blob, length, opts);\n    var type = (blob.read_shift(1) >>> 5) & 0x03;\n    var ixti = blob.read_shift(2); // XtiIndex\n    var nameindex = blob.read_shift(4);\n    return [type, ixti, nameindex];\n  }\n  function parse_PtgNameX_BIFF5(blob) {\n    var type = (blob.read_shift(1) >>> 5) & 0x03;\n    var ixti = blob.read_shift(2, 'i'); // XtiIndex\n    blob.l += 8;\n    var nameindex = blob.read_shift(2);\n    blob.l += 12;\n    return [type, ixti, nameindex];\n  }\n\n  /* [MS-XLS] 2.5.198.70 ; [MS-XLSB] 2.5.97.54 */\n  function parse_PtgMemArea(blob, length, opts) {\n    var type = (blob.read_shift(1) >>> 5) & 0x03;\n    blob.l += (opts && opts.biff == 2 ? 3 : 4);\n    var cce = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n    return [type, cce];\n  }\n\n  /* [MS-XLS] 2.5.198.72 ; [MS-XLSB] 2.5.97.56 */\n  function parse_PtgMemFunc(blob, length, opts) {\n    var type = (blob.read_shift(1) >>> 5) & 0x03;\n    var cce = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n    return [type, cce];\n  }\n\n\n  /* [MS-XLS] 2.5.198.86 ; [MS-XLSB] 2.5.97.69 */\n  function parse_PtgRefErr(blob, length, opts) {\n    var type = (blob.read_shift(1) >>> 5) & 0x03;\n    blob.l += 4;\n    if(opts.biff < 8) blob.l--;\n    if(opts.biff == 12) blob.l += 2;\n    return [type];\n  }\n\n  /* [MS-XLS] 2.5.198.87 ; [MS-XLSB] 2.5.97.71 */\n  function parse_PtgRefErr3d(blob, length, opts) {\n    var type = (blob[blob.l++] & 0x60) >> 5;\n    var ixti = blob.read_shift(2);\n    var w = 4;\n    if(opts) switch(opts.biff) {\n      case 5: w = 15; break;\n      case 12: w = 6; break;\n    }\n    blob.l += w;\n    return [type, ixti];\n  }\n\n  /* [MS-XLS] 2.5.198.71 ; [MS-XLSB] 2.5.97.55 */\n  var parse_PtgMemErr = parsenoop;\n  /* [MS-XLS] 2.5.198.73  ; [MS-XLSB] 2.5.97.57 */\n  var parse_PtgMemNoMem = parsenoop;\n  /* [MS-XLS] 2.5.198.92 */\n  var parse_PtgTbl = parsenoop;\n\n  function parse_PtgElfLoc(blob, length, opts) {\n    blob.l += 2;\n    return [parse_RgceElfLoc(blob, 4, opts)];\n  }\n  function parse_PtgElfNoop(blob) {\n    blob.l += 6;\n    return [];\n  }\n  /* [MS-XLS] 2.5.198.46 */\n  var parse_PtgElfCol = parse_PtgElfLoc;\n  /* [MS-XLS] 2.5.198.47 */\n  var parse_PtgElfColS = parse_PtgElfNoop;\n  /* [MS-XLS] 2.5.198.48 */\n  var parse_PtgElfColSV = parse_PtgElfNoop;\n  /* [MS-XLS] 2.5.198.49 */\n  var parse_PtgElfColV = parse_PtgElfLoc;\n  /* [MS-XLS] 2.5.198.50 */\n  function parse_PtgElfLel(blob) {\n    blob.l += 2;\n    return [parseuint16(blob), blob.read_shift(2) & 0x01];\n  }\n  /* [MS-XLS] 2.5.198.51 */\n  var parse_PtgElfRadical = parse_PtgElfLoc;\n  /* [MS-XLS] 2.5.198.52 */\n  var parse_PtgElfRadicalLel = parse_PtgElfLel;\n  /* [MS-XLS] 2.5.198.53 */\n  var parse_PtgElfRadicalS = parse_PtgElfNoop;\n  /* [MS-XLS] 2.5.198.54 */\n  var parse_PtgElfRw = parse_PtgElfLoc;\n  /* [MS-XLS] 2.5.198.55 */\n  var parse_PtgElfRwV = parse_PtgElfLoc;\n\n  /* [MS-XLSB] 2.5.97.52 TODO */\n  var PtgListRT = [\n    \"Data\",\n    \"All\",\n    \"Headers\",\n    \"??\",\n    \"?Data2\",\n    \"??\",\n    \"?DataHeaders\",\n    \"??\",\n    \"Totals\",\n    \"??\",\n    \"??\",\n    \"??\",\n    \"?DataTotals\",\n    \"??\",\n    \"??\",\n    \"??\",\n    \"?Current\"\n  ];\n  function parse_PtgList(blob) {\n    blob.l += 2;\n    var ixti = blob.read_shift(2);\n    var flags = blob.read_shift(2);\n    var idx = blob.read_shift(4);\n    var c = blob.read_shift(2);\n    var C = blob.read_shift(2);\n    var rt = PtgListRT[(flags >> 2) & 0x1F];\n    return {ixti: ixti, coltype:(flags&0x3), rt:rt, idx:idx, c:c, C:C};\n  }\n  /* [MS-XLS] 2.5.198.91 ; [MS-XLSB] 2.5.97.76 */\n  function parse_PtgSxName(blob) {\n    blob.l += 2;\n    return [blob.read_shift(4)];\n  }\n\n  /* [XLS] old spec */\n  function parse_PtgSheet(blob, length, opts) {\n    blob.l += 5;\n    blob.l += 2;\n    blob.l += (opts.biff == 2 ? 1 : 4);\n    return [\"PTGSHEET\"];\n  }\n  function parse_PtgEndSheet(blob, length, opts) {\n    blob.l += (opts.biff == 2 ? 4 : 5);\n    return [\"PTGENDSHEET\"];\n  }\n  function parse_PtgMemAreaN(blob) {\n    var type = (blob.read_shift(1) >>> 5) & 0x03;\n    var cce = blob.read_shift(2);\n    return [type, cce];\n  }\n  function parse_PtgMemNoMemN(blob) {\n    var type = (blob.read_shift(1) >>> 5) & 0x03;\n    var cce = blob.read_shift(2);\n    return [type, cce];\n  }\n  function parse_PtgAttrNoop(blob) {\n    blob.l += 4;\n    return [0, 0];\n  }\n\n  /* [MS-XLS] 2.5.198.25 ; [MS-XLSB] 2.5.97.16 */\n  var PtgTypes = {\n    0x01: { n:'PtgExp', f:parse_PtgExp },\n    0x02: { n:'PtgTbl', f:parse_PtgTbl },\n    0x03: { n:'PtgAdd', f:parseread1 },\n    0x04: { n:'PtgSub', f:parseread1 },\n    0x05: { n:'PtgMul', f:parseread1 },\n    0x06: { n:'PtgDiv', f:parseread1 },\n    0x07: { n:'PtgPower', f:parseread1 },\n    0x08: { n:'PtgConcat', f:parseread1 },\n    0x09: { n:'PtgLt', f:parseread1 },\n    0x0A: { n:'PtgLe', f:parseread1 },\n    0x0B: { n:'PtgEq', f:parseread1 },\n    0x0C: { n:'PtgGe', f:parseread1 },\n    0x0D: { n:'PtgGt', f:parseread1 },\n    0x0E: { n:'PtgNe', f:parseread1 },\n    0x0F: { n:'PtgIsect', f:parseread1 },\n    0x10: { n:'PtgUnion', f:parseread1 },\n    0x11: { n:'PtgRange', f:parseread1 },\n    0x12: { n:'PtgUplus', f:parseread1 },\n    0x13: { n:'PtgUminus', f:parseread1 },\n    0x14: { n:'PtgPercent', f:parseread1 },\n    0x15: { n:'PtgParen', f:parseread1 },\n    0x16: { n:'PtgMissArg', f:parseread1 },\n    0x17: { n:'PtgStr', f:parse_PtgStr },\n    0x1A: { n:'PtgSheet', f:parse_PtgSheet },\n    0x1B: { n:'PtgEndSheet', f:parse_PtgEndSheet },\n    0x1C: { n:'PtgErr', f:parse_PtgErr },\n    0x1D: { n:'PtgBool', f:parse_PtgBool },\n    0x1E: { n:'PtgInt', f:parse_PtgInt },\n    0x1F: { n:'PtgNum', f:parse_PtgNum },\n    0x20: { n:'PtgArray', f:parse_PtgArray },\n    0x21: { n:'PtgFunc', f:parse_PtgFunc },\n    0x22: { n:'PtgFuncVar', f:parse_PtgFuncVar },\n    0x23: { n:'PtgName', f:parse_PtgName },\n    0x24: { n:'PtgRef', f:parse_PtgRef },\n    0x25: { n:'PtgArea', f:parse_PtgArea },\n    0x26: { n:'PtgMemArea', f:parse_PtgMemArea },\n    0x27: { n:'PtgMemErr', f:parse_PtgMemErr },\n    0x28: { n:'PtgMemNoMem', f:parse_PtgMemNoMem },\n    0x29: { n:'PtgMemFunc', f:parse_PtgMemFunc },\n    0x2A: { n:'PtgRefErr', f:parse_PtgRefErr },\n    0x2B: { n:'PtgAreaErr', f:parse_PtgAreaErr },\n    0x2C: { n:'PtgRefN', f:parse_PtgRefN },\n    0x2D: { n:'PtgAreaN', f:parse_PtgAreaN },\n    0x2E: { n:'PtgMemAreaN', f:parse_PtgMemAreaN },\n    0x2F: { n:'PtgMemNoMemN', f:parse_PtgMemNoMemN },\n    0x39: { n:'PtgNameX', f:parse_PtgNameX },\n    0x3A: { n:'PtgRef3d', f:parse_PtgRef3d },\n    0x3B: { n:'PtgArea3d', f:parse_PtgArea3d },\n    0x3C: { n:'PtgRefErr3d', f:parse_PtgRefErr3d },\n    0x3D: { n:'PtgAreaErr3d', f:parse_PtgAreaErr3d },\n    0xFF: {}\n  };\n  /* These are duplicated in the PtgTypes table */\n  var PtgDupes = {\n    0x40: 0x20, 0x60: 0x20,\n    0x41: 0x21, 0x61: 0x21,\n    0x42: 0x22, 0x62: 0x22,\n    0x43: 0x23, 0x63: 0x23,\n    0x44: 0x24, 0x64: 0x24,\n    0x45: 0x25, 0x65: 0x25,\n    0x46: 0x26, 0x66: 0x26,\n    0x47: 0x27, 0x67: 0x27,\n    0x48: 0x28, 0x68: 0x28,\n    0x49: 0x29, 0x69: 0x29,\n    0x4A: 0x2A, 0x6A: 0x2A,\n    0x4B: 0x2B, 0x6B: 0x2B,\n    0x4C: 0x2C, 0x6C: 0x2C,\n    0x4D: 0x2D, 0x6D: 0x2D,\n    0x4E: 0x2E, 0x6E: 0x2E,\n    0x4F: 0x2F, 0x6F: 0x2F,\n    0x58: 0x22, 0x78: 0x22,\n    0x59: 0x39, 0x79: 0x39,\n    0x5A: 0x3A, 0x7A: 0x3A,\n    0x5B: 0x3B, 0x7B: 0x3B,\n    0x5C: 0x3C, 0x7C: 0x3C,\n    0x5D: 0x3D, 0x7D: 0x3D\n  };\n  (function(){for(var y in PtgDupes) PtgTypes[y] = PtgTypes[PtgDupes[y]];})();\n\n  var Ptg18 = {\n    0x01: { n:'PtgElfLel', f:parse_PtgElfLel },\n    0x02: { n:'PtgElfRw', f:parse_PtgElfRw },\n    0x03: { n:'PtgElfCol', f:parse_PtgElfCol },\n    0x06: { n:'PtgElfRwV', f:parse_PtgElfRwV },\n    0x07: { n:'PtgElfColV', f:parse_PtgElfColV },\n    0x0A: { n:'PtgElfRadical', f:parse_PtgElfRadical },\n    0x0B: { n:'PtgElfRadicalS', f:parse_PtgElfRadicalS },\n    0x0D: { n:'PtgElfColS', f:parse_PtgElfColS },\n    0x0F: { n:'PtgElfColSV', f:parse_PtgElfColSV },\n    0x10: { n:'PtgElfRadicalLel', f:parse_PtgElfRadicalLel },\n    0x19: { n:'PtgList', f:parse_PtgList },\n    0x1D: { n:'PtgSxName', f:parse_PtgSxName },\n    0xFF: {}\n  };\n  var Ptg19 = {\n    0x00: { n:'PtgAttrNoop', f:parse_PtgAttrNoop },\n    0x01: { n:'PtgAttrSemi', f:parse_PtgAttrSemi },\n    0x02: { n:'PtgAttrIf', f:parse_PtgAttrIf },\n    0x04: { n:'PtgAttrChoose', f:parse_PtgAttrChoose },\n    0x08: { n:'PtgAttrGoto', f:parse_PtgAttrGoto },\n    0x10: { n:'PtgAttrSum', f:parse_PtgAttrSum },\n    0x20: { n:'PtgAttrBaxcel', f:parse_PtgAttrBaxcel },\n    0x40: { n:'PtgAttrSpace', f:parse_PtgAttrSpace },\n    0x41: { n:'PtgAttrSpaceSemi', f:parse_PtgAttrSpaceSemi },\n    0x80: { n:'PtgAttrIfError', f:parse_PtgAttrIfError },\n    0xFF: {}\n  };\n  Ptg19[0x21] = Ptg19[0x20];\n\n  /* [MS-XLS] 2.5.198.103 ; [MS-XLSB] 2.5.97.87 */\n  function parse_RgbExtra(blob, length, rgce, opts) {\n    if(opts.biff < 8) return parsenoop(blob, length);\n    var target = blob.l + length;\n    var o = [];\n    for(var i = 0; i !== rgce.length; ++i) {\n      switch(rgce[i][0]) {\n        case 'PtgArray': /* PtgArray -> PtgExtraArray */\n          rgce[i][1] = parse_PtgExtraArray(blob, 0, opts);\n          o.push(rgce[i][1]);\n          break;\n        case 'PtgMemArea': /* PtgMemArea -> PtgExtraMem */\n          rgce[i][2] = parse_PtgExtraMem(blob, rgce[i][1], opts);\n          o.push(rgce[i][2]);\n          break;\n        case 'PtgExp': /* PtgExp -> PtgExtraCol */\n          if(opts && opts.biff == 12) {\n            rgce[i][1][1] = blob.read_shift(4);\n            o.push(rgce[i][1]);\n          } break;\n        case 'PtgList': /* TODO: PtgList -> PtgExtraList */\n        case 'PtgElfRadicalS': /* TODO: PtgElfRadicalS -> PtgExtraElf */\n        case 'PtgElfColS': /* TODO: PtgElfColS -> PtgExtraElf */\n        case 'PtgElfColSV': /* TODO: PtgElfColSV -> PtgExtraElf */\n          throw \"Unsupported \" + rgce[i][0];\n        default: break;\n      }\n    }\n    length = target - blob.l;\n    /* note: this is technically an error but Excel disregards */\n    //if(target !== blob.l && blob.l !== target - length) throw new Error(target + \" != \" + blob.l);\n    if(length !== 0) o.push(parsenoop(blob, length));\n    return o;\n  }\n\n  /* [MS-XLS] 2.5.198.104 ; [MS-XLSB] 2.5.97.88 */\n  function parse_Rgce(blob, length, opts) {\n    var target = blob.l + length;\n    var R, id, ptgs = [];\n    while(target != blob.l) {\n      length = target - blob.l;\n      id = blob[blob.l];\n      R = PtgTypes[id];\n      if(id === 0x18 || id === 0x19) R = (id === 0x18 ? Ptg18 : Ptg19)[blob[blob.l + 1]];\n      if(!R || !R.f) { /*ptgs.push*/(parsenoop(blob, length)); }\n      else { ptgs.push([R.n, R.f(blob, length, opts)]); }\n    }\n    return ptgs;\n  }\n\n  function stringify_array(f) {\n    var o = [];\n    for(var i = 0; i < f.length; ++i) {\n      var x = f[i], r = [];\n      for(var j = 0; j < x.length; ++j) {\n        var y = x[j];\n        if(y) switch(y[0]) {\n          // TODO: handle embedded quotes\n          case 0x02:\n            r.push('\"' + y[1].replace(/\"/g,'\"\"') + '\"'); break;\n          default: r.push(y[1]);\n        } else r.push(\"\");\n      }\n      o.push(r.join(\",\"));\n    }\n    return o.join(\";\");\n  }\n\n  /* [MS-XLS] 2.2.2 ; [MS-XLSB] 2.2.2 TODO */\n  var PtgBinOp = {\n    PtgAdd: \"+\",\n    PtgConcat: \"&\",\n    PtgDiv: \"/\",\n    PtgEq: \"=\",\n    PtgGe: \">=\",\n    PtgGt: \">\",\n    PtgLe: \"<=\",\n    PtgLt: \"<\",\n    PtgMul: \"*\",\n    PtgNe: \"<>\",\n    PtgPower: \"^\",\n    PtgSub: \"-\"\n  };\n  function formula_quote_sheet_name(sname, opts) {\n    if(!sname && !(opts && opts.biff <= 5 && opts.biff >= 2)) throw new Error(\"empty sheet name\");\n    if(sname.indexOf(\" \") > -1) return \"'\" + sname + \"'\";\n    return sname;\n  }\n  function get_ixti_raw(supbooks, ixti, opts) {\n    if(!supbooks) return \"SH33TJSERR0\";\n    if(opts.biff > 8 && (!supbooks.XTI || !supbooks.XTI[ixti])) return supbooks.SheetNames[ixti];\n    if(!supbooks.XTI) return \"SH33TJSERR6\";\n    var XTI = supbooks.XTI[ixti];\n    if(opts.biff < 8) {\n      if(ixti > 10000) ixti-= 65536;\n      if(ixti < 0) ixti = -ixti;\n      return ixti == 0 ? \"\" : supbooks.XTI[ixti - 1];\n    }\n    if(!XTI) return \"SH33TJSERR1\";\n    var o = \"\";\n    if(opts.biff > 8) switch(supbooks[XTI[0]][0]) {\n      case 0x0165: /* 'BrtSupSelf' */\n        o = XTI[1] == -1 ? \"#REF\" : supbooks.SheetNames[XTI[1]];\n        return XTI[1] == XTI[2] ? o : o + \":\" + supbooks.SheetNames[XTI[2]];\n      case 0x0166: /* 'BrtSupSame' */\n        if(opts.SID != null) return supbooks.SheetNames[opts.SID];\n        return \"SH33TJSSAME\" + supbooks[XTI[0]][0];\n      case 0x0163: /* 'BrtSupBookSrc' */\n      /* falls through */\n      default: return \"SH33TJSSRC\" + supbooks[XTI[0]][0];\n    }\n    switch(supbooks[XTI[0]][0][0]) {\n      case 0x0401:\n        o = XTI[1] == -1 ? \"#REF\" : (supbooks.SheetNames[XTI[1]] || \"SH33TJSERR3\");\n        return XTI[1] == XTI[2] ? o : o + \":\" + supbooks.SheetNames[XTI[2]];\n      case 0x3A01: return \"SH33TJSERR8\";\n      default:\n        if(!supbooks[XTI[0]][0][3]) return \"SH33TJSERR2\";\n        o = XTI[1] == -1 ? \"#REF\" : (supbooks[XTI[0]][0][3][XTI[1]] || \"SH33TJSERR4\");\n        return XTI[1] == XTI[2] ? o : o + \":\" + supbooks[XTI[0]][0][3][XTI[2]];\n    }\n  }\n  function get_ixti(supbooks, ixti, opts) {\n    return formula_quote_sheet_name(get_ixti_raw(supbooks, ixti, opts), opts);\n  }\n  function stringify_formula(formula/*Array<any>*/, range, cell, supbooks, opts) {\n    var biff = (opts && opts.biff) || 8;\n    var _range = /*range != null ? range :*/ {s:{c:0, r:0},e:{c:0, r:0}};\n    var stack = [], e1, e2,  c, ixti=0, nameidx=0, r, sname=\"\";\n    if(!formula[0] || !formula[0][0]) return \"\";\n    var last_sp = -1, sp = \"\";\n    for(var ff = 0, fflen = formula[0].length; ff < fflen; ++ff) {\n      var f = formula[0][ff];\n      switch(f[0]) {\n        case 'PtgUminus': /* [MS-XLS] 2.5.198.93 */\n          stack.push(\"-\" + stack.pop()); break;\n        case 'PtgUplus': /* [MS-XLS] 2.5.198.95 */\n          stack.push(\"+\" + stack.pop()); break;\n        case 'PtgPercent': /* [MS-XLS] 2.5.198.81 */\n          stack.push(stack.pop() + \"%\"); break;\n\n        case 'PtgAdd':    /* [MS-XLS] 2.5.198.26 */\n        case 'PtgConcat': /* [MS-XLS] 2.5.198.43 */\n        case 'PtgDiv':    /* [MS-XLS] 2.5.198.45 */\n        case 'PtgEq':     /* [MS-XLS] 2.5.198.56 */\n        case 'PtgGe':     /* [MS-XLS] 2.5.198.64 */\n        case 'PtgGt':     /* [MS-XLS] 2.5.198.65 */\n        case 'PtgLe':     /* [MS-XLS] 2.5.198.68 */\n        case 'PtgLt':     /* [MS-XLS] 2.5.198.69 */\n        case 'PtgMul':    /* [MS-XLS] 2.5.198.75 */\n        case 'PtgNe':     /* [MS-XLS] 2.5.198.78 */\n        case 'PtgPower':  /* [MS-XLS] 2.5.198.82 */\n        case 'PtgSub':    /* [MS-XLS] 2.5.198.90 */\n          e1 = stack.pop(); e2 = stack.pop();\n          if(last_sp >= 0) {\n            switch(formula[0][last_sp][1][0]) {\n              case 0:\n                // $FlowIgnore\n                sp = fill(\" \", formula[0][last_sp][1][1]); break;\n              case 1:\n                // $FlowIgnore\n                sp = fill(\"\\r\", formula[0][last_sp][1][1]); break;\n              default:\n                sp = \"\";\n                // $FlowIgnore\n                if(opts.WTF) throw new Error(\"Unexpected PtgAttrSpaceType \" + formula[0][last_sp][1][0]);\n            }\n            e2 = e2 + sp;\n            last_sp = -1;\n          }\n          stack.push(e2+PtgBinOp[f[0]]+e1);\n          break;\n\n        case 'PtgIsect': /* [MS-XLS] 2.5.198.67 */\n          e1 = stack.pop(); e2 = stack.pop();\n          stack.push(e2+\" \"+e1);\n          break;\n        case 'PtgUnion': /* [MS-XLS] 2.5.198.94 */\n          e1 = stack.pop(); e2 = stack.pop();\n          stack.push(e2+\",\"+e1);\n          break;\n        case 'PtgRange': /* [MS-XLS] 2.5.198.83 */\n          e1 = stack.pop(); e2 = stack.pop();\n          stack.push(e2+\":\"+e1);\n          break;\n\n        case 'PtgAttrChoose': /* [MS-XLS] 2.5.198.34 */\n          break;\n        case 'PtgAttrGoto': /* [MS-XLS] 2.5.198.35 */\n          break;\n        case 'PtgAttrIf': /* [MS-XLS] 2.5.198.36 */\n          break;\n        case 'PtgAttrIfError': /* [MS-XLSB] 2.5.97.28 */\n          break;\n\n\n        case 'PtgRef': /* [MS-XLS] 2.5.198.84 */\n          c = shift_cell_xls((f[1][1]), _range, opts);\n          stack.push(encode_cell_xls(c, biff));\n          break;\n        case 'PtgRefN': /* [MS-XLS] 2.5.198.88 */\n          c = cell ? shift_cell_xls((f[1][1]), cell, opts) : (f[1][1]);\n          stack.push(encode_cell_xls(c, biff));\n          break;\n        case 'PtgRef3d': /* [MS-XLS] 2.5.198.85 */\n          ixti = f[1][1]; c = shift_cell_xls((f[1][2]), _range, opts);\n          sname = get_ixti(supbooks, ixti, opts);\n          var w = sname; /* IE9 fails on defined names */ // eslint-disable-line no-unused-vars\n          stack.push(sname + \"!\" + encode_cell_xls(c, biff));\n          break;\n\n        case 'PtgFunc': /* [MS-XLS] 2.5.198.62 */\n        case 'PtgFuncVar': /* [MS-XLS] 2.5.198.63 */\n          /* f[1] = [argc, func, type] */\n          var argc = (f[1][0]), func = (f[1][1]);\n          if(!argc) argc = 0;\n          argc &= 0x7F;\n          var args = argc == 0 ? [] : stack.slice(-argc);\n          stack.length -= argc;\n          if(func === 'User') func = args.shift();\n          stack.push(func + \"(\" + args.join(\",\") + \")\");\n          break;\n\n        case 'PtgBool': /* [MS-XLS] 2.5.198.42 */\n          stack.push(f[1] ? \"TRUE\" : \"FALSE\"); break;\n        case 'PtgInt': /* [MS-XLS] 2.5.198.66 */\n          stack.push(f[1]); break;\n        case 'PtgNum': /* [MS-XLS] 2.5.198.79 TODO: precision? */\n          stack.push(String(f[1])); break;\n        case 'PtgStr': /* [MS-XLS] 2.5.198.89 */\n          // $FlowIgnore\n          stack.push('\"' + f[1] + '\"'); break;\n        case 'PtgErr': /* [MS-XLS] 2.5.198.57 */\n          stack.push(f[1]); break;\n        case 'PtgAreaN': /* [MS-XLS] 2.5.198.31 TODO */\n          r = shift_range_xls(f[1][1], cell ? {s:cell} : _range, opts);\n          stack.push(encode_range_xls((r), opts));\n          break;\n        case 'PtgArea': /* [MS-XLS] 2.5.198.27 TODO: fixed points */\n          r = shift_range_xls(f[1][1], _range, opts);\n          stack.push(encode_range_xls((r), opts));\n          break;\n        case 'PtgArea3d': /* [MS-XLS] 2.5.198.28 TODO */\n          ixti = f[1][1]; r = f[1][2];\n          sname = get_ixti(supbooks, ixti, opts);\n          stack.push(sname + \"!\" + encode_range_xls((r), opts));\n          break;\n        case 'PtgAttrSum': /* [MS-XLS] 2.5.198.41 */\n          stack.push(\"SUM(\" + stack.pop() + \")\");\n          break;\n\n        case 'PtgAttrBaxcel': /* [MS-XLS] 2.5.198.33 */\n        case 'PtgAttrSemi': /* [MS-XLS] 2.5.198.37 */\n          break;\n\n        case 'PtgName': /* [MS-XLS] 2.5.198.76 ; [MS-XLSB] 2.5.97.60 TODO: revisions */\n          /* f[1] = type, 0, nameindex */\n          nameidx = (f[1][2]);\n          var lbl = (supbooks.names||[])[nameidx-1] || (supbooks[0]||[])[nameidx];\n          var name = lbl ? lbl.Name : \"SH33TJSNAME\" + String(nameidx);\n          if(name in XLSXFutureFunctions) name = XLSXFutureFunctions[name];\n          stack.push(name);\n          break;\n\n        case 'PtgNameX': /* [MS-XLS] 2.5.198.77 ; [MS-XLSB] 2.5.97.61 TODO: revisions */\n          /* f[1] = type, ixti, nameindex */\n          var bookidx = (f[1][1]); nameidx = (f[1][2]); var externbook;\n          /* TODO: Properly handle missing values */\n          if(opts.biff <= 5) {\n            if(bookidx < 0) bookidx = -bookidx;\n            if(supbooks[bookidx]) externbook = supbooks[bookidx][nameidx];\n          } else {\n            var o = \"\";\n            if(((supbooks[bookidx]||[])[0]||[])[0] == 0x3A01){/* empty */}\n            else if(((supbooks[bookidx]||[])[0]||[])[0] == 0x0401){\n              if(supbooks[bookidx][nameidx] && supbooks[bookidx][nameidx].itab > 0) {\n                o = supbooks.SheetNames[supbooks[bookidx][nameidx].itab-1] + \"!\";\n              }\n            }\n            else o = supbooks.SheetNames[nameidx-1]+ \"!\";\n            if(supbooks[bookidx] && supbooks[bookidx][nameidx]) o += supbooks[bookidx][nameidx].Name;\n            else if(supbooks[0] && supbooks[0][nameidx]) o += supbooks[0][nameidx].Name;\n            else o += \"SH33TJSERRX\";\n            stack.push(o);\n            break;\n          }\n          if(!externbook) externbook = {Name: \"SH33TJSERRY\"};\n          stack.push(externbook.Name);\n          break;\n\n        case 'PtgParen': /* [MS-XLS] 2.5.198.80 */\n          var lp = '(', rp = ')';\n          if(last_sp >= 0) {\n            sp = \"\";\n            switch(formula[0][last_sp][1][0]) {\n              // $FlowIgnore\n              case 2: lp = fill(\" \", formula[0][last_sp][1][1]) + lp; break;\n              // $FlowIgnore\n              case 3: lp = fill(\"\\r\", formula[0][last_sp][1][1]) + lp; break;\n              // $FlowIgnore\n              case 4: rp = fill(\" \", formula[0][last_sp][1][1]) + rp; break;\n              // $FlowIgnore\n              case 5: rp = fill(\"\\r\", formula[0][last_sp][1][1]) + rp; break;\n              default:\n                // $FlowIgnore\n                if(opts.WTF) throw new Error(\"Unexpected PtgAttrSpaceType \" + formula[0][last_sp][1][0]);\n            }\n            last_sp = -1;\n          }\n          stack.push(lp + stack.pop() + rp); break;\n\n        case 'PtgRefErr': /* [MS-XLS] 2.5.198.86 */\n          stack.push('#REF!'); break;\n\n        case 'PtgRefErr3d': /* [MS-XLS] 2.5.198.87 */\n          stack.push('#REF!'); break;\n\n        case 'PtgExp': /* [MS-XLS] 2.5.198.58 TODO */\n          c = {c:(f[1][1]),r:(f[1][0])};\n          var q = ({c: cell.c, r:cell.r});\n          if(supbooks.sharedf[encode_cell(c)]) {\n            var parsedf = (supbooks.sharedf[encode_cell(c)]);\n            stack.push(stringify_formula(parsedf, _range, q, supbooks, opts));\n          }\n          else {\n            var fnd = false;\n            for(e1=0;e1!=supbooks.arrayf.length; ++e1) {\n              /* TODO: should be something like range_has */\n              e2 = supbooks.arrayf[e1];\n              if(c.c < e2[0].s.c || c.c > e2[0].e.c) continue;\n              if(c.r < e2[0].s.r || c.r > e2[0].e.r) continue;\n              stack.push(stringify_formula(e2[1], _range, q, supbooks, opts));\n              fnd = true;\n              break;\n            }\n            if(!fnd) stack.push(f[1]);\n          }\n          break;\n\n        case 'PtgArray': /* [MS-XLS] 2.5.198.32 TODO */\n          stack.push(\"{\" + stringify_array(f[1]) + \"}\");\n          break;\n\n        case 'PtgMemArea': /* [MS-XLS] 2.5.198.70 TODO: confirm this is a non-display */\n          //stack.push(\"(\" + f[2].map(encode_range).join(\",\") + \")\");\n          break;\n\n        case 'PtgAttrSpace': /* [MS-XLS] 2.5.198.38 */\n        case 'PtgAttrSpaceSemi': /* [MS-XLS] 2.5.198.39 */\n          last_sp = ff;\n          break;\n\n        case 'PtgTbl': /* [MS-XLS] 2.5.198.92 TODO */\n          break;\n\n        case 'PtgMemErr': /* [MS-XLS] 2.5.198.71 */\n          break;\n\n        case 'PtgMissArg': /* [MS-XLS] 2.5.198.74 */\n          stack.push(\"\");\n          break;\n\n        case 'PtgAreaErr': /* [MS-XLS] 2.5.198.29 */\n          stack.push(\"#REF!\"); break;\n\n        case 'PtgAreaErr3d': /* [MS-XLS] 2.5.198.30 */\n          stack.push(\"#REF!\"); break;\n\n        case 'PtgList': /* [MS-XLSB] 2.5.97.52 */\n          // $FlowIgnore\n          stack.push(\"Table\" + f[1].idx + \"[#\" + f[1].rt + \"]\");\n          break;\n\n        case 'PtgMemAreaN':\n        case 'PtgMemNoMemN':\n        case 'PtgAttrNoop':\n        case 'PtgSheet':\n        case 'PtgEndSheet':\n          break;\n\n        case 'PtgMemFunc': /* [MS-XLS] 2.5.198.72 TODO */\n          break;\n        case 'PtgMemNoMem': /* [MS-XLS] 2.5.198.73 TODO */\n          break;\n\n        case 'PtgElfCol': /* [MS-XLS] 2.5.198.46 */\n        case 'PtgElfColS': /* [MS-XLS] 2.5.198.47 */\n        case 'PtgElfColSV': /* [MS-XLS] 2.5.198.48 */\n        case 'PtgElfColV': /* [MS-XLS] 2.5.198.49 */\n        case 'PtgElfLel': /* [MS-XLS] 2.5.198.50 */\n        case 'PtgElfRadical': /* [MS-XLS] 2.5.198.51 */\n        case 'PtgElfRadicalLel': /* [MS-XLS] 2.5.198.52 */\n        case 'PtgElfRadicalS': /* [MS-XLS] 2.5.198.53 */\n        case 'PtgElfRw': /* [MS-XLS] 2.5.198.54 */\n        case 'PtgElfRwV': /* [MS-XLS] 2.5.198.55 */\n          throw new Error(\"Unsupported ELFs\");\n\n        case 'PtgSxName': /* [MS-XLS] 2.5.198.91 TODO -- find a test case */\n          throw new Error('Unrecognized Formula Token: ' + String(f));\n        default: throw new Error('Unrecognized Formula Token: ' + String(f));\n      }\n      var PtgNonDisp = ['PtgAttrSpace', 'PtgAttrSpaceSemi', 'PtgAttrGoto'];\n      if(opts.biff != 3) if(last_sp >= 0 && PtgNonDisp.indexOf(formula[0][ff][0]) == -1) {\n        f = formula[0][last_sp];\n        var _left = true;\n        switch(f[1][0]) {\n          /* note: some bad XLSB files omit the PtgParen */\n          case 4: _left = false;\n          /* falls through */\n          case 0:\n            // $FlowIgnore\n            sp = fill(\" \", f[1][1]); break;\n          case 5: _left = false;\n          /* falls through */\n          case 1:\n            // $FlowIgnore\n            sp = fill(\"\\r\", f[1][1]); break;\n          default:\n            sp = \"\";\n            // $FlowIgnore\n            if(opts.WTF) throw new Error(\"Unexpected PtgAttrSpaceType \" + f[1][0]);\n        }\n        stack.push((_left ? sp : \"\") + stack.pop() + (_left ? \"\" : sp));\n        last_sp = -1;\n      }\n    }\n    if(stack.length > 1 && opts.WTF) throw new Error(\"bad formula stack\");\n    return stack[0];\n  }\n\n  /* [MS-XLS] 2.5.198.1 TODO */\n  function parse_ArrayParsedFormula(blob, length, opts) {\n    var target = blob.l + length, len = opts.biff == 2 ? 1 : 2;\n    var rgcb, cce = blob.read_shift(len); // length of rgce\n    if(cce == 0xFFFF) return [[],parsenoop(blob, length-2)];\n    var rgce = parse_Rgce(blob, cce, opts);\n    if(length !== cce + len) rgcb = parse_RgbExtra(blob, length - cce - len, rgce, opts);\n    blob.l = target;\n    return [rgce, rgcb];\n  }\n\n  /* [MS-XLS] 2.5.198.3 TODO */\n  function parse_XLSCellParsedFormula(blob, length, opts) {\n    var target = blob.l + length, len = opts.biff == 2 ? 1 : 2;\n    var rgcb, cce = blob.read_shift(len); // length of rgce\n    if(cce == 0xFFFF) return [[],parsenoop(blob, length-2)];\n    var rgce = parse_Rgce(blob, cce, opts);\n    if(length !== cce + len) rgcb = parse_RgbExtra(blob, length - cce - len, rgce, opts);\n    blob.l = target;\n    return [rgce, rgcb];\n  }\n\n  /* [MS-XLS] 2.5.198.21 */\n  function parse_NameParsedFormula(blob, length, opts, cce) {\n    var target = blob.l + length;\n    var rgce = parse_Rgce(blob, cce, opts);\n    var rgcb;\n    if(target !== blob.l) rgcb = parse_RgbExtra(blob, target - blob.l, rgce, opts);\n    return [rgce, rgcb];\n  }\n\n  /* [MS-XLS] 2.5.198.118 TODO */\n  function parse_SharedParsedFormula(blob, length, opts) {\n    var target = blob.l + length;\n    var rgcb, cce = blob.read_shift(2); // length of rgce\n    var rgce = parse_Rgce(blob, cce, opts);\n    if(cce == 0xFFFF) return [[],parsenoop(blob, length-2)];\n    if(length !== cce + 2) rgcb = parse_RgbExtra(blob, target - cce - 2, rgce, opts);\n    return [rgce, rgcb];\n  }\n\n  /* [MS-XLS] 2.5.133 TODO: how to emit empty strings? */\n  function parse_FormulaValue(blob) {\n    var b;\n    if(__readUInt16LE(blob,blob.l + 6) !== 0xFFFF) return [parse_Xnum(blob),'n'];\n    switch(blob[blob.l]) {\n      case 0x00: blob.l += 8; return [\"String\", 's'];\n      case 0x01: b = blob[blob.l+2] === 0x1; blob.l += 8; return [b,'b'];\n      case 0x02: b = blob[blob.l+2]; blob.l += 8; return [b,'e'];\n      case 0x03: blob.l += 8; return [\"\",'s'];\n    }\n    return [];\n  }\n\n  /* [MS-XLS] 2.4.127 TODO */\n  function parse_Formula(blob, length, opts) {\n    var end = blob.l + length;\n    var cell = parse_XLSCell(blob, 6);\n    if(opts.biff == 2) ++blob.l;\n    var val = parse_FormulaValue(blob,8);\n    var flags = blob.read_shift(1);\n    if(opts.biff != 2) {\n      blob.read_shift(1);\n      if(opts.biff >= 5) {\n        /*var chn = */blob.read_shift(4);\n      }\n    }\n    var cbf = parse_XLSCellParsedFormula(blob, end - blob.l, opts);\n    return {cell:cell, val:val[0], formula:cbf, shared: (flags >> 3) & 1, tt:val[1]};\n  }\n\n  /* XLSB Parsed Formula records have the same shape */\n  function parse_XLSBParsedFormula(data, length, opts) {\n    var cce = data.read_shift(4);\n    var rgce = parse_Rgce(data, cce, opts);\n    var cb = data.read_shift(4);\n    var rgcb = cb > 0 ? parse_RgbExtra(data, cb, rgce, opts) : null;\n    return [rgce, rgcb];\n  }\n\n  /* [MS-XLSB] 2.5.97.1 ArrayParsedFormula */\n  var parse_XLSBArrayParsedFormula = parse_XLSBParsedFormula;\n  /* [MS-XLSB] 2.5.97.4 CellParsedFormula */\n  var parse_XLSBCellParsedFormula = parse_XLSBParsedFormula;\n  /* [MS-XLSB] 2.5.97.12 NameParsedFormula */\n  var parse_XLSBNameParsedFormula = parse_XLSBParsedFormula;\n  /* [MS-XLSB] 2.5.97.98 SharedParsedFormula */\n  var parse_XLSBSharedParsedFormula = parse_XLSBParsedFormula;\n  /* [MS-XLS] 2.5.198.4 */\n  var Cetab = {\n    0x0000: 'BEEP',\n    0x0001: 'OPEN',\n    0x0002: 'OPEN.LINKS',\n    0x0003: 'CLOSE.ALL',\n    0x0004: 'SAVE',\n    0x0005: 'SAVE.AS',\n    0x0006: 'FILE.DELETE',\n    0x0007: 'PAGE.SETUP',\n    0x0008: 'PRINT',\n    0x0009: 'PRINTER.SETUP',\n    0x000A: 'QUIT',\n    0x000B: 'NEW.WINDOW',\n    0x000C: 'ARRANGE.ALL',\n    0x000D: 'WINDOW.SIZE',\n    0x000E: 'WINDOW.MOVE',\n    0x000F: 'FULL',\n    0x0010: 'CLOSE',\n    0x0011: 'RUN',\n    0x0016: 'SET.PRINT.AREA',\n    0x0017: 'SET.PRINT.TITLES',\n    0x0018: 'SET.PAGE.BREAK',\n    0x0019: 'REMOVE.PAGE.BREAK',\n    0x001A: 'FONT',\n    0x001B: 'DISPLAY',\n    0x001C: 'PROTECT.DOCUMENT',\n    0x001D: 'PRECISION',\n    0x001E: 'A1.R1C1',\n    0x001F: 'CALCULATE.NOW',\n    0x0020: 'CALCULATION',\n    0x0022: 'DATA.FIND',\n    0x0023: 'EXTRACT',\n    0x0024: 'DATA.DELETE',\n    0x0025: 'SET.DATABASE',\n    0x0026: 'SET.CRITERIA',\n    0x0027: 'SORT',\n    0x0028: 'DATA.SERIES',\n    0x0029: 'TABLE',\n    0x002A: 'FORMAT.NUMBER',\n    0x002B: 'ALIGNMENT',\n    0x002C: 'STYLE',\n    0x002D: 'BORDER',\n    0x002E: 'CELL.PROTECTION',\n    0x002F: 'COLUMN.WIDTH',\n    0x0030: 'UNDO',\n    0x0031: 'CUT',\n    0x0032: 'COPY',\n    0x0033: 'PASTE',\n    0x0034: 'CLEAR',\n    0x0035: 'PASTE.SPECIAL',\n    0x0036: 'EDIT.DELETE',\n    0x0037: 'INSERT',\n    0x0038: 'FILL.RIGHT',\n    0x0039: 'FILL.DOWN',\n    0x003D: 'DEFINE.NAME',\n    0x003E: 'CREATE.NAMES',\n    0x003F: 'FORMULA.GOTO',\n    0x0040: 'FORMULA.FIND',\n    0x0041: 'SELECT.LAST.CELL',\n    0x0042: 'SHOW.ACTIVE.CELL',\n    0x0043: 'GALLERY.AREA',\n    0x0044: 'GALLERY.BAR',\n    0x0045: 'GALLERY.COLUMN',\n    0x0046: 'GALLERY.LINE',\n    0x0047: 'GALLERY.PIE',\n    0x0048: 'GALLERY.SCATTER',\n    0x0049: 'COMBINATION',\n    0x004A: 'PREFERRED',\n    0x004B: 'ADD.OVERLAY',\n    0x004C: 'GRIDLINES',\n    0x004D: 'SET.PREFERRED',\n    0x004E: 'AXES',\n    0x004F: 'LEGEND',\n    0x0050: 'ATTACH.TEXT',\n    0x0051: 'ADD.ARROW',\n    0x0052: 'SELECT.CHART',\n    0x0053: 'SELECT.PLOT.AREA',\n    0x0054: 'PATTERNS',\n    0x0055: 'MAIN.CHART',\n    0x0056: 'OVERLAY',\n    0x0057: 'SCALE',\n    0x0058: 'FORMAT.LEGEND',\n    0x0059: 'FORMAT.TEXT',\n    0x005A: 'EDIT.REPEAT',\n    0x005B: 'PARSE',\n    0x005C: 'JUSTIFY',\n    0x005D: 'HIDE',\n    0x005E: 'UNHIDE',\n    0x005F: 'WORKSPACE',\n    0x0060: 'FORMULA',\n    0x0061: 'FORMULA.FILL',\n    0x0062: 'FORMULA.ARRAY',\n    0x0063: 'DATA.FIND.NEXT',\n    0x0064: 'DATA.FIND.PREV',\n    0x0065: 'FORMULA.FIND.NEXT',\n    0x0066: 'FORMULA.FIND.PREV',\n    0x0067: 'ACTIVATE',\n    0x0068: 'ACTIVATE.NEXT',\n    0x0069: 'ACTIVATE.PREV',\n    0x006A: 'UNLOCKED.NEXT',\n    0x006B: 'UNLOCKED.PREV',\n    0x006C: 'COPY.PICTURE',\n    0x006D: 'SELECT',\n    0x006E: 'DELETE.NAME',\n    0x006F: 'DELETE.FORMAT',\n    0x0070: 'VLINE',\n    0x0071: 'HLINE',\n    0x0072: 'VPAGE',\n    0x0073: 'HPAGE',\n    0x0074: 'VSCROLL',\n    0x0075: 'HSCROLL',\n    0x0076: 'ALERT',\n    0x0077: 'NEW',\n    0x0078: 'CANCEL.COPY',\n    0x0079: 'SHOW.CLIPBOARD',\n    0x007A: 'MESSAGE',\n    0x007C: 'PASTE.LINK',\n    0x007D: 'APP.ACTIVATE',\n    0x007E: 'DELETE.ARROW',\n    0x007F: 'ROW.HEIGHT',\n    0x0080: 'FORMAT.MOVE',\n    0x0081: 'FORMAT.SIZE',\n    0x0082: 'FORMULA.REPLACE',\n    0x0083: 'SEND.KEYS',\n    0x0084: 'SELECT.SPECIAL',\n    0x0085: 'APPLY.NAMES',\n    0x0086: 'REPLACE.FONT',\n    0x0087: 'FREEZE.PANES',\n    0x0088: 'SHOW.INFO',\n    0x0089: 'SPLIT',\n    0x008A: 'ON.WINDOW',\n    0x008B: 'ON.DATA',\n    0x008C: 'DISABLE.INPUT',\n    0x008E: 'OUTLINE',\n    0x008F: 'LIST.NAMES',\n    0x0090: 'FILE.CLOSE',\n    0x0091: 'SAVE.WORKBOOK',\n    0x0092: 'DATA.FORM',\n    0x0093: 'COPY.CHART',\n    0x0094: 'ON.TIME',\n    0x0095: 'WAIT',\n    0x0096: 'FORMAT.FONT',\n    0x0097: 'FILL.UP',\n    0x0098: 'FILL.LEFT',\n    0x0099: 'DELETE.OVERLAY',\n    0x009B: 'SHORT.MENUS',\n    0x009F: 'SET.UPDATE.STATUS',\n    0x00A1: 'COLOR.PALETTE',\n    0x00A2: 'DELETE.STYLE',\n    0x00A3: 'WINDOW.RESTORE',\n    0x00A4: 'WINDOW.MAXIMIZE',\n    0x00A6: 'CHANGE.LINK',\n    0x00A7: 'CALCULATE.DOCUMENT',\n    0x00A8: 'ON.KEY',\n    0x00A9: 'APP.RESTORE',\n    0x00AA: 'APP.MOVE',\n    0x00AB: 'APP.SIZE',\n    0x00AC: 'APP.MINIMIZE',\n    0x00AD: 'APP.MAXIMIZE',\n    0x00AE: 'BRING.TO.FRONT',\n    0x00AF: 'SEND.TO.BACK',\n    0x00B9: 'MAIN.CHART.TYPE',\n    0x00BA: 'OVERLAY.CHART.TYPE',\n    0x00BB: 'SELECT.END',\n    0x00BC: 'OPEN.MAIL',\n    0x00BD: 'SEND.MAIL',\n    0x00BE: 'STANDARD.FONT',\n    0x00BF: 'CONSOLIDATE',\n    0x00C0: 'SORT.SPECIAL',\n    0x00C1: 'GALLERY.3D.AREA',\n    0x00C2: 'GALLERY.3D.COLUMN',\n    0x00C3: 'GALLERY.3D.LINE',\n    0x00C4: 'GALLERY.3D.PIE',\n    0x00C5: 'VIEW.3D',\n    0x00C6: 'GOAL.SEEK',\n    0x00C7: 'WORKGROUP',\n    0x00C8: 'FILL.GROUP',\n    0x00C9: 'UPDATE.LINK',\n    0x00CA: 'PROMOTE',\n    0x00CB: 'DEMOTE',\n    0x00CC: 'SHOW.DETAIL',\n    0x00CE: 'UNGROUP',\n    0x00CF: 'OBJECT.PROPERTIES',\n    0x00D0: 'SAVE.NEW.OBJECT',\n    0x00D1: 'SHARE',\n    0x00D2: 'SHARE.NAME',\n    0x00D3: 'DUPLICATE',\n    0x00D4: 'APPLY.STYLE',\n    0x00D5: 'ASSIGN.TO.OBJECT',\n    0x00D6: 'OBJECT.PROTECTION',\n    0x00D7: 'HIDE.OBJECT',\n    0x00D8: 'SET.EXTRACT',\n    0x00D9: 'CREATE.PUBLISHER',\n    0x00DA: 'SUBSCRIBE.TO',\n    0x00DB: 'ATTRIBUTES',\n    0x00DC: 'SHOW.TOOLBAR',\n    0x00DE: 'PRINT.PREVIEW',\n    0x00DF: 'EDIT.COLOR',\n    0x00E0: 'SHOW.LEVELS',\n    0x00E1: 'FORMAT.MAIN',\n    0x00E2: 'FORMAT.OVERLAY',\n    0x00E3: 'ON.RECALC',\n    0x00E4: 'EDIT.SERIES',\n    0x00E5: 'DEFINE.STYLE',\n    0x00F0: 'LINE.PRINT',\n    0x00F3: 'ENTER.DATA',\n    0x00F9: 'GALLERY.RADAR',\n    0x00FA: 'MERGE.STYLES',\n    0x00FB: 'EDITION.OPTIONS',\n    0x00FC: 'PASTE.PICTURE',\n    0x00FD: 'PASTE.PICTURE.LINK',\n    0x00FE: 'SPELLING',\n    0x0100: 'ZOOM',\n    0x0103: 'INSERT.OBJECT',\n    0x0104: 'WINDOW.MINIMIZE',\n    0x0109: 'SOUND.NOTE',\n    0x010A: 'SOUND.PLAY',\n    0x010B: 'FORMAT.SHAPE',\n    0x010C: 'EXTEND.POLYGON',\n    0x010D: 'FORMAT.AUTO',\n    0x0110: 'GALLERY.3D.BAR',\n    0x0111: 'GALLERY.3D.SURFACE',\n    0x0112: 'FILL.AUTO',\n    0x0114: 'CUSTOMIZE.TOOLBAR',\n    0x0115: 'ADD.TOOL',\n    0x0116: 'EDIT.OBJECT',\n    0x0117: 'ON.DOUBLECLICK',\n    0x0118: 'ON.ENTRY',\n    0x0119: 'WORKBOOK.ADD',\n    0x011A: 'WORKBOOK.MOVE',\n    0x011B: 'WORKBOOK.COPY',\n    0x011C: 'WORKBOOK.OPTIONS',\n    0x011D: 'SAVE.WORKSPACE',\n    0x0120: 'CHART.WIZARD',\n    0x0121: 'DELETE.TOOL',\n    0x0122: 'MOVE.TOOL',\n    0x0123: 'WORKBOOK.SELECT',\n    0x0124: 'WORKBOOK.ACTIVATE',\n    0x0125: 'ASSIGN.TO.TOOL',\n    0x0127: 'COPY.TOOL',\n    0x0128: 'RESET.TOOL',\n    0x0129: 'CONSTRAIN.NUMERIC',\n    0x012A: 'PASTE.TOOL',\n    0x012E: 'WORKBOOK.NEW',\n    0x0131: 'SCENARIO.CELLS',\n    0x0132: 'SCENARIO.DELETE',\n    0x0133: 'SCENARIO.ADD',\n    0x0134: 'SCENARIO.EDIT',\n    0x0135: 'SCENARIO.SHOW',\n    0x0136: 'SCENARIO.SHOW.NEXT',\n    0x0137: 'SCENARIO.SUMMARY',\n    0x0138: 'PIVOT.TABLE.WIZARD',\n    0x0139: 'PIVOT.FIELD.PROPERTIES',\n    0x013A: 'PIVOT.FIELD',\n    0x013B: 'PIVOT.ITEM',\n    0x013C: 'PIVOT.ADD.FIELDS',\n    0x013E: 'OPTIONS.CALCULATION',\n    0x013F: 'OPTIONS.EDIT',\n    0x0140: 'OPTIONS.VIEW',\n    0x0141: 'ADDIN.MANAGER',\n    0x0142: 'MENU.EDITOR',\n    0x0143: 'ATTACH.TOOLBARS',\n    0x0144: 'VBAActivate',\n    0x0145: 'OPTIONS.CHART',\n    0x0148: 'VBA.INSERT.FILE',\n    0x014A: 'VBA.PROCEDURE.DEFINITION',\n    0x0150: 'ROUTING.SLIP',\n    0x0152: 'ROUTE.DOCUMENT',\n    0x0153: 'MAIL.LOGON',\n    0x0156: 'INSERT.PICTURE',\n    0x0157: 'EDIT.TOOL',\n    0x0158: 'GALLERY.DOUGHNUT',\n    0x015E: 'CHART.TREND',\n    0x0160: 'PIVOT.ITEM.PROPERTIES',\n    0x0162: 'WORKBOOK.INSERT',\n    0x0163: 'OPTIONS.TRANSITION',\n    0x0164: 'OPTIONS.GENERAL',\n    0x0172: 'FILTER.ADVANCED',\n    0x0175: 'MAIL.ADD.MAILER',\n    0x0176: 'MAIL.DELETE.MAILER',\n    0x0177: 'MAIL.REPLY',\n    0x0178: 'MAIL.REPLY.ALL',\n    0x0179: 'MAIL.FORWARD',\n    0x017A: 'MAIL.NEXT.LETTER',\n    0x017B: 'DATA.LABEL',\n    0x017C: 'INSERT.TITLE',\n    0x017D: 'FONT.PROPERTIES',\n    0x017E: 'MACRO.OPTIONS',\n    0x017F: 'WORKBOOK.HIDE',\n    0x0180: 'WORKBOOK.UNHIDE',\n    0x0181: 'WORKBOOK.DELETE',\n    0x0182: 'WORKBOOK.NAME',\n    0x0184: 'GALLERY.CUSTOM',\n    0x0186: 'ADD.CHART.AUTOFORMAT',\n    0x0187: 'DELETE.CHART.AUTOFORMAT',\n    0x0188: 'CHART.ADD.DATA',\n    0x0189: 'AUTO.OUTLINE',\n    0x018A: 'TAB.ORDER',\n    0x018B: 'SHOW.DIALOG',\n    0x018C: 'SELECT.ALL',\n    0x018D: 'UNGROUP.SHEETS',\n    0x018E: 'SUBTOTAL.CREATE',\n    0x018F: 'SUBTOTAL.REMOVE',\n    0x0190: 'RENAME.OBJECT',\n    0x019C: 'WORKBOOK.SCROLL',\n    0x019D: 'WORKBOOK.NEXT',\n    0x019E: 'WORKBOOK.PREV',\n    0x019F: 'WORKBOOK.TAB.SPLIT',\n    0x01A0: 'FULL.SCREEN',\n    0x01A1: 'WORKBOOK.PROTECT',\n    0x01A4: 'SCROLLBAR.PROPERTIES',\n    0x01A5: 'PIVOT.SHOW.PAGES',\n    0x01A6: 'TEXT.TO.COLUMNS',\n    0x01A7: 'FORMAT.CHARTTYPE',\n    0x01A8: 'LINK.FORMAT',\n    0x01A9: 'TRACER.DISPLAY',\n    0x01AE: 'TRACER.NAVIGATE',\n    0x01AF: 'TRACER.CLEAR',\n    0x01B0: 'TRACER.ERROR',\n    0x01B1: 'PIVOT.FIELD.GROUP',\n    0x01B2: 'PIVOT.FIELD.UNGROUP',\n    0x01B3: 'CHECKBOX.PROPERTIES',\n    0x01B4: 'LABEL.PROPERTIES',\n    0x01B5: 'LISTBOX.PROPERTIES',\n    0x01B6: 'EDITBOX.PROPERTIES',\n    0x01B7: 'PIVOT.REFRESH',\n    0x01B8: 'LINK.COMBO',\n    0x01B9: 'OPEN.TEXT',\n    0x01BA: 'HIDE.DIALOG',\n    0x01BB: 'SET.DIALOG.FOCUS',\n    0x01BC: 'ENABLE.OBJECT',\n    0x01BD: 'PUSHBUTTON.PROPERTIES',\n    0x01BE: 'SET.DIALOG.DEFAULT',\n    0x01BF: 'FILTER',\n    0x01C0: 'FILTER.SHOW.ALL',\n    0x01C1: 'CLEAR.OUTLINE',\n    0x01C2: 'FUNCTION.WIZARD',\n    0x01C3: 'ADD.LIST.ITEM',\n    0x01C4: 'SET.LIST.ITEM',\n    0x01C5: 'REMOVE.LIST.ITEM',\n    0x01C6: 'SELECT.LIST.ITEM',\n    0x01C7: 'SET.CONTROL.VALUE',\n    0x01C8: 'SAVE.COPY.AS',\n    0x01CA: 'OPTIONS.LISTS.ADD',\n    0x01CB: 'OPTIONS.LISTS.DELETE',\n    0x01CC: 'SERIES.AXES',\n    0x01CD: 'SERIES.X',\n    0x01CE: 'SERIES.Y',\n    0x01CF: 'ERRORBAR.X',\n    0x01D0: 'ERRORBAR.Y',\n    0x01D1: 'FORMAT.CHART',\n    0x01D2: 'SERIES.ORDER',\n    0x01D3: 'MAIL.LOGOFF',\n    0x01D4: 'CLEAR.ROUTING.SLIP',\n    0x01D5: 'APP.ACTIVATE.MICROSOFT',\n    0x01D6: 'MAIL.EDIT.MAILER',\n    0x01D7: 'ON.SHEET',\n    0x01D8: 'STANDARD.WIDTH',\n    0x01D9: 'SCENARIO.MERGE',\n    0x01DA: 'SUMMARY.INFO',\n    0x01DB: 'FIND.FILE',\n    0x01DC: 'ACTIVE.CELL.FONT',\n    0x01DD: 'ENABLE.TIPWIZARD',\n    0x01DE: 'VBA.MAKE.ADDIN',\n    0x01E0: 'INSERTDATATABLE',\n    0x01E1: 'WORKGROUP.OPTIONS',\n    0x01E2: 'MAIL.SEND.MAILER',\n    0x01E5: 'AUTOCORRECT',\n    0x01E9: 'POST.DOCUMENT',\n    0x01EB: 'PICKLIST',\n    0x01ED: 'VIEW.SHOW',\n    0x01EE: 'VIEW.DEFINE',\n    0x01EF: 'VIEW.DELETE',\n    0x01FD: 'SHEET.BACKGROUND',\n    0x01FE: 'INSERT.MAP.OBJECT',\n    0x01FF: 'OPTIONS.MENONO',\n    0x0205: 'MSOCHECKS',\n    0x0206: 'NORMAL',\n    0x0207: 'LAYOUT',\n    0x0208: 'RM.PRINT.AREA',\n    0x0209: 'CLEAR.PRINT.AREA',\n    0x020A: 'ADD.PRINT.AREA',\n    0x020B: 'MOVE.BRK',\n    0x0221: 'HIDECURR.NOTE',\n    0x0222: 'HIDEALL.NOTES',\n    0x0223: 'DELETE.NOTE',\n    0x0224: 'TRAVERSE.NOTES',\n    0x0225: 'ACTIVATE.NOTES',\n    0x026C: 'PROTECT.REVISIONS',\n    0x026D: 'UNPROTECT.REVISIONS',\n    0x0287: 'OPTIONS.ME',\n    0x028D: 'WEB.PUBLISH',\n    0x029B: 'NEWWEBQUERY',\n    0x02A1: 'PIVOT.TABLE.CHART',\n    0x02F1: 'OPTIONS.SAVE',\n    0x02F3: 'OPTIONS.SPELL',\n    0x0328: 'HIDEALL.INKANNOTS'\n  };\n\n  /* [MS-XLS] 2.5.198.17 */\n  /* [MS-XLSB] 2.5.97.10 */\n  var Ftab = {\n    0x0000: 'COUNT',\n    0x0001: 'IF',\n    0x0002: 'ISNA',\n    0x0003: 'ISERROR',\n    0x0004: 'SUM',\n    0x0005: 'AVERAGE',\n    0x0006: 'MIN',\n    0x0007: 'MAX',\n    0x0008: 'ROW',\n    0x0009: 'COLUMN',\n    0x000A: 'NA',\n    0x000B: 'NPV',\n    0x000C: 'STDEV',\n    0x000D: 'DOLLAR',\n    0x000E: 'FIXED',\n    0x000F: 'SIN',\n    0x0010: 'COS',\n    0x0011: 'TAN',\n    0x0012: 'ATAN',\n    0x0013: 'PI',\n    0x0014: 'SQRT',\n    0x0015: 'EXP',\n    0x0016: 'LN',\n    0x0017: 'LOG10',\n    0x0018: 'ABS',\n    0x0019: 'INT',\n    0x001A: 'SIGN',\n    0x001B: 'ROUND',\n    0x001C: 'LOOKUP',\n    0x001D: 'INDEX',\n    0x001E: 'REPT',\n    0x001F: 'MID',\n    0x0020: 'LEN',\n    0x0021: 'VALUE',\n    0x0022: 'TRUE',\n    0x0023: 'FALSE',\n    0x0024: 'AND',\n    0x0025: 'OR',\n    0x0026: 'NOT',\n    0x0027: 'MOD',\n    0x0028: 'DCOUNT',\n    0x0029: 'DSUM',\n    0x002A: 'DAVERAGE',\n    0x002B: 'DMIN',\n    0x002C: 'DMAX',\n    0x002D: 'DSTDEV',\n    0x002E: 'VAR',\n    0x002F: 'DVAR',\n    0x0030: 'TEXT',\n    0x0031: 'LINEST',\n    0x0032: 'TREND',\n    0x0033: 'LOGEST',\n    0x0034: 'GROWTH',\n    0x0035: 'GOTO',\n    0x0036: 'HALT',\n    0x0037: 'RETURN',\n    0x0038: 'PV',\n    0x0039: 'FV',\n    0x003A: 'NPER',\n    0x003B: 'PMT',\n    0x003C: 'RATE',\n    0x003D: 'MIRR',\n    0x003E: 'IRR',\n    0x003F: 'RAND',\n    0x0040: 'MATCH',\n    0x0041: 'DATE',\n    0x0042: 'TIME',\n    0x0043: 'DAY',\n    0x0044: 'MONTH',\n    0x0045: 'YEAR',\n    0x0046: 'WEEKDAY',\n    0x0047: 'HOUR',\n    0x0048: 'MINUTE',\n    0x0049: 'SECOND',\n    0x004A: 'NOW',\n    0x004B: 'AREAS',\n    0x004C: 'ROWS',\n    0x004D: 'COLUMNS',\n    0x004E: 'OFFSET',\n    0x004F: 'ABSREF',\n    0x0050: 'RELREF',\n    0x0051: 'ARGUMENT',\n    0x0052: 'SEARCH',\n    0x0053: 'TRANSPOSE',\n    0x0054: 'ERROR',\n    0x0055: 'STEP',\n    0x0056: 'TYPE',\n    0x0057: 'ECHO',\n    0x0058: 'SET.NAME',\n    0x0059: 'CALLER',\n    0x005A: 'DEREF',\n    0x005B: 'WINDOWS',\n    0x005C: 'SERIES',\n    0x005D: 'DOCUMENTS',\n    0x005E: 'ACTIVE.CELL',\n    0x005F: 'SELECTION',\n    0x0060: 'RESULT',\n    0x0061: 'ATAN2',\n    0x0062: 'ASIN',\n    0x0063: 'ACOS',\n    0x0064: 'CHOOSE',\n    0x0065: 'HLOOKUP',\n    0x0066: 'VLOOKUP',\n    0x0067: 'LINKS',\n    0x0068: 'INPUT',\n    0x0069: 'ISREF',\n    0x006A: 'GET.FORMULA',\n    0x006B: 'GET.NAME',\n    0x006C: 'SET.VALUE',\n    0x006D: 'LOG',\n    0x006E: 'EXEC',\n    0x006F: 'CHAR',\n    0x0070: 'LOWER',\n    0x0071: 'UPPER',\n    0x0072: 'PROPER',\n    0x0073: 'LEFT',\n    0x0074: 'RIGHT',\n    0x0075: 'EXACT',\n    0x0076: 'TRIM',\n    0x0077: 'REPLACE',\n    0x0078: 'SUBSTITUTE',\n    0x0079: 'CODE',\n    0x007A: 'NAMES',\n    0x007B: 'DIRECTORY',\n    0x007C: 'FIND',\n    0x007D: 'CELL',\n    0x007E: 'ISERR',\n    0x007F: 'ISTEXT',\n    0x0080: 'ISNUMBER',\n    0x0081: 'ISBLANK',\n    0x0082: 'T',\n    0x0083: 'N',\n    0x0084: 'FOPEN',\n    0x0085: 'FCLOSE',\n    0x0086: 'FSIZE',\n    0x0087: 'FREADLN',\n    0x0088: 'FREAD',\n    0x0089: 'FWRITELN',\n    0x008A: 'FWRITE',\n    0x008B: 'FPOS',\n    0x008C: 'DATEVALUE',\n    0x008D: 'TIMEVALUE',\n    0x008E: 'SLN',\n    0x008F: 'SYD',\n    0x0090: 'DDB',\n    0x0091: 'GET.DEF',\n    0x0092: 'REFTEXT',\n    0x0093: 'TEXTREF',\n    0x0094: 'INDIRECT',\n    0x0095: 'REGISTER',\n    0x0096: 'CALL',\n    0x0097: 'ADD.BAR',\n    0x0098: 'ADD.MENU',\n    0x0099: 'ADD.COMMAND',\n    0x009A: 'ENABLE.COMMAND',\n    0x009B: 'CHECK.COMMAND',\n    0x009C: 'RENAME.COMMAND',\n    0x009D: 'SHOW.BAR',\n    0x009E: 'DELETE.MENU',\n    0x009F: 'DELETE.COMMAND',\n    0x00A0: 'GET.CHART.ITEM',\n    0x00A1: 'DIALOG.BOX',\n    0x00A2: 'CLEAN',\n    0x00A3: 'MDETERM',\n    0x00A4: 'MINVERSE',\n    0x00A5: 'MMULT',\n    0x00A6: 'FILES',\n    0x00A7: 'IPMT',\n    0x00A8: 'PPMT',\n    0x00A9: 'COUNTA',\n    0x00AA: 'CANCEL.KEY',\n    0x00AB: 'FOR',\n    0x00AC: 'WHILE',\n    0x00AD: 'BREAK',\n    0x00AE: 'NEXT',\n    0x00AF: 'INITIATE',\n    0x00B0: 'REQUEST',\n    0x00B1: 'POKE',\n    0x00B2: 'EXECUTE',\n    0x00B3: 'TERMINATE',\n    0x00B4: 'RESTART',\n    0x00B5: 'HELP',\n    0x00B6: 'GET.BAR',\n    0x00B7: 'PRODUCT',\n    0x00B8: 'FACT',\n    0x00B9: 'GET.CELL',\n    0x00BA: 'GET.WORKSPACE',\n    0x00BB: 'GET.WINDOW',\n    0x00BC: 'GET.DOCUMENT',\n    0x00BD: 'DPRODUCT',\n    0x00BE: 'ISNONTEXT',\n    0x00BF: 'GET.NOTE',\n    0x00C0: 'NOTE',\n    0x00C1: 'STDEVP',\n    0x00C2: 'VARP',\n    0x00C3: 'DSTDEVP',\n    0x00C4: 'DVARP',\n    0x00C5: 'TRUNC',\n    0x00C6: 'ISLOGICAL',\n    0x00C7: 'DCOUNTA',\n    0x00C8: 'DELETE.BAR',\n    0x00C9: 'UNREGISTER',\n    0x00CC: 'USDOLLAR',\n    0x00CD: 'FINDB',\n    0x00CE: 'SEARCHB',\n    0x00CF: 'REPLACEB',\n    0x00D0: 'LEFTB',\n    0x00D1: 'RIGHTB',\n    0x00D2: 'MIDB',\n    0x00D3: 'LENB',\n    0x00D4: 'ROUNDUP',\n    0x00D5: 'ROUNDDOWN',\n    0x00D6: 'ASC',\n    0x00D7: 'DBCS',\n    0x00D8: 'RANK',\n    0x00DB: 'ADDRESS',\n    0x00DC: 'DAYS360',\n    0x00DD: 'TODAY',\n    0x00DE: 'VDB',\n    0x00DF: 'ELSE',\n    0x00E0: 'ELSE.IF',\n    0x00E1: 'END.IF',\n    0x00E2: 'FOR.CELL',\n    0x00E3: 'MEDIAN',\n    0x00E4: 'SUMPRODUCT',\n    0x00E5: 'SINH',\n    0x00E6: 'COSH',\n    0x00E7: 'TANH',\n    0x00E8: 'ASINH',\n    0x00E9: 'ACOSH',\n    0x00EA: 'ATANH',\n    0x00EB: 'DGET',\n    0x00EC: 'CREATE.OBJECT',\n    0x00ED: 'VOLATILE',\n    0x00EE: 'LAST.ERROR',\n    0x00EF: 'CUSTOM.UNDO',\n    0x00F0: 'CUSTOM.REPEAT',\n    0x00F1: 'FORMULA.CONVERT',\n    0x00F2: 'GET.LINK.INFO',\n    0x00F3: 'TEXT.BOX',\n    0x00F4: 'INFO',\n    0x00F5: 'GROUP',\n    0x00F6: 'GET.OBJECT',\n    0x00F7: 'DB',\n    0x00F8: 'PAUSE',\n    0x00FB: 'RESUME',\n    0x00FC: 'FREQUENCY',\n    0x00FD: 'ADD.TOOLBAR',\n    0x00FE: 'DELETE.TOOLBAR',\n    0x00FF: 'User',\n    0x0100: 'RESET.TOOLBAR',\n    0x0101: 'EVALUATE',\n    0x0102: 'GET.TOOLBAR',\n    0x0103: 'GET.TOOL',\n    0x0104: 'SPELLING.CHECK',\n    0x0105: 'ERROR.TYPE',\n    0x0106: 'APP.TITLE',\n    0x0107: 'WINDOW.TITLE',\n    0x0108: 'SAVE.TOOLBAR',\n    0x0109: 'ENABLE.TOOL',\n    0x010A: 'PRESS.TOOL',\n    0x010B: 'REGISTER.ID',\n    0x010C: 'GET.WORKBOOK',\n    0x010D: 'AVEDEV',\n    0x010E: 'BETADIST',\n    0x010F: 'GAMMALN',\n    0x0110: 'BETAINV',\n    0x0111: 'BINOMDIST',\n    0x0112: 'CHIDIST',\n    0x0113: 'CHIINV',\n    0x0114: 'COMBIN',\n    0x0115: 'CONFIDENCE',\n    0x0116: 'CRITBINOM',\n    0x0117: 'EVEN',\n    0x0118: 'EXPONDIST',\n    0x0119: 'FDIST',\n    0x011A: 'FINV',\n    0x011B: 'FISHER',\n    0x011C: 'FISHERINV',\n    0x011D: 'FLOOR',\n    0x011E: 'GAMMADIST',\n    0x011F: 'GAMMAINV',\n    0x0120: 'CEILING',\n    0x0121: 'HYPGEOMDIST',\n    0x0122: 'LOGNORMDIST',\n    0x0123: 'LOGINV',\n    0x0124: 'NEGBINOMDIST',\n    0x0125: 'NORMDIST',\n    0x0126: 'NORMSDIST',\n    0x0127: 'NORMINV',\n    0x0128: 'NORMSINV',\n    0x0129: 'STANDARDIZE',\n    0x012A: 'ODD',\n    0x012B: 'PERMUT',\n    0x012C: 'POISSON',\n    0x012D: 'TDIST',\n    0x012E: 'WEIBULL',\n    0x012F: 'SUMXMY2',\n    0x0130: 'SUMX2MY2',\n    0x0131: 'SUMX2PY2',\n    0x0132: 'CHITEST',\n    0x0133: 'CORREL',\n    0x0134: 'COVAR',\n    0x0135: 'FORECAST',\n    0x0136: 'FTEST',\n    0x0137: 'INTERCEPT',\n    0x0138: 'PEARSON',\n    0x0139: 'RSQ',\n    0x013A: 'STEYX',\n    0x013B: 'SLOPE',\n    0x013C: 'TTEST',\n    0x013D: 'PROB',\n    0x013E: 'DEVSQ',\n    0x013F: 'GEOMEAN',\n    0x0140: 'HARMEAN',\n    0x0141: 'SUMSQ',\n    0x0142: 'KURT',\n    0x0143: 'SKEW',\n    0x0144: 'ZTEST',\n    0x0145: 'LARGE',\n    0x0146: 'SMALL',\n    0x0147: 'QUARTILE',\n    0x0148: 'PERCENTILE',\n    0x0149: 'PERCENTRANK',\n    0x014A: 'MODE',\n    0x014B: 'TRIMMEAN',\n    0x014C: 'TINV',\n    0x014E: 'MOVIE.COMMAND',\n    0x014F: 'GET.MOVIE',\n    0x0150: 'CONCATENATE',\n    0x0151: 'POWER',\n    0x0152: 'PIVOT.ADD.DATA',\n    0x0153: 'GET.PIVOT.TABLE',\n    0x0154: 'GET.PIVOT.FIELD',\n    0x0155: 'GET.PIVOT.ITEM',\n    0x0156: 'RADIANS',\n    0x0157: 'DEGREES',\n    0x0158: 'SUBTOTAL',\n    0x0159: 'SUMIF',\n    0x015A: 'COUNTIF',\n    0x015B: 'COUNTBLANK',\n    0x015C: 'SCENARIO.GET',\n    0x015D: 'OPTIONS.LISTS.GET',\n    0x015E: 'ISPMT',\n    0x015F: 'DATEDIF',\n    0x0160: 'DATESTRING',\n    0x0161: 'NUMBERSTRING',\n    0x0162: 'ROMAN',\n    0x0163: 'OPEN.DIALOG',\n    0x0164: 'SAVE.DIALOG',\n    0x0165: 'VIEW.GET',\n    0x0166: 'GETPIVOTDATA',\n    0x0167: 'HYPERLINK',\n    0x0168: 'PHONETIC',\n    0x0169: 'AVERAGEA',\n    0x016A: 'MAXA',\n    0x016B: 'MINA',\n    0x016C: 'STDEVPA',\n    0x016D: 'VARPA',\n    0x016E: 'STDEVA',\n    0x016F: 'VARA',\n    0x0170: 'BAHTTEXT',\n    0x0171: 'THAIDAYOFWEEK',\n    0x0172: 'THAIDIGIT',\n    0x0173: 'THAIMONTHOFYEAR',\n    0x0174: 'THAINUMSOUND',\n    0x0175: 'THAINUMSTRING',\n    0x0176: 'THAISTRINGLENGTH',\n    0x0177: 'ISTHAIDIGIT',\n    0x0178: 'ROUNDBAHTDOWN',\n    0x0179: 'ROUNDBAHTUP',\n    0x017A: 'THAIYEAR',\n    0x017B: 'RTD',\n\n    0x017C: 'CUBEVALUE',\n    0x017D: 'CUBEMEMBER',\n    0x017E: 'CUBEMEMBERPROPERTY',\n    0x017F: 'CUBERANKEDMEMBER',\n    0x0180: 'HEX2BIN',\n    0x0181: 'HEX2DEC',\n    0x0182: 'HEX2OCT',\n    0x0183: 'DEC2BIN',\n    0x0184: 'DEC2HEX',\n    0x0185: 'DEC2OCT',\n    0x0186: 'OCT2BIN',\n    0x0187: 'OCT2HEX',\n    0x0188: 'OCT2DEC',\n    0x0189: 'BIN2DEC',\n    0x018A: 'BIN2OCT',\n    0x018B: 'BIN2HEX',\n    0x018C: 'IMSUB',\n    0x018D: 'IMDIV',\n    0x018E: 'IMPOWER',\n    0x018F: 'IMABS',\n    0x0190: 'IMSQRT',\n    0x0191: 'IMLN',\n    0x0192: 'IMLOG2',\n    0x0193: 'IMLOG10',\n    0x0194: 'IMSIN',\n    0x0195: 'IMCOS',\n    0x0196: 'IMEXP',\n    0x0197: 'IMARGUMENT',\n    0x0198: 'IMCONJUGATE',\n    0x0199: 'IMAGINARY',\n    0x019A: 'IMREAL',\n    0x019B: 'COMPLEX',\n    0x019C: 'IMSUM',\n    0x019D: 'IMPRODUCT',\n    0x019E: 'SERIESSUM',\n    0x019F: 'FACTDOUBLE',\n    0x01A0: 'SQRTPI',\n    0x01A1: 'QUOTIENT',\n    0x01A2: 'DELTA',\n    0x01A3: 'GESTEP',\n    0x01A4: 'ISEVEN',\n    0x01A5: 'ISODD',\n    0x01A6: 'MROUND',\n    0x01A7: 'ERF',\n    0x01A8: 'ERFC',\n    0x01A9: 'BESSELJ',\n    0x01AA: 'BESSELK',\n    0x01AB: 'BESSELY',\n    0x01AC: 'BESSELI',\n    0x01AD: 'XIRR',\n    0x01AE: 'XNPV',\n    0x01AF: 'PRICEMAT',\n    0x01B0: 'YIELDMAT',\n    0x01B1: 'INTRATE',\n    0x01B2: 'RECEIVED',\n    0x01B3: 'DISC',\n    0x01B4: 'PRICEDISC',\n    0x01B5: 'YIELDDISC',\n    0x01B6: 'TBILLEQ',\n    0x01B7: 'TBILLPRICE',\n    0x01B8: 'TBILLYIELD',\n    0x01B9: 'PRICE',\n    0x01BA: 'YIELD',\n    0x01BB: 'DOLLARDE',\n    0x01BC: 'DOLLARFR',\n    0x01BD: 'NOMINAL',\n    0x01BE: 'EFFECT',\n    0x01BF: 'CUMPRINC',\n    0x01C0: 'CUMIPMT',\n    0x01C1: 'EDATE',\n    0x01C2: 'EOMONTH',\n    0x01C3: 'YEARFRAC',\n    0x01C4: 'COUPDAYBS',\n    0x01C5: 'COUPDAYS',\n    0x01C6: 'COUPDAYSNC',\n    0x01C7: 'COUPNCD',\n    0x01C8: 'COUPNUM',\n    0x01C9: 'COUPPCD',\n    0x01CA: 'DURATION',\n    0x01CB: 'MDURATION',\n    0x01CC: 'ODDLPRICE',\n    0x01CD: 'ODDLYIELD',\n    0x01CE: 'ODDFPRICE',\n    0x01CF: 'ODDFYIELD',\n    0x01D0: 'RANDBETWEEN',\n    0x01D1: 'WEEKNUM',\n    0x01D2: 'AMORDEGRC',\n    0x01D3: 'AMORLINC',\n    0x01D4: 'CONVERT',\n    0x02D4: 'SHEETJS',\n    0x01D5: 'ACCRINT',\n    0x01D6: 'ACCRINTM',\n    0x01D7: 'WORKDAY',\n    0x01D8: 'NETWORKDAYS',\n    0x01D9: 'GCD',\n    0x01DA: 'MULTINOMIAL',\n    0x01DB: 'LCM',\n    0x01DC: 'FVSCHEDULE',\n    0x01DD: 'CUBEKPIMEMBER',\n    0x01DE: 'CUBESET',\n    0x01DF: 'CUBESETCOUNT',\n    0x01E0: 'IFERROR',\n    0x01E1: 'COUNTIFS',\n    0x01E2: 'SUMIFS',\n    0x01E3: 'AVERAGEIF',\n    0x01E4: 'AVERAGEIFS'\n  };\n  var FtabArgc = {\n    0x0002: 1, /* ISNA */\n    0x0003: 1, /* ISERROR */\n    0x000A: 0, /* NA */\n    0x000F: 1, /* SIN */\n    0x0010: 1, /* COS */\n    0x0011: 1, /* TAN */\n    0x0012: 1, /* ATAN */\n    0x0013: 0, /* PI */\n    0x0014: 1, /* SQRT */\n    0x0015: 1, /* EXP */\n    0x0016: 1, /* LN */\n    0x0017: 1, /* LOG10 */\n    0x0018: 1, /* ABS */\n    0x0019: 1, /* INT */\n    0x001A: 1, /* SIGN */\n    0x001B: 2, /* ROUND */\n    0x001E: 2, /* REPT */\n    0x001F: 3, /* MID */\n    0x0020: 1, /* LEN */\n    0x0021: 1, /* VALUE */\n    0x0022: 0, /* TRUE */\n    0x0023: 0, /* FALSE */\n    0x0026: 1, /* NOT */\n    0x0027: 2, /* MOD */\n    0x0028: 3, /* DCOUNT */\n    0x0029: 3, /* DSUM */\n    0x002A: 3, /* DAVERAGE */\n    0x002B: 3, /* DMIN */\n    0x002C: 3, /* DMAX */\n    0x002D: 3, /* DSTDEV */\n    0x002F: 3, /* DVAR */\n    0x0030: 2, /* TEXT */\n    0x0035: 1, /* GOTO */\n    0x003D: 3, /* MIRR */\n    0x003F: 0, /* RAND */\n    0x0041: 3, /* DATE */\n    0x0042: 3, /* TIME */\n    0x0043: 1, /* DAY */\n    0x0044: 1, /* MONTH */\n    0x0045: 1, /* YEAR */\n    0x0046: 1, /* WEEKDAY */\n    0x0047: 1, /* HOUR */\n    0x0048: 1, /* MINUTE */\n    0x0049: 1, /* SECOND */\n    0x004A: 0, /* NOW */\n    0x004B: 1, /* AREAS */\n    0x004C: 1, /* ROWS */\n    0x004D: 1, /* COLUMNS */\n    0x004F: 2, /* ABSREF */\n    0x0050: 2, /* RELREF */\n    0x0053: 1, /* TRANSPOSE */\n    0x0055: 0, /* STEP */\n    0x0056: 1, /* TYPE */\n    0x0059: 0, /* CALLER */\n    0x005A: 1, /* DEREF */\n    0x005E: 0, /* ACTIVE.CELL */\n    0x005F: 0, /* SELECTION */\n    0x0061: 2, /* ATAN2 */\n    0x0062: 1, /* ASIN */\n    0x0063: 1, /* ACOS */\n    0x0065: 3, /* HLOOKUP */\n    0x0066: 3, /* VLOOKUP */\n    0x0069: 1, /* ISREF */\n    0x006A: 1, /* GET.FORMULA */\n    0x006C: 2, /* SET.VALUE */\n    0x006F: 1, /* CHAR */\n    0x0070: 1, /* LOWER */\n    0x0071: 1, /* UPPER */\n    0x0072: 1, /* PROPER */\n    0x0075: 2, /* EXACT */\n    0x0076: 1, /* TRIM */\n    0x0077: 4, /* REPLACE */\n    0x0079: 1, /* CODE */\n    0x007E: 1, /* ISERR */\n    0x007F: 1, /* ISTEXT */\n    0x0080: 1, /* ISNUMBER */\n    0x0081: 1, /* ISBLANK */\n    0x0082: 1, /* T */\n    0x0083: 1, /* N */\n    0x0085: 1, /* FCLOSE */\n    0x0086: 1, /* FSIZE */\n    0x0087: 1, /* FREADLN */\n    0x0088: 2, /* FREAD */\n    0x0089: 2, /* FWRITELN */\n    0x008A: 2, /* FWRITE */\n    0x008C: 1, /* DATEVALUE */\n    0x008D: 1, /* TIMEVALUE */\n    0x008E: 3, /* SLN */\n    0x008F: 4, /* SYD */\n    0x0090: 4, /* DDB */\n    0x00A1: 1, /* DIALOG.BOX */\n    0x00A2: 1, /* CLEAN */\n    0x00A3: 1, /* MDETERM */\n    0x00A4: 1, /* MINVERSE */\n    0x00A5: 2, /* MMULT */\n    0x00AC: 1, /* WHILE */\n    0x00AF: 2, /* INITIATE */\n    0x00B0: 2, /* REQUEST */\n    0x00B1: 3, /* POKE */\n    0x00B2: 2, /* EXECUTE */\n    0x00B3: 1, /* TERMINATE */\n    0x00B8: 1, /* FACT */\n    0x00BA: 1, /* GET.WORKSPACE */\n    0x00BD: 3, /* DPRODUCT */\n    0x00BE: 1, /* ISNONTEXT */\n    0x00C3: 3, /* DSTDEVP */\n    0x00C4: 3, /* DVARP */\n    0x00C5: 1, /* TRUNC */\n    0x00C6: 1, /* ISLOGICAL */\n    0x00C7: 3, /* DCOUNTA */\n    0x00C9: 1, /* UNREGISTER */\n    0x00CF: 4, /* REPLACEB */\n    0x00D2: 3, /* MIDB */\n    0x00D3: 1, /* LENB */\n    0x00D4: 2, /* ROUNDUP */\n    0x00D5: 2, /* ROUNDDOWN */\n    0x00D6: 1, /* ASC */\n    0x00D7: 1, /* DBCS */\n    0x00E1: 0, /* END.IF */\n    0x00E5: 1, /* SINH */\n    0x00E6: 1, /* COSH */\n    0x00E7: 1, /* TANH */\n    0x00E8: 1, /* ASINH */\n    0x00E9: 1, /* ACOSH */\n    0x00EA: 1, /* ATANH */\n    0x00EB: 3, /* DGET */\n    0x00F4: 1, /* INFO */\n    0x00F7: 4, /* DB */\n    0x00FC: 2, /* FREQUENCY */\n    0x0101: 1, /* EVALUATE */\n    0x0105: 1, /* ERROR.TYPE */\n    0x010F: 1, /* GAMMALN */\n    0x0111: 4, /* BINOMDIST */\n    0x0112: 2, /* CHIDIST */\n    0x0113: 2, /* CHIINV */\n    0x0114: 2, /* COMBIN */\n    0x0115: 3, /* CONFIDENCE */\n    0x0116: 3, /* CRITBINOM */\n    0x0117: 1, /* EVEN */\n    0x0118: 3, /* EXPONDIST */\n    0x0119: 3, /* FDIST */\n    0x011A: 3, /* FINV */\n    0x011B: 1, /* FISHER */\n    0x011C: 1, /* FISHERINV */\n    0x011D: 2, /* FLOOR */\n    0x011E: 4, /* GAMMADIST */\n    0x011F: 3, /* GAMMAINV */\n    0x0120: 2, /* CEILING */\n    0x0121: 4, /* HYPGEOMDIST */\n    0x0122: 3, /* LOGNORMDIST */\n    0x0123: 3, /* LOGINV */\n    0x0124: 3, /* NEGBINOMDIST */\n    0x0125: 4, /* NORMDIST */\n    0x0126: 1, /* NORMSDIST */\n    0x0127: 3, /* NORMINV */\n    0x0128: 1, /* NORMSINV */\n    0x0129: 3, /* STANDARDIZE */\n    0x012A: 1, /* ODD */\n    0x012B: 2, /* PERMUT */\n    0x012C: 3, /* POISSON */\n    0x012D: 3, /* TDIST */\n    0x012E: 4, /* WEIBULL */\n    0x012F: 2, /* SUMXMY2 */\n    0x0130: 2, /* SUMX2MY2 */\n    0x0131: 2, /* SUMX2PY2 */\n    0x0132: 2, /* CHITEST */\n    0x0133: 2, /* CORREL */\n    0x0134: 2, /* COVAR */\n    0x0135: 3, /* FORECAST */\n    0x0136: 2, /* FTEST */\n    0x0137: 2, /* INTERCEPT */\n    0x0138: 2, /* PEARSON */\n    0x0139: 2, /* RSQ */\n    0x013A: 2, /* STEYX */\n    0x013B: 2, /* SLOPE */\n    0x013C: 4, /* TTEST */\n    0x0145: 2, /* LARGE */\n    0x0146: 2, /* SMALL */\n    0x0147: 2, /* QUARTILE */\n    0x0148: 2, /* PERCENTILE */\n    0x014B: 2, /* TRIMMEAN */\n    0x014C: 2, /* TINV */\n    0x0151: 2, /* POWER */\n    0x0156: 1, /* RADIANS */\n    0x0157: 1, /* DEGREES */\n    0x015A: 2, /* COUNTIF */\n    0x015B: 1, /* COUNTBLANK */\n    0x015E: 4, /* ISPMT */\n    0x015F: 3, /* DATEDIF */\n    0x0160: 1, /* DATESTRING */\n    0x0161: 2, /* NUMBERSTRING */\n    0x0168: 1, /* PHONETIC */\n    0x0170: 1, /* BAHTTEXT */\n    0x0171: 1, /* THAIDAYOFWEEK */\n    0x0172: 1, /* THAIDIGIT */\n    0x0173: 1, /* THAIMONTHOFYEAR */\n    0x0174: 1, /* THAINUMSOUND */\n    0x0175: 1, /* THAINUMSTRING */\n    0x0176: 1, /* THAISTRINGLENGTH */\n    0x0177: 1, /* ISTHAIDIGIT */\n    0x0178: 1, /* ROUNDBAHTDOWN */\n    0x0179: 1, /* ROUNDBAHTUP */\n    0x017A: 1, /* THAIYEAR */\n    0x017E: 3, /* CUBEMEMBERPROPERTY */\n    0x0181: 1, /* HEX2DEC */\n    0x0188: 1, /* OCT2DEC */\n    0x0189: 1, /* BIN2DEC */\n    0x018C: 2, /* IMSUB */\n    0x018D: 2, /* IMDIV */\n    0x018E: 2, /* IMPOWER */\n    0x018F: 1, /* IMABS */\n    0x0190: 1, /* IMSQRT */\n    0x0191: 1, /* IMLN */\n    0x0192: 1, /* IMLOG2 */\n    0x0193: 1, /* IMLOG10 */\n    0x0194: 1, /* IMSIN */\n    0x0195: 1, /* IMCOS */\n    0x0196: 1, /* IMEXP */\n    0x0197: 1, /* IMARGUMENT */\n    0x0198: 1, /* IMCONJUGATE */\n    0x0199: 1, /* IMAGINARY */\n    0x019A: 1, /* IMREAL */\n    0x019E: 4, /* SERIESSUM */\n    0x019F: 1, /* FACTDOUBLE */\n    0x01A0: 1, /* SQRTPI */\n    0x01A1: 2, /* QUOTIENT */\n    0x01A4: 1, /* ISEVEN */\n    0x01A5: 1, /* ISODD */\n    0x01A6: 2, /* MROUND */\n    0x01A8: 1, /* ERFC */\n    0x01A9: 2, /* BESSELJ */\n    0x01AA: 2, /* BESSELK */\n    0x01AB: 2, /* BESSELY */\n    0x01AC: 2, /* BESSELI */\n    0x01AE: 3, /* XNPV */\n    0x01B6: 3, /* TBILLEQ */\n    0x01B7: 3, /* TBILLPRICE */\n    0x01B8: 3, /* TBILLYIELD */\n    0x01BB: 2, /* DOLLARDE */\n    0x01BC: 2, /* DOLLARFR */\n    0x01BD: 2, /* NOMINAL */\n    0x01BE: 2, /* EFFECT */\n    0x01BF: 6, /* CUMPRINC */\n    0x01C0: 6, /* CUMIPMT */\n    0x01C1: 2, /* EDATE */\n    0x01C2: 2, /* EOMONTH */\n    0x01D0: 2, /* RANDBETWEEN */\n    0x01D4: 3, /* CONVERT */\n    0x01DC: 2, /* FVSCHEDULE */\n    0x01DF: 1, /* CUBESETCOUNT */\n    0x01E0: 2, /* IFERROR */\n    0xFFFF: 0\n  };\n  /* [MS-XLSX] 2.2.3 Functions */\n  /* [MS-XLSB] 2.5.97.10 Ftab */\n  var XLSXFutureFunctions = {\n    \"_xlfn.ACOT\": \"ACOT\",\n    \"_xlfn.ACOTH\": \"ACOTH\",\n    \"_xlfn.AGGREGATE\": \"AGGREGATE\",\n    \"_xlfn.ARABIC\": \"ARABIC\",\n    \"_xlfn.AVERAGEIF\": \"AVERAGEIF\",\n    \"_xlfn.AVERAGEIFS\": \"AVERAGEIFS\",\n    \"_xlfn.BASE\": \"BASE\",\n    \"_xlfn.BETA.DIST\": \"BETA.DIST\",\n    \"_xlfn.BETA.INV\": \"BETA.INV\",\n    \"_xlfn.BINOM.DIST\": \"BINOM.DIST\",\n    \"_xlfn.BINOM.DIST.RANGE\": \"BINOM.DIST.RANGE\",\n    \"_xlfn.BINOM.INV\": \"BINOM.INV\",\n    \"_xlfn.BITAND\": \"BITAND\",\n    \"_xlfn.BITLSHIFT\": \"BITLSHIFT\",\n    \"_xlfn.BITOR\": \"BITOR\",\n    \"_xlfn.BITRSHIFT\": \"BITRSHIFT\",\n    \"_xlfn.BITXOR\": \"BITXOR\",\n    \"_xlfn.CEILING.MATH\": \"CEILING.MATH\",\n    \"_xlfn.CEILING.PRECISE\": \"CEILING.PRECISE\",\n    \"_xlfn.CHISQ.DIST\": \"CHISQ.DIST\",\n    \"_xlfn.CHISQ.DIST.RT\": \"CHISQ.DIST.RT\",\n    \"_xlfn.CHISQ.INV\": \"CHISQ.INV\",\n    \"_xlfn.CHISQ.INV.RT\": \"CHISQ.INV.RT\",\n    \"_xlfn.CHISQ.TEST\": \"CHISQ.TEST\",\n    \"_xlfn.COMBINA\": \"COMBINA\",\n    \"_xlfn.CONCAT\": \"CONCAT\",\n    \"_xlfn.CONFIDENCE.NORM\": \"CONFIDENCE.NORM\",\n    \"_xlfn.CONFIDENCE.T\": \"CONFIDENCE.T\",\n    \"_xlfn.COT\": \"COT\",\n    \"_xlfn.COTH\": \"COTH\",\n    \"_xlfn.COUNTIFS\": \"COUNTIFS\",\n    \"_xlfn.COVARIANCE.P\": \"COVARIANCE.P\",\n    \"_xlfn.COVARIANCE.S\": \"COVARIANCE.S\",\n    \"_xlfn.CSC\": \"CSC\",\n    \"_xlfn.CSCH\": \"CSCH\",\n    \"_xlfn.DAYS\": \"DAYS\",\n    \"_xlfn.DECIMAL\": \"DECIMAL\",\n    \"_xlfn.ECMA.CEILING\": \"ECMA.CEILING\",\n    \"_xlfn.ERF.PRECISE\": \"ERF.PRECISE\",\n    \"_xlfn.ERFC.PRECISE\": \"ERFC.PRECISE\",\n    \"_xlfn.EXPON.DIST\": \"EXPON.DIST\",\n    \"_xlfn.F.DIST\": \"F.DIST\",\n    \"_xlfn.F.DIST.RT\": \"F.DIST.RT\",\n    \"_xlfn.F.INV\": \"F.INV\",\n    \"_xlfn.F.INV.RT\": \"F.INV.RT\",\n    \"_xlfn.F.TEST\": \"F.TEST\",\n    \"_xlfn.FILTERXML\": \"FILTERXML\",\n    \"_xlfn.FLOOR.MATH\": \"FLOOR.MATH\",\n    \"_xlfn.FLOOR.PRECISE\": \"FLOOR.PRECISE\",\n    \"_xlfn.FORECAST.ETS\": \"FORECAST.ETS\",\n    \"_xlfn.FORECAST.ETS.CONFINT\": \"FORECAST.ETS.CONFINT\",\n    \"_xlfn.FORECAST.ETS.SEASONALITY\": \"FORECAST.ETS.SEASONALITY\",\n    \"_xlfn.FORECAST.ETS.STAT\": \"FORECAST.ETS.STAT\",\n    \"_xlfn.FORECAST.LINEAR\": \"FORECAST.LINEAR\",\n    \"_xlfn.FORMULATEXT\": \"FORMULATEXT\",\n    \"_xlfn.GAMMA\": \"GAMMA\",\n    \"_xlfn.GAMMA.DIST\": \"GAMMA.DIST\",\n    \"_xlfn.GAMMA.INV\": \"GAMMA.INV\",\n    \"_xlfn.GAMMALN.PRECISE\": \"GAMMALN.PRECISE\",\n    \"_xlfn.GAUSS\": \"GAUSS\",\n    \"_xlfn.HYPGEOM.DIST\": \"HYPGEOM.DIST\",\n    \"_xlfn.IFERROR\": \"IFERROR\",\n    \"_xlfn.IFNA\": \"IFNA\",\n    \"_xlfn.IFS\": \"IFS\",\n    \"_xlfn.IMCOSH\": \"IMCOSH\",\n    \"_xlfn.IMCOT\": \"IMCOT\",\n    \"_xlfn.IMCSC\": \"IMCSC\",\n    \"_xlfn.IMCSCH\": \"IMCSCH\",\n    \"_xlfn.IMSEC\": \"IMSEC\",\n    \"_xlfn.IMSECH\": \"IMSECH\",\n    \"_xlfn.IMSINH\": \"IMSINH\",\n    \"_xlfn.IMTAN\": \"IMTAN\",\n    \"_xlfn.ISFORMULA\": \"ISFORMULA\",\n    \"_xlfn.ISO.CEILING\": \"ISO.CEILING\",\n    \"_xlfn.ISOWEEKNUM\": \"ISOWEEKNUM\",\n    \"_xlfn.LOGNORM.DIST\": \"LOGNORM.DIST\",\n    \"_xlfn.LOGNORM.INV\": \"LOGNORM.INV\",\n    \"_xlfn.MAXIFS\": \"MAXIFS\",\n    \"_xlfn.MINIFS\": \"MINIFS\",\n    \"_xlfn.MODE.MULT\": \"MODE.MULT\",\n    \"_xlfn.MODE.SNGL\": \"MODE.SNGL\",\n    \"_xlfn.MUNIT\": \"MUNIT\",\n    \"_xlfn.NEGBINOM.DIST\": \"NEGBINOM.DIST\",\n    \"_xlfn.NETWORKDAYS.INTL\": \"NETWORKDAYS.INTL\",\n    \"_xlfn.NIGBINOM\": \"NIGBINOM\",\n    \"_xlfn.NORM.DIST\": \"NORM.DIST\",\n    \"_xlfn.NORM.INV\": \"NORM.INV\",\n    \"_xlfn.NORM.S.DIST\": \"NORM.S.DIST\",\n    \"_xlfn.NORM.S.INV\": \"NORM.S.INV\",\n    \"_xlfn.NUMBERVALUE\": \"NUMBERVALUE\",\n    \"_xlfn.PDURATION\": \"PDURATION\",\n    \"_xlfn.PERCENTILE.EXC\": \"PERCENTILE.EXC\",\n    \"_xlfn.PERCENTILE.INC\": \"PERCENTILE.INC\",\n    \"_xlfn.PERCENTRANK.EXC\": \"PERCENTRANK.EXC\",\n    \"_xlfn.PERCENTRANK.INC\": \"PERCENTRANK.INC\",\n    \"_xlfn.PERMUTATIONA\": \"PERMUTATIONA\",\n    \"_xlfn.PHI\": \"PHI\",\n    \"_xlfn.POISSON.DIST\": \"POISSON.DIST\",\n    \"_xlfn.QUARTILE.EXC\": \"QUARTILE.EXC\",\n    \"_xlfn.QUARTILE.INC\": \"QUARTILE.INC\",\n    \"_xlfn.QUERYSTRING\": \"QUERYSTRING\",\n    \"_xlfn.RANK.AVG\": \"RANK.AVG\",\n    \"_xlfn.RANK.EQ\": \"RANK.EQ\",\n    \"_xlfn.RRI\": \"RRI\",\n    \"_xlfn.SEC\": \"SEC\",\n    \"_xlfn.SECH\": \"SECH\",\n    \"_xlfn.SHEET\": \"SHEET\",\n    \"_xlfn.SHEETS\": \"SHEETS\",\n    \"_xlfn.SKEW.P\": \"SKEW.P\",\n    \"_xlfn.STDEV.P\": \"STDEV.P\",\n    \"_xlfn.STDEV.S\": \"STDEV.S\",\n    \"_xlfn.SUMIFS\": \"SUMIFS\",\n    \"_xlfn.SWITCH\": \"SWITCH\",\n    \"_xlfn.T.DIST\": \"T.DIST\",\n    \"_xlfn.T.DIST.2T\": \"T.DIST.2T\",\n    \"_xlfn.T.DIST.RT\": \"T.DIST.RT\",\n    \"_xlfn.T.INV\": \"T.INV\",\n    \"_xlfn.T.INV.2T\": \"T.INV.2T\",\n    \"_xlfn.T.TEST\": \"T.TEST\",\n    \"_xlfn.TEXTJOIN\": \"TEXTJOIN\",\n    \"_xlfn.UNICHAR\": \"UNICHAR\",\n    \"_xlfn.UNICODE\": \"UNICODE\",\n    \"_xlfn.VAR.P\": \"VAR.P\",\n    \"_xlfn.VAR.S\": \"VAR.S\",\n    \"_xlfn.WEBSERVICE\": \"WEBSERVICE\",\n    \"_xlfn.WEIBULL.DIST\": \"WEIBULL.DIST\",\n    \"_xlfn.WORKDAY.INTL\": \"WORKDAY.INTL\",\n    \"_xlfn.XOR\": \"XOR\",\n    \"_xlfn.Z.TEST\": \"Z.TEST\"\n  };\n\n  /* Part 3 TODO: actually parse formulae */\n  function ods_to_csf_formula(f) {\n    if(f.slice(0,3) == \"of:\") f = f.slice(3);\n    /* 5.2 Basic Expressions */\n    if(f.charCodeAt(0) == 61) {\n      f = f.slice(1);\n      if(f.charCodeAt(0) == 61) f = f.slice(1);\n    }\n    f = f.replace(/COM\\.MICROSOFT\\./g, \"\");\n    /* Part 3 Section 5.8 References */\n    f = f.replace(/\\[((?:\\.[A-Z]+[0-9]+)(?::\\.[A-Z]+[0-9]+)?)\\]/g, function($$, $1) { return $1.replace(/\\./g,\"\"); });\n    /* TODO: something other than this */\n    f = f.replace(/\\[.(#[A-Z]*[?!])\\]/g, \"$1\");\n    return f.replace(/[;~]/g,\",\").replace(/\\|/g,\";\");\n  }\n\n  function csf_to_ods_formula(f) {\n    var o = \"of:=\" + f.replace(crefregex, \"$1[.$2$3$4$5]\").replace(/\\]:\\[/g,\":\");\n    /* TODO: something other than this */\n    return o.replace(/;/g, \"|\").replace(/,/g,\";\");\n  }\n\n  function ods_to_csf_3D(r) {\n    var a = r.split(\":\");\n    var s = a[0].split(\".\")[0];\n    return [s, a[0].split(\".\")[1] + (a.length > 1 ? (\":\" + (a[1].split(\".\")[1] || a[1].split(\".\")[0])) : \"\")];\n  }\n\n  function csf_to_ods_3D(r) {\n    return r.replace(/\\./,\"!\");\n  }\n\n  var strs = {}; // shared strings\n  var _ssfopts = {}; // spreadsheet formatting options\n\n  RELS.WS = [\n    \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet\",\n    \"http://purl.oclc.org/ooxml/officeDocument/relationships/worksheet\"\n  ];\n\n  /*global Map */\n  var browser_has_Map = typeof Map !== 'undefined';\n\n  function get_sst_id(sst, str, rev) {\n    var i = 0, len = sst.length;\n    if(rev) {\n      if(browser_has_Map ? rev.has(str) : rev.hasOwnProperty(str)) {\n        var revarr = browser_has_Map ? rev.get(str) : rev[str];\n        for(; i < revarr.length; ++i) {\n          if(sst[revarr[i]].t === str) { sst.Count ++; return revarr[i]; }\n        }\n      }\n    } else for(; i < len; ++i) {\n      if(sst[i].t === str) { sst.Count ++; return i; }\n    }\n    sst[len] = ({t:str}); sst.Count ++; sst.Unique ++;\n    if(rev) {\n      if(browser_has_Map) {\n        if(!rev.has(str)) rev.set(str, []);\n        rev.get(str).push(len);\n      } else {\n        if(!rev.hasOwnProperty(str)) rev[str] = [];\n        rev[str].push(len);\n      }\n    }\n    return len;\n  }\n\n  function col_obj_w(C, col) {\n    var p = ({min:C+1,max:C+1});\n    /* wch (chars), wpx (pixels) */\n    var wch = -1;\n    if(col.MDW) MDW = col.MDW;\n    if(col.width != null) p.customWidth = 1;\n    else if(col.wpx != null) wch = px2char(col.wpx);\n    else if(col.wch != null) wch = col.wch;\n    if(wch > -1) { p.width = char2width(wch); p.customWidth = 1; }\n    else if(col.width != null) p.width = col.width;\n    if(col.hidden) p.hidden = true;\n    return p;\n  }\n\n  function default_margins(margins, mode) {\n    if(!margins) return;\n    var defs = [0.7, 0.7, 0.75, 0.75, 0.3, 0.3];\n    if(mode == 'xlml') defs = [1, 1, 1, 1, 0.5, 0.5];\n    if(margins.left   == null) margins.left   = defs[0];\n    if(margins.right  == null) margins.right  = defs[1];\n    if(margins.top    == null) margins.top    = defs[2];\n    if(margins.bottom == null) margins.bottom = defs[3];\n    if(margins.header == null) margins.header = defs[4];\n    if(margins.footer == null) margins.footer = defs[5];\n  }\n\n  function get_cell_style(styles, cell, opts) {\n    if (typeof style_builder != 'undefined') {\n      if (/^\\d+$/.exec(cell.s)) { return cell.s}  // if its already an integer index, let it be\n      if (cell.s && (cell.s == +cell.s)) { return cell.s}  // if its already an integer index, let it be\n      var s = cell.s || {};\n      if (cell.z) s.numFmt = cell.z;\n      return style_builder.addStyle(s);\n    }\n    else {\n      var z = opts.revssf[cell.z != null ? cell.z : \"General\"];\n      var i = 0x3c, len = styles.length;\n      if (z == null && opts.ssf) {\n        for (; i < 0x188; ++i) if (opts.ssf[i] == null) {\n          SSF.load(cell.z, i);\n          // $FlowIgnore\n          opts.ssf[i] = cell.z;\n          opts.revssf[cell.z] = z = i;\n          break;\n        }\n      }\n      for (i = 0; i != len; ++i) if (styles[i].numFmtId === z) return i;\n      styles[len] = {\n        numFmtId: z,\n        fontId: 0,\n        fillId: 0,\n        borderId: 0,\n        xfId: 0,\n        applyNumberFormat: 1\n      };\n      return len;\n    }\n  }\n\n  function safe_format(p, fmtid, fillid, opts, themes, styles) {\n    if(p.t === 'z') return;\n    if(p.t === 'd' && typeof p.v === 'string') p.v = parseDate(p.v);\n    try {\n      if(opts.cellNF) p.z = SSF._table[fmtid];\n    } catch(e) { if(opts.WTF) throw e; }\n    if(!opts || opts.cellText !== false) try {\n      if(SSF._table[fmtid] == null) SSF.load(SSFImplicit[fmtid] || \"General\", fmtid);\n      if(p.t === 'e') p.w = p.w || BErr[p.v];\n      else if(fmtid === 0) {\n        if(p.t === 'n') {\n          if((p.v|0) === p.v) p.w = SSF._general_int(p.v);\n          else p.w = SSF._general_num(p.v);\n        }\n        else if(p.t === 'd') {\n          var dd = datenum(p.v);\n          if((dd|0) === dd) p.w = SSF._general_int(dd);\n          else p.w = SSF._general_num(dd);\n        }\n        else if(p.v === undefined) return \"\";\n        else p.w = SSF._general(p.v,_ssfopts);\n      }\n      else if(p.t === 'd') p.w = SSF.format(fmtid,datenum(p.v),_ssfopts);\n      else p.w = SSF.format(fmtid,p.v,_ssfopts);\n    } catch(e) { if(opts.WTF) throw e; }\n    if(!opts.cellStyles) return;\n    if(fillid != null) try {\n      p.s = styles.Fills[fillid];\n      if (p.s.fgColor && p.s.fgColor.theme && !p.s.fgColor.rgb) {\n        p.s.fgColor.rgb = rgb_tint(themes.themeElements.clrScheme[p.s.fgColor.theme].rgb, p.s.fgColor.tint || 0);\n        if(opts.WTF) p.s.fgColor.raw_rgb = themes.themeElements.clrScheme[p.s.fgColor.theme].rgb;\n      }\n      if (p.s.bgColor && p.s.bgColor.theme) {\n        p.s.bgColor.rgb = rgb_tint(themes.themeElements.clrScheme[p.s.bgColor.theme].rgb, p.s.bgColor.tint || 0);\n        if(opts.WTF) p.s.bgColor.raw_rgb = themes.themeElements.clrScheme[p.s.bgColor.theme].rgb;\n      }\n    } catch(e) { if(opts.WTF && styles.Fills) throw e; }\n  }\n\n  function check_ws(ws, sname, i) {\n    if(ws && ws['!ref']) {\n      var range = safe_decode_range(ws['!ref']);\n      if(range.e.c < range.s.c || range.e.r < range.s.r) throw new Error(\"Bad range (\" + i + \"): \" + ws['!ref']);\n    }\n  }\n  function parse_ws_xml_dim(ws, s) {\n    var d = safe_decode_range(s);\n    if(d.s.r<=d.e.r && d.s.c<=d.e.c && d.s.r>=0 && d.s.c>=0) ws[\"!ref\"] = encode_range(d);\n  }\n  var mergecregex = /<(?:\\w:)?mergeCell ref=\"[A-Z0-9:]+\"\\s*[\\/]?>/g;\n  var sheetdataregex = /<(?:\\w+:)?sheetData>([\\s\\S]*)<\\/(?:\\w+:)?sheetData>/;\n  var hlinkregex = /<(?:\\w:)?hyperlink [^>]*>/mg;\n  var dimregex = /\"(\\w*:\\w*)\"/;\n  var colregex = /<(?:\\w:)?col\\b[^>]*[\\/]?>/g;\n  var afregex = /<(?:\\w:)?autoFilter[^>]*([\\/]|>([\\s\\S]*)<\\/(?:\\w:)?autoFilter)>/g;\n  var marginregex= /<(?:\\w:)?pageMargins[^>]*\\/>/g;\n  var sheetprregex = /<(?:\\w:)?sheetPr\\b(?:[^>a-z][^>]*)?\\/>/;\n  var svsregex = /<(?:\\w:)?sheetViews[^>]*(?:[\\/]|>([\\s\\S]*)<\\/(?:\\w:)?sheetViews)>/;\n  /* 18.3 Worksheets */\n  function parse_ws_xml(data, opts, idx, rels, wb, themes, styles) {\n    if(!data) return data;\n    if(DENSE != null && opts.dense == null) opts.dense = DENSE;\n\n    /* 18.3.1.99 worksheet CT_Worksheet */\n    var s = opts.dense ? ([]) : ({});\n    var refguess = ({s: {r:2000000, c:2000000}, e: {r:0, c:0} });\n\n    var data1 = \"\", data2 = \"\";\n    var mtch = data.match(sheetdataregex);\n    if(mtch) {\n      data1 = data.slice(0, mtch.index);\n      data2 = data.slice(mtch.index + mtch[0].length);\n    } else data1 = data2 = data;\n\n    /* 18.3.1.82 sheetPr CT_SheetPr */\n    var sheetPr = data1.match(sheetprregex);\n    if(sheetPr) parse_ws_xml_sheetpr(sheetPr[0], s, wb, idx);\n\n    /* 18.3.1.35 dimension CT_SheetDimension */\n    // $FlowIgnore\n    var ridx = (data1.match(/<(?:\\w*:)?dimension/)||{index:-1}).index;\n    if(ridx > 0) {\n      var ref = data1.slice(ridx,ridx+50).match(dimregex);\n      if(ref) parse_ws_xml_dim(s, ref[1]);\n    }\n\n    /* 18.3.1.88 sheetViews CT_SheetViews */\n    var svs = data1.match(svsregex);\n    if(svs && svs[1]) parse_ws_xml_sheetviews(svs[1], wb);\n\n    /* 18.3.1.17 cols CT_Cols */\n    var columns = [];\n    if(opts.cellStyles) {\n      /* 18.3.1.13 col CT_Col */\n      var cols = data1.match(colregex);\n      if(cols) parse_ws_xml_cols(columns, cols);\n    }\n\n    /* 18.3.1.80 sheetData CT_SheetData ? */\n    if(mtch) parse_ws_xml_data(mtch[1], s, opts, refguess, themes, styles);\n\n    /* 18.3.1.2  autoFilter CT_AutoFilter */\n    var afilter = data2.match(afregex);\n    if(afilter) s['!autofilter'] = parse_ws_xml_autofilter(afilter[0]);\n\n    /* 18.3.1.55 mergeCells CT_MergeCells */\n    var merges = [];\n    var _merge = data2.match(mergecregex);\n    if(_merge) for(ridx = 0; ridx != _merge.length; ++ridx)\n      merges[ridx] = safe_decode_range(_merge[ridx].slice(_merge[ridx].indexOf(\"\\\"\")+1));\n\n    /* 18.3.1.48 hyperlinks CT_Hyperlinks */\n    var hlink = data2.match(hlinkregex);\n    if(hlink) parse_ws_xml_hlinks(s, hlink, rels);\n\n    /* 18.3.1.62 pageMargins CT_PageMargins */\n    var margins = data2.match(marginregex);\n    if(margins) s['!margins'] = parse_ws_xml_margins(parsexmltag(margins[0]));\n\n    if(!s[\"!ref\"] && refguess.e.c >= refguess.s.c && refguess.e.r >= refguess.s.r) s[\"!ref\"] = encode_range(refguess);\n    if(opts.sheetRows > 0 && s[\"!ref\"]) {\n      var tmpref = safe_decode_range(s[\"!ref\"]);\n      if(opts.sheetRows <= +tmpref.e.r) {\n        tmpref.e.r = opts.sheetRows - 1;\n        if(tmpref.e.r > refguess.e.r) tmpref.e.r = refguess.e.r;\n        if(tmpref.e.r < tmpref.s.r) tmpref.s.r = tmpref.e.r;\n        if(tmpref.e.c > refguess.e.c) tmpref.e.c = refguess.e.c;\n        if(tmpref.e.c < tmpref.s.c) tmpref.s.c = tmpref.e.c;\n        s[\"!fullref\"] = s[\"!ref\"];\n        s[\"!ref\"] = encode_range(tmpref);\n      }\n    }\n    if(columns.length > 0) s[\"!cols\"] = columns;\n    if(merges.length > 0) s[\"!merges\"] = merges;\n    return s;\n  }\n\n  function write_ws_xml_merges(merges) {\n    if(merges.length === 0) return \"\";\n    var o = '<mergeCells count=\"' + merges.length + '\">';\n    for(var i = 0; i != merges.length; ++i) o += '<mergeCell ref=\"' + encode_range(merges[i]) + '\"/>';\n    return o + '</mergeCells>';\n  }\n\n  /* 18.3.1.82-3 sheetPr CT_ChartsheetPr / CT_SheetPr */\n  function parse_ws_xml_sheetpr(sheetPr, s, wb, idx) {\n    var data = parsexmltag(sheetPr);\n    if(!wb.Sheets[idx]) wb.Sheets[idx] = {};\n    if(data.codeName) wb.Sheets[idx].CodeName = data.codeName;\n  }\n\n  /* 18.3.1.85 sheetProtection CT_SheetProtection */\n  function write_ws_xml_protection(sp) {\n    // algorithmName, hashValue, saltValue, spinCountpassword\n    var o = ({sheet:1});\n    var deffalse = [\"objects\", \"scenarios\", \"selectLockedCells\", \"selectUnlockedCells\"];\n    var deftrue = [\n      \"formatColumns\", \"formatRows\", \"formatCells\",\n      \"insertColumns\", \"insertRows\", \"insertHyperlinks\",\n      \"deleteColumns\", \"deleteRows\",\n      \"sort\", \"autoFilter\", \"pivotTables\"\n    ];\n    deffalse.forEach(function(n) { if(sp[n] != null && sp[n]) o[n] = \"1\"; });\n    deftrue.forEach(function(n) { if(sp[n] != null && !sp[n]) o[n] = \"0\"; });\n    /* TODO: algorithm */\n    if(sp.password) o.password = crypto_CreatePasswordVerifier_Method1(sp.password).toString(16).toUpperCase();\n    return writextag('sheetProtection', null, o);\n  }\n\n  function parse_ws_xml_hlinks(s, data, rels) {\n    var dense = Array.isArray(s);\n    for(var i = 0; i != data.length; ++i) {\n      var val = parsexmltag(utf8read(data[i]), true);\n      if(!val.ref) return;\n      var rel = ((rels || {})['!id']||[])[val.id];\n      if(rel) {\n        val.Target = rel.Target;\n        if(val.location) val.Target += \"#\"+val.location;\n      } else {\n        val.Target = \"#\" + val.location;\n        rel = {Target: val.Target, TargetMode: 'Internal'};\n      }\n      val.Rel = rel;\n      if(val.tooltip) { val.Tooltip = val.tooltip; delete val.tooltip; }\n      var rng = safe_decode_range(val.ref);\n      for(var R=rng.s.r;R<=rng.e.r;++R) for(var C=rng.s.c;C<=rng.e.c;++C) {\n        var addr = encode_cell({c:C,r:R});\n        if(dense) {\n          if(!s[R]) s[R] = [];\n          if(!s[R][C]) s[R][C] = {t:\"z\",v:undefined};\n          s[R][C].l = val;\n        } else {\n          if(!s[addr]) s[addr] = {t:\"z\",v:undefined};\n          s[addr].l = val;\n        }\n      }\n    }\n  }\n\n  function parse_ws_xml_margins(margin) {\n    var o = {};\n    [\"left\", \"right\", \"top\", \"bottom\", \"header\", \"footer\"].forEach(function(k) {\n      if(margin[k]) o[k] = parseFloat(margin[k]);\n    });\n    return o;\n  }\n  function write_ws_xml_margins(margin) {\n    default_margins(margin);\n    return writextag('pageMargins', null, margin);\n  }\n\n  function parse_ws_xml_cols(columns, cols) {\n    var seencol = false;\n    for(var coli = 0; coli != cols.length; ++coli) {\n      var coll = parsexmltag(cols[coli], true);\n      if(coll.hidden) coll.hidden = parsexmlbool(coll.hidden);\n      var colm=parseInt(coll.min, 10)-1, colM=parseInt(coll.max,10)-1;\n      delete coll.min; delete coll.max; coll.width = +coll.width;\n      if(!seencol && coll.width) { seencol = true; find_mdw_colw(coll.width); }\n      process_col(coll);\n      while(colm <= colM) columns[colm++] = dup(coll);\n    }\n  }\n\n  function write_ws_xml_cols(ws, cols) {\n    var o = [\"<cols>\"], col;\n    for(var i = 0; i != cols.length; ++i) {\n      if(!(col = cols[i])) continue;\n      o[o.length] = (writextag('col', null, col_obj_w(i, col)));\n    }\n    o[o.length] = \"</cols>\";\n    return o.join(\"\");\n  }\n\n  function parse_ws_xml_autofilter(data) {\n    var o = { ref: (data.match(/ref=\"([^\"]*)\"/)||[])[1]};\n    return o;\n  }\n  function write_ws_xml_autofilter(data, ws, wb, idx) {\n    var ref = typeof data.ref == \"string\" ? data.ref : encode_range(data.ref);\n    if(!wb.Workbook) wb.Workbook = {};\n    if(!wb.Workbook.Names) wb.Workbook.Names = [];\n    var names = wb.Workbook.Names;\n    var range = decode_range(ref);\n    if(range.s.r == range.e.r) { range.e.r = decode_range(ws[\"!ref\"]).e.r; ref = encode_range(range); }\n    for(var i = 0; i < names.length; ++i) {\n      var name = names[i];\n      if(name.Name != '_xlnm._FilterDatabase') continue;\n      if(name.Sheet != idx) continue;\n      name.Ref = \"'\" + wb.SheetNames[idx] + \"'!\" + ref; break;\n    }\n    if(i == names.length) names.push({ Name: '_xlnm._FilterDatabase', Sheet: idx, Ref: \"'\" + wb.SheetNames[idx] + \"'!\" + ref  });\n    return writextag(\"autoFilter\", null, {ref:ref});\n  }\n\n  /* 18.3.1.88 sheetViews CT_SheetViews */\n  /* 18.3.1.87 sheetView CT_SheetView */\n  var sviewregex = /<(?:\\w:)?sheetView(?:[^>a-z][^>]*)?\\/>/;\n  function parse_ws_xml_sheetviews(data, wb) {\n    (data.match(sviewregex)||[]).forEach(function(r) {\n      var tag = parsexmltag(r);\n      if(parsexmlbool(tag.rightToLeft)) {\n        if(!wb.Views) wb.Views = [{}];\n        if(!wb.Views[0]) wb.Views[0] = {};\n        wb.Views[0].RTL = true;\n      }\n    });\n  }\n  function write_ws_xml_sheetviews(ws, opts, idx, wb) {\n    var sview = {workbookViewId:\"0\"};\n    // $FlowIgnore\n    if( (((wb||{}).Workbook||{}).Views||[])[0] ) sview.rightToLeft = wb.Workbook.Views[0].RTL ? \"1\" : \"0\";\n    return writextag(\"sheetViews\", writextag(\"sheetView\", null, sview), {});\n  }\n\n  function write_ws_xml_cell(cell, ref, ws, opts) {\n    if(cell.v === undefined && cell.f === undefined || cell.t === 'z') return \"\";\n    var vv = \"\";\n    var oldt = cell.t, oldv = cell.v;\n    switch(cell.t) {\n      case 'b': vv = cell.v ? \"1\" : \"0\"; break;\n      case 'n': vv = ''+cell.v; break;\n      case 'e': vv = BErr[cell.v]; break;\n      case 'd':\n        if(opts.cellDates) vv = parseDate(cell.v, -1).toISOString();\n        else {\n          cell = dup(cell);\n          cell.t = 'n';\n          vv = ''+(cell.v = datenum(parseDate(cell.v)));\n        }\n        if(typeof cell.z === 'undefined') cell.z = SSF._table[14];\n        break;\n      default: vv = cell.v; break;\n    }\n    var v = writetag('v', escapexml(vv)), o = ({r:ref});\n    /* TODO: cell style */\n    var os = get_cell_style(opts.cellXfs, cell, opts);\n    if(os !== 0) o.s = os;\n    switch(cell.t) {\n      case 'n': break;\n      case 'd': o.t = \"d\"; break;\n      case 'b': o.t = \"b\"; break;\n      case 'e': o.t = \"e\"; break;\n      default: if(cell.v == null) { delete cell.t; break; }\n        if(opts.bookSST) {\n          v = writetag('v', ''+get_sst_id(opts.Strings, cell.v, opts.revStrings));\n          o.t = \"s\"; break;\n        }\n        o.t = \"str\"; break;\n    }\n    if(cell.t != oldt) { cell.t = oldt; cell.v = oldv; }\n    if(cell.f) {\n      var ff = cell.F && cell.F.slice(0, ref.length) == ref ? {t:\"array\", ref:cell.F} : null;\n      v = writextag('f', escapexml(cell.f), ff) + (cell.v != null ? v : \"\");\n    }\n    if(cell.l) ws['!links'].push([ref, cell.l]);\n    if(cell.c) ws['!comments'].push([ref, cell.c]);\n    return writextag('c', v, o);\n  }\n\n  var parse_ws_xml_data = (function() {\n    var cellregex = /<(?:\\w+:)?c[ >]/, rowregex = /<\\/(?:\\w+:)?row>/;\n    var rregex = /r=[\"']([^\"']*)[\"']/, isregex = /<(?:\\w+:)?is>([\\S\\s]*?)<\\/(?:\\w+:)?is>/;\n    var refregex = /ref=[\"']([^\"']*)[\"']/;\n    var match_v = matchtag(\"v\"), match_f = matchtag(\"f\");\n\n    return function parse_ws_xml_data(sdata, s, opts, guess, themes, styles) {\n      var ri = 0, x = \"\", cells = [], cref = [], idx=0, i=0, cc=0, d=\"\", p;\n      var tag, tagr = 0, tagc = 0;\n      var sstr, ftag;\n      var fmtid = 0, fillid = 0;\n      var do_format = Array.isArray(styles.CellXf), cf;\n      var arrayf = [];\n      var sharedf = [];\n      var dense = Array.isArray(s);\n      var rows = [], rowobj = {}, rowrite = false;\n      for(var marr = sdata.split(rowregex), mt = 0, marrlen = marr.length; mt != marrlen; ++mt) {\n        x = marr[mt].trim();\n        var xlen = x.length;\n        if(xlen === 0) continue;\n\n        /* 18.3.1.73 row CT_Row */\n        for(ri = 0; ri < xlen; ++ri) if(x.charCodeAt(ri) === 62) break; ++ri;\n        tag = parsexmltag(x.slice(0,ri), true);\n        tagr = tag.r != null ? parseInt(tag.r, 10) : tagr+1; tagc = -1;\n        if(opts.sheetRows && opts.sheetRows < tagr) continue;\n        if(guess.s.r > tagr - 1) guess.s.r = tagr - 1;\n        if(guess.e.r < tagr - 1) guess.e.r = tagr - 1;\n\n        if(opts && opts.cellStyles) {\n          rowobj = {}; rowrite = false;\n          if(tag.ht) { rowrite = true; rowobj.hpt = parseFloat(tag.ht); rowobj.hpx = pt2px(rowobj.hpt); }\n          if(tag.hidden == \"1\") { rowrite = true; rowobj.hidden = true; }\n          if(tag.outlineLevel != null) { rowrite = true; rowobj.level = +tag.outlineLevel; }\n          if(rowrite) rows[tagr-1] = rowobj;\n        }\n\n        /* 18.3.1.4 c CT_Cell */\n        cells = x.slice(ri).split(cellregex);\n        for(ri = 0; ri != cells.length; ++ri) {\n          x = cells[ri].trim();\n          if(x.length === 0) continue;\n          cref = x.match(rregex); idx = ri; i=0; cc=0;\n          x = \"<c \" + (x.slice(0,1)==\"<\"?\">\":\"\") + x;\n          if(cref != null && cref.length === 2) {\n            idx = 0; d=cref[1];\n            for(i=0; i != d.length; ++i) {\n              if((cc=d.charCodeAt(i)-64) < 1 || cc > 26) break;\n              idx = 26*idx + cc;\n            }\n            --idx;\n            tagc = idx;\n          } else ++tagc;\n          for(i = 0; i != x.length; ++i) if(x.charCodeAt(i) === 62) break; ++i;\n          tag = parsexmltag(x.slice(0,i), true);\n          if(!tag.r) tag.r = encode_cell({r:tagr-1, c:tagc});\n          d = x.slice(i);\n          p = ({t:\"\"});\n\n          if((cref=d.match(match_v))!= null && cref[1] !== '') p.v=unescapexml(cref[1]);\n          if(opts.cellFormula) {\n            if((cref=d.match(match_f))!= null && cref[1] !== '') {\n              /* TODO: match against XLSXFutureFunctions */\n              p.f=_xlfn(unescapexml(utf8read(cref[1])));\n              if(cref[0].indexOf('t=\"array\"') > -1) {\n                p.F = (d.match(refregex)||[])[1];\n                if(p.F.indexOf(\":\") > -1) arrayf.push([safe_decode_range(p.F), p.F]);\n              } else if(cref[0].indexOf('t=\"shared\"') > -1) {\n                // TODO: parse formula\n                ftag = parsexmltag(cref[0]);\n                sharedf[parseInt(ftag.si, 10)] = [ftag, _xlfn(unescapexml(utf8read(cref[1]))), tag.r];\n              }\n            } else if((cref=d.match(/<f[^>]*\\/>/))) {\n              ftag = parsexmltag(cref[0]);\n              if(sharedf[ftag.si]) p.f = shift_formula_xlsx(sharedf[ftag.si][1], sharedf[ftag.si][2]/*[0].ref*/, tag.r);\n            }\n            /* TODO: factor out contains logic */\n            var _tag = decode_cell(tag.r);\n            for(i = 0; i < arrayf.length; ++i)\n              if(_tag.r >= arrayf[i][0].s.r && _tag.r <= arrayf[i][0].e.r)\n                if(_tag.c >= arrayf[i][0].s.c && _tag.c <= arrayf[i][0].e.c)\n                  p.F = arrayf[i][1];\n          }\n\n          if(tag.t == null && p.v === undefined) {\n            if(p.f || p.F) {\n              p.v = 0; p.t = \"n\";\n            } else if(!opts.sheetStubs) continue;\n            else p.t = \"z\";\n          }\n          else p.t = tag.t || \"n\";\n          if(guess.s.c > tagc) guess.s.c = tagc;\n          if(guess.e.c < tagc) guess.e.c = tagc;\n          /* 18.18.11 t ST_CellType */\n          switch(p.t) {\n            case 'n':\n              if(p.v == \"\" || p.v == null) {\n                if(!opts.sheetStubs) continue;\n                p.t = 'z';\n              } else p.v = parseFloat(p.v);\n              break;\n            case 's':\n              if(typeof p.v == 'undefined') {\n                if(!opts.sheetStubs) continue;\n                p.t = 'z';\n              } else {\n                sstr = strs[parseInt(p.v, 10)];\n                p.v = sstr.t;\n                p.r = sstr.r;\n                if(opts.cellHTML) p.h = sstr.h;\n              }\n              break;\n            case 'str':\n              p.t = \"s\";\n              p.v = (p.v!=null) ? utf8read(p.v) : '';\n              if(opts.cellHTML) p.h = escapehtml(p.v);\n              break;\n            case 'inlineStr':\n              cref = d.match(isregex);\n              p.t = 's';\n              if(cref != null && (sstr = parse_si(cref[1]))) p.v = sstr.t; else p.v = \"\";\n              break;\n            case 'b': p.v = parsexmlbool(p.v); break;\n            case 'd':\n              if(opts.cellDates) p.v = parseDate(p.v, 1);\n              else { p.v = datenum(parseDate(p.v, 1)); p.t = 'n'; }\n              break;\n            /* error string in .w, number in .v */\n            case 'e':\n              if(!opts || opts.cellText !== false) p.w = p.v;\n              p.v = RBErr[p.v]; break;\n          }\n          /* formatting */\n          fmtid = fillid = 0;\n          if(do_format && tag.s !== undefined) {\n            cf = styles.CellXf[tag.s];\n            if(cf != null) {\n              if(cf.numFmtId != null) fmtid = cf.numFmtId;\n              if(opts.cellStyles) {\n                if(cf.fillId != null) fillid = cf.fillId;\n              }\n            }\n          }\n          safe_format(p, fmtid, fillid, opts, themes, styles);\n          if(opts.cellDates && do_format && p.t == 'n' && SSF.is_date(SSF._table[fmtid])) { p.t = 'd'; p.v = numdate(p.v); }\n          if(dense) {\n            var _r = decode_cell(tag.r);\n            if(!s[_r.r]) s[_r.r] = [];\n            s[_r.r][_r.c] = p;\n          } else s[tag.r] = p;\n        }\n      }\n      if(rows.length > 0) s['!rows'] = rows;\n    }; })();\n\n  function write_ws_xml_data(ws, opts, idx, wb) {\n    var o = [], r = [], range = safe_decode_range(ws['!ref']), cell=\"\", ref, rr = \"\", cols = [], R=0, C=0, rows = ws['!rows'];\n    var dense = Array.isArray(ws);\n    var params = ({r:rr}), row, height = -1;\n    for(C = range.s.c; C <= range.e.c; ++C) cols[C] = encode_col(C);\n    for(R = range.s.r; R <= range.e.r; ++R) {\n      r = [];\n      rr = encode_row(R);\n      for(C = range.s.c; C <= range.e.c; ++C) {\n        ref = cols[C] + rr;\n        var _cell = dense ? (ws[R]||[])[C]: ws[ref];\n        if(_cell === undefined) continue;\n        if((cell = write_ws_xml_cell(_cell, ref, ws, opts, idx, wb)) != null) r.push(cell);\n      }\n      if(r.length > 0 || (rows && rows[R])) {\n        params = ({r:rr});\n        if(rows && rows[R]) {\n          row = rows[R];\n          if(row.hidden) params.hidden = 1;\n          height = -1;\n          if(row.hpx) height = px2pt(row.hpx);\n          else if(row.hpt) height = row.hpt;\n          if(height > -1) { params.ht = height; params.customHeight = 1; }\n          if(row.level) { params.outlineLevel = row.level; }\n        }\n        o[o.length] = (writextag('row', r.join(\"\"), params));\n      }\n    }\n    if(rows) for(; R < rows.length; ++R) {\n      if(rows && rows[R]) {\n        params = ({r:R+1});\n        row = rows[R];\n        if(row.hidden) params.hidden = 1;\n        height = -1;\n        if (row.hpx) height = px2pt(row.hpx);\n        else if (row.hpt) height = row.hpt;\n        if (height > -1) { params.ht = height; params.customHeight = 1; }\n        if (row.level) { params.outlineLevel = row.level; }\n        o[o.length] = (writextag('row', \"\", params));\n      }\n    }\n    return o.join(\"\");\n  }\n\n  var WS_XML_ROOT = writextag('worksheet', null, {\n    'xmlns': XMLNS.main[0],\n    'xmlns:r': XMLNS.r\n  });\n\n  function write_ws_xml(idx, opts, wb, rels) {\n    var o = [XML_HEADER, WS_XML_ROOT];\n    var s = wb.SheetNames[idx], sidx = 0, rdata = \"\";\n    var ws = wb.Sheets[s];\n    if(ws == null) ws = {};\n    var ref = ws['!ref'] || 'A1';\n    var range = safe_decode_range(ref);\n    if(range.e.c > 0x3FFF || range.e.r > 0xFFFFF) {\n      if(opts.WTF) throw new Error(\"Range \" + ref + \" exceeds format limit A1:XFD1048576\");\n      range.e.c = Math.min(range.e.c, 0x3FFF);\n      range.e.r = Math.min(range.e.c, 0xFFFFF);\n      ref = encode_range(range);\n    }\n    if(!rels) rels = {};\n    ws['!comments'] = [];\n    ws['!drawing'] = [];\n\n    if(opts.bookType !== 'xlsx' && wb.vbaraw) {\n      var cname = wb.SheetNames[idx];\n      try { if(wb.Workbook) cname = wb.Workbook.Sheets[idx].CodeName || cname; } catch(e) {}\n      o[o.length] = (writextag('sheetPr', null, {'codeName': escapexml(cname)}));\n    }\n\n    o[o.length] = (writextag('dimension', null, {'ref': ref}));\n\n    o[o.length] = write_ws_xml_sheetviews(ws, opts, idx, wb);\n\n    /* TODO: store in WB, process styles */\n    if(opts.sheetFormat) o[o.length] = (writextag('sheetFormatPr', null, {\n      defaultRowHeight:opts.sheetFormat.defaultRowHeight||'16',\n      baseColWidth:opts.sheetFormat.baseColWidth||'10',\n      outlineLevelRow:opts.sheetFormat.outlineLevelRow||'7'\n    }));\n\n    if(ws['!cols'] != null && ws['!cols'].length > 0) o[o.length] = (write_ws_xml_cols(ws, ws['!cols']));\n\n    o[sidx = o.length] = '<sheetData/>';\n    ws['!links'] = [];\n    if(ws['!ref'] != null) {\n      rdata = write_ws_xml_data(ws, opts, idx, wb, rels);\n      if(rdata.length > 0) o[o.length] = (rdata);\n    }\n    if(o.length>sidx+1) { o[o.length] = ('</sheetData>'); o[sidx]=o[sidx].replace(\"/>\",\">\"); }\n\n    /* sheetCalcPr */\n\n    if(ws['!protect'] != null) o[o.length] = write_ws_xml_protection(ws['!protect']);\n\n    /* protectedRanges */\n    /* scenarios */\n\n    if(ws['!autofilter'] != null) o[o.length] = write_ws_xml_autofilter(ws['!autofilter'], ws, wb, idx);\n\n    /* sortState */\n    /* dataConsolidate */\n    /* customSheetViews */\n\n    if(ws['!merges'] != null && ws['!merges'].length > 0) o[o.length] = (write_ws_xml_merges(ws['!merges']));\n\n    /* phoneticPr */\n    /* conditionalFormatting */\n    /* dataValidations */\n\n    var relc = -1, rel, rId = -1;\n    if(ws['!links'].length > 0) {\n      o[o.length] = \"<hyperlinks>\";\n      ws['!links'].forEach(function(l) {\n        if(!l[1].Target) return;\n        rel = ({\"ref\":l[0]});\n        if(l[1].Target.charAt(0) != \"#\") {\n          rId = add_rels(rels, -1, escapexml(l[1].Target).replace(/#.*$/, \"\"), RELS.HLINK);\n          rel[\"r:id\"] = \"rId\"+rId;\n        }\n        if((relc = l[1].Target.indexOf(\"#\")) > -1) rel.location = escapexml(l[1].Target.slice(relc+1));\n        if(l[1].Tooltip) rel.tooltip = escapexml(l[1].Tooltip);\n        o[o.length] = writextag(\"hyperlink\",null,rel);\n      });\n      o[o.length] = \"</hyperlinks>\";\n    }\n    delete ws['!links'];\n\n    /* printOptions */\n    if (ws['!margins'] != null) o[o.length] =  write_ws_xml_margins(ws['!margins']);\n    /* pageSetup */\n\n    //var hfidx = o.length;\n    o[o.length] = \"\";\n\n    /* rowBreaks */\n    /* colBreaks */\n    /* customProperties */\n    /* cellWatches */\n\n    if(!opts || opts.ignoreEC || (opts.ignoreEC == (void 0))) o[o.length] = writetag(\"ignoredErrors\", writextag(\"ignoredError\", null, {numberStoredAsText:1, sqref:ref}));\n\n    /* smartTags */\n\n    if(ws['!drawing'].length > 0) {\n      rId = add_rels(rels, -1, \"../drawings/drawing\" + (idx+1) + \".xml\", RELS.DRAW);\n      o[o.length] = writextag(\"drawing\", null, {\"r:id\":\"rId\" + rId});\n    }\n    else delete ws['!drawing'];\n\n    if(ws['!comments'].length > 0) {\n      rId = add_rels(rels, -1, \"../drawings/vmlDrawing\" + (idx+1) + \".vml\", RELS.VML);\n      o[o.length] = writextag(\"legacyDrawing\", null, {\"r:id\":\"rId\" + rId});\n      ws['!legacy'] = rId;\n    }\n\n    /* drawingHF */\n    /* picture */\n    /* oleObjects */\n    /* controls */\n    /* webPublishItems */\n    /* tableParts */\n    /* extList */\n\n    if(o.length>2) { o[o.length] = ('</worksheet>'); o[1]=o[1].replace(\"/>\",\">\"); }\n    return o.join(\"\");\n  }\n\n  /* [MS-XLSB] 2.4.726 BrtRowHdr */\n  function parse_BrtRowHdr(data, length) {\n    var z = ({});\n    var tgt = data.l + length;\n    z.r = data.read_shift(4);\n    data.l += 4; // TODO: ixfe\n    var miyRw = data.read_shift(2);\n    data.l += 1; // TODO: top/bot padding\n    var flags = data.read_shift(1);\n    data.l = tgt;\n    if(flags & 0x07) z.level = flags & 0x07;\n    if(flags & 0x10) z.hidden = true;\n    if(flags & 0x20) z.hpt = miyRw / 20;\n    return z;\n  }\n  function write_BrtRowHdr(R, range, ws) {\n    var o = new_buf(17+8*16);\n    var row = (ws['!rows']||[])[R]||{};\n    o.write_shift(4, R);\n\n    o.write_shift(4, 0); /* TODO: ixfe */\n\n    var miyRw = 0x0140;\n    if(row.hpx) miyRw = px2pt(row.hpx) * 20;\n    else if(row.hpt) miyRw = row.hpt * 20;\n    o.write_shift(2, miyRw);\n\n    o.write_shift(1, 0); /* top/bot padding */\n\n    var flags = 0x0;\n    if(row.level) flags |= row.level;\n    if(row.hidden) flags |= 0x10;\n    if(row.hpx || row.hpt) flags |= 0x20;\n    o.write_shift(1, flags);\n\n    o.write_shift(1, 0); /* phonetic guide */\n\n    /* [MS-XLSB] 2.5.8 BrtColSpan explains the mechanism */\n    var ncolspan = 0, lcs = o.l;\n    o.l += 4;\n\n    var caddr = {r:R, c:0};\n    for(var i = 0; i < 16; ++i) {\n      if((range.s.c > ((i+1) << 10)) || (range.e.c < (i << 10))) continue;\n      var first = -1, last = -1;\n      for(var j = (i<<10); j < ((i+1)<<10); ++j) {\n        caddr.c = j;\n        var cell = Array.isArray(ws) ? (ws[caddr.r]||[])[caddr.c] : ws[encode_cell(caddr)];\n        if(cell) { if(first < 0) first = j; last = j; }\n      }\n      if(first < 0) continue;\n      ++ncolspan;\n      o.write_shift(4, first);\n      o.write_shift(4, last);\n    }\n\n    var l = o.l;\n    o.l = lcs;\n    o.write_shift(4, ncolspan);\n    o.l = l;\n\n    return o.length > o.l ? o.slice(0, o.l) : o;\n  }\n  function write_row_header(ba, ws, range, R) {\n    var o = write_BrtRowHdr(R, range, ws);\n    if((o.length > 17) || (ws['!rows']||[])[R]) write_record(ba, 'BrtRowHdr', o);\n  }\n\n  /* [MS-XLSB] 2.4.820 BrtWsDim */\n  var parse_BrtWsDim = parse_UncheckedRfX;\n  var write_BrtWsDim = write_UncheckedRfX;\n\n  /* [MS-XLSB] 2.4.821 BrtWsFmtInfo */\n  function parse_BrtWsFmtInfo() {\n  }\n//function write_BrtWsFmtInfo(ws, o) { }\n\n  /* [MS-XLSB] 2.4.823 BrtWsProp */\n  function parse_BrtWsProp(data, length) {\n    var z = {};\n    /* TODO: pull flags */\n    data.l += 19;\n    z.name = parse_XLSBCodeName(data, length - 19);\n    return z;\n  }\n  function write_BrtWsProp(str, o) {\n    if(o == null) o = new_buf(84+4*str.length);\n    for(var i = 0; i < 3; ++i) o.write_shift(1,0);\n    write_BrtColor({auto:1}, o);\n    o.write_shift(-4,-1);\n    o.write_shift(-4,-1);\n    write_XLSBCodeName(str, o);\n    return o.slice(0, o.l);\n  }\n\n  /* [MS-XLSB] 2.4.306 BrtCellBlank */\n  function parse_BrtCellBlank(data) {\n    var cell = parse_XLSBCell(data);\n    return [cell];\n  }\n  function write_BrtCellBlank(cell, ncell, o) {\n    if(o == null) o = new_buf(8);\n    return write_XLSBCell(ncell, o);\n  }\n\n\n  /* [MS-XLSB] 2.4.307 BrtCellBool */\n  function parse_BrtCellBool(data) {\n    var cell = parse_XLSBCell(data);\n    var fBool = data.read_shift(1);\n    return [cell, fBool, 'b'];\n  }\n  function write_BrtCellBool(cell, ncell, o) {\n    if(o == null) o = new_buf(9);\n    write_XLSBCell(ncell, o);\n    o.write_shift(1, cell.v ? 1 : 0);\n    return o;\n  }\n\n  /* [MS-XLSB] 2.4.308 BrtCellError */\n  function parse_BrtCellError(data) {\n    var cell = parse_XLSBCell(data);\n    var bError = data.read_shift(1);\n    return [cell, bError, 'e'];\n  }\n\n  /* [MS-XLSB] 2.4.311 BrtCellIsst */\n  function parse_BrtCellIsst(data) {\n    var cell = parse_XLSBCell(data);\n    var isst = data.read_shift(4);\n    return [cell, isst, 's'];\n  }\n  function write_BrtCellIsst(cell, ncell, o) {\n    if(o == null) o = new_buf(12);\n    write_XLSBCell(ncell, o);\n    o.write_shift(4, ncell.v);\n    return o;\n  }\n\n  /* [MS-XLSB] 2.4.313 BrtCellReal */\n  function parse_BrtCellReal(data) {\n    var cell = parse_XLSBCell(data);\n    var value = parse_Xnum(data);\n    return [cell, value, 'n'];\n  }\n  function write_BrtCellReal(cell, ncell, o) {\n    if(o == null) o = new_buf(16);\n    write_XLSBCell(ncell, o);\n    write_Xnum(cell.v, o);\n    return o;\n  }\n\n  /* [MS-XLSB] 2.4.314 BrtCellRk */\n  function parse_BrtCellRk(data) {\n    var cell = parse_XLSBCell(data);\n    var value = parse_RkNumber(data);\n    return [cell, value, 'n'];\n  }\n  function write_BrtCellRk(cell, ncell, o) {\n    if(o == null) o = new_buf(12);\n    write_XLSBCell(ncell, o);\n    write_RkNumber(cell.v, o);\n    return o;\n  }\n\n\n  /* [MS-XLSB] 2.4.317 BrtCellSt */\n  function parse_BrtCellSt(data) {\n    var cell = parse_XLSBCell(data);\n    var value = parse_XLWideString(data);\n    return [cell, value, 'str'];\n  }\n  function write_BrtCellSt(cell, ncell, o) {\n    if(o == null) o = new_buf(12 + 4 * cell.v.length);\n    write_XLSBCell(ncell, o);\n    write_XLWideString(cell.v, o);\n    return o.length > o.l ? o.slice(0, o.l) : o;\n  }\n\n  /* [MS-XLSB] 2.4.653 BrtFmlaBool */\n  function parse_BrtFmlaBool(data, length, opts) {\n    var end = data.l + length;\n    var cell = parse_XLSBCell(data);\n    cell.r = opts['!row'];\n    var value = data.read_shift(1);\n    var o = [cell, value, 'b'];\n    if(opts.cellFormula) {\n      data.l += 2;\n      var formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\n      o[3] = stringify_formula(formula, null/*range*/, cell, opts.supbooks, opts);/* TODO */\n    }\n    else data.l = end;\n    return o;\n  }\n\n  /* [MS-XLSB] 2.4.654 BrtFmlaError */\n  function parse_BrtFmlaError(data, length, opts) {\n    var end = data.l + length;\n    var cell = parse_XLSBCell(data);\n    cell.r = opts['!row'];\n    var value = data.read_shift(1);\n    var o = [cell, value, 'e'];\n    if(opts.cellFormula) {\n      data.l += 2;\n      var formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\n      o[3] = stringify_formula(formula, null/*range*/, cell, opts.supbooks, opts);/* TODO */\n    }\n    else data.l = end;\n    return o;\n  }\n\n  /* [MS-XLSB] 2.4.655 BrtFmlaNum */\n  function parse_BrtFmlaNum(data, length, opts) {\n    var end = data.l + length;\n    var cell = parse_XLSBCell(data);\n    cell.r = opts['!row'];\n    var value = parse_Xnum(data);\n    var o = [cell, value, 'n'];\n    if(opts.cellFormula) {\n      data.l += 2;\n      var formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\n      o[3] = stringify_formula(formula, null/*range*/, cell, opts.supbooks, opts);/* TODO */\n    }\n    else data.l = end;\n    return o;\n  }\n\n  /* [MS-XLSB] 2.4.656 BrtFmlaString */\n  function parse_BrtFmlaString(data, length, opts) {\n    var end = data.l + length;\n    var cell = parse_XLSBCell(data);\n    cell.r = opts['!row'];\n    var value = parse_XLWideString(data);\n    var o = [cell, value, 'str'];\n    if(opts.cellFormula) {\n      data.l += 2;\n      var formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\n      o[3] = stringify_formula(formula, null/*range*/, cell, opts.supbooks, opts);/* TODO */\n    }\n    else data.l = end;\n    return o;\n  }\n\n  /* [MS-XLSB] 2.4.682 BrtMergeCell */\n  var parse_BrtMergeCell = parse_UncheckedRfX;\n  var write_BrtMergeCell = write_UncheckedRfX;\n  /* [MS-XLSB] 2.4.107 BrtBeginMergeCells */\n  function write_BrtBeginMergeCells(cnt, o) {\n    if(o == null) o = new_buf(4);\n    o.write_shift(4, cnt);\n    return o;\n  }\n\n  /* [MS-XLSB] 2.4.662 BrtHLink */\n  function parse_BrtHLink(data, length) {\n    var end = data.l + length;\n    var rfx = parse_UncheckedRfX(data, 16);\n    var relId = parse_XLNullableWideString(data);\n    var loc = parse_XLWideString(data);\n    var tooltip = parse_XLWideString(data);\n    var display = parse_XLWideString(data);\n    data.l = end;\n    var o = ({rfx:rfx, relId:relId, loc:loc, display:display});\n    if(tooltip) o.Tooltip = tooltip;\n    return o;\n  }\n  function write_BrtHLink(l, rId) {\n    var o = new_buf(50+4*(l[1].Target.length + (l[1].Tooltip || \"\").length));\n    write_UncheckedRfX({s:decode_cell(l[0]), e:decode_cell(l[0])}, o);\n    write_RelID(\"rId\" + rId, o);\n    var locidx = l[1].Target.indexOf(\"#\");\n    var loc = locidx == -1 ? \"\" : l[1].Target.slice(locidx+1);\n    write_XLWideString(loc || \"\", o);\n    write_XLWideString(l[1].Tooltip || \"\", o);\n    write_XLWideString(\"\", o);\n    return o.slice(0, o.l);\n  }\n\n  /* [MS-XLSB] 2.4.6 BrtArrFmla */\n  function parse_BrtArrFmla(data, length, opts) {\n    var end = data.l + length;\n    var rfx = parse_RfX(data, 16);\n    var fAlwaysCalc = data.read_shift(1);\n    var o = [rfx]; o[2] = fAlwaysCalc;\n    if(opts.cellFormula) {\n      var formula = parse_XLSBArrayParsedFormula(data, end - data.l, opts);\n      o[1] = formula;\n    } else data.l = end;\n    return o;\n  }\n\n  /* [MS-XLSB] 2.4.750 BrtShrFmla */\n  function parse_BrtShrFmla(data, length, opts) {\n    var end = data.l + length;\n    var rfx = parse_UncheckedRfX(data, 16);\n    var o = [rfx];\n    if(opts.cellFormula) {\n      var formula = parse_XLSBSharedParsedFormula(data, end - data.l, opts);\n      o[1] = formula;\n      data.l = end;\n    } else data.l = end;\n    return o;\n  }\n\n  /* [MS-XLSB] 2.4.323 BrtColInfo */\n  /* TODO: once XLS ColInfo is set, combine the functions */\n  function write_BrtColInfo(C, col, o) {\n    if(o == null) o = new_buf(18);\n    var p = col_obj_w(C, col);\n    o.write_shift(-4, C);\n    o.write_shift(-4, C);\n    o.write_shift(4, (p.width || 10) * 256);\n    o.write_shift(4, 0/*ixfe*/); // style\n    var flags = 0;\n    if(col.hidden) flags |= 0x01;\n    if(typeof p.width == 'number') flags |= 0x02;\n    o.write_shift(1, flags); // bit flag\n    o.write_shift(1, 0); // bit flag\n    return o;\n  }\n\n  /* [MS-XLSB] 2.4.678 BrtMargins */\n  var BrtMarginKeys = [\"left\",\"right\",\"top\",\"bottom\",\"header\",\"footer\"];\n  function parse_BrtMargins(data) {\n    var margins = ({});\n    BrtMarginKeys.forEach(function(k) { margins[k] = parse_Xnum(data, 8); });\n    return margins;\n  }\n  function write_BrtMargins(margins, o) {\n    if(o == null) o = new_buf(6*8);\n    default_margins(margins);\n    BrtMarginKeys.forEach(function(k) { write_Xnum((margins)[k], o); });\n    return o;\n  }\n\n  /* [MS-XLSB] 2.4.299 BrtBeginWsView */\n  function parse_BrtBeginWsView(data) {\n    var f = data.read_shift(2);\n    data.l += 28;\n    return { RTL: f & 0x20 };\n  }\n  function write_BrtBeginWsView(ws, Workbook, o) {\n    if(o == null) o = new_buf(30);\n    var f = 0x39c;\n    if((((Workbook||{}).Views||[])[0]||{}).RTL) f |= 0x20;\n    o.write_shift(2, f); // bit flag\n    o.write_shift(4, 0);\n    o.write_shift(4, 0); // view first row\n    o.write_shift(4, 0); // view first col\n    o.write_shift(1, 0); // gridline color ICV\n    o.write_shift(1, 0);\n    o.write_shift(2, 0);\n    o.write_shift(2, 100); // zoom scale\n    o.write_shift(2, 0);\n    o.write_shift(2, 0);\n    o.write_shift(2, 0);\n    o.write_shift(4, 0); // workbook view id\n    return o;\n  }\n\n  /* [MS-XLSB] 2.4.309 BrtCellIgnoreEC */\n  function write_BrtCellIgnoreEC(ref) {\n    var o = new_buf(24);\n    o.write_shift(4, 4);\n    o.write_shift(4, 1);\n    write_UncheckedRfX(ref, o);\n    return o;\n  }\n\n  /* [MS-XLSB] 2.4.748 BrtSheetProtection */\n  function write_BrtSheetProtection(sp, o) {\n    if(o == null) o = new_buf(16*4+2);\n    o.write_shift(2, sp.password ? crypto_CreatePasswordVerifier_Method1(sp.password) : 0);\n    o.write_shift(4, 1); // this record should not be written if no protection\n    [\n      [\"objects\",             false], // fObjects\n      [\"scenarios\",           false], // fScenarios\n      [\"formatCells\",          true], // fFormatCells\n      [\"formatColumns\",        true], // fFormatColumns\n      [\"formatRows\",           true], // fFormatRows\n      [\"insertColumns\",        true], // fInsertColumns\n      [\"insertRows\",           true], // fInsertRows\n      [\"insertHyperlinks\",     true], // fInsertHyperlinks\n      [\"deleteColumns\",        true], // fDeleteColumns\n      [\"deleteRows\",           true], // fDeleteRows\n      [\"selectLockedCells\",   false], // fSelLockedCells\n      [\"sort\",                 true], // fSort\n      [\"autoFilter\",           true], // fAutoFilter\n      [\"pivotTables\",          true], // fPivotTables\n      [\"selectUnlockedCells\", false]  // fSelUnlockedCells\n    ].forEach(function(n) {\n      if(n[1]) o.write_shift(4, sp[n[0]] != null && !sp[n[0]] ? 1 : 0);\n      else      o.write_shift(4, sp[n[0]] != null && sp[n[0]] ? 0 : 1);\n    });\n    return o;\n  }\n\n  /* [MS-XLSB] 2.1.7.61 Worksheet */\n  function parse_ws_bin(data, _opts, idx, rels, wb, themes, styles) {\n    if(!data) return data;\n    var opts = _opts || {};\n    if(!rels) rels = {'!id':{}};\n    if(DENSE != null && opts.dense == null) opts.dense = DENSE;\n    var s = (opts.dense ? [] : {});\n\n    var ref;\n    var refguess = {s: {r:2000000, c:2000000}, e: {r:0, c:0} };\n\n    var pass = false, end = false;\n    var row, p, cf, R, C, addr, sstr, rr, cell;\n    var merges = [];\n    opts.biff = 12;\n    opts['!row'] = 0;\n\n    var ai = 0, af = false;\n\n    var arrayf = [];\n    var sharedf = {};\n    var supbooks = opts.supbooks || wb.supbooks || ([[]]);\n    supbooks.sharedf = sharedf;\n    supbooks.arrayf = arrayf;\n    supbooks.SheetNames = wb.SheetNames || wb.Sheets.map(function(x) { return x.name; });\n    if(!opts.supbooks) {\n      opts.supbooks = supbooks;\n      if(wb.Names) for(var i = 0; i < wb.Names.length; ++i) supbooks[0][i+1] = wb.Names[i];\n    }\n\n    var colinfo = [], rowinfo = [];\n    var seencol = false;\n\n    recordhopper(data, function ws_parse(val, R_n, RT) {\n      if(end) return;\n      switch(RT) {\n        case 0x0094: /* 'BrtWsDim' */\n          ref = val; break;\n        case 0x0000: /* 'BrtRowHdr' */\n          row = val;\n          if(opts.sheetRows && opts.sheetRows <= row.r) end=true;\n          rr = encode_row(R = row.r);\n          opts['!row'] = row.r;\n          if(val.hidden || val.hpt || val.level != null) {\n            if(val.hpt) val.hpx = pt2px(val.hpt);\n            rowinfo[val.r] = val;\n          }\n          break;\n\n        case 0x0002: /* 'BrtCellRk' */\n        case 0x0003: /* 'BrtCellError' */\n        case 0x0004: /* 'BrtCellBool' */\n        case 0x0005: /* 'BrtCellReal' */\n        case 0x0006: /* 'BrtCellSt' */\n        case 0x0007: /* 'BrtCellIsst' */\n        case 0x0008: /* 'BrtFmlaString' */\n        case 0x0009: /* 'BrtFmlaNum' */\n        case 0x000A: /* 'BrtFmlaBool' */\n        case 0x000B: /* 'BrtFmlaError' */\n          p = ({t:val[2]});\n          switch(val[2]) {\n            case 'n': p.v = val[1]; break;\n            case 's': sstr = strs[val[1]]; p.v = sstr.t; p.r = sstr.r; break;\n            case 'b': p.v = val[1] ? true : false; break;\n            case 'e': p.v = val[1]; if(opts.cellText !== false) p.w = BErr[p.v]; break;\n            case 'str': p.t = 's'; p.v = val[1]; break;\n          }\n          if((cf = styles.CellXf[val[0].iStyleRef])) safe_format(p,cf.numFmtId,null,opts, themes, styles);\n          C = val[0].c;\n          if(opts.dense) { if(!s[R]) s[R] = []; s[R][C] = p; }\n          else s[encode_col(C) + rr] = p;\n          if(opts.cellFormula) {\n            af = false;\n            for(ai = 0; ai < arrayf.length; ++ai) {\n              var aii = arrayf[ai];\n              if(row.r >= aii[0].s.r && row.r <= aii[0].e.r)\n                if(C >= aii[0].s.c && C <= aii[0].e.c) {\n                  p.F = encode_range(aii[0]); af = true;\n                }\n            }\n            if(!af && val.length > 3) p.f = val[3];\n          }\n          if(refguess.s.r > row.r) refguess.s.r = row.r;\n          if(refguess.s.c > C) refguess.s.c = C;\n          if(refguess.e.r < row.r) refguess.e.r = row.r;\n          if(refguess.e.c < C) refguess.e.c = C;\n          if(opts.cellDates && cf && p.t == 'n' && SSF.is_date(SSF._table[cf.numFmtId])) {\n            var _d = SSF.parse_date_code(p.v); if(_d) { p.t = 'd'; p.v = new Date(_d.y, _d.m-1,_d.d,_d.H,_d.M,_d.S,_d.u); }\n          }\n          break;\n\n        case 0x0001: /* 'BrtCellBlank' */\n          if(!opts.sheetStubs || pass) break;\n          p = ({t:'z',v:undefined});\n          C = val[0].c;\n          if(opts.dense) { if(!s[R]) s[R] = []; s[R][C] = p; }\n          else s[encode_col(C) + rr] = p;\n          if(refguess.s.r > row.r) refguess.s.r = row.r;\n          if(refguess.s.c > C) refguess.s.c = C;\n          if(refguess.e.r < row.r) refguess.e.r = row.r;\n          if(refguess.e.c < C) refguess.e.c = C;\n          break;\n\n        case 0x00B0: /* 'BrtMergeCell' */\n          merges.push(val); break;\n\n        case 0x01EE: /* 'BrtHLink' */\n          var rel = rels['!id'][val.relId];\n          if(rel) {\n            val.Target = rel.Target;\n            if(val.loc) val.Target += \"#\"+val.loc;\n            val.Rel = rel;\n          } else if(val.relId == '') {\n            val.Target = \"#\" + val.loc;\n          }\n          for(R=val.rfx.s.r;R<=val.rfx.e.r;++R) for(C=val.rfx.s.c;C<=val.rfx.e.c;++C) {\n            if(opts.dense) {\n              if(!s[R]) s[R] = [];\n              if(!s[R][C]) s[R][C] = {t:'z',v:undefined};\n              s[R][C].l = val;\n            } else {\n              addr = encode_cell({c:C,r:R});\n              if(!s[addr]) s[addr] = {t:'z',v:undefined};\n              s[addr].l = val;\n            }\n          }\n          break;\n\n        case 0x01AA: /* 'BrtArrFmla' */\n          if(!opts.cellFormula) break;\n          arrayf.push(val);\n          cell = ((opts.dense ? s[R][C] : s[encode_col(C) + rr]));\n          cell.f = stringify_formula(val[1], refguess, {r:row.r, c:C}, supbooks, opts);\n          cell.F = encode_range(val[0]);\n          break;\n        case 0x01AB: /* 'BrtShrFmla' */\n          if(!opts.cellFormula) break;\n          sharedf[encode_cell(val[0].s)] = val[1];\n          cell = (opts.dense ? s[R][C] : s[encode_col(C) + rr]);\n          cell.f = stringify_formula(val[1], refguess, {r:row.r, c:C}, supbooks, opts);\n          break;\n\n        /* identical to 'ColInfo' in XLS */\n        case 0x003C: /* 'BrtColInfo' */\n          if(!opts.cellStyles) break;\n          while(val.e >= val.s) {\n            colinfo[val.e--] = { width: val.w/256, hidden: !!(val.flags & 0x01) };\n            if(!seencol) { seencol = true; find_mdw_colw(val.w/256); }\n            process_col(colinfo[val.e+1]);\n          }\n          break;\n\n        case 0x00A1: /* 'BrtBeginAFilter' */\n          s['!autofilter'] = { ref:encode_range(val) };\n          break;\n\n        case 0x01DC: /* 'BrtMargins' */\n          s['!margins'] = val;\n          break;\n\n        case 0x0093: /* 'BrtWsProp' */\n          if(!wb.Sheets[idx]) wb.Sheets[idx] = {};\n          if(val.name) wb.Sheets[idx].CodeName = val.name;\n          break;\n\n        case 0x0089: /* 'BrtBeginWsView' */\n          if(!wb.Views) wb.Views = [{}];\n          if(!wb.Views[0]) wb.Views[0] = {};\n          if(val.RTL) wb.Views[0].RTL = true;\n          break;\n\n        case 0x01E5: /* 'BrtWsFmtInfo' */\n          break;\n        case 0x00AF: /* 'BrtAFilterDateGroupItem' */\n        case 0x0284: /* 'BrtActiveX' */\n        case 0x0271: /* 'BrtBigName' */\n        case 0x0232: /* 'BrtBkHim' */\n        case 0x018C: /* 'BrtBrk' */\n        case 0x0458: /* 'BrtCFIcon' */\n        case 0x047A: /* 'BrtCFRuleExt' */\n        case 0x01D7: /* 'BrtCFVO' */\n        case 0x041A: /* 'BrtCFVO14' */\n        case 0x0289: /* 'BrtCellIgnoreEC' */\n        case 0x0451: /* 'BrtCellIgnoreEC14' */\n        case 0x0031: /* 'BrtCellMeta' */\n        case 0x024D: /* 'BrtCellSmartTagProperty' */\n        case 0x025F: /* 'BrtCellWatch' */\n        case 0x0234: /* 'BrtColor' */\n        case 0x041F: /* 'BrtColor14' */\n        case 0x00A8: /* 'BrtColorFilter' */\n        case 0x00AE: /* 'BrtCustomFilter' */\n        case 0x049C: /* 'BrtCustomFilter14' */\n        case 0x01F3: /* 'BrtDRef' */\n        case 0x0040: /* 'BrtDVal' */\n        case 0x041D: /* 'BrtDVal14' */\n        case 0x0226: /* 'BrtDrawing' */\n        case 0x00AB: /* 'BrtDynamicFilter' */\n        case 0x00A7: /* 'BrtFilter' */\n        case 0x0499: /* 'BrtFilter14' */\n        case 0x00A9: /* 'BrtIconFilter' */\n        case 0x049D: /* 'BrtIconFilter14' */\n        case 0x0227: /* 'BrtLegacyDrawing' */\n        case 0x0228: /* 'BrtLegacyDrawingHF' */\n        case 0x0295: /* 'BrtListPart' */\n        case 0x027F: /* 'BrtOleObject' */\n        case 0x01DE: /* 'BrtPageSetup' */\n        case 0x0097: /* 'BrtPane' */\n        case 0x0219: /* 'BrtPhoneticInfo' */\n        case 0x01DD: /* 'BrtPrintOptions' */\n        case 0x0218: /* 'BrtRangeProtection' */\n        case 0x044F: /* 'BrtRangeProtection14' */\n        case 0x02A8: /* 'BrtRangeProtectionIso' */\n        case 0x0450: /* 'BrtRangeProtectionIso14' */\n        case 0x0400: /* 'BrtRwDescent' */\n        case 0x0098: /* 'BrtSel' */\n        case 0x0297: /* 'BrtSheetCalcProp' */\n        case 0x0217: /* 'BrtSheetProtection' */\n        case 0x02A6: /* 'BrtSheetProtectionIso' */\n        case 0x01F8: /* 'BrtSlc' */\n        case 0x0413: /* 'BrtSparkline' */\n        case 0x01AC: /* 'BrtTable' */\n        case 0x00AA: /* 'BrtTop10Filter' */\n        case 0x0C00: /* 'BrtUid' */\n        case 0x0032: /* 'BrtValueMeta' */\n        case 0x0816: /* 'BrtWebExtension' */\n        case 0x0415: /* 'BrtWsFmtInfoEx14' */\n          break;\n\n        case 0x0023: /* 'BrtFRTBegin' */\n          pass = true; break;\n        case 0x0024: /* 'BrtFRTEnd' */\n          pass = false; break;\n        case 0x0025: /* 'BrtACBegin' */ break;\n        case 0x0026: /* 'BrtACEnd' */ break;\n\n        default:\n          if((R_n||\"\").indexOf(\"Begin\") > 0){/* empty */}\n          else if((R_n||\"\").indexOf(\"End\") > 0){/* empty */}\n          else if(!pass || opts.WTF) throw new Error(\"Unexpected record \" + RT + \" \" + R_n);\n      }\n    }, opts);\n\n    delete opts.supbooks;\n    delete opts['!row'];\n\n    if(!s[\"!ref\"] && (refguess.s.r < 2000000 || ref && (ref.e.r > 0 || ref.e.c > 0 || ref.s.r > 0 || ref.s.c > 0))) s[\"!ref\"] = encode_range(ref || refguess);\n    if(opts.sheetRows && s[\"!ref\"]) {\n      var tmpref = safe_decode_range(s[\"!ref\"]);\n      if(opts.sheetRows <= +tmpref.e.r) {\n        tmpref.e.r = opts.sheetRows - 1;\n        if(tmpref.e.r > refguess.e.r) tmpref.e.r = refguess.e.r;\n        if(tmpref.e.r < tmpref.s.r) tmpref.s.r = tmpref.e.r;\n        if(tmpref.e.c > refguess.e.c) tmpref.e.c = refguess.e.c;\n        if(tmpref.e.c < tmpref.s.c) tmpref.s.c = tmpref.e.c;\n        s[\"!fullref\"] = s[\"!ref\"];\n        s[\"!ref\"] = encode_range(tmpref);\n      }\n    }\n    if(merges.length > 0) s[\"!merges\"] = merges;\n    if(colinfo.length > 0) s[\"!cols\"] = colinfo;\n    if(rowinfo.length > 0) s[\"!rows\"] = rowinfo;\n    return s;\n  }\n\n  /* TODO: something useful -- this is a stub */\n  function write_ws_bin_cell(ba, cell, R, C, opts, ws) {\n    if(cell.v === undefined) return \"\";\n    var vv = \"\";\n    switch(cell.t) {\n      case 'b': vv = cell.v ? \"1\" : \"0\"; break;\n      case 'd': // no BrtCellDate :(\n        cell = dup(cell);\n        cell.z = cell.z || SSF._table[14];\n        cell.v = datenum(parseDate(cell.v)); cell.t = 'n';\n        break;\n      /* falls through */\n      case 'n': case 'e': vv = ''+cell.v; break;\n      default: vv = cell.v; break;\n    }\n    var o = ({r:R, c:C});\n    /* TODO: cell style */\n    o.s = get_cell_style(opts.cellXfs, cell, opts);\n    if(cell.l) ws['!links'].push([encode_cell(o), cell.l]);\n    if(cell.c) ws['!comments'].push([encode_cell(o), cell.c]);\n    switch(cell.t) {\n      case 's': case 'str':\n        if(opts.bookSST) {\n          vv = get_sst_id(opts.Strings, (cell.v), opts.revStrings);\n          o.t = \"s\"; o.v = vv;\n          write_record(ba, \"BrtCellIsst\", write_BrtCellIsst(cell, o));\n        } else {\n          o.t = \"str\";\n          write_record(ba, \"BrtCellSt\", write_BrtCellSt(cell, o));\n        }\n        return;\n      case 'n':\n        /* TODO: determine threshold for Real vs RK */\n        if(cell.v == (cell.v | 0) && cell.v > -1000 && cell.v < 1000) write_record(ba, \"BrtCellRk\", write_BrtCellRk(cell, o));\n        else write_record(ba, \"BrtCellReal\", write_BrtCellReal(cell, o));\n        return;\n      case 'b':\n        o.t = \"b\";\n        write_record(ba, \"BrtCellBool\", write_BrtCellBool(cell, o));\n        return;\n      case 'e': /* TODO: error */ o.t = \"e\"; break;\n    }\n    write_record(ba, \"BrtCellBlank\", write_BrtCellBlank(cell, o));\n  }\n\n  function write_CELLTABLE(ba, ws, idx, opts) {\n    var range = safe_decode_range(ws['!ref'] || \"A1\"), ref, rr = \"\", cols = [];\n    write_record(ba, 'BrtBeginSheetData');\n    var dense = Array.isArray(ws);\n    var cap = range.e.r;\n    if(ws['!rows']) cap = Math.max(range.e.r, ws['!rows'].length - 1);\n    for(var R = range.s.r; R <= cap; ++R) {\n      rr = encode_row(R);\n      /* [ACCELLTABLE] */\n      /* BrtRowHdr */\n      write_row_header(ba, ws, range, R);\n      if(R <= range.e.r) for(var C = range.s.c; C <= range.e.c; ++C) {\n        /* *16384CELL */\n        if(R === range.s.r) cols[C] = encode_col(C);\n        ref = cols[C] + rr;\n        var cell = dense ? (ws[R]||[])[C] : ws[ref];\n        if(!cell) continue;\n        /* write cell */\n        write_ws_bin_cell(ba, cell, R, C, opts, ws);\n      }\n    }\n    write_record(ba, 'BrtEndSheetData');\n  }\n\n  function write_MERGECELLS(ba, ws) {\n    if(!ws || !ws['!merges']) return;\n    write_record(ba, 'BrtBeginMergeCells', write_BrtBeginMergeCells(ws['!merges'].length));\n    ws['!merges'].forEach(function(m) { write_record(ba, 'BrtMergeCell', write_BrtMergeCell(m)); });\n    write_record(ba, 'BrtEndMergeCells');\n  }\n\n  function write_COLINFOS(ba, ws) {\n    if(!ws || !ws['!cols']) return;\n    write_record(ba, 'BrtBeginColInfos');\n    ws['!cols'].forEach(function(m, i) { if(m) write_record(ba, 'BrtColInfo', write_BrtColInfo(i, m)); });\n    write_record(ba, 'BrtEndColInfos');\n  }\n\n  function write_IGNOREECS(ba, ws) {\n    if(!ws || !ws['!ref']) return;\n    write_record(ba, 'BrtBeginCellIgnoreECs');\n    write_record(ba, 'BrtCellIgnoreEC', write_BrtCellIgnoreEC(safe_decode_range(ws['!ref'])));\n    write_record(ba, 'BrtEndCellIgnoreECs');\n  }\n\n  function write_HLINKS(ba, ws, rels) {\n    /* *BrtHLink */\n    ws['!links'].forEach(function(l) {\n      if(!l[1].Target) return;\n      var rId = add_rels(rels, -1, l[1].Target.replace(/#.*$/, \"\"), RELS.HLINK);\n      write_record(ba, \"BrtHLink\", write_BrtHLink(l, rId));\n    });\n    delete ws['!links'];\n  }\n  function write_LEGACYDRAWING(ba, ws, idx, rels) {\n    /* [BrtLegacyDrawing] */\n    if(ws['!comments'].length > 0) {\n      var rId = add_rels(rels, -1, \"../drawings/vmlDrawing\" + (idx+1) + \".vml\", RELS.VML);\n      write_record(ba, \"BrtLegacyDrawing\", write_RelID(\"rId\" + rId));\n      ws['!legacy'] = rId;\n    }\n  }\n\n  function write_AUTOFILTER(ba, ws) {\n    if(!ws['!autofilter']) return;\n    write_record(ba, \"BrtBeginAFilter\", write_UncheckedRfX(safe_decode_range(ws['!autofilter'].ref)));\n    /* *FILTERCOLUMN */\n    /* [SORTSTATE] */\n    /* BrtEndAFilter */\n    write_record(ba, \"BrtEndAFilter\");\n  }\n\n  function write_WSVIEWS2(ba, ws, Workbook) {\n    write_record(ba, \"BrtBeginWsViews\");\n    { /* 1*WSVIEW2 */\n      /* [ACUID] */\n      write_record(ba, \"BrtBeginWsView\", write_BrtBeginWsView(ws, Workbook));\n      /* [BrtPane] */\n      /* *4BrtSel */\n      /* *4SXSELECT */\n      /* *FRT */\n      write_record(ba, \"BrtEndWsView\");\n    }\n    /* *FRT */\n    write_record(ba, \"BrtEndWsViews\");\n  }\n\n  function write_WSFMTINFO() {\n    /* [ACWSFMTINFO] */\n    //write_record(ba, \"BrtWsFmtInfo\", write_BrtWsFmtInfo(ws));\n  }\n\n  function write_SHEETPROTECT(ba, ws) {\n    if(!ws['!protect']) return;\n    /* [BrtSheetProtectionIso] */\n    write_record(ba, \"BrtSheetProtection\", write_BrtSheetProtection(ws['!protect']));\n  }\n\n  function write_ws_bin(idx, opts, wb, rels) {\n    var ba = buf_array();\n    var s = wb.SheetNames[idx], ws = wb.Sheets[s] || {};\n    var c = s; try { if(wb && wb.Workbook) c = wb.Workbook.Sheets[idx].CodeName || c; } catch(e) {}\n    var r = safe_decode_range(ws['!ref'] || \"A1\");\n    if(r.e.c > 0x3FFF || r.e.r > 0xFFFFF) {\n      if(opts.WTF) throw new Error(\"Range \" + (ws['!ref'] || \"A1\") + \" exceeds format limit A1:XFD1048576\");\n      r.e.c = Math.min(r.e.c, 0x3FFF);\n      r.e.r = Math.min(r.e.c, 0xFFFFF);\n    }\n    ws['!links'] = [];\n    /* passed back to write_zip and removed there */\n    ws['!comments'] = [];\n    write_record(ba, \"BrtBeginSheet\");\n    if(wb.vbaraw) write_record(ba, \"BrtWsProp\", write_BrtWsProp(c));\n    write_record(ba, \"BrtWsDim\", write_BrtWsDim(r));\n    write_WSVIEWS2(ba, ws, wb.Workbook);\n    write_WSFMTINFO(ba, ws);\n    write_COLINFOS(ba, ws, idx, opts, wb);\n    write_CELLTABLE(ba, ws, idx, opts, wb);\n    /* [BrtSheetCalcProp] */\n    write_SHEETPROTECT(ba, ws);\n    /* *([BrtRangeProtectionIso] BrtRangeProtection) */\n    /* [SCENMAN] */\n    write_AUTOFILTER(ba, ws);\n    /* [SORTSTATE] */\n    /* [DCON] */\n    /* [USERSHVIEWS] */\n    write_MERGECELLS(ba, ws);\n    /* [BrtPhoneticInfo] */\n    /* *CONDITIONALFORMATTING */\n    /* [DVALS] */\n    write_HLINKS(ba, ws, rels);\n    /* [BrtPrintOptions] */\n    if(ws['!margins']) write_record(ba, \"BrtMargins\", write_BrtMargins(ws['!margins']));\n    /* [BrtPageSetup] */\n    /* [HEADERFOOTER] */\n    /* [RWBRK] */\n    /* [COLBRK] */\n    /* *BrtBigName */\n    /* [CELLWATCHES] */\n    if(!opts || opts.ignoreEC || (opts.ignoreEC == (void 0))) write_IGNOREECS(ba, ws);\n    /* [SMARTTAGS] */\n    /* [BrtDrawing] */\n    write_LEGACYDRAWING(ba, ws, idx, rels);\n    /* [BrtLegacyDrawingHF] */\n    /* [BrtBkHim] */\n    /* [OLEOBJECTS] */\n    /* [ACTIVEXCONTROLS] */\n    /* [WEBPUBITEMS] */\n    /* [LISTPARTS] */\n    /* FRTWORKSHEET */\n    write_record(ba, \"BrtEndSheet\");\n    return ba.end();\n  }\n  function parse_numCache(data) {\n    var col = [];\n\n    /* 21.2.2.150 pt CT_NumVal */\n    (data.match(/<c:pt idx=\"(\\d*)\">(.*?)<\\/c:pt>/mg)||[]).forEach(function(pt) {\n      var q = pt.match(/<c:pt idx=\"(\\d*?)\"><c:v>(.*)<\\/c:v><\\/c:pt>/);\n      if(!q) return;\n      col[+q[1]] = +q[2];\n    });\n\n    /* 21.2.2.71 formatCode CT_Xstring */\n    var nf = unescapexml((data.match(/<c:formatCode>([\\s\\S]*?)<\\/c:formatCode>/) || [\"\",\"General\"])[1]);\n\n    return [col, nf];\n  }\n\n  /* 21.2 DrawingML - Charts */\n  function parse_chart(data, name, opts, rels, wb, csheet) {\n    var cs = ((csheet || {\"!type\":\"chart\"}));\n    if(!data) return csheet;\n    /* 21.2.2.27 chart CT_Chart */\n\n    var C = 0, R = 0, col = \"A\";\n    var refguess = {s: {r:2000000, c:2000000}, e: {r:0, c:0} };\n\n    /* 21.2.2.120 numCache CT_NumData */\n    (data.match(/<c:numCache>[\\s\\S]*?<\\/c:numCache>/gm)||[]).forEach(function(nc) {\n      var cache = parse_numCache(nc);\n      refguess.s.r = refguess.s.c = 0;\n      refguess.e.c = C;\n      col = encode_col(C);\n      cache[0].forEach(function(n,i) {\n        cs[col + encode_row(i)] = {t:'n', v:n, z:cache[1] };\n        R = i;\n      });\n      if(refguess.e.r < R) refguess.e.r = R;\n      ++C;\n    });\n    if(C > 0) cs[\"!ref\"] = encode_range(refguess);\n    return cs;\n  }\n  RELS.CS = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/chartsheet\";\n\n  var CS_XML_ROOT = writextag('chartsheet', null, {\n    'xmlns': XMLNS.main[0],\n    'xmlns:r': XMLNS.r\n  });\n\n  /* 18.3 Worksheets also covers Chartsheets */\n  function parse_cs_xml(data, opts, idx, rels, wb) {\n    if(!data) return data;\n    /* 18.3.1.12 chartsheet CT_ChartSheet */\n    if(!rels) rels = {'!id':{}};\n    var s = {'!type':\"chart\", '!chart':null, '!rel':\"\"};\n    var m;\n\n    /* 18.3.1.83 sheetPr CT_ChartsheetPr */\n    var sheetPr = data.match(sheetprregex);\n    if(sheetPr) parse_ws_xml_sheetpr(sheetPr[0], s, wb, idx);\n\n    /* 18.3.1.36 drawing CT_Drawing */\n    if((m = data.match(/drawing r:id=\"(.*?)\"/))) s['!rel'] = m[1];\n\n    if(rels['!id'][s['!rel']]) s['!chart'] = rels['!id'][s['!rel']];\n    return s;\n  }\n  function write_cs_xml(idx, opts, wb, rels) {\n    var o = [XML_HEADER, CS_XML_ROOT];\n    o[o.length] = writextag(\"drawing\", null, {\"r:id\": \"rId1\"});\n    add_rels(rels, -1, \"../drawings/drawing\" + (idx+1) + \".xml\", RELS.DRAW);\n    if(o.length>2) { o[o.length] = ('</chartsheet>'); o[1]=o[1].replace(\"/>\",\">\"); }\n    return o.join(\"\");\n  }\n\n  /* [MS-XLSB] 2.4.331 BrtCsProp */\n  function parse_BrtCsProp(data, length) {\n    data.l += 10;\n    var name = parse_XLWideString(data, length - 10);\n    return { name: name };\n  }\n\n  /* [MS-XLSB] 2.1.7.7 Chart Sheet */\n  function parse_cs_bin(data, opts, idx, rels, wb) {\n    if(!data) return data;\n    if(!rels) rels = {'!id':{}};\n    var s = {'!type':\"chart\", '!chart':null, '!rel':\"\"};\n    var state = [];\n    var pass = false;\n    recordhopper(data, function cs_parse(val, R_n, RT) {\n      switch(RT) {\n\n        case 0x0226: /* 'BrtDrawing' */\n          s['!rel'] = val; break;\n\n        case 0x028B: /* 'BrtCsProp' */\n          if(!wb.Sheets[idx]) wb.Sheets[idx] = {};\n          if(val.name) wb.Sheets[idx].CodeName = val.name;\n          break;\n\n        case 0x0232: /* 'BrtBkHim' */\n        case 0x028C: /* 'BrtCsPageSetup' */\n        case 0x029D: /* 'BrtCsProtection' */\n        case 0x02A7: /* 'BrtCsProtectionIso' */\n        case 0x0227: /* 'BrtLegacyDrawing' */\n        case 0x0228: /* 'BrtLegacyDrawingHF' */\n        case 0x01DC: /* 'BrtMargins' */\n        case 0x0C00: /* 'BrtUid' */\n          break;\n\n        case 0x0023: /* 'BrtFRTBegin' */\n          pass = true; break;\n        case 0x0024: /* 'BrtFRTEnd' */\n          pass = false; break;\n        case 0x0025: /* 'BrtACBegin' */\n          state.push(R_n); break;\n        case 0x0026: /* 'BrtACEnd' */\n          state.pop(); break;\n\n        default:\n          if((R_n||\"\").indexOf(\"Begin\") > 0) state.push(R_n);\n          else if((R_n||\"\").indexOf(\"End\") > 0) state.pop();\n          else if(!pass || opts.WTF) throw new Error(\"Unexpected record \" + RT + \" \" + R_n);\n      }\n    }, opts);\n\n    if(rels['!id'][s['!rel']]) s['!chart'] = rels['!id'][s['!rel']];\n    return s;\n  }\n  function write_cs_bin() {\n    var ba = buf_array();\n    write_record(ba, \"BrtBeginSheet\");\n    /* [BrtCsProp] */\n    /* CSVIEWS */\n    /* [[BrtCsProtectionIso] BrtCsProtection] */\n    /* [USERCSVIEWS] */\n    /* [BrtMargins] */\n    /* [BrtCsPageSetup] */\n    /* [HEADERFOOTER] */\n    /* BrtDrawing */\n    /* [BrtLegacyDrawing] */\n    /* [BrtLegacyDrawingHF] */\n    /* [BrtBkHim] */\n    /* [WEBPUBITEMS] */\n    /* FRTCHARTSHEET */\n    write_record(ba, \"BrtEndSheet\");\n    return ba.end();\n  }\n  /* 18.2.28 (CT_WorkbookProtection) Defaults */\n  var WBPropsDef = [\n    ['allowRefreshQuery',           false, \"bool\"],\n    ['autoCompressPictures',        true,  \"bool\"],\n    ['backupFile',                  false, \"bool\"],\n    ['checkCompatibility',          false, \"bool\"],\n    ['CodeName',                    ''],\n    ['date1904',                    false, \"bool\"],\n    ['defaultThemeVersion',         0,      \"int\"],\n    ['filterPrivacy',               false, \"bool\"],\n    ['hidePivotFieldList',          false, \"bool\"],\n    ['promptedSolutions',           false, \"bool\"],\n    ['publishItems',                false, \"bool\"],\n    ['refreshAllConnections',       false, \"bool\"],\n    ['saveExternalLinkValues',      true,  \"bool\"],\n    ['showBorderUnselectedTables',  true,  \"bool\"],\n    ['showInkAnnotation',           true,  \"bool\"],\n    ['showObjects',                 'all'],\n    ['showPivotChartFilter',        false, \"bool\"],\n    ['updateLinks', 'userSet']\n  ];\n\n  /* 18.2.30 (CT_BookView) Defaults */\n  var WBViewDef = [\n    ['activeTab',                   0,      \"int\"],\n    ['autoFilterDateGrouping',      true,  \"bool\"],\n    ['firstSheet',                  0,      \"int\"],\n    ['minimized',                   false, \"bool\"],\n    ['showHorizontalScroll',        true,  \"bool\"],\n    ['showSheetTabs',               true,  \"bool\"],\n    ['showVerticalScroll',          true,  \"bool\"],\n    ['tabRatio',                    600,    \"int\"],\n    ['visibility',                  'visible']\n    //window{Height,Width}, {x,y}Window\n  ];\n\n  /* 18.2.19 (CT_Sheet) Defaults */\n  var SheetDef = [\n    //['state', 'visible']\n  ];\n\n  /* 18.2.2  (CT_CalcPr) Defaults */\n  var CalcPrDef = [\n    ['calcCompleted', 'true'],\n    ['calcMode', 'auto'],\n    ['calcOnSave', 'true'],\n    ['concurrentCalc', 'true'],\n    ['fullCalcOnLoad', 'false'],\n    ['fullPrecision', 'true'],\n    ['iterate', 'false'],\n    ['iterateCount', '100'],\n    ['iterateDelta', '0.001'],\n    ['refMode', 'A1']\n  ];\n\n  /* 18.2.3 (CT_CustomWorkbookView) Defaults */\n  /*var CustomWBViewDef = [\n\t['autoUpdate', 'false'],\n\t['changesSavedWin', 'false'],\n\t['includeHiddenRowCol', 'true'],\n\t['includePrintSettings', 'true'],\n\t['maximized', 'false'],\n\t['minimized', 'false'],\n\t['onlySync', 'false'],\n\t['personalView', 'false'],\n\t['showComments', 'commIndicator'],\n\t['showFormulaBar', 'true'],\n\t['showHorizontalScroll', 'true'],\n\t['showObjects', 'all'],\n\t['showSheetTabs', 'true'],\n\t['showStatusbar', 'true'],\n\t['showVerticalScroll', 'true'],\n\t['tabRatio', '600'],\n\t['xWindow', '0'],\n\t['yWindow', '0']\n];*/\n\n  function push_defaults_array(target, defaults) {\n    for(var j = 0; j != target.length; ++j) { var w = target[j];\n      for(var i=0; i != defaults.length; ++i) { var z = defaults[i];\n        if(w[z[0]] == null) w[z[0]] = z[1];\n        else switch(z[2]) {\n          case \"bool\": if(typeof w[z[0]] == \"string\") w[z[0]] = parsexmlbool(w[z[0]]); break;\n          case \"int\": if(typeof w[z[0]] == \"string\") w[z[0]] = parseInt(w[z[0]], 10); break;\n        }\n      }\n    }\n  }\n  function push_defaults(target, defaults) {\n    for(var i = 0; i != defaults.length; ++i) { var z = defaults[i];\n      if(target[z[0]] == null) target[z[0]] = z[1];\n      else switch(z[2]) {\n        case \"bool\": if(typeof target[z[0]] == \"string\") target[z[0]] = parsexmlbool(target[z[0]]); break;\n        case \"int\": if(typeof target[z[0]] == \"string\") target[z[0]] = parseInt(target[z[0]], 10); break;\n      }\n    }\n  }\n\n  function parse_wb_defaults(wb) {\n    push_defaults(wb.WBProps, WBPropsDef);\n    push_defaults(wb.CalcPr, CalcPrDef);\n\n    push_defaults_array(wb.WBView, WBViewDef);\n    push_defaults_array(wb.Sheets, SheetDef);\n\n    _ssfopts.date1904 = parsexmlbool(wb.WBProps.date1904);\n  }\n\n  function safe1904(wb) {\n    /* TODO: store date1904 somewhere else */\n    if(!wb.Workbook) return \"false\";\n    if(!wb.Workbook.WBProps) return \"false\";\n    return parsexmlbool(wb.Workbook.WBProps.date1904) ? \"true\" : \"false\";\n  }\n\n  var badchars = \"][*?\\/\\\\\".split(\"\");\n  function check_ws_name(n, safe) {\n    if(n.length > 31) { if(safe) return false; throw new Error(\"Sheet names cannot exceed 31 chars\"); }\n    var _good = true;\n    badchars.forEach(function(c) {\n      if(n.indexOf(c) == -1) return;\n      if(!safe) throw new Error(\"Sheet name cannot contain : \\\\ / ? * [ ]\");\n      _good = false;\n    });\n    return _good;\n  }\n  function check_wb_names(N, S, codes) {\n    N.forEach(function(n,i) {\n      check_ws_name(n);\n      for(var j = 0; j < i; ++j) if(n == N[j]) throw new Error(\"Duplicate Sheet Name: \" + n);\n      if(codes) {\n        var cn = (S && S[i] && S[i].CodeName) || n;\n        if(cn.charCodeAt(0) == 95 && cn.length > 22) throw new Error(\"Bad Code Name: Worksheet\" + cn);\n      }\n    });\n  }\n  function check_wb(wb) {\n    if(!wb || !wb.SheetNames || !wb.Sheets) throw new Error(\"Invalid Workbook\");\n    if(!wb.SheetNames.length) throw new Error(\"Workbook is empty\");\n    var Sheets = (wb.Workbook && wb.Workbook.Sheets) || [];\n    check_wb_names(wb.SheetNames, Sheets, !!wb.vbaraw);\n    for(var i = 0; i < wb.SheetNames.length; ++i) check_ws(wb.Sheets[wb.SheetNames[i]], wb.SheetNames[i], i);\n    /* TODO: validate workbook */\n  }\n  /* 18.2 Workbook */\n  var wbnsregex = /<\\w+:workbook/;\n  function parse_wb_xml(data, opts) {\n    if(!data) throw new Error(\"Could not find file\");\n    var wb = { AppVersion:{}, WBProps:{}, WBView:[], Sheets:[], CalcPr:{}, Names:[], xmlns: \"\" };\n    var pass = false, xmlns = \"xmlns\";\n    var dname = {}, dnstart = 0;\n    data.replace(tagregex, function xml_wb(x, idx) {\n      var y = parsexmltag(x);\n      switch(strip_ns(y[0])) {\n        case '<?xml': break;\n\n        /* 18.2.27 workbook CT_Workbook 1 */\n        case '<workbook':\n          if(x.match(wbnsregex)) xmlns = \"xmlns\" + x.match(/<(\\w+):/)[1];\n          wb.xmlns = y[xmlns];\n          break;\n        case '</workbook>': break;\n\n        /* 18.2.13 fileVersion CT_FileVersion ? */\n        case '<fileVersion': delete y[0]; wb.AppVersion = y; break;\n        case '<fileVersion/>': case '</fileVersion>': break;\n\n        /* 18.2.12 fileSharing CT_FileSharing ? */\n        case '<fileSharing': case '<fileSharing/>': break;\n\n        /* 18.2.28 workbookPr CT_WorkbookPr ? */\n        case '<workbookPr':\n        case '<workbookPr/>':\n          WBPropsDef.forEach(function(w) {\n            if(y[w[0]] == null) return;\n            switch(w[2]) {\n              case \"bool\": wb.WBProps[w[0]] = parsexmlbool(y[w[0]]); break;\n              case \"int\": wb.WBProps[w[0]] = parseInt(y[w[0]], 10); break;\n              default: wb.WBProps[w[0]] = y[w[0]];\n            }\n          });\n          if(y.codeName) wb.WBProps.CodeName = y.codeName;\n          break;\n        case '</workbookPr>': break;\n\n        /* 18.2.29 workbookProtection CT_WorkbookProtection ? */\n        case '<workbookProtection': break;\n        case '<workbookProtection/>': break;\n\n        /* 18.2.1  bookViews CT_BookViews ? */\n        case '<bookViews': case '<bookViews>': case '</bookViews>': break;\n        /* 18.2.30   workbookView CT_BookView + */\n        case '<workbookView': case '<workbookView/>': delete y[0]; wb.WBView.push(y); break;\n        case '</workbookView>': break;\n\n        /* 18.2.20 sheets CT_Sheets 1 */\n        case '<sheets': case '<sheets>': case '</sheets>': break; // aggregate sheet\n        /* 18.2.19   sheet CT_Sheet + */\n        case '<sheet':\n          switch(y.state) {\n            case \"hidden\": y.Hidden = 1; break;\n            case \"veryHidden\": y.Hidden = 2; break;\n            default: y.Hidden = 0;\n          }\n          delete y.state;\n          y.name = unescapexml(utf8read(y.name));\n          delete y[0]; wb.Sheets.push(y); break;\n        case '</sheet>': break;\n\n        /* 18.2.15 functionGroups CT_FunctionGroups ? */\n        case '<functionGroups': case '<functionGroups/>': break;\n        /* 18.2.14   functionGroup CT_FunctionGroup + */\n        case '<functionGroup': break;\n\n        /* 18.2.9  externalReferences CT_ExternalReferences ? */\n        case '<externalReferences': case '</externalReferences>': case '<externalReferences>': break;\n        /* 18.2.8    externalReference CT_ExternalReference + */\n        case '<externalReference': break;\n\n        /* 18.2.6  definedNames CT_DefinedNames ? */\n        case '<definedNames/>': break;\n        case '<definedNames>': case '<definedNames': pass=true; break;\n        case '</definedNames>': pass=false; break;\n        /* 18.2.5    definedName CT_DefinedName + */\n        case '<definedName': {\n          dname = {};\n          dname.Name = utf8read(y.name);\n          if(y.comment) dname.Comment = y.comment;\n          if(y.localSheetId) dname.Sheet = +y.localSheetId;\n          if(parsexmlbool(y.hidden||\"0\")) dname.Hidden = true;\n          dnstart = idx + x.length;\n        }\tbreak;\n        case '</definedName>': {\n          dname.Ref = unescapexml(utf8read(data.slice(dnstart, idx)));\n          wb.Names.push(dname);\n        } break;\n        case '<definedName/>': break;\n\n        /* 18.2.2  calcPr CT_CalcPr ? */\n        case '<calcPr': delete y[0]; wb.CalcPr = y; break;\n        case '<calcPr/>': delete y[0]; wb.CalcPr = y; break;\n        case '</calcPr>': break;\n\n        /* 18.2.16 oleSize CT_OleSize ? (ref required) */\n        case '<oleSize': break;\n\n        /* 18.2.4  customWorkbookViews CT_CustomWorkbookViews ? */\n        case '<customWorkbookViews>': case '</customWorkbookViews>': case '<customWorkbookViews': break;\n        /* 18.2.3    customWorkbookView CT_CustomWorkbookView + */\n        case '<customWorkbookView': case '</customWorkbookView>': break;\n\n        /* 18.2.18 pivotCaches CT_PivotCaches ? */\n        case '<pivotCaches>': case '</pivotCaches>': case '<pivotCaches': break;\n        /* 18.2.17 pivotCache CT_PivotCache ? */\n        case '<pivotCache': break;\n\n        /* 18.2.21 smartTagPr CT_SmartTagPr ? */\n        case '<smartTagPr': case '<smartTagPr/>': break;\n\n        /* 18.2.23 smartTagTypes CT_SmartTagTypes ? */\n        case '<smartTagTypes': case '<smartTagTypes>': case '</smartTagTypes>': break;\n        /* 18.2.22   smartTagType CT_SmartTagType ? */\n        case '<smartTagType': break;\n\n        /* 18.2.24 webPublishing CT_WebPublishing ? */\n        case '<webPublishing': case '<webPublishing/>': break;\n\n        /* 18.2.11 fileRecoveryPr CT_FileRecoveryPr ? */\n        case '<fileRecoveryPr': case '<fileRecoveryPr/>': break;\n\n        /* 18.2.26 webPublishObjects CT_WebPublishObjects ? */\n        case '<webPublishObjects>': case '<webPublishObjects': case '</webPublishObjects>': break;\n        /* 18.2.25 webPublishObject CT_WebPublishObject ? */\n        case '<webPublishObject': break;\n\n        /* 18.2.10 extLst CT_ExtensionList ? */\n        case '<extLst': case '<extLst>': case '</extLst>': case '<extLst/>': break;\n        /* 18.2.7    ext CT_Extension + */\n        case '<ext': pass=true; break; //TODO: check with versions of excel\n        case '</ext>': pass=false; break;\n\n        /* Others */\n        case '<ArchID': break;\n        case '<AlternateContent':\n        case '<AlternateContent>': pass=true; break;\n        case '</AlternateContent>': pass=false; break;\n\n        /* TODO */\n        case '<revisionPtr': break;\n\n        default: if(!pass && opts.WTF) throw new Error('unrecognized ' + y[0] + ' in workbook');\n      }\n      return x;\n    });\n    if(XMLNS.main.indexOf(wb.xmlns) === -1) throw new Error(\"Unknown Namespace: \" + wb.xmlns);\n\n    parse_wb_defaults(wb);\n\n    return wb;\n  }\n\n  var WB_XML_ROOT = writextag('workbook', null, {\n    'xmlns': XMLNS.main[0],\n    //'xmlns:mx': XMLNS.mx,\n    //'xmlns:s': XMLNS.main[0],\n    'xmlns:r': XMLNS.r\n  });\n\n  function write_wb_xml(wb) {\n    var o = [XML_HEADER];\n    o[o.length] = WB_XML_ROOT;\n\n    var write_names = (wb.Workbook && (wb.Workbook.Names||[]).length > 0);\n\n    /* fileVersion */\n    /* fileSharing */\n\n    var workbookPr = ({codeName:\"ThisWorkbook\"});\n    if(wb.Workbook && wb.Workbook.WBProps) {\n      WBPropsDef.forEach(function(x) {\n        if((wb.Workbook.WBProps[x[0]]) == null) return;\n        if((wb.Workbook.WBProps[x[0]]) == x[1]) return;\n        workbookPr[x[0]] = (wb.Workbook.WBProps[x[0]]);\n      });\n      if(wb.Workbook.WBProps.CodeName) { workbookPr.codeName = wb.Workbook.WBProps.CodeName; delete workbookPr.CodeName; }\n    }\n    o[o.length] = (writextag('workbookPr', null, workbookPr));\n\n    /* workbookProtection */\n\n    var sheets = wb.Workbook && wb.Workbook.Sheets || [];\n    var i = 0;\n\n    /* bookViews */\n\n    o[o.length] = \"<sheets>\";\n    for(i = 0; i != wb.SheetNames.length; ++i) {\n      var sht = ({name:escapexml(wb.SheetNames[i].slice(0,31))});\n      sht.sheetId = \"\"+(i+1);\n      sht[\"r:id\"] = \"rId\"+(i+1);\n      if(sheets[i]) switch(sheets[i].Hidden) {\n        case 1: sht.state = \"hidden\"; break;\n        case 2: sht.state = \"veryHidden\"; break;\n      }\n      o[o.length] = (writextag('sheet',null,sht));\n    }\n    o[o.length] = \"</sheets>\";\n\n    /* functionGroups */\n    /* externalReferences */\n\n    if(write_names) {\n      o[o.length] = \"<definedNames>\";\n      if(wb.Workbook && wb.Workbook.Names) wb.Workbook.Names.forEach(function(n) {\n        var d = {name:n.Name};\n        if(n.Comment) d.comment = n.Comment;\n        if(n.Sheet != null) d.localSheetId = \"\"+n.Sheet;\n        if(n.Hidden) d.hidden = \"1\";\n        if(!n.Ref) return;\n        o[o.length] = writextag('definedName', String(n.Ref).replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\"), d);\n      });\n      o[o.length] = \"</definedNames>\";\n    }\n\n    /* calcPr */\n    /* oleSize */\n    /* customWorkbookViews */\n    /* pivotCaches */\n    /* smartTagPr */\n    /* smartTagTypes */\n    /* webPublishing */\n    /* fileRecoveryPr */\n    /* webPublishObjects */\n    /* extLst */\n\n    if(o.length>2){ o[o.length] = '</workbook>'; o[1]=o[1].replace(\"/>\",\">\"); }\n    return o.join(\"\");\n  }\n  /* [MS-XLSB] 2.4.304 BrtBundleSh */\n  function parse_BrtBundleSh(data, length) {\n    var z = {};\n    z.Hidden = data.read_shift(4); //hsState ST_SheetState\n    z.iTabID = data.read_shift(4);\n    z.strRelID = parse_RelID(data,length-8);\n    z.name = parse_XLWideString(data);\n    return z;\n  }\n  function write_BrtBundleSh(data, o) {\n    if(!o) o = new_buf(127);\n    o.write_shift(4, data.Hidden);\n    o.write_shift(4, data.iTabID);\n    write_RelID(data.strRelID, o);\n    write_XLWideString(data.name.slice(0,31), o);\n    return o.length > o.l ? o.slice(0, o.l) : o;\n  }\n\n  /* [MS-XLSB] 2.4.815 BrtWbProp */\n  function parse_BrtWbProp(data, length) {\n    var o = ({});\n    var flags = data.read_shift(4);\n    o.defaultThemeVersion = data.read_shift(4);\n    var strName = (length > 8) ? parse_XLWideString(data) : \"\";\n    if(strName.length > 0) o.CodeName = strName;\n    o.autoCompressPictures = !!(flags & 0x10000);\n    o.backupFile = !!(flags & 0x40);\n    o.checkCompatibility = !!(flags & 0x1000);\n    o.date1904 = !!(flags & 0x01);\n    o.filterPrivacy = !!(flags & 0x08);\n    o.hidePivotFieldList = !!(flags & 0x400);\n    o.promptedSolutions = !!(flags & 0x10);\n    o.publishItems = !!(flags & 0x800);\n    o.refreshAllConnections = !!(flags & 0x40000);\n    o.saveExternalLinkValues = !!(flags & 0x80);\n    o.showBorderUnselectedTables = !!(flags & 0x04);\n    o.showInkAnnotation = !!(flags & 0x20);\n    o.showObjects = [\"all\", \"placeholders\", \"none\"][(flags >> 13) & 0x03];\n    o.showPivotChartFilter = !!(flags & 0x8000);\n    o.updateLinks = [\"userSet\", \"never\", \"always\"][(flags >> 8) & 0x03];\n    return o;\n  }\n  function write_BrtWbProp(data, o) {\n    if(!o) o = new_buf(72);\n    var flags = 0;\n    if(data) {\n      /* TODO: mirror parse_BrtWbProp fields */\n      if(data.filterPrivacy) flags |= 0x08;\n    }\n    o.write_shift(4, flags);\n    o.write_shift(4, 0);\n    write_XLSBCodeName(data && data.CodeName || \"ThisWorkbook\", o);\n    return o.slice(0, o.l);\n  }\n\n  function parse_BrtFRTArchID$(data, length) {\n    var o = {};\n    data.read_shift(4);\n    o.ArchID = data.read_shift(4);\n    data.l += length - 8;\n    return o;\n  }\n\n  /* [MS-XLSB] 2.4.687 BrtName */\n  function parse_BrtName(data, length, opts) {\n    var end = data.l + length;\n    data.l += 4; //var flags = data.read_shift(4);\n    data.l += 1; //var chKey = data.read_shift(1);\n    var itab = data.read_shift(4);\n    var name = parse_XLNameWideString(data);\n    var formula = parse_XLSBNameParsedFormula(data, 0, opts);\n    var comment = parse_XLNullableWideString(data);\n    //if(0 /* fProc */) {\n    // unusedstring1: XLNullableWideString\n    // description: XLNullableWideString\n    // helpTopic: XLNullableWideString\n    // unusedstring2: XLNullableWideString\n    //}\n    data.l = end;\n    var out = ({Name:name, Ptg:formula});\n    if(itab < 0xFFFFFFF) out.Sheet = itab;\n    if(comment) out.Comment = comment;\n    return out;\n  }\n\n  /* [MS-XLSB] 2.1.7.61 Workbook */\n  function parse_wb_bin(data, opts) {\n    var wb = { AppVersion:{}, WBProps:{}, WBView:[], Sheets:[], CalcPr:{}, xmlns: \"\" };\n    var state = [];\n    var pass = false;\n\n    if(!opts) opts = {};\n    opts.biff = 12;\n\n    var Names = [];\n    var supbooks = ([[]]);\n    supbooks.SheetNames = [];\n    supbooks.XTI = [];\n\n    recordhopper(data, function hopper_wb(val, R_n, RT) {\n      switch(RT) {\n        case 0x009C: /* 'BrtBundleSh' */\n          supbooks.SheetNames.push(val.name);\n          wb.Sheets.push(val); break;\n\n        case 0x0099: /* 'BrtWbProp' */\n          wb.WBProps = val; break;\n\n        case 0x0027: /* 'BrtName' */\n          if(val.Sheet != null) opts.SID = val.Sheet;\n          val.Ref = stringify_formula(val.Ptg, null, null, supbooks, opts);\n          delete opts.SID;\n          delete val.Ptg;\n          Names.push(val);\n          break;\n        case 0x040C: /* 'BrtNameExt' */ break;\n\n        case 0x0165: /* 'BrtSupSelf' */\n        case 0x0166: /* 'BrtSupSame' */\n        case 0x0163: /* 'BrtSupBookSrc' */\n        case 0x029B: /* 'BrtSupAddin' */\n          if(!supbooks[0].length) supbooks[0] = [RT, val];\n          else supbooks.push([RT, val]);\n          supbooks[supbooks.length - 1].XTI = [];\n          break;\n        case 0x016A: /* 'BrtExternSheet' */\n          if(supbooks.length === 0) { supbooks[0] = []; supbooks[0].XTI = []; }\n          supbooks[supbooks.length - 1].XTI = supbooks[supbooks.length - 1].XTI.concat(val);\n          supbooks.XTI = supbooks.XTI.concat(val);\n          break;\n        case 0x0169: /* 'BrtPlaceholderName' */\n          break;\n\n        /* case 'BrtModelTimeGroupingCalcCol' */\n        case 0x0C00: /* 'BrtUid' */\n        case 0x0C01: /* 'BrtRevisionPtr' */\n        case 0x0817: /* 'BrtAbsPath15' */\n        case 0x0216: /* 'BrtBookProtection' */\n        case 0x02A5: /* 'BrtBookProtectionIso' */\n        case 0x009E: /* 'BrtBookView' */\n        case 0x009D: /* 'BrtCalcProp' */\n        case 0x0262: /* 'BrtCrashRecErr' */\n        case 0x0802: /* 'BrtDecoupledPivotCacheID' */\n        case 0x009B: /* 'BrtFileRecover' */\n        case 0x0224: /* 'BrtFileSharing' */\n        case 0x02A4: /* 'BrtFileSharingIso' */\n        case 0x0080: /* 'BrtFileVersion' */\n        case 0x0299: /* 'BrtFnGroup' */\n        case 0x0850: /* 'BrtModelRelationship' */\n        case 0x084D: /* 'BrtModelTable' */\n        case 0x0225: /* 'BrtOleSize' */\n        case 0x0805: /* 'BrtPivotTableRef' */\n        case 0x0254: /* 'BrtSmartTagType' */\n        case 0x081C: /* 'BrtTableSlicerCacheID' */\n        case 0x081B: /* 'BrtTableSlicerCacheIDs' */\n        case 0x0822: /* 'BrtTimelineCachePivotCacheID' */\n        case 0x018D: /* 'BrtUserBookView' */\n        case 0x009A: /* 'BrtWbFactoid' */\n        case 0x045D: /* 'BrtWbProp14' */\n        case 0x0229: /* 'BrtWebOpt' */\n        case 0x082B: /* 'BrtWorkBookPr15' */\n          break;\n\n        case 0x0023: /* 'BrtFRTBegin' */\n          state.push(R_n); pass = true; break;\n        case 0x0024: /* 'BrtFRTEnd' */\n          state.pop(); pass = false; break;\n        case 0x0025: /* 'BrtACBegin' */\n          state.push(R_n); pass = true; break;\n        case 0x0026: /* 'BrtACEnd' */\n          state.pop(); pass = false; break;\n\n        case 0x0010: /* 'BrtFRTArchID$' */ break;\n\n        default:\n          if((R_n||\"\").indexOf(\"Begin\") > 0){/* empty */}\n          else if((R_n||\"\").indexOf(\"End\") > 0){/* empty */}\n          else if(!pass || (opts.WTF && state[state.length-1] != \"BrtACBegin\" && state[state.length-1] != \"BrtFRTBegin\")) throw new Error(\"Unexpected record \" + RT + \" \" + R_n);\n      }\n    }, opts);\n\n    parse_wb_defaults(wb);\n\n    // $FlowIgnore\n    wb.Names = Names;\n\n    (wb).supbooks = supbooks;\n    return wb;\n  }\n\n  function write_BUNDLESHS(ba, wb) {\n    write_record(ba, \"BrtBeginBundleShs\");\n    for(var idx = 0; idx != wb.SheetNames.length; ++idx) {\n      var viz = wb.Workbook && wb.Workbook.Sheets && wb.Workbook.Sheets[idx] && wb.Workbook.Sheets[idx].Hidden || 0;\n      var d = { Hidden: viz, iTabID: idx+1, strRelID: 'rId' + (idx+1), name: wb.SheetNames[idx] };\n      write_record(ba, \"BrtBundleSh\", write_BrtBundleSh(d));\n    }\n    write_record(ba, \"BrtEndBundleShs\");\n  }\n\n  /* [MS-XLSB] 2.4.649 BrtFileVersion */\n  function write_BrtFileVersion(data, o) {\n    if(!o) o = new_buf(127);\n    for(var i = 0; i != 4; ++i) o.write_shift(4, 0);\n    write_XLWideString(\"SheetJS\", o);\n    write_XLWideString(XLSX.version, o);\n    write_XLWideString(XLSX.version, o);\n    write_XLWideString(\"7262\", o);\n    o.length = o.l;\n    return o.length > o.l ? o.slice(0, o.l) : o;\n  }\n\n  /* [MS-XLSB] 2.4.301 BrtBookView */\n  function write_BrtBookView(idx, o) {\n    if(!o) o = new_buf(29);\n    o.write_shift(-4, 0);\n    o.write_shift(-4, 460);\n    o.write_shift(4,  28800);\n    o.write_shift(4,  17600);\n    o.write_shift(4,  500);\n    o.write_shift(4,  idx);\n    o.write_shift(4,  idx);\n    var flags = 0x78;\n    o.write_shift(1,  flags);\n    return o.length > o.l ? o.slice(0, o.l) : o;\n  }\n\n  function write_BOOKVIEWS(ba, wb) {\n    /* required if hidden tab appears before visible tab */\n    if(!wb.Workbook || !wb.Workbook.Sheets) return;\n    var sheets = wb.Workbook.Sheets;\n    var i = 0, vistab = -1, hidden = -1;\n    for(; i < sheets.length; ++i) {\n      if(!sheets[i] || !sheets[i].Hidden && vistab == -1) vistab = i;\n      else if(sheets[i].Hidden == 1 && hidden == -1) hidden = i;\n    }\n    if(hidden > vistab) return;\n    write_record(ba, \"BrtBeginBookViews\");\n    write_record(ba, \"BrtBookView\", write_BrtBookView(vistab));\n    /* 1*(BrtBookView *FRT) */\n    write_record(ba, \"BrtEndBookViews\");\n  }\n\n  /* [MS-XLSB] 2.4.305 BrtCalcProp */\n  /*function write_BrtCalcProp(data, o) {\n\tif(!o) o = new_buf(26);\n\to.write_shift(4,0); // force recalc\n\to.write_shift(4,1);\n\to.write_shift(4,0);\n\twrite_Xnum(0, o);\n\to.write_shift(-4, 1023);\n\to.write_shift(1, 0x33);\n\to.write_shift(1, 0x00);\n\treturn o;\n}*/\n\n  /* [MS-XLSB] 2.4.646 BrtFileRecover */\n  /*function write_BrtFileRecover(data, o) {\n\tif(!o) o = new_buf(1);\n\to.write_shift(1,0);\n\treturn o;\n}*/\n\n  /* [MS-XLSB] 2.1.7.61 Workbook */\n  function write_wb_bin(wb, opts) {\n    var ba = buf_array();\n    write_record(ba, \"BrtBeginBook\");\n    write_record(ba, \"BrtFileVersion\", write_BrtFileVersion());\n    /* [[BrtFileSharingIso] BrtFileSharing] */\n    write_record(ba, \"BrtWbProp\", write_BrtWbProp(wb.Workbook && wb.Workbook.WBProps || null));\n    /* [ACABSPATH] */\n    /* [[BrtBookProtectionIso] BrtBookProtection] */\n    write_BOOKVIEWS(ba, wb, opts);\n    write_BUNDLESHS(ba, wb, opts);\n    /* [FNGROUP] */\n    /* [EXTERNALS] */\n    /* *BrtName */\n    /* write_record(ba, \"BrtCalcProp\", write_BrtCalcProp()); */\n    /* [BrtOleSize] */\n    /* *(BrtUserBookView *FRT) */\n    /* [PIVOTCACHEIDS] */\n    /* [BrtWbFactoid] */\n    /* [SMARTTAGTYPES] */\n    /* [BrtWebOpt] */\n    /* write_record(ba, \"BrtFileRecover\", write_BrtFileRecover()); */\n    /* [WEBPUBITEMS] */\n    /* [CRERRS] */\n    /* FRTWORKBOOK */\n    write_record(ba, \"BrtEndBook\");\n\n    return ba.end();\n  }\n  function parse_wb(data, name, opts) {\n    if(name.slice(-4)===\".bin\") return parse_wb_bin((data), opts);\n    return parse_wb_xml((data), opts);\n  }\n\n  function parse_ws(data, name, idx, opts, rels, wb, themes, styles) {\n    if(name.slice(-4)===\".bin\") return parse_ws_bin((data), opts, idx, rels, wb, themes, styles);\n    return parse_ws_xml((data), opts, idx, rels, wb, themes, styles);\n  }\n\n  function parse_cs(data, name, idx, opts, rels, wb, themes, styles) {\n    if(name.slice(-4)===\".bin\") return parse_cs_bin((data), opts, idx, rels, wb, themes, styles);\n    return parse_cs_xml((data), opts, idx, rels, wb, themes, styles);\n  }\n\n  function parse_ms(data, name, idx, opts, rels, wb, themes, styles) {\n    if(name.slice(-4)===\".bin\") return parse_ms_bin((data), opts, idx, rels, wb, themes, styles);\n    return parse_ms_xml((data), opts, idx, rels, wb, themes, styles);\n  }\n\n  function parse_ds(data, name, idx, opts, rels, wb, themes, styles) {\n    if(name.slice(-4)===\".bin\") return parse_ds_bin((data), opts, idx, rels, wb, themes, styles);\n    return parse_ds_xml((data), opts, idx, rels, wb, themes, styles);\n  }\n\n  function parse_sty(data, name, themes, opts) {\n    if(name.slice(-4)===\".bin\") return parse_sty_bin((data), themes, opts);\n    return parse_sty_xml((data), themes, opts);\n  }\n\n  function parse_theme(data, name, opts) {\n    return parse_theme_xml(data, opts);\n  }\n\n  function parse_sst(data, name, opts) {\n    if(name.slice(-4)===\".bin\") return parse_sst_bin((data), opts);\n    return parse_sst_xml((data), opts);\n  }\n\n  function parse_cmnt(data, name, opts) {\n    if(name.slice(-4)===\".bin\") return parse_comments_bin((data), opts);\n    return parse_comments_xml((data), opts);\n  }\n\n  function parse_cc(data, name, opts) {\n    if(name.slice(-4)===\".bin\") return parse_cc_bin((data), name, opts);\n    return parse_cc_xml((data), name, opts);\n  }\n\n  function parse_xlink(data, name, opts) {\n    if(name.slice(-4)===\".bin\") return parse_xlink_bin((data), name, opts);\n    return parse_xlink_xml((data), name, opts);\n  }\n\n  function write_wb(wb, name, opts) {\n    return (name.slice(-4)===\".bin\" ? write_wb_bin : write_wb_xml)(wb, opts);\n  }\n\n  function write_ws(data, name, opts, wb, rels) {\n    return (name.slice(-4)===\".bin\" ? write_ws_bin : write_ws_xml)(data, opts, wb, rels);\n  }\n\n// eslint-disable-next-line no-unused-vars\n  function write_cs(data, name, opts, wb, rels) {\n    return (name.slice(-4)===\".bin\" ? write_cs_bin : write_cs_xml)(data, opts, wb, rels);\n  }\n\n  function write_sty(data, name, opts) {\n    return (name.slice(-4)===\".bin\" ? write_sty_bin : write_sty_xml)(data, opts);\n  }\n\n  function write_sst(data, name, opts) {\n    return (name.slice(-4)===\".bin\" ? write_sst_bin : write_sst_xml)(data, opts);\n  }\n\n  function write_cmnt(data, name, opts) {\n    return (name.slice(-4)===\".bin\" ? write_comments_bin : write_comments_xml)(data, opts);\n  }\n  /*\nfunction write_cc(data, name:string, opts) {\n\treturn (name.slice(-4)===\".bin\" ? write_cc_bin : write_cc_xml)(data, opts);\n}\n*/\n  var attregexg2=/([\\w:]+)=((?:\")([^\"]*)(?:\")|(?:')([^']*)(?:'))/g;\n  var attregex2=/([\\w:]+)=((?:\")(?:[^\"]*)(?:\")|(?:')(?:[^']*)(?:'))/;\n  var _chr = function(c) { return String.fromCharCode(c); };\n  function xlml_parsexmltag(tag, skip_root) {\n    var words = tag.split(/\\s+/);\n    var z = ([]); if(!skip_root) z[0] = words[0];\n    if(words.length === 1) return z;\n    var m = tag.match(attregexg2), y, j, w, i;\n    if(m) for(i = 0; i != m.length; ++i) {\n      y = m[i].match(attregex2);\n      if((j=y[1].indexOf(\":\")) === -1) z[y[1]] = y[2].slice(1,y[2].length-1);\n      else {\n        if(y[1].slice(0,6) === \"xmlns:\") w = \"xmlns\"+y[1].slice(6);\n        else w = y[1].slice(j+1);\n        z[w] = y[2].slice(1,y[2].length-1);\n      }\n    }\n    return z;\n  }\n  function xlml_parsexmltagobj(tag) {\n    var words = tag.split(/\\s+/);\n    var z = {};\n    if(words.length === 1) return z;\n    var m = tag.match(attregexg2), y, j, w, i;\n    if(m) for(i = 0; i != m.length; ++i) {\n      y = m[i].match(attregex2);\n      if((j=y[1].indexOf(\":\")) === -1) z[y[1]] = y[2].slice(1,y[2].length-1);\n      else {\n        if(y[1].slice(0,6) === \"xmlns:\") w = \"xmlns\"+y[1].slice(6);\n        else w = y[1].slice(j+1);\n        z[w] = y[2].slice(1,y[2].length-1);\n      }\n    }\n    return z;\n  }\n\n// ----\n\n  function xlml_format(format, value) {\n    var fmt = XLMLFormatMap[format] || unescapexml(format);\n    if(fmt === \"General\") return SSF._general(value);\n    return SSF.format(fmt, value);\n  }\n\n  function xlml_set_custprop(Custprops, key, cp, val) {\n    var oval = val;\n    switch((cp[0].match(/dt:dt=\"([\\w.]+)\"/)||[\"\",\"\"])[1]) {\n      case \"boolean\": oval = parsexmlbool(val); break;\n      case \"i2\": case \"int\": oval = parseInt(val, 10); break;\n      case \"r4\": case \"float\": oval = parseFloat(val); break;\n      case \"date\": case \"dateTime.tz\": oval = parseDate(val); break;\n      case \"i8\": case \"string\": case \"fixed\": case \"uuid\": case \"bin.base64\": break;\n      default: throw new Error(\"bad custprop:\" + cp[0]);\n    }\n    Custprops[unescapexml(key)] = oval;\n  }\n\n  function safe_format_xlml(cell, nf, o) {\n    if(cell.t === 'z') return;\n    if(!o || o.cellText !== false) try {\n      if(cell.t === 'e') { cell.w = cell.w || BErr[cell.v]; }\n      else if(nf === \"General\") {\n        if(cell.t === 'n') {\n          if((cell.v|0) === cell.v) cell.w = SSF._general_int(cell.v);\n          else cell.w = SSF._general_num(cell.v);\n        }\n        else cell.w = SSF._general(cell.v);\n      }\n      else cell.w = xlml_format(nf||\"General\", cell.v);\n    } catch(e) { if(o.WTF) throw e; }\n    try {\n      var z = XLMLFormatMap[nf]||nf||\"General\";\n      if(o.cellNF) cell.z = z;\n      if(o.cellDates && cell.t == 'n' && SSF.is_date(z)) {\n        var _d = SSF.parse_date_code(cell.v); if(_d) { cell.t = 'd'; cell.v = new Date(_d.y, _d.m-1,_d.d,_d.H,_d.M,_d.S,_d.u); }\n      }\n    } catch(e) { if(o.WTF) throw e; }\n  }\n\n  function process_style_xlml(styles, stag, opts) {\n    if(opts.cellStyles) {\n      if(stag.Interior) {\n        var I = stag.Interior;\n        if(I.Pattern) I.patternType = XLMLPatternTypeMap[I.Pattern] || I.Pattern;\n      }\n    }\n    styles[stag.ID] = stag;\n  }\n\n  /* TODO: there must exist some form of OSP-blessed spec */\n  function parse_xlml_data(xml, ss, data, cell, base, styles, csty, row, arrayf, o) {\n    var nf = \"General\", sid = cell.StyleID, S = {}; o = o || {};\n    var interiors = [];\n    var i = 0;\n    if(sid === undefined && row) sid = row.StyleID;\n    if(sid === undefined && csty) sid = csty.StyleID;\n    while(styles[sid] !== undefined) {\n      if(styles[sid].nf) nf = styles[sid].nf;\n      if(styles[sid].Interior) interiors.push(styles[sid].Interior);\n      if(!styles[sid].Parent) break;\n      sid = styles[sid].Parent;\n    }\n    switch(data.Type) {\n      case 'Boolean':\n        cell.t = 'b';\n        cell.v = parsexmlbool(xml);\n        break;\n      case 'String':\n        cell.t = 's'; cell.r = xlml_fixstr(unescapexml(xml));\n        cell.v = xml.indexOf(\"<\") > -1 ? unescapexml(ss) : cell.r;\n        break;\n      case 'DateTime':\n        if(xml.slice(-1) != \"Z\") xml += \"Z\";\n        cell.v = (parseDate(xml) - new Date(Date.UTC(1899, 11, 30))) / (24 * 60 * 60 * 1000);\n        if(cell.v !== cell.v) cell.v = unescapexml(xml);\n        else if(cell.v<60) cell.v = cell.v -1;\n        if(!nf || nf == \"General\") nf = \"yyyy-mm-dd\";\n      /* falls through */\n      case 'Number':\n        if(cell.v === undefined) cell.v=+xml;\n        if(!cell.t) cell.t = 'n';\n        break;\n      case 'Error': cell.t = 'e'; cell.v = RBErr[xml]; if(o.cellText !== false) cell.w = xml; break;\n      default: cell.t = 's'; cell.v = xlml_fixstr(ss||xml); break;\n    }\n    safe_format_xlml(cell, nf, o);\n    if(o.cellFormula !== false) {\n      if(cell.Formula) {\n        var fstr = unescapexml(cell.Formula);\n        /* strictly speaking, the leading = is required but some writers omit */\n        if(fstr.charCodeAt(0) == 61 /* = */) fstr = fstr.slice(1);\n        cell.f = rc_to_a1(fstr, base);\n        delete cell.Formula;\n        if(cell.ArrayRange == \"RC\") cell.F = rc_to_a1(\"RC:RC\", base);\n        else if(cell.ArrayRange) {\n          cell.F = rc_to_a1(cell.ArrayRange, base);\n          arrayf.push([safe_decode_range(cell.F), cell.F]);\n        }\n      } else {\n        for(i = 0; i < arrayf.length; ++i)\n          if(base.r >= arrayf[i][0].s.r && base.r <= arrayf[i][0].e.r)\n            if(base.c >= arrayf[i][0].s.c && base.c <= arrayf[i][0].e.c)\n              cell.F = arrayf[i][1];\n      }\n    }\n    if(o.cellStyles) {\n      interiors.forEach(function(x) {\n        if(!S.patternType && x.patternType) S.patternType = x.patternType;\n      });\n      cell.s = S;\n    }\n    if(cell.StyleID !== undefined) cell.ixfe = cell.StyleID;\n  }\n\n  function xlml_clean_comment(comment) {\n    comment.t = comment.v || \"\";\n    comment.t = comment.t.replace(/\\r\\n/g,\"\\n\").replace(/\\r/g,\"\\n\");\n    comment.v = comment.w = comment.ixfe = undefined;\n  }\n\n  function xlml_normalize(d) {\n    if(has_buf && Buffer.isBuffer(d)) return d.toString('utf8');\n    if(typeof d === 'string') return d;\n    /* duktape */\n    if(typeof Uint8Array !== 'undefined' && d instanceof Uint8Array) return utf8read(a2s(ab2a(d)));\n    throw new Error(\"Bad input format: expected Buffer or string\");\n  }\n\n  /* TODO: Everything */\n  /* UOS uses CJK in tags */\n  var xlmlregex = /<(\\/?)([^\\s?>!\\/:]*:|)([^\\s?>:\\/]+)[^>]*>/mg;\n//var xlmlregex = /<(\\/?)([a-z0-9]*:|)(\\w+)[^>]*>/mg;\n  function parse_xlml_xml(d, _opts) {\n    var opts = _opts || {};\n    make_ssf(SSF);\n    var str = debom(xlml_normalize(d));\n    if(opts.type == 'binary' || opts.type == 'array' || opts.type == 'base64') {\n      if(typeof cptable !== 'undefined') str = cptable.utils.decode(65001, char_codes(str));\n      else str = utf8read(str);\n    }\n    var opening = str.slice(0, 1024).toLowerCase(), ishtml = false;\n    if(opening.indexOf(\"<?xml\") == -1) [\"html\", \"table\", \"head\", \"meta\", \"script\", \"style\", \"div\"].forEach(function(tag) { if(opening.indexOf(\"<\" + tag) >= 0) ishtml = true; });\n    if(ishtml) return HTML_.to_workbook(str, opts);\n    var Rn;\n    var state = [], tmp;\n    if(DENSE != null && opts.dense == null) opts.dense = DENSE;\n    var sheets = {}, sheetnames = [], cursheet = (opts.dense ? [] : {}), sheetname = \"\";\n    var table = {}, cell = ({}), row = {};// eslint-disable-line no-unused-vars\n    var dtag = xlml_parsexmltag('<Data ss:Type=\"String\">'), didx = 0;\n    var c = 0, r = 0;\n    var refguess = {s: {r:2000000, c:2000000}, e: {r:0, c:0} };\n    var styles = {}, stag = {};\n    var ss = \"\", fidx = 0;\n    var merges = [];\n    var Props = {}, Custprops = {}, pidx = 0, cp = [];\n    var comments = [], comment = ({});\n    var cstys = [], csty, seencol = false;\n    var arrayf = [];\n    var rowinfo = [], rowobj = {}, cc = 0, rr = 0;\n    var Workbook = ({ Sheets:[], WBProps:{date1904:false} }), wsprops = {};\n    xlmlregex.lastIndex = 0;\n    str = str.replace(/<!--([\\s\\S]*?)-->/mg,\"\");\n    while((Rn = xlmlregex.exec(str))) switch(Rn[3]) {\n      case 'Data':\n        if(state[state.length-1][1]) break;\n        if(Rn[1]==='/') parse_xlml_data(str.slice(didx, Rn.index), ss, dtag, state[state.length-1][0]==\"Comment\"?comment:cell, {c:c,r:r}, styles, cstys[c], row, arrayf, opts);\n        else { ss = \"\"; dtag = xlml_parsexmltag(Rn[0]); didx = Rn.index + Rn[0].length; }\n        break;\n      case 'Cell':\n        if(Rn[1]==='/'){\n          if(comments.length > 0) cell.c = comments;\n          if((!opts.sheetRows || opts.sheetRows > r) && cell.v !== undefined) {\n            if(opts.dense) {\n              if(!cursheet[r]) cursheet[r] = [];\n              cursheet[r][c] = cell;\n            } else cursheet[encode_col(c) + encode_row(r)] = cell;\n          }\n          if(cell.HRef) {\n            cell.l = ({Target:cell.HRef});\n            if(cell.HRefScreenTip) cell.l.Tooltip = cell.HRefScreenTip;\n            delete cell.HRef; delete cell.HRefScreenTip;\n          }\n          if(cell.MergeAcross || cell.MergeDown) {\n            cc = c + (parseInt(cell.MergeAcross,10)|0);\n            rr = r + (parseInt(cell.MergeDown,10)|0);\n            merges.push({s:{c:c,r:r},e:{c:cc,r:rr}});\n          }\n          if(!opts.sheetStubs) { if(cell.MergeAcross) c = cc + 1; else ++c; }\n          else if(cell.MergeAcross || cell.MergeDown) {\n            for(var cma = c; cma <= cc; ++cma) {\n              for(var cmd = r; cmd <= rr; ++cmd) {\n                if(cma > c || cmd > r) {\n                  if(opts.dense) {\n                    if(!cursheet[cmd]) cursheet[cmd] = [];\n                    cursheet[cmd][cma] = {t:'z'};\n                  } else cursheet[encode_col(cma) + encode_row(cmd)] = {t:'z'};\n                }\n              }\n            }\n            c = cc + 1;\n          }\n          else ++c;\n        } else {\n          cell = xlml_parsexmltagobj(Rn[0]);\n          if(cell.Index) c = +cell.Index - 1;\n          if(c < refguess.s.c) refguess.s.c = c;\n          if(c > refguess.e.c) refguess.e.c = c;\n          if(Rn[0].slice(-2) === \"/>\") ++c;\n          comments = [];\n        }\n        break;\n      case 'Row':\n        if(Rn[1]==='/' || Rn[0].slice(-2) === \"/>\") {\n          if(r < refguess.s.r) refguess.s.r = r;\n          if(r > refguess.e.r) refguess.e.r = r;\n          if(Rn[0].slice(-2) === \"/>\") {\n            row = xlml_parsexmltag(Rn[0]);\n            if(row.Index) r = +row.Index - 1;\n          }\n          c = 0; ++r;\n        } else {\n          row = xlml_parsexmltag(Rn[0]);\n          if(row.Index) r = +row.Index - 1;\n          rowobj = {};\n          if(row.AutoFitHeight == \"0\" || row.Height) {\n            rowobj.hpx = parseInt(row.Height, 10); rowobj.hpt = px2pt(rowobj.hpx);\n            rowinfo[r] = rowobj;\n          }\n          if(row.Hidden == \"1\") { rowobj.hidden = true; rowinfo[r] = rowobj; }\n        }\n        break;\n      case 'Worksheet': /* TODO: read range from FullRows/FullColumns */\n        if(Rn[1]==='/'){\n          if((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));\n          sheetnames.push(sheetname);\n          if(refguess.s.r <= refguess.e.r && refguess.s.c <= refguess.e.c) {\n            cursheet[\"!ref\"] = encode_range(refguess);\n            if(opts.sheetRows && opts.sheetRows <= refguess.e.r) {\n              cursheet[\"!fullref\"] = cursheet[\"!ref\"];\n              refguess.e.r = opts.sheetRows - 1;\n              cursheet[\"!ref\"] = encode_range(refguess);\n            }\n          }\n          if(merges.length) cursheet[\"!merges\"] = merges;\n          if(cstys.length > 0) cursheet[\"!cols\"] = cstys;\n          if(rowinfo.length > 0) cursheet[\"!rows\"] = rowinfo;\n          sheets[sheetname] = cursheet;\n        } else {\n          refguess = {s: {r:2000000, c:2000000}, e: {r:0, c:0} };\n          r = c = 0;\n          state.push([Rn[3], false]);\n          tmp = xlml_parsexmltag(Rn[0]);\n          sheetname = unescapexml(tmp.Name);\n          cursheet = (opts.dense ? [] : {});\n          merges = [];\n          arrayf = [];\n          rowinfo = [];\n          wsprops = {name:sheetname, Hidden:0};\n          Workbook.Sheets.push(wsprops);\n        }\n        break;\n      case 'Table':\n        if(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));}\n        else if(Rn[0].slice(-2) == \"/>\") break;\n        else {\n          table = xlml_parsexmltag(Rn[0]);\n          state.push([Rn[3], false]);\n          cstys = []; seencol = false;\n        }\n        break;\n\n      case 'Style':\n        if(Rn[1]==='/') process_style_xlml(styles, stag, opts);\n        else stag = xlml_parsexmltag(Rn[0]);\n        break;\n\n      case 'NumberFormat':\n        stag.nf = unescapexml(xlml_parsexmltag(Rn[0]).Format || \"General\");\n        if(XLMLFormatMap[stag.nf]) stag.nf = XLMLFormatMap[stag.nf];\n        for(var ssfidx = 0; ssfidx != 0x188; ++ssfidx) if(SSF._table[ssfidx] == stag.nf) break;\n        if(ssfidx == 0x188) for(ssfidx = 0x39; ssfidx != 0x188; ++ssfidx) if(SSF._table[ssfidx] == null) { SSF.load(stag.nf, ssfidx); break; }\n        break;\n\n      case 'Column':\n        if(state[state.length-1][0] !== 'Table') break;\n        csty = xlml_parsexmltag(Rn[0]);\n        if(csty.Hidden) { csty.hidden = true; delete csty.Hidden; }\n        if(csty.Width) csty.wpx = parseInt(csty.Width, 10);\n        if(!seencol && csty.wpx > 10) {\n          seencol = true; MDW = DEF_MDW; //find_mdw_wpx(csty.wpx);\n          for(var _col = 0; _col < cstys.length; ++_col) if(cstys[_col]) process_col(cstys[_col]);\n        }\n        if(seencol) process_col(csty);\n        cstys[(csty.Index-1||cstys.length)] = csty;\n        for(var i = 0; i < +csty.Span; ++i) cstys[cstys.length] = dup(csty);\n        break;\n\n      case 'NamedRange':\n        if(!Workbook.Names) Workbook.Names = [];\n        var _NamedRange = parsexmltag(Rn[0]);\n        var _DefinedName = ({\n          Name: _NamedRange.Name,\n          Ref: rc_to_a1(_NamedRange.RefersTo.slice(1), {r:0, c:0})\n        });\n        if(Workbook.Sheets.length>0) _DefinedName.Sheet=Workbook.Sheets.length-1;\n        Workbook.Names.push(_DefinedName);\n        break;\n\n      case 'NamedCell': break;\n      case 'B': break;\n      case 'I': break;\n      case 'U': break;\n      case 'S': break;\n      case 'Sub': break;\n      case 'Sup': break;\n      case 'Span': break;\n      case 'Border': break;\n      case 'Alignment': break;\n      case 'Borders': break;\n      case 'Font':\n        if(Rn[0].slice(-2) === \"/>\") break;\n        else if(Rn[1]===\"/\") ss += str.slice(fidx, Rn.index);\n        else fidx = Rn.index + Rn[0].length;\n        break;\n      case 'Interior':\n        if(!opts.cellStyles) break;\n        stag.Interior = xlml_parsexmltag(Rn[0]);\n        break;\n      case 'Protection': break;\n\n      case 'Author':\n      case 'Title':\n      case 'Description':\n      case 'Created':\n      case 'Keywords':\n      case 'Subject':\n      case 'Category':\n      case 'Company':\n      case 'LastAuthor':\n      case 'LastSaved':\n      case 'LastPrinted':\n      case 'Version':\n      case 'Revision':\n      case 'TotalTime':\n      case 'HyperlinkBase':\n      case 'Manager':\n      case 'ContentStatus':\n      case 'Identifier':\n      case 'Language':\n      case 'AppName':\n        if(Rn[0].slice(-2) === \"/>\") break;\n        else if(Rn[1]===\"/\") xlml_set_prop(Props, Rn[3], str.slice(pidx, Rn.index));\n        else pidx = Rn.index + Rn[0].length;\n        break;\n      case 'Paragraphs': break;\n\n      case 'Styles':\n      case 'Workbook':\n        if(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));}\n        else state.push([Rn[3], false]);\n        break;\n\n      case 'Comment':\n        if(Rn[1]==='/'){\n          if((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));\n          xlml_clean_comment(comment);\n          comments.push(comment);\n        } else {\n          state.push([Rn[3], false]);\n          tmp = xlml_parsexmltag(Rn[0]);\n          comment = ({a:tmp.Author});\n        }\n        break;\n\n      case 'AutoFilter':\n        if(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));}\n        else if(Rn[0].charAt(Rn[0].length-2) !== '/') {\n          var AutoFilter = xlml_parsexmltag(Rn[0]);\n          cursheet['!autofilter'] = { ref:rc_to_a1(AutoFilter.Range).replace(/\\$/g,\"\") };\n          state.push([Rn[3], true]);\n        }\n        break;\n\n      case 'Name': break;\n\n      case 'ComponentOptions':\n      case 'DocumentProperties':\n      case 'CustomDocumentProperties':\n      case 'OfficeDocumentSettings':\n      case 'PivotTable':\n      case 'PivotCache':\n      case 'Names':\n      case 'MapInfo':\n      case 'PageBreaks':\n      case 'QueryTable':\n      case 'DataValidation':\n      case 'Sorting':\n      case 'Schema':\n      case 'data':\n      case 'ConditionalFormatting':\n      case 'SmartTagType':\n      case 'SmartTags':\n      case 'ExcelWorkbook':\n      case 'WorkbookOptions':\n      case 'WorksheetOptions':\n        if(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));}\n        else if(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], true]);\n        break;\n\n      default:\n        /* FODS file root is <office:document> */\n        if(state.length == 0 && Rn[3] == \"document\") return parse_fods(str, opts);\n        /* UOS file root is <uof:UOF> */\n        if(state.length == 0 && Rn[3] == \"UOF\") return parse_fods(str, opts);\n\n        var seen = true;\n        switch(state[state.length-1][0]) {\n          /* OfficeDocumentSettings */\n          case 'OfficeDocumentSettings': switch(Rn[3]) {\n            case 'AllowPNG': break;\n            case 'RemovePersonalInformation': break;\n            case 'DownloadComponents': break;\n            case 'LocationOfComponents': break;\n            case 'Colors': break;\n            case 'Color': break;\n            case 'Index': break;\n            case 'RGB': break;\n            case 'PixelsPerInch': break; // TODO: set PPI\n            case 'TargetScreenSize': break;\n            case 'ReadOnlyRecommended': break;\n            default: seen = false;\n          } break;\n\n          /* ComponentOptions */\n          case 'ComponentOptions': switch(Rn[3]) {\n            case 'Toolbar': break;\n            case 'HideOfficeLogo': break;\n            case 'SpreadsheetAutoFit': break;\n            case 'Label': break;\n            case 'Caption': break;\n            case 'MaxHeight': break;\n            case 'MaxWidth': break;\n            case 'NextSheetNumber': break;\n            default: seen = false;\n          } break;\n\n          /* ExcelWorkbook */\n          case 'ExcelWorkbook': switch(Rn[3]) {\n            case 'Date1904':\n              Workbook.WBProps.date1904 = true;\n              break;\n            case 'WindowHeight': break;\n            case 'WindowWidth': break;\n            case 'WindowTopX': break;\n            case 'WindowTopY': break;\n            case 'TabRatio': break;\n            case 'ProtectStructure': break;\n            case 'ProtectWindows': break;\n            case 'ActiveSheet': break;\n            case 'DisplayInkNotes': break;\n            case 'FirstVisibleSheet': break;\n            case 'SupBook': break;\n            case 'SheetName': break;\n            case 'SheetIndex': break;\n            case 'SheetIndexFirst': break;\n            case 'SheetIndexLast': break;\n            case 'Dll': break;\n            case 'AcceptLabelsInFormulas': break;\n            case 'DoNotSaveLinkValues': break;\n            case 'Iteration': break;\n            case 'MaxIterations': break;\n            case 'MaxChange': break;\n            case 'Path': break;\n            case 'Xct': break;\n            case 'Count': break;\n            case 'SelectedSheets': break;\n            case 'Calculation': break;\n            case 'Uncalced': break;\n            case 'StartupPrompt': break;\n            case 'Crn': break;\n            case 'ExternName': break;\n            case 'Formula': break;\n            case 'ColFirst': break;\n            case 'ColLast': break;\n            case 'WantAdvise': break;\n            case 'Boolean': break;\n            case 'Error': break;\n            case 'Text': break;\n            case 'OLE': break;\n            case 'NoAutoRecover': break;\n            case 'PublishObjects': break;\n            case 'DoNotCalculateBeforeSave': break;\n            case 'Number': break;\n            case 'RefModeR1C1': break;\n            case 'EmbedSaveSmartTags': break;\n            default: seen = false;\n          } break;\n\n          /* WorkbookOptions */\n          case 'WorkbookOptions': switch(Rn[3]) {\n            case 'OWCVersion': break;\n            case 'Height': break;\n            case 'Width': break;\n            default: seen = false;\n          } break;\n\n          /* WorksheetOptions */\n          case 'WorksheetOptions': switch(Rn[3]) {\n            case 'Visible':\n              if(Rn[0].slice(-2) === \"/>\"){/* empty */}\n              else if(Rn[1]===\"/\") switch(str.slice(pidx, Rn.index)) {\n                case \"SheetHidden\": wsprops.Hidden = 1; break;\n                case \"SheetVeryHidden\": wsprops.Hidden = 2; break;\n              }\n              else pidx = Rn.index + Rn[0].length;\n              break;\n            case 'Header':\n              if(!cursheet['!margins']) default_margins(cursheet['!margins']={}, 'xlml');\n              cursheet['!margins'].header = parsexmltag(Rn[0]).Margin;\n              break;\n            case 'Footer':\n              if(!cursheet['!margins']) default_margins(cursheet['!margins']={}, 'xlml');\n              cursheet['!margins'].footer = parsexmltag(Rn[0]).Margin;\n              break;\n            case 'PageMargins':\n              var pagemargins = parsexmltag(Rn[0]);\n              if(!cursheet['!margins']) default_margins(cursheet['!margins']={},'xlml');\n              if(pagemargins.Top) cursheet['!margins'].top = pagemargins.Top;\n              if(pagemargins.Left) cursheet['!margins'].left = pagemargins.Left;\n              if(pagemargins.Right) cursheet['!margins'].right = pagemargins.Right;\n              if(pagemargins.Bottom) cursheet['!margins'].bottom = pagemargins.Bottom;\n              break;\n            case 'DisplayRightToLeft':\n              if(!Workbook.Views) Workbook.Views = [];\n              if(!Workbook.Views[0]) Workbook.Views[0] = {};\n              Workbook.Views[0].RTL = true;\n              break;\n\n            case 'Unsynced': break;\n            case 'Print': break;\n            case 'Panes': break;\n            case 'Scale': break;\n            case 'Pane': break;\n            case 'Number': break;\n            case 'Layout': break;\n            case 'PageSetup': break;\n            case 'Selected': break;\n            case 'ProtectObjects': break;\n            case 'EnableSelection': break;\n            case 'ProtectScenarios': break;\n            case 'ValidPrinterInfo': break;\n            case 'HorizontalResolution': break;\n            case 'VerticalResolution': break;\n            case 'NumberofCopies': break;\n            case 'ActiveRow': break;\n            case 'ActiveCol': break;\n            case 'ActivePane': break;\n            case 'TopRowVisible': break;\n            case 'TopRowBottomPane': break;\n            case 'LeftColumnVisible': break;\n            case 'LeftColumnRightPane': break;\n            case 'FitToPage': break;\n            case 'RangeSelection': break;\n            case 'PaperSizeIndex': break;\n            case 'PageLayoutZoom': break;\n            case 'PageBreakZoom': break;\n            case 'FilterOn': break;\n            case 'DoNotDisplayGridlines': break;\n            case 'SplitHorizontal': break;\n            case 'SplitVertical': break;\n            case 'FreezePanes': break;\n            case 'FrozenNoSplit': break;\n            case 'FitWidth': break;\n            case 'FitHeight': break;\n            case 'CommentsLayout': break;\n            case 'Zoom': break;\n            case 'LeftToRight': break;\n            case 'Gridlines': break;\n            case 'AllowSort': break;\n            case 'AllowFilter': break;\n            case 'AllowInsertRows': break;\n            case 'AllowDeleteRows': break;\n            case 'AllowInsertCols': break;\n            case 'AllowDeleteCols': break;\n            case 'AllowInsertHyperlinks': break;\n            case 'AllowFormatCells': break;\n            case 'AllowSizeCols': break;\n            case 'AllowSizeRows': break;\n            case 'NoSummaryRowsBelowDetail': break;\n            case 'TabColorIndex': break;\n            case 'DoNotDisplayHeadings': break;\n            case 'ShowPageLayoutZoom': break;\n            case 'NoSummaryColumnsRightDetail': break;\n            case 'BlackAndWhite': break;\n            case 'DoNotDisplayZeros': break;\n            case 'DisplayPageBreak': break;\n            case 'RowColHeadings': break;\n            case 'DoNotDisplayOutline': break;\n            case 'NoOrientation': break;\n            case 'AllowUsePivotTables': break;\n            case 'ZeroHeight': break;\n            case 'ViewableRange': break;\n            case 'Selection': break;\n            case 'ProtectContents': break;\n            default: seen = false;\n          } break;\n\n          /* PivotTable */\n          case 'PivotTable': case 'PivotCache': switch(Rn[3]) {\n            case 'ImmediateItemsOnDrop': break;\n            case 'ShowPageMultipleItemLabel': break;\n            case 'CompactRowIndent': break;\n            case 'Location': break;\n            case 'PivotField': break;\n            case 'Orientation': break;\n            case 'LayoutForm': break;\n            case 'LayoutSubtotalLocation': break;\n            case 'LayoutCompactRow': break;\n            case 'Position': break;\n            case 'PivotItem': break;\n            case 'DataType': break;\n            case 'DataField': break;\n            case 'SourceName': break;\n            case 'ParentField': break;\n            case 'PTLineItems': break;\n            case 'PTLineItem': break;\n            case 'CountOfSameItems': break;\n            case 'Item': break;\n            case 'ItemType': break;\n            case 'PTSource': break;\n            case 'CacheIndex': break;\n            case 'ConsolidationReference': break;\n            case 'FileName': break;\n            case 'Reference': break;\n            case 'NoColumnGrand': break;\n            case 'NoRowGrand': break;\n            case 'BlankLineAfterItems': break;\n            case 'Hidden': break;\n            case 'Subtotal': break;\n            case 'BaseField': break;\n            case 'MapChildItems': break;\n            case 'Function': break;\n            case 'RefreshOnFileOpen': break;\n            case 'PrintSetTitles': break;\n            case 'MergeLabels': break;\n            case 'DefaultVersion': break;\n            case 'RefreshName': break;\n            case 'RefreshDate': break;\n            case 'RefreshDateCopy': break;\n            case 'VersionLastRefresh': break;\n            case 'VersionLastUpdate': break;\n            case 'VersionUpdateableMin': break;\n            case 'VersionRefreshableMin': break;\n            case 'Calculation': break;\n            default: seen = false;\n          } break;\n\n          /* PageBreaks */\n          case 'PageBreaks': switch(Rn[3]) {\n            case 'ColBreaks': break;\n            case 'ColBreak': break;\n            case 'RowBreaks': break;\n            case 'RowBreak': break;\n            case 'ColStart': break;\n            case 'ColEnd': break;\n            case 'RowEnd': break;\n            default: seen = false;\n          } break;\n\n          /* AutoFilter */\n          case 'AutoFilter': switch(Rn[3]) {\n            case 'AutoFilterColumn': break;\n            case 'AutoFilterCondition': break;\n            case 'AutoFilterAnd': break;\n            case 'AutoFilterOr': break;\n            default: seen = false;\n          } break;\n\n          /* QueryTable */\n          case 'QueryTable': switch(Rn[3]) {\n            case 'Id': break;\n            case 'AutoFormatFont': break;\n            case 'AutoFormatPattern': break;\n            case 'QuerySource': break;\n            case 'QueryType': break;\n            case 'EnableRedirections': break;\n            case 'RefreshedInXl9': break;\n            case 'URLString': break;\n            case 'HTMLTables': break;\n            case 'Connection': break;\n            case 'CommandText': break;\n            case 'RefreshInfo': break;\n            case 'NoTitles': break;\n            case 'NextId': break;\n            case 'ColumnInfo': break;\n            case 'OverwriteCells': break;\n            case 'DoNotPromptForFile': break;\n            case 'TextWizardSettings': break;\n            case 'Source': break;\n            case 'Number': break;\n            case 'Decimal': break;\n            case 'ThousandSeparator': break;\n            case 'TrailingMinusNumbers': break;\n            case 'FormatSettings': break;\n            case 'FieldType': break;\n            case 'Delimiters': break;\n            case 'Tab': break;\n            case 'Comma': break;\n            case 'AutoFormatName': break;\n            case 'VersionLastEdit': break;\n            case 'VersionLastRefresh': break;\n            default: seen = false;\n          } break;\n\n          case 'Sorting':\n          case 'ConditionalFormatting':\n          case 'DataValidation':\n            switch(Rn[3]) {\n              case 'Range': break;\n              case 'Type': break;\n              case 'Min': break;\n              case 'Max': break;\n              case 'Sort': break;\n              case 'Descending': break;\n              case 'Order': break;\n              case 'CaseSensitive': break;\n              case 'Value': break;\n              case 'ErrorStyle': break;\n              case 'ErrorMessage': break;\n              case 'ErrorTitle': break;\n              case 'CellRangeList': break;\n              case 'InputMessage': break;\n              case 'InputTitle': break;\n              case 'ComboHide': break;\n              case 'InputHide': break;\n              case 'Condition': break;\n              case 'Qualifier': break;\n              case 'UseBlank': break;\n              case 'Value1': break;\n              case 'Value2': break;\n              case 'Format': break;\n              default: seen = false;\n            } break;\n\n          /* MapInfo (schema) */\n          case 'MapInfo': case 'Schema': case 'data': switch(Rn[3]) {\n            case 'Map': break;\n            case 'Entry': break;\n            case 'Range': break;\n            case 'XPath': break;\n            case 'Field': break;\n            case 'XSDType': break;\n            case 'FilterOn': break;\n            case 'Aggregate': break;\n            case 'ElementType': break;\n            case 'AttributeType': break;\n            /* These are from xsd (XML Schema Definition) */\n            case 'schema':\n            case 'element':\n            case 'complexType':\n            case 'datatype':\n            case 'all':\n            case 'attribute':\n            case 'extends': break;\n\n            case 'row': break;\n            default: seen = false;\n          } break;\n\n          /* SmartTags (can be anything) */\n          case 'SmartTags': break;\n\n          default: seen = false; break;\n        }\n        if(seen) break;\n        /* CustomDocumentProperties */\n        if(!state[state.length-1][1]) throw 'Unrecognized tag: ' + Rn[3] + \"|\" + state.join(\"|\");\n        if(state[state.length-1][0]==='CustomDocumentProperties') {\n          if(Rn[0].slice(-2) === \"/>\") break;\n          else if(Rn[1]===\"/\") xlml_set_custprop(Custprops, Rn[3], cp, str.slice(pidx, Rn.index));\n          else { cp = Rn; pidx = Rn.index + Rn[0].length; }\n          break;\n        }\n        if(opts.WTF) throw 'Unrecognized tag: ' + Rn[3] + \"|\" + state.join(\"|\");\n    }\n    var out = ({});\n    if(!opts.bookSheets && !opts.bookProps) out.Sheets = sheets;\n    out.SheetNames = sheetnames;\n    out.Workbook = Workbook;\n    out.SSF = SSF.get_table();\n    out.Props = Props;\n    out.Custprops = Custprops;\n    return out;\n  }\n\n  function parse_xlml(data, opts) {\n    fix_read_opts(opts=opts||{});\n    switch(opts.type||\"base64\") {\n      case \"base64\": return parse_xlml_xml(Base64.decode(data), opts);\n      case \"binary\": case \"buffer\": case \"file\": return parse_xlml_xml(data, opts);\n      case \"array\": return parse_xlml_xml(a2s(data), opts);\n    }\n  }\n\n  /* TODO */\n  function write_props_xlml(wb, opts) {\n    var o = [];\n    /* DocumentProperties */\n    if(wb.Props) o.push(xlml_write_docprops(wb.Props, opts));\n    /* CustomDocumentProperties */\n    if(wb.Custprops) o.push(xlml_write_custprops(wb.Props, wb.Custprops, opts));\n    return o.join(\"\");\n  }\n  /* TODO */\n  function write_wb_xlml() {\n    /* OfficeDocumentSettings */\n    /* ExcelWorkbook */\n    return \"\";\n  }\n  /* TODO */\n  function write_sty_xlml(wb, opts) {\n    /* Styles */\n    var styles = ['<Style ss:ID=\"Default\" ss:Name=\"Normal\"><NumberFormat/></Style>'];\n    opts.cellXfs.forEach(function(xf, id) {\n      var payload = [];\n      payload.push(writextag('NumberFormat', null, {\"ss:Format\": escapexml(SSF._table[xf.numFmtId])}));\n      styles.push(writextag('Style', payload.join(\"\"), {\"ss:ID\": \"s\" + (21+id)}));\n    });\n    return writextag(\"Styles\", styles.join(\"\"));\n  }\n  function write_name_xlml(n) { return writextag(\"NamedRange\", null, {\"ss:Name\": n.Name, \"ss:RefersTo\":\"=\" + a1_to_rc(n.Ref, {r:0,c:0})}); }\n  function write_names_xlml(wb) {\n    if(!((wb||{}).Workbook||{}).Names) return \"\";\n    var names = wb.Workbook.Names;\n    var out = [];\n    for(var i = 0; i < names.length; ++i) {\n      var n = names[i];\n      if(n.Sheet != null) continue;\n      if(n.Name.match(/^_xlfn\\./)) continue;\n      out.push(write_name_xlml(n));\n    }\n    return writextag(\"Names\", out.join(\"\"));\n  }\n  function write_ws_xlml_names(ws, opts, idx, wb) {\n    if(!ws) return \"\";\n    if(!((wb||{}).Workbook||{}).Names) return \"\";\n    var names = wb.Workbook.Names;\n    var out = [];\n    for(var i = 0; i < names.length; ++i) {\n      var n = names[i];\n      if(n.Sheet != idx) continue;\n      /*switch(n.Name) {\n\t\t\tcase \"_\": continue;\n\t\t}*/\n      if(n.Name.match(/^_xlfn\\./)) continue;\n      out.push(write_name_xlml(n));\n    }\n    return out.join(\"\");\n  }\n  /* WorksheetOptions */\n  function write_ws_xlml_wsopts(ws, opts, idx, wb) {\n    if(!ws) return \"\";\n    var o = [];\n    /* NOTE: spec technically allows any order, but stick with implied order */\n\n    /* FitToPage */\n    /* DoNotDisplayColHeaders */\n    /* DoNotDisplayRowHeaders */\n    /* ViewableRange */\n    /* Selection */\n    /* GridlineColor */\n    /* Name */\n    /* ExcelWorksheetType */\n    /* IntlMacro */\n    /* Unsynced */\n    /* Selected */\n    /* CodeName */\n\n    if(ws['!margins']) {\n      o.push(\"<PageSetup>\");\n      if(ws['!margins'].header) o.push(writextag(\"Header\", null, {'x:Margin':ws['!margins'].header}));\n      if(ws['!margins'].footer) o.push(writextag(\"Footer\", null, {'x:Margin':ws['!margins'].footer}));\n      o.push(writextag(\"PageMargins\", null, {\n        'x:Bottom': ws['!margins'].bottom || \"0.75\",\n        'x:Left': ws['!margins'].left || \"0.7\",\n        'x:Right': ws['!margins'].right || \"0.7\",\n        'x:Top': ws['!margins'].top || \"0.75\"\n      }));\n      o.push(\"</PageSetup>\");\n    }\n\n    /* PageSetup */\n    /* DisplayPageBreak */\n    /* TransitionExpressionEvaluation */\n    /* TransitionFormulaEntry */\n    /* Print */\n    /* Zoom */\n    /* PageLayoutZoom */\n    /* PageBreakZoom */\n    /* ShowPageBreakZoom */\n    /* DefaultRowHeight */\n    /* DefaultColumnWidth */\n    /* StandardWidth */\n\n    if(wb && wb.Workbook && wb.Workbook.Sheets && wb.Workbook.Sheets[idx]) {\n      /* Visible */\n      if(wb.Workbook.Sheets[idx].Hidden) o.push(writextag(\"Visible\", (wb.Workbook.Sheets[idx].Hidden == 1 ? \"SheetHidden\" : \"SheetVeryHidden\"), {}));\n      else {\n        /* Selected */\n        for(var i = 0; i < idx; ++i) if(wb.Workbook.Sheets[i] && !wb.Workbook.Sheets[i].Hidden) break;\n        if(i == idx) o.push(\"<Selected/>\");\n      }\n    }\n\n    /* LeftColumnVisible */\n\n    if(((((wb||{}).Workbook||{}).Views||[])[0]||{}).RTL) o.push(\"<DisplayRightToLeft/>\");\n\n    /* GridlineColorIndex */\n    /* DisplayFormulas */\n    /* DoNotDisplayGridlines */\n    /* DoNotDisplayHeadings */\n    /* DoNotDisplayOutline */\n    /* ApplyAutomaticOutlineStyles */\n    /* NoSummaryRowsBelowDetail */\n    /* NoSummaryColumnsRightDetail */\n    /* DoNotDisplayZeros */\n    /* ActiveRow */\n    /* ActiveColumn */\n    /* FilterOn */\n    /* RangeSelection */\n    /* TopRowVisible */\n    /* TopRowBottomPane */\n    /* LeftColumnRightPane */\n    /* ActivePane */\n    /* SplitHorizontal */\n    /* SplitVertical */\n    /* FreezePanes */\n    /* FrozenNoSplit */\n    /* TabColorIndex */\n    /* Panes */\n\n    /* NOTE: Password not supported in XLML Format */\n    if(ws['!protect']) {\n      o.push(writetag(\"ProtectContents\", \"True\"));\n      if(ws['!protect'].objects) o.push(writetag(\"ProtectObjects\", \"True\"));\n      if(ws['!protect'].scenarios) o.push(writetag(\"ProtectScenarios\", \"True\"));\n      if(ws['!protect'].selectLockedCells != null && !ws['!protect'].selectLockedCells) o.push(writetag(\"EnableSelection\", \"NoSelection\"));\n      else if(ws['!protect'].selectUnlockedCells != null && !ws['!protect'].selectUnlockedCells) o.push(writetag(\"EnableSelection\", \"UnlockedCells\"));\n      [\n        [ \"formatCells\", \"AllowFormatCells\" ],\n        [ \"formatColumns\", \"AllowSizeCols\" ],\n        [ \"formatRows\", \"AllowSizeRows\" ],\n        [ \"insertColumns\", \"AllowInsertCols\" ],\n        [ \"insertRows\", \"AllowInsertRows\" ],\n        [ \"insertHyperlinks\", \"AllowInsertHyperlinks\" ],\n        [ \"deleteColumns\", \"AllowDeleteCols\" ],\n        [ \"deleteRows\", \"AllowDeleteRows\" ],\n        [ \"sort\", \"AllowSort\" ],\n        [ \"autoFilter\", \"AllowFilter\" ],\n        [ \"pivotTables\", \"AllowUsePivotTables\" ]\n      ].forEach(function(x) { if(ws['!protect'][x[0]]) o.push(\"<\"+x[1]+\"/>\"); });\n    }\n\n    if(o.length == 0) return \"\";\n    return writextag(\"WorksheetOptions\", o.join(\"\"), {xmlns:XLMLNS.x});\n  }\n  function write_ws_xlml_comment(comments) {\n    return comments.map(function(c) {\n      // TODO: formatted text\n      var t = xlml_unfixstr(c.t||\"\");\n      var d =writextag(\"ss:Data\", t, {\"xmlns\":\"http://www.w3.org/TR/REC-html40\"});\n      return writextag(\"Comment\", d, {\"ss:Author\":c.a});\n    }).join(\"\");\n  }\n  function write_ws_xlml_cell(cell, ref, ws, opts, idx, wb, addr){\n    if(!cell || (cell.v == undefined && cell.f == undefined)) return \"\";\n\n    var attr = {};\n    if(cell.f) attr[\"ss:Formula\"] = \"=\" + escapexml(a1_to_rc(cell.f, addr));\n    if(cell.F && cell.F.slice(0, ref.length) == ref) {\n      var end = decode_cell(cell.F.slice(ref.length + 1));\n      attr[\"ss:ArrayRange\"] = \"RC:R\" + (end.r == addr.r ? \"\" : \"[\" + (end.r - addr.r) + \"]\") + \"C\" + (end.c == addr.c ? \"\" : \"[\" + (end.c - addr.c) + \"]\");\n    }\n\n    if(cell.l && cell.l.Target) {\n      attr[\"ss:HRef\"] = escapexml(cell.l.Target);\n      if(cell.l.Tooltip) attr[\"x:HRefScreenTip\"] = escapexml(cell.l.Tooltip);\n    }\n\n    if(ws['!merges']) {\n      var marr = ws['!merges'];\n      for(var mi = 0; mi != marr.length; ++mi) {\n        if(marr[mi].s.c != addr.c || marr[mi].s.r != addr.r) continue;\n        if(marr[mi].e.c > marr[mi].s.c) attr['ss:MergeAcross'] = marr[mi].e.c - marr[mi].s.c;\n        if(marr[mi].e.r > marr[mi].s.r) attr['ss:MergeDown'] = marr[mi].e.r - marr[mi].s.r;\n      }\n    }\n\n    var t = \"\", p = \"\";\n    switch(cell.t) {\n      case 'z': return \"\";\n      case 'n': t = 'Number'; p = String(cell.v); break;\n      case 'b': t = 'Boolean'; p = (cell.v ? \"1\" : \"0\"); break;\n      case 'e': t = 'Error'; p = BErr[cell.v]; break;\n      case 'd': t = 'DateTime'; p = new Date(cell.v).toISOString(); if(cell.z == null) cell.z = cell.z || SSF._table[14]; break;\n      case 's': t = 'String'; p = escapexlml(cell.v||\"\"); break;\n    }\n    /* TODO: cell style */\n    var os = get_cell_style(opts.cellXfs, cell, opts);\n    attr[\"ss:StyleID\"] = \"s\" + (21+os);\n    attr[\"ss:Index\"] = addr.c + 1;\n    var _v = (cell.v != null ? p : \"\");\n    var m = '<Data ss:Type=\"' + t + '\">' + _v + '</Data>';\n\n    if((cell.c||[]).length > 0) m += write_ws_xlml_comment(cell.c);\n\n    return writextag(\"Cell\", m, attr);\n  }\n  function write_ws_xlml_row(R, row) {\n    var o = '<Row ss:Index=\"' + (R+1) + '\"';\n    if(row) {\n      if(row.hpt && !row.hpx) row.hpx = pt2px(row.hpt);\n      if(row.hpx) o += ' ss:AutoFitHeight=\"0\" ss:Height=\"' + row.hpx + '\"';\n      if(row.hidden) o += ' ss:Hidden=\"1\"';\n    }\n    return o + '>';\n  }\n  /* TODO */\n  function write_ws_xlml_table(ws, opts, idx, wb) {\n    if(!ws['!ref']) return \"\";\n    var range = safe_decode_range(ws['!ref']);\n    var marr = ws['!merges'] || [], mi = 0;\n    var o = [];\n    if(ws['!cols']) ws['!cols'].forEach(function(n, i) {\n      process_col(n);\n      var w = !!n.width;\n      var p = col_obj_w(i, n);\n      var k = {\"ss:Index\":i+1};\n      if(w) k['ss:Width'] = width2px(p.width);\n      if(n.hidden) k['ss:Hidden']=\"1\";\n      o.push(writextag(\"Column\",null,k));\n    });\n    var dense = Array.isArray(ws);\n    for(var R = range.s.r; R <= range.e.r; ++R) {\n      var row = [write_ws_xlml_row(R, (ws['!rows']||[])[R])];\n      for(var C = range.s.c; C <= range.e.c; ++C) {\n        var skip = false;\n        for(mi = 0; mi != marr.length; ++mi) {\n          if(marr[mi].s.c > C) continue;\n          if(marr[mi].s.r > R) continue;\n          if(marr[mi].e.c < C) continue;\n          if(marr[mi].e.r < R) continue;\n          if(marr[mi].s.c != C || marr[mi].s.r != R) skip = true;\n          break;\n        }\n        if(skip) continue;\n        var addr = {r:R,c:C};\n        var ref = encode_cell(addr), cell = dense ? (ws[R]||[])[C] : ws[ref];\n        row.push(write_ws_xlml_cell(cell, ref, ws, opts, idx, wb, addr));\n      }\n      row.push(\"</Row>\");\n      if(row.length > 2) o.push(row.join(\"\"));\n    }\n    return o.join(\"\");\n  }\n  function write_ws_xlml(idx, opts, wb) {\n    var o = [];\n    var s = wb.SheetNames[idx];\n    var ws = wb.Sheets[s];\n\n    var t = ws ? write_ws_xlml_names(ws, opts, idx, wb) : \"\";\n    if(t.length > 0) o.push(\"<Names>\" + t + \"</Names>\");\n\n    /* Table */\n    t = ws ? write_ws_xlml_table(ws, opts, idx, wb) : \"\";\n    if(t.length > 0) o.push(\"<Table>\" + t + \"</Table>\");\n\n    /* WorksheetOptions */\n    o.push(write_ws_xlml_wsopts(ws, opts, idx, wb));\n\n    return o.join(\"\");\n  }\n  function write_xlml(wb, opts) {\n    if(!opts) opts = {};\n    if(!wb.SSF) wb.SSF = SSF.get_table();\n    if(wb.SSF) {\n      make_ssf(SSF); SSF.load_table(wb.SSF);\n      // $FlowIgnore\n      opts.revssf = evert_num(wb.SSF); opts.revssf[wb.SSF[65535]] = 0;\n      opts.ssf = wb.SSF;\n      opts.cellXfs = [];\n      get_cell_style(opts.cellXfs, {}, {revssf:{\"General\":0}});\n    }\n    var d = [];\n    d.push(write_props_xlml(wb, opts));\n    d.push(write_wb_xlml(wb, opts));\n    d.push(\"\");\n    d.push(\"\");\n    for(var i = 0; i < wb.SheetNames.length; ++i)\n      d.push(writextag(\"Worksheet\", write_ws_xlml(i, opts, wb), {\"ss:Name\":escapexml(wb.SheetNames[i])}));\n    d[2] = write_sty_xlml(wb, opts);\n    d[3] = write_names_xlml(wb, opts);\n    return XML_HEADER + writextag(\"Workbook\", d.join(\"\"), {\n      'xmlns':      XLMLNS.ss,\n      'xmlns:o':    XLMLNS.o,\n      'xmlns:x':    XLMLNS.x,\n      'xmlns:ss':   XLMLNS.ss,\n      'xmlns:dt':   XLMLNS.dt,\n      'xmlns:html': XLMLNS.html\n    });\n  }\n  /* [MS-OLEDS] 2.3.8 CompObjStream */\n  function parse_compobj(obj) {\n    var v = {};\n    var o = obj.content;\n    /* [MS-OLEDS] 2.3.7 CompObjHeader -- All fields MUST be ignored */\n    o.l = 28;\n\n    v.AnsiUserType = o.read_shift(0, \"lpstr-ansi\");\n    v.AnsiClipboardFormat = parse_ClipboardFormatOrAnsiString(o);\n\n    if(o.length - o.l <= 4) return v;\n\n    var m = o.read_shift(4);\n    if(m == 0 || m > 40) return v;\n    o.l-=4; v.Reserved1 = o.read_shift(0, \"lpstr-ansi\");\n\n    if(o.length - o.l <= 4) return v;\n    m = o.read_shift(4);\n    if(m !== 0x71b239f4) return v;\n    v.UnicodeClipboardFormat = parse_ClipboardFormatOrUnicodeString(o);\n\n    m = o.read_shift(4);\n    if(m == 0 || m > 40) return v;\n    o.l-=4; v.Reserved2 = o.read_shift(0, \"lpwstr\");\n  }\n\n  /*\n\tContinue logic for:\n\t- 2.4.58 Continue\n\t- 2.4.59 ContinueBigName\n\t- 2.4.60 ContinueFrt\n\t- 2.4.61 ContinueFrt11\n\t- 2.4.62 ContinueFrt12\n*/\n  function slurp(R, blob, length, opts) {\n    var l = length;\n    var bufs = [];\n    var d = blob.slice(blob.l,blob.l+l);\n    if(opts && opts.enc && opts.enc.insitu) switch(R.n) {\n      case 'BOF': case 'FilePass': case 'FileLock': case 'InterfaceHdr': case 'RRDInfo': case 'RRDHead': case 'UsrExcl': break;\n      default:\n        if(d.length === 0) break;\n        opts.enc.insitu(d);\n    }\n    bufs.push(d);\n    blob.l += l;\n    var next = (XLSRecordEnum[__readUInt16LE(blob,blob.l)]);\n    var start = 0;\n    while(next != null && next.n.slice(0,8) === 'Continue') {\n      l = __readUInt16LE(blob,blob.l+2);\n      start = blob.l + 4;\n      if(next.n == 'ContinueFrt') start += 4;\n      else if(next.n.slice(0,11) == 'ContinueFrt') start += 12;\n      bufs.push(blob.slice(start,blob.l+4+l));\n      blob.l += 4+l;\n      next = (XLSRecordEnum[__readUInt16LE(blob, blob.l)]);\n    }\n    var b = (bconcat(bufs));\n    prep_blob(b, 0);\n    var ll = 0; b.lens = [];\n    for(var j = 0; j < bufs.length; ++j) { b.lens.push(ll); ll += bufs[j].length; }\n    return R.f(b, b.length, opts);\n  }\n\n  function safe_format_xf(p, opts, date1904) {\n    if(p.t === 'z') return;\n    if(!p.XF) return;\n    var fmtid = 0;\n    try {\n      fmtid = p.z || p.XF.numFmtId || 0;\n      if(opts.cellNF) p.z = SSF._table[fmtid];\n    } catch(e) { if(opts.WTF) throw e; }\n    if(!opts || opts.cellText !== false) try {\n      if(p.t === 'e') { p.w = p.w || BErr[p.v]; }\n      else if(fmtid === 0 || fmtid == \"General\") {\n        if(p.t === 'n') {\n          if((p.v|0) === p.v) p.w = SSF._general_int(p.v);\n          else p.w = SSF._general_num(p.v);\n        }\n        else p.w = SSF._general(p.v);\n      }\n      else p.w = SSF.format(fmtid,p.v, {date1904:!!date1904});\n    } catch(e) { if(opts.WTF) throw e; }\n    if(opts.cellDates && fmtid && p.t == 'n' && SSF.is_date(SSF._table[fmtid] || String(fmtid))) {\n      var _d = SSF.parse_date_code(p.v); if(_d) { p.t = 'd'; p.v = new Date(_d.y, _d.m-1,_d.d,_d.H,_d.M,_d.S,_d.u); }\n    }\n  }\n\n  function make_cell(val, ixfe, t) {\n    return ({v:val, ixfe:ixfe, t:t});\n  }\n\n// 2.3.2\n  function parse_workbook(blob, options) {\n    var wb = ({opts:{}});\n    var Sheets = {};\n    if(DENSE != null && options.dense == null) options.dense = DENSE;\n    var out = ((options.dense ? [] : {}));\n    var Directory = {};\n    var range = ({});\n    var last_formula = null;\n    var sst = ([]);\n    var cur_sheet = \"\";\n    var Preamble = {};\n    var lastcell, last_cell = \"\", cc, cmnt, rngC, rngR;\n    var sharedf = {};\n    var arrayf = [];\n    var temp_val;\n    var country;\n    var cell_valid = true;\n    var XFs = []; /* XF records */\n    var palette = [];\n    var Workbook = ({ Sheets:[], WBProps:{date1904:false}, Views:[{}] }), wsprops = {};\n    var get_rgb = function getrgb(icv) {\n      if(icv < 8) return XLSIcv[icv];\n      if(icv < 64) return palette[icv-8] || XLSIcv[icv];\n      return XLSIcv[icv];\n    };\n    var process_cell_style = function pcs(cell, line, options) {\n      var xfd = line.XF.data;\n      if(!xfd || !xfd.patternType || !options || !options.cellStyles) return;\n      line.s = ({});\n      line.s.patternType = xfd.patternType;\n      var t;\n      if((t = rgb2Hex(get_rgb(xfd.icvFore)))) { line.s.fgColor = {rgb:t}; }\n      if((t = rgb2Hex(get_rgb(xfd.icvBack)))) { line.s.bgColor = {rgb:t}; }\n    };\n    var addcell = function addcell(cell, line, options) {\n      if(file_depth > 1) return;\n      if(options.sheetRows && cell.r >= options.sheetRows) cell_valid = false;\n      if(!cell_valid) return;\n      if(options.cellStyles && line.XF && line.XF.data) process_cell_style(cell, line, options);\n      delete line.ixfe; delete line.XF;\n      lastcell = cell;\n      last_cell = encode_cell(cell);\n      if(!range || !range.s || !range.e) range = {s:{r:0,c:0},e:{r:0,c:0}};\n      if(cell.r < range.s.r) range.s.r = cell.r;\n      if(cell.c < range.s.c) range.s.c = cell.c;\n      if(cell.r + 1 > range.e.r) range.e.r = cell.r + 1;\n      if(cell.c + 1 > range.e.c) range.e.c = cell.c + 1;\n      if(options.cellFormula && line.f) {\n        for(var afi = 0; afi < arrayf.length; ++afi) {\n          if(arrayf[afi][0].s.c > cell.c || arrayf[afi][0].s.r > cell.r) continue;\n          if(arrayf[afi][0].e.c < cell.c || arrayf[afi][0].e.r < cell.r) continue;\n          line.F = encode_range(arrayf[afi][0]);\n          if(arrayf[afi][0].s.c != cell.c || arrayf[afi][0].s.r != cell.r) delete line.f;\n          if(line.f) line.f = \"\" + stringify_formula(arrayf[afi][1], range, cell, supbooks, opts);\n          break;\n        }\n      }\n      {\n        if(options.dense) {\n          if(!out[cell.r]) out[cell.r] = [];\n          out[cell.r][cell.c] = line;\n        } else out[last_cell] = line;\n      }\n    };\n    var opts = ({\n      enc: false, // encrypted\n      sbcch: 0, // cch in the preceding SupBook\n      snames: [], // sheetnames\n      sharedf: sharedf, // shared formulae by address\n      arrayf: arrayf, // array formulae array\n      rrtabid: [], // RRTabId\n      lastuser: \"\", // Last User from WriteAccess\n      biff: 8, // BIFF version\n      codepage: 0, // CP from CodePage record\n      winlocked: 0, // fLockWn from WinProtect\n      cellStyles: !!options && !!options.cellStyles,\n      WTF: !!options && !!options.wtf\n    });\n    if(options.password) opts.password = options.password;\n    var themes;\n    var merges = [];\n    var objects = [];\n    var colinfo = [], rowinfo = [];\n    // eslint-disable-next-line no-unused-vars\n    var defwidth = 0, defheight = 0; // twips / MDW respectively\n    var seencol = false;\n    var supbooks = ([]); // 1-indexed, will hold extern names\n    supbooks.SheetNames = opts.snames;\n    supbooks.sharedf = opts.sharedf;\n    supbooks.arrayf = opts.arrayf;\n    supbooks.names = [];\n    supbooks.XTI = [];\n    var last_Rn = '';\n    var file_depth = 0; /* TODO: make a real stack */\n    var BIFF2Fmt = 0, BIFF2FmtTable = [];\n    var FilterDatabases = []; /* TODO: sort out supbooks and process elsewhere */\n    var last_lbl;\n\n    /* explicit override for some broken writers */\n    opts.codepage = 1200;\n    set_cp(1200);\n    var seen_codepage = false;\n    while(blob.l < blob.length - 1) {\n      var s = blob.l;\n      var RecordType = blob.read_shift(2);\n      if(RecordType === 0 && last_Rn === 'EOF') break;\n      var length = (blob.l === blob.length ? 0 : blob.read_shift(2));\n      var R = XLSRecordEnum[RecordType];\n      //console.log(RecordType.toString(16), RecordType, R, blob.l, length, blob.length);\n      //if(!R) console.log(blob.slice(blob.l, blob.l + length));\n      if(R && R.f) {\n        if(options.bookSheets) {\n          if(last_Rn === 'BoundSheet8' && R.n !== 'BoundSheet8') break;\n        }\n        last_Rn = R.n;\n        if(R.r === 2 || R.r == 12) {\n          var rt = blob.read_shift(2); length -= 2;\n          if(!opts.enc && rt !== RecordType && (((rt&0xFF)<<8)|(rt>>8)) !== RecordType) throw new Error(\"rt mismatch: \" + rt + \"!=\" + RecordType);\n          if(R.r == 12){ blob.l += 10; length -= 10; } // skip FRT\n        }\n        //console.error(R,blob.l,length,blob.length);\n        var val;\n        if(R.n === 'EOF') val = R.f(blob, length, opts);\n        else val = slurp(R, blob, length, opts);\n        var Rn = R.n;\n        if(file_depth == 0 && Rn != 'BOF') continue;\n        /* nested switch statements to workaround V8 128 limit */\n        switch(Rn) {\n          /* Workbook Options */\n          case 'Date1904':\n            wb.opts.Date1904 = Workbook.WBProps.date1904 = val; break;\n          case 'WriteProtect': wb.opts.WriteProtect = true; break;\n          case 'FilePass':\n            if(!opts.enc) blob.l = 0;\n            opts.enc = val;\n            if(!options.password) throw new Error(\"File is password-protected\");\n            if(val.valid == null) throw new Error(\"Encryption scheme unsupported\");\n            if(!val.valid) throw new Error(\"Password is incorrect\");\n            break;\n          case 'WriteAccess': opts.lastuser = val; break;\n          case 'FileSharing': break; //TODO\n          case 'CodePage':\n            /* overrides based on test cases */\n            switch(val) {\n              case 0x5212: val =  1200; break;\n              case 0x8000: val = 10000; break;\n              case 0x8001: val =  1252; break;\n            }\n            set_cp(opts.codepage = val);\n            seen_codepage = true;\n            break;\n          case 'RRTabId': opts.rrtabid = val; break;\n          case 'WinProtect': opts.winlocked = val; break;\n          case 'Template': break; // TODO\n          case 'BookBool': break; // TODO\n          case 'UsesELFs': break;\n          case 'MTRSettings': break;\n          case 'RefreshAll':\n          case 'CalcCount':\n          case 'CalcDelta':\n          case 'CalcIter':\n          case 'CalcMode':\n          case 'CalcPrecision':\n          case 'CalcSaveRecalc':\n            wb.opts[Rn] = val; break;\n          case 'CalcRefMode': opts.CalcRefMode = val; break; // TODO: implement R1C1\n          case 'Uncalced': break;\n          case 'ForceFullCalculation': wb.opts.FullCalc = val; break;\n          case 'WsBool':\n            if(val.fDialog) out[\"!type\"] = \"dialog\";\n            break; // TODO\n          case 'XF':\n            XFs.push(val); break;\n          case 'ExtSST': break; // TODO\n          case 'BookExt': break; // TODO\n          case 'RichTextStream': break;\n          case 'BkHim': break;\n\n          case 'SupBook':\n            supbooks.push([val]);\n            supbooks[supbooks.length-1].XTI = [];\n            break;\n          case 'ExternName':\n            supbooks[supbooks.length-1].push(val);\n            break;\n          case 'Index': break; // TODO\n          case 'Lbl':\n            last_lbl = ({\n              Name: val.Name,\n              Ref: stringify_formula(val.rgce,range,null,supbooks,opts)\n            });\n            if(val.itab > 0) last_lbl.Sheet = val.itab - 1;\n            supbooks.names.push(last_lbl);\n            if(!supbooks[0]) { supbooks[0] = []; supbooks[0].XTI = []; }\n            supbooks[supbooks.length-1].push(val);\n            if(val.Name == \"_xlnm._FilterDatabase\" && val.itab > 0)\n              if(val.rgce && val.rgce[0] && val.rgce[0][0] && val.rgce[0][0][0] == 'PtgArea3d')\n                FilterDatabases[val.itab - 1] = { ref: encode_range(val.rgce[0][0][1][2]) };\n            break;\n          case 'ExternCount': opts.ExternCount = val; break;\n          case 'ExternSheet':\n            if(supbooks.length == 0) { supbooks[0] = []; supbooks[0].XTI = []; }\n            supbooks[supbooks.length - 1].XTI = supbooks[supbooks.length - 1].XTI.concat(val); supbooks.XTI = supbooks.XTI.concat(val); break;\n          case 'NameCmt':\n            /* TODO: search for correct name */\n            if(opts.biff < 8) break;\n            if(last_lbl != null) last_lbl.Comment = val[1];\n            break;\n\n          case 'Protect': out[\"!protect\"] = val; break; /* for sheet or book */\n          case 'Password': if(val !== 0 && opts.WTF) console.error(\"Password verifier: \" + val); break;\n          case 'Prot4Rev': case 'Prot4RevPass': break; /*TODO: Revision Control*/\n\n          case 'BoundSheet8': {\n            Directory[val.pos] = val;\n            opts.snames.push(val.name);\n          } break;\n          case 'EOF': {\n            if(--file_depth) break;\n            if(range.e) {\n              if(range.e.r > 0 && range.e.c > 0) {\n                range.e.r--; range.e.c--;\n                out[\"!ref\"] = encode_range(range);\n                if(options.sheetRows && options.sheetRows <= range.e.r) {\n                  var tmpri = range.e.r;\n                  range.e.r = options.sheetRows - 1;\n                  out[\"!fullref\"] = out[\"!ref\"];\n                  out[\"!ref\"] = encode_range(range);\n                  range.e.r = tmpri;\n                }\n                range.e.r++; range.e.c++;\n              }\n              if(merges.length > 0) out[\"!merges\"] = merges;\n              if(objects.length > 0) out[\"!objects\"] = objects;\n              if(colinfo.length > 0) out[\"!cols\"] = colinfo;\n              if(rowinfo.length > 0) out[\"!rows\"] = rowinfo;\n              Workbook.Sheets.push(wsprops);\n            }\n            if(cur_sheet === \"\") Preamble = out; else Sheets[cur_sheet] = out;\n            out = ((options.dense ? [] : {}));\n          } break;\n          case 'BOF': {\n            if(opts.biff === 8) opts.biff = {\n              0x0009:2,\n              0x0209:3,\n              0x0409:4\n            }[RecordType] || {\n              0x0200:2,\n              0x0300:3,\n              0x0400:4,\n              0x0500:5,\n              0x0600:8,\n              0x0002:2,\n              0x0007:2\n            }[val.BIFFVer] || 8;\n            if(opts.biff == 8 && val.BIFFVer == 0 && val.dt == 16) opts.biff = 2;\n            if(file_depth++) break;\n            cell_valid = true;\n            out = ((options.dense ? [] : {}));\n\n            if(opts.biff < 8 && !seen_codepage) { seen_codepage = true; set_cp(opts.codepage = options.codepage || 1252); }\n            if(opts.biff < 5) {\n              if(cur_sheet === \"\") cur_sheet = \"Sheet1\";\n              range = {s:{r:0,c:0},e:{r:0,c:0}};\n              /* fake BoundSheet8 */\n              var fakebs8 = {pos: blob.l - length, name:cur_sheet};\n              Directory[fakebs8.pos] = fakebs8;\n              opts.snames.push(cur_sheet);\n            }\n            else cur_sheet = (Directory[s] || {name:\"\"}).name;\n            if(val.dt == 0x20) out[\"!type\"] = \"chart\";\n            if(val.dt == 0x40) out[\"!type\"] = \"macro\";\n            merges = [];\n            objects = [];\n            opts.arrayf = arrayf = [];\n            colinfo = []; rowinfo = [];\n            defwidth = defheight = 0;\n            seencol = false;\n            wsprops = {Hidden:(Directory[s]||{hs:0}).hs, name:cur_sheet };\n          } break;\n\n          case 'Number': case 'BIFF2NUM': case 'BIFF2INT': {\n            if(out[\"!type\"] == \"chart\") if(options.dense ? (out[val.r]||[])[val.c]: out[encode_cell({c:val.c, r:val.r})]) ++val.c;\n            temp_val = ({ixfe: val.ixfe, XF: XFs[val.ixfe]||{}, v:val.val, t:'n'});\n            if(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x1F];\n            safe_format_xf(temp_val, options, wb.opts.Date1904);\n            addcell({c:val.c, r:val.r}, temp_val, options);\n          } break;\n          case 'BoolErr': {\n            temp_val = ({ixfe: val.ixfe, XF: XFs[val.ixfe], v:val.val, t:val.t});\n            if(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x1F];\n            safe_format_xf(temp_val, options, wb.opts.Date1904);\n            addcell({c:val.c, r:val.r}, temp_val, options);\n          } break;\n          case 'RK': {\n            temp_val = ({ixfe: val.ixfe, XF: XFs[val.ixfe], v:val.rknum, t:'n'});\n            if(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x1F];\n            safe_format_xf(temp_val, options, wb.opts.Date1904);\n            addcell({c:val.c, r:val.r}, temp_val, options);\n          } break;\n          case 'MulRk': {\n            for(var j = val.c; j <= val.C; ++j) {\n              var ixfe = val.rkrec[j-val.c][0];\n              temp_val= ({ixfe:ixfe, XF:XFs[ixfe], v:val.rkrec[j-val.c][1], t:'n'});\n              if(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x1F];\n              safe_format_xf(temp_val, options, wb.opts.Date1904);\n              addcell({c:j, r:val.r}, temp_val, options);\n            }\n          } break;\n          case 'Formula': {\n            if(val.val == 'String') { last_formula = val; break; }\n            temp_val = make_cell(val.val, val.cell.ixfe, val.tt);\n            temp_val.XF = XFs[temp_val.ixfe];\n            if(options.cellFormula) {\n              var _f = val.formula;\n              if(_f && _f[0] && _f[0][0] && _f[0][0][0] == 'PtgExp') {\n                var _fr = _f[0][0][1][0], _fc = _f[0][0][1][1];\n                var _fe = encode_cell({r:_fr, c:_fc});\n                if(sharedf[_fe]) temp_val.f = \"\"+stringify_formula(val.formula,range,val.cell,supbooks, opts);\n                else temp_val.F = ((options.dense ? (out[_fr]||[])[_fc]: out[_fe]) || {}).F;\n              } else temp_val.f = \"\"+stringify_formula(val.formula,range,val.cell,supbooks, opts);\n            }\n            if(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x1F];\n            safe_format_xf(temp_val, options, wb.opts.Date1904);\n            addcell(val.cell, temp_val, options);\n            last_formula = val;\n          } break;\n          case 'String': {\n            if(last_formula) { /* technically always true */\n              last_formula.val = val;\n              temp_val = make_cell(val, last_formula.cell.ixfe, 's');\n              temp_val.XF = XFs[temp_val.ixfe];\n              if(options.cellFormula) {\n                temp_val.f = \"\"+stringify_formula(last_formula.formula, range, last_formula.cell, supbooks, opts);\n              }\n              if(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x1F];\n              safe_format_xf(temp_val, options, wb.opts.Date1904);\n              addcell(last_formula.cell, temp_val, options);\n              last_formula = null;\n            } else throw new Error(\"String record expects Formula\");\n          } break;\n          case 'Array': {\n            arrayf.push(val);\n            var _arraystart = encode_cell(val[0].s);\n            cc = options.dense ? (out[val[0].s.r]||[])[val[0].s.c] : out[_arraystart];\n            if(options.cellFormula && cc) {\n              if(!last_formula) break; /* technically unreachable */\n              if(!_arraystart || !cc) break;\n              cc.f = \"\"+stringify_formula(val[1], range, val[0], supbooks, opts);\n              cc.F = encode_range(val[0]);\n            }\n          } break;\n          case 'ShrFmla': {\n            if(!cell_valid) break;\n            if(!options.cellFormula) break;\n            if(last_cell) {\n              /* TODO: capture range */\n              if(!last_formula) break; /* technically unreachable */\n              sharedf[encode_cell(last_formula.cell)]= val[0];\n              cc = options.dense ? (out[last_formula.cell.r]||[])[last_formula.cell.c] : out[encode_cell(last_formula.cell)];\n              (cc||{}).f = \"\"+stringify_formula(val[0], range, lastcell, supbooks, opts);\n            }\n          } break;\n          case 'LabelSst':\n            temp_val=make_cell(sst[val.isst].t, val.ixfe, 's');\n            temp_val.XF = XFs[temp_val.ixfe];\n            if(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x1F];\n            safe_format_xf(temp_val, options, wb.opts.Date1904);\n            addcell({c:val.c, r:val.r}, temp_val, options);\n            break;\n          case 'Blank': if(options.sheetStubs) {\n            temp_val = ({ixfe: val.ixfe, XF: XFs[val.ixfe], t:'z'});\n            if(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x1F];\n            safe_format_xf(temp_val, options, wb.opts.Date1904);\n            addcell({c:val.c, r:val.r}, temp_val, options);\n          } break;\n          case 'MulBlank': if(options.sheetStubs) {\n            for(var _j = val.c; _j <= val.C; ++_j) {\n              var _ixfe = val.ixfe[_j-val.c];\n              temp_val= ({ixfe:_ixfe, XF:XFs[_ixfe], t:'z'});\n              if(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x1F];\n              safe_format_xf(temp_val, options, wb.opts.Date1904);\n              addcell({c:_j, r:val.r}, temp_val, options);\n            }\n          } break;\n          case 'RString':\n          case 'Label': case 'BIFF2STR':\n            temp_val=make_cell(val.val, val.ixfe, 's');\n            temp_val.XF = XFs[temp_val.ixfe];\n            if(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x1F];\n            safe_format_xf(temp_val, options, wb.opts.Date1904);\n            addcell({c:val.c, r:val.r}, temp_val, options);\n            break;\n\n          case 'Dimensions': {\n            if(file_depth === 1) range = val; /* TODO: stack */\n          } break;\n          case 'SST': {\n            sst = val;\n          } break;\n          case 'Format': { /* val = [id, fmt] */\n            if(opts.biff == 4) {\n              BIFF2FmtTable[BIFF2Fmt++] = val[1];\n              for(var b4idx = 0; b4idx < BIFF2Fmt + 163; ++b4idx) if(SSF._table[b4idx] == val[1]) break;\n              if(b4idx >= 163) SSF.load(val[1], BIFF2Fmt + 163);\n            }\n            else SSF.load(val[1], val[0]);\n          } break;\n          case 'BIFF2FORMAT': {\n            BIFF2FmtTable[BIFF2Fmt++] = val;\n            for(var b2idx = 0; b2idx < BIFF2Fmt + 163; ++b2idx) if(SSF._table[b2idx] == val) break;\n            if(b2idx >= 163) SSF.load(val, BIFF2Fmt + 163);\n          } break;\n\n          case 'MergeCells': merges = merges.concat(val); break;\n\n          case 'Obj': objects[val.cmo[0]] = opts.lastobj = val; break;\n          case 'TxO': opts.lastobj.TxO = val; break;\n          case 'ImData': opts.lastobj.ImData = val; break;\n\n          case 'HLink': {\n            for(rngR = val[0].s.r; rngR <= val[0].e.r; ++rngR)\n              for(rngC = val[0].s.c; rngC <= val[0].e.c; ++rngC) {\n                cc = options.dense ? (out[rngR]||[])[rngC] : out[encode_cell({c:rngC,r:rngR})];\n                if(cc) cc.l = val[1];\n              }\n          } break;\n          case 'HLinkTooltip': {\n            for(rngR = val[0].s.r; rngR <= val[0].e.r; ++rngR)\n              for(rngC = val[0].s.c; rngC <= val[0].e.c; ++rngC) {\n                cc = options.dense ? (out[rngR]||[])[rngC] : out[encode_cell({c:rngC,r:rngR})];\n                if(cc && cc.l) cc.l.Tooltip = val[1];\n              }\n          } break;\n\n          /* Comments */\n          case 'Note': {\n            if(opts.biff <= 5 && opts.biff >= 2) break; /* TODO: BIFF5 */\n            cc = options.dense ? (out[val[0].r]||[])[val[0].c] : out[encode_cell(val[0])];\n            var noteobj = objects[val[2]];\n            if(!cc) break;\n            if(!cc.c) cc.c = [];\n            cmnt = {a:val[1],t:noteobj.TxO.t};\n            cc.c.push(cmnt);\n          } break;\n\n          default: switch(R.n) { /* nested */\n            case 'ClrtClient': break;\n            case 'XFExt': update_xfext(XFs[val.ixfe], val.ext); break;\n\n            case 'DefColWidth': defwidth = val; break;\n            case 'DefaultRowHeight': defheight = val[1]; break; // TODO: flags\n\n            case 'ColInfo': {\n              if(!opts.cellStyles) break;\n              while(val.e >= val.s) {\n                colinfo[val.e--] = { width: val.w/256 };\n                if(!seencol) { seencol = true; find_mdw_colw(val.w/256); }\n                process_col(colinfo[val.e+1]);\n              }\n            } break;\n            case 'Row': {\n              var rowobj = {};\n              if(val.level != null) { rowinfo[val.r] = rowobj; rowobj.level = val.level; }\n              if(val.hidden) { rowinfo[val.r] = rowobj; rowobj.hidden = true; }\n              if(val.hpt) {\n                rowinfo[val.r] = rowobj;\n                rowobj.hpt = val.hpt; rowobj.hpx = pt2px(val.hpt);\n              }\n            } break;\n\n            case 'LeftMargin':\n            case 'RightMargin':\n            case 'TopMargin':\n            case 'BottomMargin':\n              if(!out['!margins']) default_margins(out['!margins'] = {});\n              out['!margins'][Rn.slice(0,-6).toLowerCase()] = val;\n              break;\n\n            case 'Setup': // TODO\n              if(!out['!margins']) default_margins(out['!margins'] = {});\n              out['!margins'].header = val.header;\n              out['!margins'].footer = val.footer;\n              break;\n\n            case 'Window2': // TODO\n              // $FlowIgnore\n              if(val.RTL) Workbook.Views[0].RTL = true;\n              break;\n\n            case 'Header': break; // TODO\n            case 'Footer': break; // TODO\n            case 'HCenter': break; // TODO\n            case 'VCenter': break; // TODO\n            case 'Pls': break; // TODO\n            case 'GCW': break;\n            case 'LHRecord': break;\n            case 'DBCell': break; // TODO\n            case 'EntExU2': break; // TODO\n            case 'SxView': break; // TODO\n            case 'Sxvd': break; // TODO\n            case 'SXVI': break; // TODO\n            case 'SXVDEx': break; // TODO\n            case 'SxIvd': break; // TODO\n            case 'SXString': break; // TODO\n            case 'Sync': break;\n            case 'Addin': break;\n            case 'SXDI': break; // TODO\n            case 'SXLI': break; // TODO\n            case 'SXEx': break; // TODO\n            case 'QsiSXTag': break; // TODO\n            case 'Selection': break;\n            case 'Feat': break;\n            case 'FeatHdr': case 'FeatHdr11': break;\n            case 'Feature11': case 'Feature12': case 'List12': break;\n            case 'Country': country = val; break;\n            case 'RecalcId': break;\n            case 'DxGCol': break; // TODO: htmlify\n            case 'Fbi': case 'Fbi2': case 'GelFrame': break;\n            case 'Font': break; // TODO\n            case 'XFCRC': break; // TODO\n            case 'Style': break; // TODO\n            case 'StyleExt': break; // TODO\n            case 'Palette': palette = val; break;\n            case 'Theme': themes = val; break;\n            /* Protection */\n            case 'ScenarioProtect': break;\n            case 'ObjProtect': break;\n\n            /* Conditional Formatting */\n            case 'CondFmt12': break;\n\n            /* Table */\n            case 'Table': break; // TODO\n            case 'TableStyles': break; // TODO\n            case 'TableStyle': break; // TODO\n            case 'TableStyleElement': break; // TODO\n\n            /* PivotTable */\n            case 'SXStreamID': break; // TODO\n            case 'SXVS': break; // TODO\n            case 'DConRef': break; // TODO\n            case 'SXAddl': break; // TODO\n            case 'DConBin': break; // TODO\n            case 'DConName': break; // TODO\n            case 'SXPI': break; // TODO\n            case 'SxFormat': break; // TODO\n            case 'SxSelect': break; // TODO\n            case 'SxRule': break; // TODO\n            case 'SxFilt': break; // TODO\n            case 'SxItm': break; // TODO\n            case 'SxDXF': break; // TODO\n\n            /* Scenario Manager */\n            case 'ScenMan': break;\n\n            /* Data Consolidation */\n            case 'DCon': break;\n\n            /* Watched Cell */\n            case 'CellWatch': break;\n\n            /* Print Settings */\n            case 'PrintRowCol': break;\n            case 'PrintGrid': break;\n            case 'PrintSize': break;\n\n            case 'XCT': break;\n            case 'CRN': break;\n\n            case 'Scl': {\n              //console.log(\"Zoom Level:\", val[0]/val[1],val);\n            } break;\n            case 'SheetExt': {\n              /* empty */\n            } break;\n            case 'SheetExtOptional': {\n              /* empty */\n            } break;\n\n            /* VBA */\n            case 'ObNoMacros': {\n              /* empty */\n            } break;\n            case 'ObProj': {\n              /* empty */\n            } break;\n            case 'CodeName': {\n              if(!cur_sheet) Workbook.WBProps.CodeName = val || \"ThisWorkbook\";\n              else wsprops.CodeName = val || wsprops.name;\n            } break;\n            case 'GUIDTypeLib': {\n              /* empty */\n            } break;\n\n            case 'WOpt': break; // TODO: WTF?\n            case 'PhoneticInfo': break;\n\n            case 'OleObjectSize': break;\n\n            /* Differential Formatting */\n            case 'DXF': case 'DXFN': case 'DXFN12': case 'DXFN12List': case 'DXFN12NoCB': break;\n\n            /* Data Validation */\n            case 'Dv': case 'DVal': break;\n\n            /* Data Series */\n            case 'BRAI': case 'Series': case 'SeriesText': break;\n\n            /* Data Connection */\n            case 'DConn': break;\n            case 'DbOrParamQry': break;\n            case 'DBQueryExt': break;\n\n            case 'OleDbConn': break;\n            case 'ExtString': break;\n\n            /* Formatting */\n            case 'IFmtRecord': break;\n            case 'CondFmt': case 'CF': case 'CF12': case 'CFEx': break;\n\n            /* Explicitly Ignored */\n            case 'Excel9File': break;\n            case 'Units': break;\n            case 'InterfaceHdr': case 'Mms': case 'InterfaceEnd': case 'DSF': break;\n            case 'BuiltInFnGroupCount': /* 2.4.30 0x0E or 0x10 but excel 2011 generates 0x11? */ break;\n            /* View Stuff */\n            case 'Window1': case 'HideObj': case 'GridSet': case 'Guts':\n            case 'UserBView': case 'UserSViewBegin': case 'UserSViewEnd':\n            case 'Pane': break;\n            default: switch(R.n) { /* nested */\n              /* Chart */\n              case 'Dat':\n              case 'Begin': case 'End':\n              case 'StartBlock': case 'EndBlock':\n              case 'Frame': case 'Area':\n              case 'Axis': case 'AxisLine': case 'Tick': break;\n              case 'AxesUsed':\n              case 'CrtLayout12': case 'CrtLayout12A': case 'CrtLink': case 'CrtLine': case 'CrtMlFrt': case 'CrtMlFrtContinue': break;\n              case 'LineFormat': case 'AreaFormat':\n              case 'Chart': case 'Chart3d': case 'Chart3DBarShape': case 'ChartFormat': case 'ChartFrtInfo': break;\n              case 'PlotArea': case 'PlotGrowth': break;\n              case 'SeriesList': case 'SerParent': case 'SerAuxTrend': break;\n              case 'DataFormat': case 'SerToCrt': case 'FontX': break;\n              case 'CatSerRange': case 'AxcExt': case 'SerFmt': break;\n              case 'ShtProps': break;\n              case 'DefaultText': case 'Text': case 'CatLab': break;\n              case 'DataLabExtContents': break;\n              case 'Legend': case 'LegendException': break;\n              case 'Pie': case 'Scatter': break;\n              case 'PieFormat': case 'MarkerFormat': break;\n              case 'StartObject': case 'EndObject': break;\n              case 'AlRuns': case 'ObjectLink': break;\n              case 'SIIndex': break;\n              case 'AttachedLabel': case 'YMult': break;\n\n              /* Chart Group */\n              case 'Line': case 'Bar': break;\n              case 'Surf': break;\n\n              /* Axis Group */\n              case 'AxisParent': break;\n              case 'Pos': break;\n              case 'ValueRange': break;\n\n              /* Pivot Chart */\n              case 'SXViewEx9': break; // TODO\n              case 'SXViewLink': break;\n              case 'PivotChartBits': break;\n              case 'SBaseRef': break;\n              case 'TextPropsStream': break;\n\n              /* Chart Misc */\n              case 'LnExt': break;\n              case 'MkrExt': break;\n              case 'CrtCoopt': break;\n\n              /* Query Table */\n              case 'Qsi': case 'Qsif': case 'Qsir': case 'QsiSXTag': break;\n              case 'TxtQry': break;\n\n              /* Filter */\n              case 'FilterMode': break;\n              case 'AutoFilter': case 'AutoFilterInfo': break;\n              case 'AutoFilter12': break;\n              case 'DropDownObjIds': break;\n              case 'Sort': break;\n              case 'SortData': break;\n\n              /* Drawing */\n              case 'ShapePropsStream': break;\n              case 'MsoDrawing': case 'MsoDrawingGroup': case 'MsoDrawingSelection': break;\n              /* Pub Stuff */\n              case 'WebPub': case 'AutoWebPub': break;\n\n              /* Print Stuff */\n              case 'HeaderFooter': case 'HFPicture': case 'PLV':\n              case 'HorizontalPageBreaks': case 'VerticalPageBreaks': break;\n              /* Behavioral */\n              case 'Backup': case 'CompressPictures': case 'Compat12': break;\n\n              /* Should not Happen */\n              case 'Continue': case 'ContinueFrt12': break;\n\n              /* Future Records */\n              case 'FrtFontList': case 'FrtWrapper': break;\n\n              default: switch(R.n) { /* nested */\n                /* BIFF5 records */\n                case 'TabIdConf': case 'Radar': case 'RadarArea': case 'DropBar': case 'Intl': case 'CoordList': case 'SerAuxErrBar': break;\n\n                /* BIFF2-4 records */\n                case 'BIFF2FONTCLR': case 'BIFF2FMTCNT': case 'BIFF2FONTXTRA': break;\n                case 'BIFF2XF': case 'BIFF3XF': case 'BIFF4XF': break;\n                case 'BIFF4FMTCNT': case 'BIFF2ROW': case 'BIFF2WINDOW2': break;\n\n                /* Miscellaneous */\n                case 'SCENARIO': case 'DConBin': case 'PicF': case 'DataLabExt':\n                case 'Lel': case 'BopPop': case 'BopPopCustom': case 'RealTimeData':\n                case 'Name': break;\n                case 'LHNGraph': case 'FnGroupName': case 'AddMenu': case 'LPr': break;\n                case 'ListObj': case 'ListField': break;\n                case 'RRSort': break;\n                case 'BigName': break;\n                case 'ToolbarHdr': case 'ToolbarEnd': break;\n                case 'DDEObjName': break;\n                case 'FRTArchId$': break;\n                default: if(options.WTF) throw 'Unrecognized Record ' + R.n;\n              }}}}\n      } else blob.l += length;\n    }\n    wb.SheetNames=keys(Directory).sort(function(a,b) { return Number(a) - Number(b); }).map(function(x){return Directory[x].name;});\n    if(!options.bookSheets) wb.Sheets=Sheets;\n    if(wb.Sheets) FilterDatabases.forEach(function(r,i) { wb.Sheets[wb.SheetNames[i]]['!autofilter'] = r; });\n    wb.Preamble=Preamble;\n    wb.Strings = sst;\n    wb.SSF = SSF.get_table();\n    if(opts.enc) wb.Encryption = opts.enc;\n    if(themes) wb.Themes = themes;\n    wb.Metadata = {};\n    if(country !== undefined) wb.Metadata.Country = country;\n    if(supbooks.names.length > 0) Workbook.Names = supbooks.names;\n    wb.Workbook = Workbook;\n    return wb;\n  }\n\n  /* TODO: split props*/\n  var PSCLSID = {\n    SI: \"e0859ff2f94f6810ab9108002b27b3d9\",\n    DSI: \"02d5cdd59c2e1b10939708002b2cf9ae\",\n    UDI: \"05d5cdd59c2e1b10939708002b2cf9ae\"\n  };\n  function parse_xls_props(cfb, props, o) {\n    /* [MS-OSHARED] 2.3.3.2.2 Document Summary Information Property Set */\n    var DSI = CFB.find(cfb, '!DocumentSummaryInformation');\n    if(DSI && DSI.size > 0) try {\n      var DocSummary = parse_PropertySetStream(DSI, DocSummaryPIDDSI, PSCLSID.DSI);\n      for(var d in DocSummary) props[d] = DocSummary[d];\n    } catch(e) {if(o.WTF) throw e;/* empty */}\n\n    /* [MS-OSHARED] 2.3.3.2.1 Summary Information Property Set*/\n    var SI = CFB.find(cfb, '!SummaryInformation');\n    if(SI && SI.size > 0) try {\n      var Summary = parse_PropertySetStream(SI, SummaryPIDSI, PSCLSID.SI);\n      for(var s in Summary) if(props[s] == null) props[s] = Summary[s];\n    } catch(e) {if(o.WTF) throw e;/* empty */}\n\n    if(props.HeadingPairs && props.TitlesOfParts) {\n      load_props_pairs(props.HeadingPairs, props.TitlesOfParts, props, o);\n      delete props.HeadingPairs; delete props.TitlesOfParts;\n    }\n  }\n  function write_xls_props(wb, cfb) {\n    var DSEntries = [], SEntries = [], CEntries = [];\n    var i = 0, Keys;\n    if(wb.Props) {\n      Keys = keys(wb.Props);\n      // $FlowIgnore\n      for(i = 0; i < Keys.length; ++i) (DocSummaryRE.hasOwnProperty(Keys[i]) ? DSEntries : SummaryRE.hasOwnProperty(Keys[i]) ? SEntries : CEntries).push([Keys[i], wb.Props[Keys[i]]]);\n    }\n    if(wb.Custprops) {\n      Keys = keys(wb.Custprops);\n      // $FlowIgnore\n      for(i = 0; i < Keys.length; ++i) if(!(wb.Props||{}).hasOwnProperty(Keys[i])) (DocSummaryRE.hasOwnProperty(Keys[i]) ? DSEntries : SummaryRE.hasOwnProperty(Keys[i]) ? SEntries : CEntries).push([Keys[i], wb.Custprops[Keys[i]]]);\n    }\n    var CEntries2 = [];\n    for(i = 0; i < CEntries.length; ++i) {\n      if(XLSPSSkip.indexOf(CEntries[i][0]) > -1) continue;\n      if(CEntries[i][1] == null) continue;\n      CEntries2.push(CEntries[i]);\n    }\n    if(SEntries.length) CFB.utils.cfb_add(cfb, \"/\\u0005SummaryInformation\", write_PropertySetStream(SEntries, PSCLSID.SI, SummaryRE, SummaryPIDSI));\n    if(DSEntries.length || CEntries2.length) CFB.utils.cfb_add(cfb, \"/\\u0005DocumentSummaryInformation\", write_PropertySetStream(DSEntries, PSCLSID.DSI, DocSummaryRE, DocSummaryPIDDSI, CEntries2.length ? CEntries2 : null, PSCLSID.UDI));\n  }\n\n  function parse_xlscfb(cfb, options) {\n    if(!options) options = {};\n    fix_read_opts(options);\n    reset_cp();\n    if(options.codepage) set_ansi(options.codepage);\n    var CompObj, WB;\n    if(cfb.FullPaths) {\n      if(CFB.find(cfb, '/encryption')) throw new Error(\"File is password-protected\");\n      CompObj = CFB.find(cfb, '!CompObj');\n      WB = CFB.find(cfb, '/Workbook') || CFB.find(cfb, '/Book');\n    } else {\n      switch(options.type) {\n        case 'base64': cfb = s2a(Base64.decode(cfb)); break;\n        case 'binary': cfb = s2a(cfb); break;\n        case 'buffer': break;\n        case 'array': if(!Array.isArray(cfb)) cfb = Array.prototype.slice.call(cfb); break;\n      }\n      prep_blob(cfb, 0);\n      WB = ({content: cfb});\n    }\n    var WorkbookP;\n\n    var _data;\n    if(CompObj) parse_compobj(CompObj);\n    if(options.bookProps && !options.bookSheets) WorkbookP = ({});\n    else {\n      var T = has_buf ? 'buffer' : 'array';\n      if(WB && WB.content) WorkbookP = parse_workbook(WB.content, options);\n      /* Quattro Pro 7-8 */\n      else if((_data=CFB.find(cfb, 'PerfectOffice_MAIN')) && _data.content) WorkbookP = WK_.to_workbook(_data.content, (options.type = T, options));\n      /* Quattro Pro 9 */\n      else if((_data=CFB.find(cfb, 'NativeContent_MAIN')) && _data.content) WorkbookP = WK_.to_workbook(_data.content, (options.type = T, options));\n      else throw new Error(\"Cannot find Workbook stream\");\n      if(options.bookVBA && cfb.FullPaths && CFB.find(cfb, '/_VBA_PROJECT_CUR/VBA/dir')) WorkbookP.vbaraw = make_vba_xls(cfb);\n    }\n\n    var props = {};\n    if(cfb.FullPaths) parse_xls_props(cfb, props, options);\n\n    WorkbookP.Props = WorkbookP.Custprops = props; /* TODO: split up properties */\n    if(options.bookFiles) WorkbookP.cfb = cfb;\n    /*WorkbookP.CompObjP = CompObjP; // TODO: storage? */\n    return WorkbookP;\n  }\n\n\n  function write_xlscfb(wb, opts) {\n    var o = opts || {};\n    var cfb = CFB.utils.cfb_new({root:\"R\"});\n    var wbpath = \"/Workbook\";\n    switch(o.bookType || \"xls\") {\n      case \"xls\": o.bookType = \"biff8\";\n      /* falls through */\n      case \"xla\": if(!o.bookType) o.bookType = \"xla\";\n      /* falls through */\n      case \"biff8\": wbpath = \"/Workbook\"; o.biff = 8; break;\n      case \"biff5\": wbpath = \"/Book\"; o.biff = 5; break;\n      default: throw new Error(\"invalid type \" + o.bookType + \" for XLS CFB\");\n    }\n    CFB.utils.cfb_add(cfb, wbpath, write_biff_buf(wb, o));\n    if(o.biff == 8 && (wb.Props || wb.Custprops)) write_xls_props(wb, cfb);\n    // TODO: SI, DSI, CO\n    if(o.biff == 8 && wb.vbaraw) fill_vba_xls(cfb, CFB.read(wb.vbaraw, {type: typeof wb.vbaraw == \"string\" ? \"binary\" : \"buffer\"}));\n    return cfb;\n  }\n  /* [MS-XLSB] 2.3 Record Enumeration */\n  var XLSBRecordEnum = {\n    0x0000: { n:\"BrtRowHdr\", f:parse_BrtRowHdr },\n    0x0001: { n:\"BrtCellBlank\", f:parse_BrtCellBlank },\n    0x0002: { n:\"BrtCellRk\", f:parse_BrtCellRk },\n    0x0003: { n:\"BrtCellError\", f:parse_BrtCellError },\n    0x0004: { n:\"BrtCellBool\", f:parse_BrtCellBool },\n    0x0005: { n:\"BrtCellReal\", f:parse_BrtCellReal },\n    0x0006: { n:\"BrtCellSt\", f:parse_BrtCellSt },\n    0x0007: { n:\"BrtCellIsst\", f:parse_BrtCellIsst },\n    0x0008: { n:\"BrtFmlaString\", f:parse_BrtFmlaString },\n    0x0009: { n:\"BrtFmlaNum\", f:parse_BrtFmlaNum },\n    0x000A: { n:\"BrtFmlaBool\", f:parse_BrtFmlaBool },\n    0x000B: { n:\"BrtFmlaError\", f:parse_BrtFmlaError },\n    0x0010: { n:\"BrtFRTArchID$\", f:parse_BrtFRTArchID$ },\n    0x0013: { n:\"BrtSSTItem\", f:parse_RichStr },\n    0x0014: { n:\"BrtPCDIMissing\" },\n    0x0015: { n:\"BrtPCDINumber\" },\n    0x0016: { n:\"BrtPCDIBoolean\" },\n    0x0017: { n:\"BrtPCDIError\" },\n    0x0018: { n:\"BrtPCDIString\" },\n    0x0019: { n:\"BrtPCDIDatetime\" },\n    0x001A: { n:\"BrtPCDIIndex\" },\n    0x001B: { n:\"BrtPCDIAMissing\" },\n    0x001C: { n:\"BrtPCDIANumber\" },\n    0x001D: { n:\"BrtPCDIABoolean\" },\n    0x001E: { n:\"BrtPCDIAError\" },\n    0x001F: { n:\"BrtPCDIAString\" },\n    0x0020: { n:\"BrtPCDIADatetime\" },\n    0x0021: { n:\"BrtPCRRecord\" },\n    0x0022: { n:\"BrtPCRRecordDt\" },\n    0x0023: { n:\"BrtFRTBegin\" },\n    0x0024: { n:\"BrtFRTEnd\" },\n    0x0025: { n:\"BrtACBegin\" },\n    0x0026: { n:\"BrtACEnd\" },\n    0x0027: { n:\"BrtName\", f:parse_BrtName },\n    0x0028: { n:\"BrtIndexRowBlock\" },\n    0x002A: { n:\"BrtIndexBlock\" },\n    0x002B: { n:\"BrtFont\", f:parse_BrtFont },\n    0x002C: { n:\"BrtFmt\", f:parse_BrtFmt },\n    0x002D: { n:\"BrtFill\", f:parse_BrtFill },\n    0x002E: { n:\"BrtBorder\", f:parse_BrtBorder },\n    0x002F: { n:\"BrtXF\", f:parse_BrtXF },\n    0x0030: { n:\"BrtStyle\" },\n    0x0031: { n:\"BrtCellMeta\" },\n    0x0032: { n:\"BrtValueMeta\" },\n    0x0033: { n:\"BrtMdb\" },\n    0x0034: { n:\"BrtBeginFmd\" },\n    0x0035: { n:\"BrtEndFmd\" },\n    0x0036: { n:\"BrtBeginMdx\" },\n    0x0037: { n:\"BrtEndMdx\" },\n    0x0038: { n:\"BrtBeginMdxTuple\" },\n    0x0039: { n:\"BrtEndMdxTuple\" },\n    0x003A: { n:\"BrtMdxMbrIstr\" },\n    0x003B: { n:\"BrtStr\" },\n    0x003C: { n:\"BrtColInfo\", f:parse_ColInfo },\n    0x003E: { n:\"BrtCellRString\" },\n    0x003F: { n:\"BrtCalcChainItem$\", f:parse_BrtCalcChainItem$ },\n    0x0040: { n:\"BrtDVal\" },\n    0x0041: { n:\"BrtSxvcellNum\" },\n    0x0042: { n:\"BrtSxvcellStr\" },\n    0x0043: { n:\"BrtSxvcellBool\" },\n    0x0044: { n:\"BrtSxvcellErr\" },\n    0x0045: { n:\"BrtSxvcellDate\" },\n    0x0046: { n:\"BrtSxvcellNil\" },\n    0x0080: { n:\"BrtFileVersion\" },\n    0x0081: { n:\"BrtBeginSheet\" },\n    0x0082: { n:\"BrtEndSheet\" },\n    0x0083: { n:\"BrtBeginBook\", f:parsenoop, p:0 },\n    0x0084: { n:\"BrtEndBook\" },\n    0x0085: { n:\"BrtBeginWsViews\" },\n    0x0086: { n:\"BrtEndWsViews\" },\n    0x0087: { n:\"BrtBeginBookViews\" },\n    0x0088: { n:\"BrtEndBookViews\" },\n    0x0089: { n:\"BrtBeginWsView\", f:parse_BrtBeginWsView },\n    0x008A: { n:\"BrtEndWsView\" },\n    0x008B: { n:\"BrtBeginCsViews\" },\n    0x008C: { n:\"BrtEndCsViews\" },\n    0x008D: { n:\"BrtBeginCsView\" },\n    0x008E: { n:\"BrtEndCsView\" },\n    0x008F: { n:\"BrtBeginBundleShs\" },\n    0x0090: { n:\"BrtEndBundleShs\" },\n    0x0091: { n:\"BrtBeginSheetData\" },\n    0x0092: { n:\"BrtEndSheetData\" },\n    0x0093: { n:\"BrtWsProp\", f:parse_BrtWsProp },\n    0x0094: { n:\"BrtWsDim\", f:parse_BrtWsDim, p:16 },\n    0x0097: { n:\"BrtPane\" },\n    0x0098: { n:\"BrtSel\" },\n    0x0099: { n:\"BrtWbProp\", f:parse_BrtWbProp },\n    0x009A: { n:\"BrtWbFactoid\" },\n    0x009B: { n:\"BrtFileRecover\" },\n    0x009C: { n:\"BrtBundleSh\", f:parse_BrtBundleSh },\n    0x009D: { n:\"BrtCalcProp\" },\n    0x009E: { n:\"BrtBookView\" },\n    0x009F: { n:\"BrtBeginSst\", f:parse_BrtBeginSst },\n    0x00A0: { n:\"BrtEndSst\" },\n    0x00A1: { n:\"BrtBeginAFilter\", f:parse_UncheckedRfX },\n    0x00A2: { n:\"BrtEndAFilter\" },\n    0x00A3: { n:\"BrtBeginFilterColumn\" },\n    0x00A4: { n:\"BrtEndFilterColumn\" },\n    0x00A5: { n:\"BrtBeginFilters\" },\n    0x00A6: { n:\"BrtEndFilters\" },\n    0x00A7: { n:\"BrtFilter\" },\n    0x00A8: { n:\"BrtColorFilter\" },\n    0x00A9: { n:\"BrtIconFilter\" },\n    0x00AA: { n:\"BrtTop10Filter\" },\n    0x00AB: { n:\"BrtDynamicFilter\" },\n    0x00AC: { n:\"BrtBeginCustomFilters\" },\n    0x00AD: { n:\"BrtEndCustomFilters\" },\n    0x00AE: { n:\"BrtCustomFilter\" },\n    0x00AF: { n:\"BrtAFilterDateGroupItem\" },\n    0x00B0: { n:\"BrtMergeCell\", f:parse_BrtMergeCell },\n    0x00B1: { n:\"BrtBeginMergeCells\" },\n    0x00B2: { n:\"BrtEndMergeCells\" },\n    0x00B3: { n:\"BrtBeginPivotCacheDef\" },\n    0x00B4: { n:\"BrtEndPivotCacheDef\" },\n    0x00B5: { n:\"BrtBeginPCDFields\" },\n    0x00B6: { n:\"BrtEndPCDFields\" },\n    0x00B7: { n:\"BrtBeginPCDField\" },\n    0x00B8: { n:\"BrtEndPCDField\" },\n    0x00B9: { n:\"BrtBeginPCDSource\" },\n    0x00BA: { n:\"BrtEndPCDSource\" },\n    0x00BB: { n:\"BrtBeginPCDSRange\" },\n    0x00BC: { n:\"BrtEndPCDSRange\" },\n    0x00BD: { n:\"BrtBeginPCDFAtbl\" },\n    0x00BE: { n:\"BrtEndPCDFAtbl\" },\n    0x00BF: { n:\"BrtBeginPCDIRun\" },\n    0x00C0: { n:\"BrtEndPCDIRun\" },\n    0x00C1: { n:\"BrtBeginPivotCacheRecords\" },\n    0x00C2: { n:\"BrtEndPivotCacheRecords\" },\n    0x00C3: { n:\"BrtBeginPCDHierarchies\" },\n    0x00C4: { n:\"BrtEndPCDHierarchies\" },\n    0x00C5: { n:\"BrtBeginPCDHierarchy\" },\n    0x00C6: { n:\"BrtEndPCDHierarchy\" },\n    0x00C7: { n:\"BrtBeginPCDHFieldsUsage\" },\n    0x00C8: { n:\"BrtEndPCDHFieldsUsage\" },\n    0x00C9: { n:\"BrtBeginExtConnection\" },\n    0x00CA: { n:\"BrtEndExtConnection\" },\n    0x00CB: { n:\"BrtBeginECDbProps\" },\n    0x00CC: { n:\"BrtEndECDbProps\" },\n    0x00CD: { n:\"BrtBeginECOlapProps\" },\n    0x00CE: { n:\"BrtEndECOlapProps\" },\n    0x00CF: { n:\"BrtBeginPCDSConsol\" },\n    0x00D0: { n:\"BrtEndPCDSConsol\" },\n    0x00D1: { n:\"BrtBeginPCDSCPages\" },\n    0x00D2: { n:\"BrtEndPCDSCPages\" },\n    0x00D3: { n:\"BrtBeginPCDSCPage\" },\n    0x00D4: { n:\"BrtEndPCDSCPage\" },\n    0x00D5: { n:\"BrtBeginPCDSCPItem\" },\n    0x00D6: { n:\"BrtEndPCDSCPItem\" },\n    0x00D7: { n:\"BrtBeginPCDSCSets\" },\n    0x00D8: { n:\"BrtEndPCDSCSets\" },\n    0x00D9: { n:\"BrtBeginPCDSCSet\" },\n    0x00DA: { n:\"BrtEndPCDSCSet\" },\n    0x00DB: { n:\"BrtBeginPCDFGroup\" },\n    0x00DC: { n:\"BrtEndPCDFGroup\" },\n    0x00DD: { n:\"BrtBeginPCDFGItems\" },\n    0x00DE: { n:\"BrtEndPCDFGItems\" },\n    0x00DF: { n:\"BrtBeginPCDFGRange\" },\n    0x00E0: { n:\"BrtEndPCDFGRange\" },\n    0x00E1: { n:\"BrtBeginPCDFGDiscrete\" },\n    0x00E2: { n:\"BrtEndPCDFGDiscrete\" },\n    0x00E3: { n:\"BrtBeginPCDSDTupleCache\" },\n    0x00E4: { n:\"BrtEndPCDSDTupleCache\" },\n    0x00E5: { n:\"BrtBeginPCDSDTCEntries\" },\n    0x00E6: { n:\"BrtEndPCDSDTCEntries\" },\n    0x00E7: { n:\"BrtBeginPCDSDTCEMembers\" },\n    0x00E8: { n:\"BrtEndPCDSDTCEMembers\" },\n    0x00E9: { n:\"BrtBeginPCDSDTCEMember\" },\n    0x00EA: { n:\"BrtEndPCDSDTCEMember\" },\n    0x00EB: { n:\"BrtBeginPCDSDTCQueries\" },\n    0x00EC: { n:\"BrtEndPCDSDTCQueries\" },\n    0x00ED: { n:\"BrtBeginPCDSDTCQuery\" },\n    0x00EE: { n:\"BrtEndPCDSDTCQuery\" },\n    0x00EF: { n:\"BrtBeginPCDSDTCSets\" },\n    0x00F0: { n:\"BrtEndPCDSDTCSets\" },\n    0x00F1: { n:\"BrtBeginPCDSDTCSet\" },\n    0x00F2: { n:\"BrtEndPCDSDTCSet\" },\n    0x00F3: { n:\"BrtBeginPCDCalcItems\" },\n    0x00F4: { n:\"BrtEndPCDCalcItems\" },\n    0x00F5: { n:\"BrtBeginPCDCalcItem\" },\n    0x00F6: { n:\"BrtEndPCDCalcItem\" },\n    0x00F7: { n:\"BrtBeginPRule\" },\n    0x00F8: { n:\"BrtEndPRule\" },\n    0x00F9: { n:\"BrtBeginPRFilters\" },\n    0x00FA: { n:\"BrtEndPRFilters\" },\n    0x00FB: { n:\"BrtBeginPRFilter\" },\n    0x00FC: { n:\"BrtEndPRFilter\" },\n    0x00FD: { n:\"BrtBeginPNames\" },\n    0x00FE: { n:\"BrtEndPNames\" },\n    0x00FF: { n:\"BrtBeginPName\" },\n    0x0100: { n:\"BrtEndPName\" },\n    0x0101: { n:\"BrtBeginPNPairs\" },\n    0x0102: { n:\"BrtEndPNPairs\" },\n    0x0103: { n:\"BrtBeginPNPair\" },\n    0x0104: { n:\"BrtEndPNPair\" },\n    0x0105: { n:\"BrtBeginECWebProps\" },\n    0x0106: { n:\"BrtEndECWebProps\" },\n    0x0107: { n:\"BrtBeginEcWpTables\" },\n    0x0108: { n:\"BrtEndECWPTables\" },\n    0x0109: { n:\"BrtBeginECParams\" },\n    0x010A: { n:\"BrtEndECParams\" },\n    0x010B: { n:\"BrtBeginECParam\" },\n    0x010C: { n:\"BrtEndECParam\" },\n    0x010D: { n:\"BrtBeginPCDKPIs\" },\n    0x010E: { n:\"BrtEndPCDKPIs\" },\n    0x010F: { n:\"BrtBeginPCDKPI\" },\n    0x0110: { n:\"BrtEndPCDKPI\" },\n    0x0111: { n:\"BrtBeginDims\" },\n    0x0112: { n:\"BrtEndDims\" },\n    0x0113: { n:\"BrtBeginDim\" },\n    0x0114: { n:\"BrtEndDim\" },\n    0x0115: { n:\"BrtIndexPartEnd\" },\n    0x0116: { n:\"BrtBeginStyleSheet\" },\n    0x0117: { n:\"BrtEndStyleSheet\" },\n    0x0118: { n:\"BrtBeginSXView\" },\n    0x0119: { n:\"BrtEndSXVI\" },\n    0x011A: { n:\"BrtBeginSXVI\" },\n    0x011B: { n:\"BrtBeginSXVIs\" },\n    0x011C: { n:\"BrtEndSXVIs\" },\n    0x011D: { n:\"BrtBeginSXVD\" },\n    0x011E: { n:\"BrtEndSXVD\" },\n    0x011F: { n:\"BrtBeginSXVDs\" },\n    0x0120: { n:\"BrtEndSXVDs\" },\n    0x0121: { n:\"BrtBeginSXPI\" },\n    0x0122: { n:\"BrtEndSXPI\" },\n    0x0123: { n:\"BrtBeginSXPIs\" },\n    0x0124: { n:\"BrtEndSXPIs\" },\n    0x0125: { n:\"BrtBeginSXDI\" },\n    0x0126: { n:\"BrtEndSXDI\" },\n    0x0127: { n:\"BrtBeginSXDIs\" },\n    0x0128: { n:\"BrtEndSXDIs\" },\n    0x0129: { n:\"BrtBeginSXLI\" },\n    0x012A: { n:\"BrtEndSXLI\" },\n    0x012B: { n:\"BrtBeginSXLIRws\" },\n    0x012C: { n:\"BrtEndSXLIRws\" },\n    0x012D: { n:\"BrtBeginSXLICols\" },\n    0x012E: { n:\"BrtEndSXLICols\" },\n    0x012F: { n:\"BrtBeginSXFormat\" },\n    0x0130: { n:\"BrtEndSXFormat\" },\n    0x0131: { n:\"BrtBeginSXFormats\" },\n    0x0132: { n:\"BrtEndSxFormats\" },\n    0x0133: { n:\"BrtBeginSxSelect\" },\n    0x0134: { n:\"BrtEndSxSelect\" },\n    0x0135: { n:\"BrtBeginISXVDRws\" },\n    0x0136: { n:\"BrtEndISXVDRws\" },\n    0x0137: { n:\"BrtBeginISXVDCols\" },\n    0x0138: { n:\"BrtEndISXVDCols\" },\n    0x0139: { n:\"BrtEndSXLocation\" },\n    0x013A: { n:\"BrtBeginSXLocation\" },\n    0x013B: { n:\"BrtEndSXView\" },\n    0x013C: { n:\"BrtBeginSXTHs\" },\n    0x013D: { n:\"BrtEndSXTHs\" },\n    0x013E: { n:\"BrtBeginSXTH\" },\n    0x013F: { n:\"BrtEndSXTH\" },\n    0x0140: { n:\"BrtBeginISXTHRws\" },\n    0x0141: { n:\"BrtEndISXTHRws\" },\n    0x0142: { n:\"BrtBeginISXTHCols\" },\n    0x0143: { n:\"BrtEndISXTHCols\" },\n    0x0144: { n:\"BrtBeginSXTDMPS\" },\n    0x0145: { n:\"BrtEndSXTDMPs\" },\n    0x0146: { n:\"BrtBeginSXTDMP\" },\n    0x0147: { n:\"BrtEndSXTDMP\" },\n    0x0148: { n:\"BrtBeginSXTHItems\" },\n    0x0149: { n:\"BrtEndSXTHItems\" },\n    0x014A: { n:\"BrtBeginSXTHItem\" },\n    0x014B: { n:\"BrtEndSXTHItem\" },\n    0x014C: { n:\"BrtBeginMetadata\" },\n    0x014D: { n:\"BrtEndMetadata\" },\n    0x014E: { n:\"BrtBeginEsmdtinfo\" },\n    0x014F: { n:\"BrtMdtinfo\" },\n    0x0150: { n:\"BrtEndEsmdtinfo\" },\n    0x0151: { n:\"BrtBeginEsmdb\" },\n    0x0152: { n:\"BrtEndEsmdb\" },\n    0x0153: { n:\"BrtBeginEsfmd\" },\n    0x0154: { n:\"BrtEndEsfmd\" },\n    0x0155: { n:\"BrtBeginSingleCells\" },\n    0x0156: { n:\"BrtEndSingleCells\" },\n    0x0157: { n:\"BrtBeginList\" },\n    0x0158: { n:\"BrtEndList\" },\n    0x0159: { n:\"BrtBeginListCols\" },\n    0x015A: { n:\"BrtEndListCols\" },\n    0x015B: { n:\"BrtBeginListCol\" },\n    0x015C: { n:\"BrtEndListCol\" },\n    0x015D: { n:\"BrtBeginListXmlCPr\" },\n    0x015E: { n:\"BrtEndListXmlCPr\" },\n    0x015F: { n:\"BrtListCCFmla\" },\n    0x0160: { n:\"BrtListTrFmla\" },\n    0x0161: { n:\"BrtBeginExternals\" },\n    0x0162: { n:\"BrtEndExternals\" },\n    0x0163: { n:\"BrtSupBookSrc\", f:parse_RelID},\n    0x0165: { n:\"BrtSupSelf\" },\n    0x0166: { n:\"BrtSupSame\" },\n    0x0167: { n:\"BrtSupTabs\" },\n    0x0168: { n:\"BrtBeginSupBook\" },\n    0x0169: { n:\"BrtPlaceholderName\" },\n    0x016A: { n:\"BrtExternSheet\", f:parse_ExternSheet },\n    0x016B: { n:\"BrtExternTableStart\" },\n    0x016C: { n:\"BrtExternTableEnd\" },\n    0x016E: { n:\"BrtExternRowHdr\" },\n    0x016F: { n:\"BrtExternCellBlank\" },\n    0x0170: { n:\"BrtExternCellReal\" },\n    0x0171: { n:\"BrtExternCellBool\" },\n    0x0172: { n:\"BrtExternCellError\" },\n    0x0173: { n:\"BrtExternCellString\" },\n    0x0174: { n:\"BrtBeginEsmdx\" },\n    0x0175: { n:\"BrtEndEsmdx\" },\n    0x0176: { n:\"BrtBeginMdxSet\" },\n    0x0177: { n:\"BrtEndMdxSet\" },\n    0x0178: { n:\"BrtBeginMdxMbrProp\" },\n    0x0179: { n:\"BrtEndMdxMbrProp\" },\n    0x017A: { n:\"BrtBeginMdxKPI\" },\n    0x017B: { n:\"BrtEndMdxKPI\" },\n    0x017C: { n:\"BrtBeginEsstr\" },\n    0x017D: { n:\"BrtEndEsstr\" },\n    0x017E: { n:\"BrtBeginPRFItem\" },\n    0x017F: { n:\"BrtEndPRFItem\" },\n    0x0180: { n:\"BrtBeginPivotCacheIDs\" },\n    0x0181: { n:\"BrtEndPivotCacheIDs\" },\n    0x0182: { n:\"BrtBeginPivotCacheID\" },\n    0x0183: { n:\"BrtEndPivotCacheID\" },\n    0x0184: { n:\"BrtBeginISXVIs\" },\n    0x0185: { n:\"BrtEndISXVIs\" },\n    0x0186: { n:\"BrtBeginColInfos\" },\n    0x0187: { n:\"BrtEndColInfos\" },\n    0x0188: { n:\"BrtBeginRwBrk\" },\n    0x0189: { n:\"BrtEndRwBrk\" },\n    0x018A: { n:\"BrtBeginColBrk\" },\n    0x018B: { n:\"BrtEndColBrk\" },\n    0x018C: { n:\"BrtBrk\" },\n    0x018D: { n:\"BrtUserBookView\" },\n    0x018E: { n:\"BrtInfo\" },\n    0x018F: { n:\"BrtCUsr\" },\n    0x0190: { n:\"BrtUsr\" },\n    0x0191: { n:\"BrtBeginUsers\" },\n    0x0193: { n:\"BrtEOF\" },\n    0x0194: { n:\"BrtUCR\" },\n    0x0195: { n:\"BrtRRInsDel\" },\n    0x0196: { n:\"BrtRREndInsDel\" },\n    0x0197: { n:\"BrtRRMove\" },\n    0x0198: { n:\"BrtRREndMove\" },\n    0x0199: { n:\"BrtRRChgCell\" },\n    0x019A: { n:\"BrtRREndChgCell\" },\n    0x019B: { n:\"BrtRRHeader\" },\n    0x019C: { n:\"BrtRRUserView\" },\n    0x019D: { n:\"BrtRRRenSheet\" },\n    0x019E: { n:\"BrtRRInsertSh\" },\n    0x019F: { n:\"BrtRRDefName\" },\n    0x01A0: { n:\"BrtRRNote\" },\n    0x01A1: { n:\"BrtRRConflict\" },\n    0x01A2: { n:\"BrtRRTQSIF\" },\n    0x01A3: { n:\"BrtRRFormat\" },\n    0x01A4: { n:\"BrtRREndFormat\" },\n    0x01A5: { n:\"BrtRRAutoFmt\" },\n    0x01A6: { n:\"BrtBeginUserShViews\" },\n    0x01A7: { n:\"BrtBeginUserShView\" },\n    0x01A8: { n:\"BrtEndUserShView\" },\n    0x01A9: { n:\"BrtEndUserShViews\" },\n    0x01AA: { n:\"BrtArrFmla\", f:parse_BrtArrFmla },\n    0x01AB: { n:\"BrtShrFmla\", f:parse_BrtShrFmla },\n    0x01AC: { n:\"BrtTable\" },\n    0x01AD: { n:\"BrtBeginExtConnections\" },\n    0x01AE: { n:\"BrtEndExtConnections\" },\n    0x01AF: { n:\"BrtBeginPCDCalcMems\" },\n    0x01B0: { n:\"BrtEndPCDCalcMems\" },\n    0x01B1: { n:\"BrtBeginPCDCalcMem\" },\n    0x01B2: { n:\"BrtEndPCDCalcMem\" },\n    0x01B3: { n:\"BrtBeginPCDHGLevels\" },\n    0x01B4: { n:\"BrtEndPCDHGLevels\" },\n    0x01B5: { n:\"BrtBeginPCDHGLevel\" },\n    0x01B6: { n:\"BrtEndPCDHGLevel\" },\n    0x01B7: { n:\"BrtBeginPCDHGLGroups\" },\n    0x01B8: { n:\"BrtEndPCDHGLGroups\" },\n    0x01B9: { n:\"BrtBeginPCDHGLGroup\" },\n    0x01BA: { n:\"BrtEndPCDHGLGroup\" },\n    0x01BB: { n:\"BrtBeginPCDHGLGMembers\" },\n    0x01BC: { n:\"BrtEndPCDHGLGMembers\" },\n    0x01BD: { n:\"BrtBeginPCDHGLGMember\" },\n    0x01BE: { n:\"BrtEndPCDHGLGMember\" },\n    0x01BF: { n:\"BrtBeginQSI\" },\n    0x01C0: { n:\"BrtEndQSI\" },\n    0x01C1: { n:\"BrtBeginQSIR\" },\n    0x01C2: { n:\"BrtEndQSIR\" },\n    0x01C3: { n:\"BrtBeginDeletedNames\" },\n    0x01C4: { n:\"BrtEndDeletedNames\" },\n    0x01C5: { n:\"BrtBeginDeletedName\" },\n    0x01C6: { n:\"BrtEndDeletedName\" },\n    0x01C7: { n:\"BrtBeginQSIFs\" },\n    0x01C8: { n:\"BrtEndQSIFs\" },\n    0x01C9: { n:\"BrtBeginQSIF\" },\n    0x01CA: { n:\"BrtEndQSIF\" },\n    0x01CB: { n:\"BrtBeginAutoSortScope\" },\n    0x01CC: { n:\"BrtEndAutoSortScope\" },\n    0x01CD: { n:\"BrtBeginConditionalFormatting\" },\n    0x01CE: { n:\"BrtEndConditionalFormatting\" },\n    0x01CF: { n:\"BrtBeginCFRule\" },\n    0x01D0: { n:\"BrtEndCFRule\" },\n    0x01D1: { n:\"BrtBeginIconSet\" },\n    0x01D2: { n:\"BrtEndIconSet\" },\n    0x01D3: { n:\"BrtBeginDatabar\" },\n    0x01D4: { n:\"BrtEndDatabar\" },\n    0x01D5: { n:\"BrtBeginColorScale\" },\n    0x01D6: { n:\"BrtEndColorScale\" },\n    0x01D7: { n:\"BrtCFVO\" },\n    0x01D8: { n:\"BrtExternValueMeta\" },\n    0x01D9: { n:\"BrtBeginColorPalette\" },\n    0x01DA: { n:\"BrtEndColorPalette\" },\n    0x01DB: { n:\"BrtIndexedColor\" },\n    0x01DC: { n:\"BrtMargins\", f:parse_BrtMargins },\n    0x01DD: { n:\"BrtPrintOptions\" },\n    0x01DE: { n:\"BrtPageSetup\" },\n    0x01DF: { n:\"BrtBeginHeaderFooter\" },\n    0x01E0: { n:\"BrtEndHeaderFooter\" },\n    0x01E1: { n:\"BrtBeginSXCrtFormat\" },\n    0x01E2: { n:\"BrtEndSXCrtFormat\" },\n    0x01E3: { n:\"BrtBeginSXCrtFormats\" },\n    0x01E4: { n:\"BrtEndSXCrtFormats\" },\n    0x01E5: { n:\"BrtWsFmtInfo\", f:parse_BrtWsFmtInfo },\n    0x01E6: { n:\"BrtBeginMgs\" },\n    0x01E7: { n:\"BrtEndMGs\" },\n    0x01E8: { n:\"BrtBeginMGMaps\" },\n    0x01E9: { n:\"BrtEndMGMaps\" },\n    0x01EA: { n:\"BrtBeginMG\" },\n    0x01EB: { n:\"BrtEndMG\" },\n    0x01EC: { n:\"BrtBeginMap\" },\n    0x01ED: { n:\"BrtEndMap\" },\n    0x01EE: { n:\"BrtHLink\", f:parse_BrtHLink },\n    0x01EF: { n:\"BrtBeginDCon\" },\n    0x01F0: { n:\"BrtEndDCon\" },\n    0x01F1: { n:\"BrtBeginDRefs\" },\n    0x01F2: { n:\"BrtEndDRefs\" },\n    0x01F3: { n:\"BrtDRef\" },\n    0x01F4: { n:\"BrtBeginScenMan\" },\n    0x01F5: { n:\"BrtEndScenMan\" },\n    0x01F6: { n:\"BrtBeginSct\" },\n    0x01F7: { n:\"BrtEndSct\" },\n    0x01F8: { n:\"BrtSlc\" },\n    0x01F9: { n:\"BrtBeginDXFs\" },\n    0x01FA: { n:\"BrtEndDXFs\" },\n    0x01FB: { n:\"BrtDXF\" },\n    0x01FC: { n:\"BrtBeginTableStyles\" },\n    0x01FD: { n:\"BrtEndTableStyles\" },\n    0x01FE: { n:\"BrtBeginTableStyle\" },\n    0x01FF: { n:\"BrtEndTableStyle\" },\n    0x0200: { n:\"BrtTableStyleElement\" },\n    0x0201: { n:\"BrtTableStyleClient\" },\n    0x0202: { n:\"BrtBeginVolDeps\" },\n    0x0203: { n:\"BrtEndVolDeps\" },\n    0x0204: { n:\"BrtBeginVolType\" },\n    0x0205: { n:\"BrtEndVolType\" },\n    0x0206: { n:\"BrtBeginVolMain\" },\n    0x0207: { n:\"BrtEndVolMain\" },\n    0x0208: { n:\"BrtBeginVolTopic\" },\n    0x0209: { n:\"BrtEndVolTopic\" },\n    0x020A: { n:\"BrtVolSubtopic\" },\n    0x020B: { n:\"BrtVolRef\" },\n    0x020C: { n:\"BrtVolNum\" },\n    0x020D: { n:\"BrtVolErr\" },\n    0x020E: { n:\"BrtVolStr\" },\n    0x020F: { n:\"BrtVolBool\" },\n    0x0210: { n:\"BrtBeginCalcChain$\" },\n    0x0211: { n:\"BrtEndCalcChain$\" },\n    0x0212: { n:\"BrtBeginSortState\" },\n    0x0213: { n:\"BrtEndSortState\" },\n    0x0214: { n:\"BrtBeginSortCond\" },\n    0x0215: { n:\"BrtEndSortCond\" },\n    0x0216: { n:\"BrtBookProtection\" },\n    0x0217: { n:\"BrtSheetProtection\" },\n    0x0218: { n:\"BrtRangeProtection\" },\n    0x0219: { n:\"BrtPhoneticInfo\" },\n    0x021A: { n:\"BrtBeginECTxtWiz\" },\n    0x021B: { n:\"BrtEndECTxtWiz\" },\n    0x021C: { n:\"BrtBeginECTWFldInfoLst\" },\n    0x021D: { n:\"BrtEndECTWFldInfoLst\" },\n    0x021E: { n:\"BrtBeginECTwFldInfo\" },\n    0x0224: { n:\"BrtFileSharing\" },\n    0x0225: { n:\"BrtOleSize\" },\n    0x0226: { n:\"BrtDrawing\", f:parse_RelID },\n    0x0227: { n:\"BrtLegacyDrawing\" },\n    0x0228: { n:\"BrtLegacyDrawingHF\" },\n    0x0229: { n:\"BrtWebOpt\" },\n    0x022A: { n:\"BrtBeginWebPubItems\" },\n    0x022B: { n:\"BrtEndWebPubItems\" },\n    0x022C: { n:\"BrtBeginWebPubItem\" },\n    0x022D: { n:\"BrtEndWebPubItem\" },\n    0x022E: { n:\"BrtBeginSXCondFmt\" },\n    0x022F: { n:\"BrtEndSXCondFmt\" },\n    0x0230: { n:\"BrtBeginSXCondFmts\" },\n    0x0231: { n:\"BrtEndSXCondFmts\" },\n    0x0232: { n:\"BrtBkHim\" },\n    0x0234: { n:\"BrtColor\" },\n    0x0235: { n:\"BrtBeginIndexedColors\" },\n    0x0236: { n:\"BrtEndIndexedColors\" },\n    0x0239: { n:\"BrtBeginMRUColors\" },\n    0x023A: { n:\"BrtEndMRUColors\" },\n    0x023C: { n:\"BrtMRUColor\" },\n    0x023D: { n:\"BrtBeginDVals\" },\n    0x023E: { n:\"BrtEndDVals\" },\n    0x0241: { n:\"BrtSupNameStart\" },\n    0x0242: { n:\"BrtSupNameValueStart\" },\n    0x0243: { n:\"BrtSupNameValueEnd\" },\n    0x0244: { n:\"BrtSupNameNum\" },\n    0x0245: { n:\"BrtSupNameErr\" },\n    0x0246: { n:\"BrtSupNameSt\" },\n    0x0247: { n:\"BrtSupNameNil\" },\n    0x0248: { n:\"BrtSupNameBool\" },\n    0x0249: { n:\"BrtSupNameFmla\" },\n    0x024A: { n:\"BrtSupNameBits\" },\n    0x024B: { n:\"BrtSupNameEnd\" },\n    0x024C: { n:\"BrtEndSupBook\" },\n    0x024D: { n:\"BrtCellSmartTagProperty\" },\n    0x024E: { n:\"BrtBeginCellSmartTag\" },\n    0x024F: { n:\"BrtEndCellSmartTag\" },\n    0x0250: { n:\"BrtBeginCellSmartTags\" },\n    0x0251: { n:\"BrtEndCellSmartTags\" },\n    0x0252: { n:\"BrtBeginSmartTags\" },\n    0x0253: { n:\"BrtEndSmartTags\" },\n    0x0254: { n:\"BrtSmartTagType\" },\n    0x0255: { n:\"BrtBeginSmartTagTypes\" },\n    0x0256: { n:\"BrtEndSmartTagTypes\" },\n    0x0257: { n:\"BrtBeginSXFilters\" },\n    0x0258: { n:\"BrtEndSXFilters\" },\n    0x0259: { n:\"BrtBeginSXFILTER\" },\n    0x025A: { n:\"BrtEndSXFilter\" },\n    0x025B: { n:\"BrtBeginFills\" },\n    0x025C: { n:\"BrtEndFills\" },\n    0x025D: { n:\"BrtBeginCellWatches\" },\n    0x025E: { n:\"BrtEndCellWatches\" },\n    0x025F: { n:\"BrtCellWatch\" },\n    0x0260: { n:\"BrtBeginCRErrs\" },\n    0x0261: { n:\"BrtEndCRErrs\" },\n    0x0262: { n:\"BrtCrashRecErr\" },\n    0x0263: { n:\"BrtBeginFonts\" },\n    0x0264: { n:\"BrtEndFonts\" },\n    0x0265: { n:\"BrtBeginBorders\" },\n    0x0266: { n:\"BrtEndBorders\" },\n    0x0267: { n:\"BrtBeginFmts\" },\n    0x0268: { n:\"BrtEndFmts\" },\n    0x0269: { n:\"BrtBeginCellXFs\" },\n    0x026A: { n:\"BrtEndCellXFs\" },\n    0x026B: { n:\"BrtBeginStyles\" },\n    0x026C: { n:\"BrtEndStyles\" },\n    0x0271: { n:\"BrtBigName\" },\n    0x0272: { n:\"BrtBeginCellStyleXFs\" },\n    0x0273: { n:\"BrtEndCellStyleXFs\" },\n    0x0274: { n:\"BrtBeginComments\" },\n    0x0275: { n:\"BrtEndComments\" },\n    0x0276: { n:\"BrtBeginCommentAuthors\" },\n    0x0277: { n:\"BrtEndCommentAuthors\" },\n    0x0278: { n:\"BrtCommentAuthor\", f:parse_BrtCommentAuthor },\n    0x0279: { n:\"BrtBeginCommentList\" },\n    0x027A: { n:\"BrtEndCommentList\" },\n    0x027B: { n:\"BrtBeginComment\", f:parse_BrtBeginComment},\n    0x027C: { n:\"BrtEndComment\" },\n    0x027D: { n:\"BrtCommentText\", f:parse_BrtCommentText },\n    0x027E: { n:\"BrtBeginOleObjects\" },\n    0x027F: { n:\"BrtOleObject\" },\n    0x0280: { n:\"BrtEndOleObjects\" },\n    0x0281: { n:\"BrtBeginSxrules\" },\n    0x0282: { n:\"BrtEndSxRules\" },\n    0x0283: { n:\"BrtBeginActiveXControls\" },\n    0x0284: { n:\"BrtActiveX\" },\n    0x0285: { n:\"BrtEndActiveXControls\" },\n    0x0286: { n:\"BrtBeginPCDSDTCEMembersSortBy\" },\n    0x0288: { n:\"BrtBeginCellIgnoreECs\" },\n    0x0289: { n:\"BrtCellIgnoreEC\" },\n    0x028A: { n:\"BrtEndCellIgnoreECs\" },\n    0x028B: { n:\"BrtCsProp\", f:parse_BrtCsProp },\n    0x028C: { n:\"BrtCsPageSetup\" },\n    0x028D: { n:\"BrtBeginUserCsViews\" },\n    0x028E: { n:\"BrtEndUserCsViews\" },\n    0x028F: { n:\"BrtBeginUserCsView\" },\n    0x0290: { n:\"BrtEndUserCsView\" },\n    0x0291: { n:\"BrtBeginPcdSFCIEntries\" },\n    0x0292: { n:\"BrtEndPCDSFCIEntries\" },\n    0x0293: { n:\"BrtPCDSFCIEntry\" },\n    0x0294: { n:\"BrtBeginListParts\" },\n    0x0295: { n:\"BrtListPart\" },\n    0x0296: { n:\"BrtEndListParts\" },\n    0x0297: { n:\"BrtSheetCalcProp\" },\n    0x0298: { n:\"BrtBeginFnGroup\" },\n    0x0299: { n:\"BrtFnGroup\" },\n    0x029A: { n:\"BrtEndFnGroup\" },\n    0x029B: { n:\"BrtSupAddin\" },\n    0x029C: { n:\"BrtSXTDMPOrder\" },\n    0x029D: { n:\"BrtCsProtection\" },\n    0x029F: { n:\"BrtBeginWsSortMap\" },\n    0x02A0: { n:\"BrtEndWsSortMap\" },\n    0x02A1: { n:\"BrtBeginRRSort\" },\n    0x02A2: { n:\"BrtEndRRSort\" },\n    0x02A3: { n:\"BrtRRSortItem\" },\n    0x02A4: { n:\"BrtFileSharingIso\" },\n    0x02A5: { n:\"BrtBookProtectionIso\" },\n    0x02A6: { n:\"BrtSheetProtectionIso\" },\n    0x02A7: { n:\"BrtCsProtectionIso\" },\n    0x02A8: { n:\"BrtRangeProtectionIso\" },\n    0x0400: { n:\"BrtRwDescent\" },\n    0x0401: { n:\"BrtKnownFonts\" },\n    0x0402: { n:\"BrtBeginSXTupleSet\" },\n    0x0403: { n:\"BrtEndSXTupleSet\" },\n    0x0404: { n:\"BrtBeginSXTupleSetHeader\" },\n    0x0405: { n:\"BrtEndSXTupleSetHeader\" },\n    0x0406: { n:\"BrtSXTupleSetHeaderItem\" },\n    0x0407: { n:\"BrtBeginSXTupleSetData\" },\n    0x0408: { n:\"BrtEndSXTupleSetData\" },\n    0x0409: { n:\"BrtBeginSXTupleSetRow\" },\n    0x040A: { n:\"BrtEndSXTupleSetRow\" },\n    0x040B: { n:\"BrtSXTupleSetRowItem\" },\n    0x040C: { n:\"BrtNameExt\" },\n    0x040D: { n:\"BrtPCDH14\" },\n    0x040E: { n:\"BrtBeginPCDCalcMem14\" },\n    0x040F: { n:\"BrtEndPCDCalcMem14\" },\n    0x0410: { n:\"BrtSXTH14\" },\n    0x0411: { n:\"BrtBeginSparklineGroup\" },\n    0x0412: { n:\"BrtEndSparklineGroup\" },\n    0x0413: { n:\"BrtSparkline\" },\n    0x0414: { n:\"BrtSXDI14\" },\n    0x0415: { n:\"BrtWsFmtInfoEx14\" },\n    0x0416: { n:\"BrtBeginConditionalFormatting14\" },\n    0x0417: { n:\"BrtEndConditionalFormatting14\" },\n    0x0418: { n:\"BrtBeginCFRule14\" },\n    0x0419: { n:\"BrtEndCFRule14\" },\n    0x041A: { n:\"BrtCFVO14\" },\n    0x041B: { n:\"BrtBeginDatabar14\" },\n    0x041C: { n:\"BrtBeginIconSet14\" },\n    0x041D: { n:\"BrtDVal14\" },\n    0x041E: { n:\"BrtBeginDVals14\" },\n    0x041F: { n:\"BrtColor14\" },\n    0x0420: { n:\"BrtBeginSparklines\" },\n    0x0421: { n:\"BrtEndSparklines\" },\n    0x0422: { n:\"BrtBeginSparklineGroups\" },\n    0x0423: { n:\"BrtEndSparklineGroups\" },\n    0x0425: { n:\"BrtSXVD14\" },\n    0x0426: { n:\"BrtBeginSXView14\" },\n    0x0427: { n:\"BrtEndSXView14\" },\n    0x0428: { n:\"BrtBeginSXView16\" },\n    0x0429: { n:\"BrtEndSXView16\" },\n    0x042A: { n:\"BrtBeginPCD14\" },\n    0x042B: { n:\"BrtEndPCD14\" },\n    0x042C: { n:\"BrtBeginExtConn14\" },\n    0x042D: { n:\"BrtEndExtConn14\" },\n    0x042E: { n:\"BrtBeginSlicerCacheIDs\" },\n    0x042F: { n:\"BrtEndSlicerCacheIDs\" },\n    0x0430: { n:\"BrtBeginSlicerCacheID\" },\n    0x0431: { n:\"BrtEndSlicerCacheID\" },\n    0x0433: { n:\"BrtBeginSlicerCache\" },\n    0x0434: { n:\"BrtEndSlicerCache\" },\n    0x0435: { n:\"BrtBeginSlicerCacheDef\" },\n    0x0436: { n:\"BrtEndSlicerCacheDef\" },\n    0x0437: { n:\"BrtBeginSlicersEx\" },\n    0x0438: { n:\"BrtEndSlicersEx\" },\n    0x0439: { n:\"BrtBeginSlicerEx\" },\n    0x043A: { n:\"BrtEndSlicerEx\" },\n    0x043B: { n:\"BrtBeginSlicer\" },\n    0x043C: { n:\"BrtEndSlicer\" },\n    0x043D: { n:\"BrtSlicerCachePivotTables\" },\n    0x043E: { n:\"BrtBeginSlicerCacheOlapImpl\" },\n    0x043F: { n:\"BrtEndSlicerCacheOlapImpl\" },\n    0x0440: { n:\"BrtBeginSlicerCacheLevelsData\" },\n    0x0441: { n:\"BrtEndSlicerCacheLevelsData\" },\n    0x0442: { n:\"BrtBeginSlicerCacheLevelData\" },\n    0x0443: { n:\"BrtEndSlicerCacheLevelData\" },\n    0x0444: { n:\"BrtBeginSlicerCacheSiRanges\" },\n    0x0445: { n:\"BrtEndSlicerCacheSiRanges\" },\n    0x0446: { n:\"BrtBeginSlicerCacheSiRange\" },\n    0x0447: { n:\"BrtEndSlicerCacheSiRange\" },\n    0x0448: { n:\"BrtSlicerCacheOlapItem\" },\n    0x0449: { n:\"BrtBeginSlicerCacheSelections\" },\n    0x044A: { n:\"BrtSlicerCacheSelection\" },\n    0x044B: { n:\"BrtEndSlicerCacheSelections\" },\n    0x044C: { n:\"BrtBeginSlicerCacheNative\" },\n    0x044D: { n:\"BrtEndSlicerCacheNative\" },\n    0x044E: { n:\"BrtSlicerCacheNativeItem\" },\n    0x044F: { n:\"BrtRangeProtection14\" },\n    0x0450: { n:\"BrtRangeProtectionIso14\" },\n    0x0451: { n:\"BrtCellIgnoreEC14\" },\n    0x0457: { n:\"BrtList14\" },\n    0x0458: { n:\"BrtCFIcon\" },\n    0x0459: { n:\"BrtBeginSlicerCachesPivotCacheIDs\" },\n    0x045A: { n:\"BrtEndSlicerCachesPivotCacheIDs\" },\n    0x045B: { n:\"BrtBeginSlicers\" },\n    0x045C: { n:\"BrtEndSlicers\" },\n    0x045D: { n:\"BrtWbProp14\" },\n    0x045E: { n:\"BrtBeginSXEdit\" },\n    0x045F: { n:\"BrtEndSXEdit\" },\n    0x0460: { n:\"BrtBeginSXEdits\" },\n    0x0461: { n:\"BrtEndSXEdits\" },\n    0x0462: { n:\"BrtBeginSXChange\" },\n    0x0463: { n:\"BrtEndSXChange\" },\n    0x0464: { n:\"BrtBeginSXChanges\" },\n    0x0465: { n:\"BrtEndSXChanges\" },\n    0x0466: { n:\"BrtSXTupleItems\" },\n    0x0468: { n:\"BrtBeginSlicerStyle\" },\n    0x0469: { n:\"BrtEndSlicerStyle\" },\n    0x046A: { n:\"BrtSlicerStyleElement\" },\n    0x046B: { n:\"BrtBeginStyleSheetExt14\" },\n    0x046C: { n:\"BrtEndStyleSheetExt14\" },\n    0x046D: { n:\"BrtBeginSlicerCachesPivotCacheID\" },\n    0x046E: { n:\"BrtEndSlicerCachesPivotCacheID\" },\n    0x046F: { n:\"BrtBeginConditionalFormattings\" },\n    0x0470: { n:\"BrtEndConditionalFormattings\" },\n    0x0471: { n:\"BrtBeginPCDCalcMemExt\" },\n    0x0472: { n:\"BrtEndPCDCalcMemExt\" },\n    0x0473: { n:\"BrtBeginPCDCalcMemsExt\" },\n    0x0474: { n:\"BrtEndPCDCalcMemsExt\" },\n    0x0475: { n:\"BrtPCDField14\" },\n    0x0476: { n:\"BrtBeginSlicerStyles\" },\n    0x0477: { n:\"BrtEndSlicerStyles\" },\n    0x0478: { n:\"BrtBeginSlicerStyleElements\" },\n    0x0479: { n:\"BrtEndSlicerStyleElements\" },\n    0x047A: { n:\"BrtCFRuleExt\" },\n    0x047B: { n:\"BrtBeginSXCondFmt14\" },\n    0x047C: { n:\"BrtEndSXCondFmt14\" },\n    0x047D: { n:\"BrtBeginSXCondFmts14\" },\n    0x047E: { n:\"BrtEndSXCondFmts14\" },\n    0x0480: { n:\"BrtBeginSortCond14\" },\n    0x0481: { n:\"BrtEndSortCond14\" },\n    0x0482: { n:\"BrtEndDVals14\" },\n    0x0483: { n:\"BrtEndIconSet14\" },\n    0x0484: { n:\"BrtEndDatabar14\" },\n    0x0485: { n:\"BrtBeginColorScale14\" },\n    0x0486: { n:\"BrtEndColorScale14\" },\n    0x0487: { n:\"BrtBeginSxrules14\" },\n    0x0488: { n:\"BrtEndSxrules14\" },\n    0x0489: { n:\"BrtBeginPRule14\" },\n    0x048A: { n:\"BrtEndPRule14\" },\n    0x048B: { n:\"BrtBeginPRFilters14\" },\n    0x048C: { n:\"BrtEndPRFilters14\" },\n    0x048D: { n:\"BrtBeginPRFilter14\" },\n    0x048E: { n:\"BrtEndPRFilter14\" },\n    0x048F: { n:\"BrtBeginPRFItem14\" },\n    0x0490: { n:\"BrtEndPRFItem14\" },\n    0x0491: { n:\"BrtBeginCellIgnoreECs14\" },\n    0x0492: { n:\"BrtEndCellIgnoreECs14\" },\n    0x0493: { n:\"BrtDxf14\" },\n    0x0494: { n:\"BrtBeginDxF14s\" },\n    0x0495: { n:\"BrtEndDxf14s\" },\n    0x0499: { n:\"BrtFilter14\" },\n    0x049A: { n:\"BrtBeginCustomFilters14\" },\n    0x049C: { n:\"BrtCustomFilter14\" },\n    0x049D: { n:\"BrtIconFilter14\" },\n    0x049E: { n:\"BrtPivotCacheConnectionName\" },\n    0x0800: { n:\"BrtBeginDecoupledPivotCacheIDs\" },\n    0x0801: { n:\"BrtEndDecoupledPivotCacheIDs\" },\n    0x0802: { n:\"BrtDecoupledPivotCacheID\" },\n    0x0803: { n:\"BrtBeginPivotTableRefs\" },\n    0x0804: { n:\"BrtEndPivotTableRefs\" },\n    0x0805: { n:\"BrtPivotTableRef\" },\n    0x0806: { n:\"BrtSlicerCacheBookPivotTables\" },\n    0x0807: { n:\"BrtBeginSxvcells\" },\n    0x0808: { n:\"BrtEndSxvcells\" },\n    0x0809: { n:\"BrtBeginSxRow\" },\n    0x080A: { n:\"BrtEndSxRow\" },\n    0x080C: { n:\"BrtPcdCalcMem15\" },\n    0x0813: { n:\"BrtQsi15\" },\n    0x0814: { n:\"BrtBeginWebExtensions\" },\n    0x0815: { n:\"BrtEndWebExtensions\" },\n    0x0816: { n:\"BrtWebExtension\" },\n    0x0817: { n:\"BrtAbsPath15\" },\n    0x0818: { n:\"BrtBeginPivotTableUISettings\" },\n    0x0819: { n:\"BrtEndPivotTableUISettings\" },\n    0x081B: { n:\"BrtTableSlicerCacheIDs\" },\n    0x081C: { n:\"BrtTableSlicerCacheID\" },\n    0x081D: { n:\"BrtBeginTableSlicerCache\" },\n    0x081E: { n:\"BrtEndTableSlicerCache\" },\n    0x081F: { n:\"BrtSxFilter15\" },\n    0x0820: { n:\"BrtBeginTimelineCachePivotCacheIDs\" },\n    0x0821: { n:\"BrtEndTimelineCachePivotCacheIDs\" },\n    0x0822: { n:\"BrtTimelineCachePivotCacheID\" },\n    0x0823: { n:\"BrtBeginTimelineCacheIDs\" },\n    0x0824: { n:\"BrtEndTimelineCacheIDs\" },\n    0x0825: { n:\"BrtBeginTimelineCacheID\" },\n    0x0826: { n:\"BrtEndTimelineCacheID\" },\n    0x0827: { n:\"BrtBeginTimelinesEx\" },\n    0x0828: { n:\"BrtEndTimelinesEx\" },\n    0x0829: { n:\"BrtBeginTimelineEx\" },\n    0x082A: { n:\"BrtEndTimelineEx\" },\n    0x082B: { n:\"BrtWorkBookPr15\" },\n    0x082C: { n:\"BrtPCDH15\" },\n    0x082D: { n:\"BrtBeginTimelineStyle\" },\n    0x082E: { n:\"BrtEndTimelineStyle\" },\n    0x082F: { n:\"BrtTimelineStyleElement\" },\n    0x0830: { n:\"BrtBeginTimelineStylesheetExt15\" },\n    0x0831: { n:\"BrtEndTimelineStylesheetExt15\" },\n    0x0832: { n:\"BrtBeginTimelineStyles\" },\n    0x0833: { n:\"BrtEndTimelineStyles\" },\n    0x0834: { n:\"BrtBeginTimelineStyleElements\" },\n    0x0835: { n:\"BrtEndTimelineStyleElements\" },\n    0x0836: { n:\"BrtDxf15\" },\n    0x0837: { n:\"BrtBeginDxfs15\" },\n    0x0838: { n:\"brtEndDxfs15\" },\n    0x0839: { n:\"BrtSlicerCacheHideItemsWithNoData\" },\n    0x083A: { n:\"BrtBeginItemUniqueNames\" },\n    0x083B: { n:\"BrtEndItemUniqueNames\" },\n    0x083C: { n:\"BrtItemUniqueName\" },\n    0x083D: { n:\"BrtBeginExtConn15\" },\n    0x083E: { n:\"BrtEndExtConn15\" },\n    0x083F: { n:\"BrtBeginOledbPr15\" },\n    0x0840: { n:\"BrtEndOledbPr15\" },\n    0x0841: { n:\"BrtBeginDataFeedPr15\" },\n    0x0842: { n:\"BrtEndDataFeedPr15\" },\n    0x0843: { n:\"BrtTextPr15\" },\n    0x0844: { n:\"BrtRangePr15\" },\n    0x0845: { n:\"BrtDbCommand15\" },\n    0x0846: { n:\"BrtBeginDbTables15\" },\n    0x0847: { n:\"BrtEndDbTables15\" },\n    0x0848: { n:\"BrtDbTable15\" },\n    0x0849: { n:\"BrtBeginDataModel\" },\n    0x084A: { n:\"BrtEndDataModel\" },\n    0x084B: { n:\"BrtBeginModelTables\" },\n    0x084C: { n:\"BrtEndModelTables\" },\n    0x084D: { n:\"BrtModelTable\" },\n    0x084E: { n:\"BrtBeginModelRelationships\" },\n    0x084F: { n:\"BrtEndModelRelationships\" },\n    0x0850: { n:\"BrtModelRelationship\" },\n    0x0851: { n:\"BrtBeginECTxtWiz15\" },\n    0x0852: { n:\"BrtEndECTxtWiz15\" },\n    0x0853: { n:\"BrtBeginECTWFldInfoLst15\" },\n    0x0854: { n:\"BrtEndECTWFldInfoLst15\" },\n    0x0855: { n:\"BrtBeginECTWFldInfo15\" },\n    0x0856: { n:\"BrtFieldListActiveItem\" },\n    0x0857: { n:\"BrtPivotCacheIdVersion\" },\n    0x0858: { n:\"BrtSXDI15\" },\n    0x0859: { n:\"BrtBeginModelTimeGroupings\" },\n    0x085A: { n:\"BrtEndModelTimeGroupings\" },\n    0x085B: { n:\"BrtBeginModelTimeGrouping\" },\n    0x085C: { n:\"BrtEndModelTimeGrouping\" },\n    0x085D: { n:\"BrtModelTimeGroupingCalcCol\" },\n    0x0C00: { n:\"BrtUid\" },\n    0x0C01: { n:\"BrtRevisionPtr\" },\n    0x13e7: { n:\"BrtBeginCalcFeatures\" },\n    0x13e8: { n:\"BrtEndCalcFeatures\" },\n    0x13e9: { n:\"BrtCalcFeature\" },\n    0xFFFF: { n:\"\" }\n  };\n\n  var XLSBRE = evert_key(XLSBRecordEnum, 'n');\n\n  /* [MS-XLS] 2.3 Record Enumeration */\n  var XLSRecordEnum = {\n    0x0003: { n:\"BIFF2NUM\", f:parse_BIFF2NUM },\n    0x0004: { n:\"BIFF2STR\", f:parse_BIFF2STR },\n    0x0006: { n:\"Formula\", f:parse_Formula },\n    0x0009: { n:'BOF', f:parse_BOF },\n    0x000a: { n:'EOF', f:parsenoop2 },\n    0x000c: { n:\"CalcCount\", f:parseuint16 },\n    0x000d: { n:\"CalcMode\", f:parseuint16 },\n    0x000e: { n:\"CalcPrecision\", f:parsebool },\n    0x000f: { n:\"CalcRefMode\", f:parsebool },\n    0x0010: { n:\"CalcDelta\", f:parse_Xnum },\n    0x0011: { n:\"CalcIter\", f:parsebool },\n    0x0012: { n:\"Protect\", f:parsebool },\n    0x0013: { n:\"Password\", f:parseuint16 },\n    0x0014: { n:\"Header\", f:parse_XLHeaderFooter },\n    0x0015: { n:\"Footer\", f:parse_XLHeaderFooter },\n    0x0017: { n:\"ExternSheet\", f:parse_ExternSheet },\n    0x0018: { n:\"Lbl\", f:parse_Lbl },\n    0x0019: { n:\"WinProtect\", f:parsebool },\n    0x001a: { n:\"VerticalPageBreaks\" },\n    0x001b: { n:\"HorizontalPageBreaks\" },\n    0x001c: { n:\"Note\", f:parse_Note },\n    0x001d: { n:\"Selection\" },\n    0x0022: { n:\"Date1904\", f:parsebool },\n    0x0023: { n:\"ExternName\", f:parse_ExternName },\n    0x0026: { n:\"LeftMargin\", f:parse_Xnum },\n    0x0027: { n:\"RightMargin\", f:parse_Xnum },\n    0x0028: { n:\"TopMargin\", f:parse_Xnum },\n    0x0029: { n:\"BottomMargin\", f:parse_Xnum },\n    0x002a: { n:\"PrintRowCol\", f:parsebool },\n    0x002b: { n:\"PrintGrid\", f:parsebool },\n    0x002f: { n:\"FilePass\", f:parse_FilePass },\n    0x0031: { n:\"Font\", f:parse_Font },\n    0x0033: { n:\"PrintSize\", f:parseuint16 },\n    0x003c: { n:\"Continue\" },\n    0x003d: { n:\"Window1\", f:parse_Window1 },\n    0x0040: { n:\"Backup\", f:parsebool },\n    0x0041: { n:\"Pane\" },\n    0x0042: { n:'CodePage', f:parseuint16 },\n    0x004d: { n:\"Pls\" },\n    0x0050: { n:\"DCon\" },\n    0x0051: { n:\"DConRef\" },\n    0x0052: { n:\"DConName\" },\n    0x0055: { n:\"DefColWidth\", f:parseuint16 },\n    0x0059: { n:\"XCT\" },\n    0x005a: { n:\"CRN\" },\n    0x005b: { n:\"FileSharing\" },\n    0x005c: { n:'WriteAccess', f:parse_WriteAccess },\n    0x005d: { n:\"Obj\", f:parse_Obj },\n    0x005e: { n:\"Uncalced\" },\n    0x005f: { n:\"CalcSaveRecalc\", f:parsebool },\n    0x0060: { n:\"Template\" },\n    0x0061: { n:\"Intl\" },\n    0x0063: { n:\"ObjProtect\", f:parsebool },\n    0x007d: { n:\"ColInfo\", f:parse_ColInfo },\n    0x0080: { n:\"Guts\", f:parse_Guts },\n    0x0081: { n:\"WsBool\", f:parse_WsBool },\n    0x0082: { n:\"GridSet\", f:parseuint16 },\n    0x0083: { n:\"HCenter\", f:parsebool },\n    0x0084: { n:\"VCenter\", f:parsebool },\n    0x0085: { n:'BoundSheet8', f:parse_BoundSheet8 },\n    0x0086: { n:\"WriteProtect\" },\n    0x008c: { n:\"Country\", f:parse_Country },\n    0x008d: { n:\"HideObj\", f:parseuint16 },\n    0x0090: { n:\"Sort\" },\n    0x0092: { n:\"Palette\", f:parse_Palette },\n    0x0097: { n:\"Sync\" },\n    0x0098: { n:\"LPr\" },\n    0x0099: { n:\"DxGCol\" },\n    0x009a: { n:\"FnGroupName\" },\n    0x009b: { n:\"FilterMode\" },\n    0x009c: { n:\"BuiltInFnGroupCount\", f:parseuint16 },\n    0x009d: { n:\"AutoFilterInfo\" },\n    0x009e: { n:\"AutoFilter\" },\n    0x00a0: { n:\"Scl\", f:parse_Scl },\n    0x00a1: { n:\"Setup\", f:parse_Setup },\n    0x00ae: { n:\"ScenMan\" },\n    0x00af: { n:\"SCENARIO\" },\n    0x00b0: { n:\"SxView\" },\n    0x00b1: { n:\"Sxvd\" },\n    0x00b2: { n:\"SXVI\" },\n    0x00b4: { n:\"SxIvd\" },\n    0x00b5: { n:\"SXLI\" },\n    0x00b6: { n:\"SXPI\" },\n    0x00b8: { n:\"DocRoute\" },\n    0x00b9: { n:\"RecipName\" },\n    0x00bd: { n:\"MulRk\", f:parse_MulRk },\n    0x00be: { n:\"MulBlank\", f:parse_MulBlank },\n    0x00c1: { n:'Mms', f:parsenoop2 },\n    0x00c5: { n:\"SXDI\" },\n    0x00c6: { n:\"SXDB\" },\n    0x00c7: { n:\"SXFDB\" },\n    0x00c8: { n:\"SXDBB\" },\n    0x00c9: { n:\"SXNum\" },\n    0x00ca: { n:\"SxBool\", f:parsebool },\n    0x00cb: { n:\"SxErr\" },\n    0x00cc: { n:\"SXInt\" },\n    0x00cd: { n:\"SXString\" },\n    0x00ce: { n:\"SXDtr\" },\n    0x00cf: { n:\"SxNil\" },\n    0x00d0: { n:\"SXTbl\" },\n    0x00d1: { n:\"SXTBRGIITM\" },\n    0x00d2: { n:\"SxTbpg\" },\n    0x00d3: { n:\"ObProj\" },\n    0x00d5: { n:\"SXStreamID\" },\n    0x00d7: { n:\"DBCell\" },\n    0x00d8: { n:\"SXRng\" },\n    0x00d9: { n:\"SxIsxoper\" },\n    0x00da: { n:\"BookBool\", f:parseuint16 },\n    0x00dc: { n:\"DbOrParamQry\" },\n    0x00dd: { n:\"ScenarioProtect\", f:parsebool },\n    0x00de: { n:\"OleObjectSize\" },\n    0x00e0: { n:\"XF\", f:parse_XF },\n    0x00e1: { n:'InterfaceHdr', f:parse_InterfaceHdr },\n    0x00e2: { n:'InterfaceEnd', f:parsenoop2 },\n    0x00e3: { n:\"SXVS\" },\n    0x00e5: { n:\"MergeCells\", f:parse_MergeCells },\n    0x00e9: { n:\"BkHim\" },\n    0x00eb: { n:\"MsoDrawingGroup\" },\n    0x00ec: { n:\"MsoDrawing\" },\n    0x00ed: { n:\"MsoDrawingSelection\" },\n    0x00ef: { n:\"PhoneticInfo\" },\n    0x00f0: { n:\"SxRule\" },\n    0x00f1: { n:\"SXEx\" },\n    0x00f2: { n:\"SxFilt\" },\n    0x00f4: { n:\"SxDXF\" },\n    0x00f5: { n:\"SxItm\" },\n    0x00f6: { n:\"SxName\" },\n    0x00f7: { n:\"SxSelect\" },\n    0x00f8: { n:\"SXPair\" },\n    0x00f9: { n:\"SxFmla\" },\n    0x00fb: { n:\"SxFormat\" },\n    0x00fc: { n:\"SST\", f:parse_SST },\n    0x00fd: { n:\"LabelSst\", f:parse_LabelSst },\n    0x00ff: { n:\"ExtSST\", f:parse_ExtSST },\n    0x0100: { n:\"SXVDEx\" },\n    0x0103: { n:\"SXFormula\" },\n    0x0122: { n:\"SXDBEx\" },\n    0x0137: { n:\"RRDInsDel\" },\n    0x0138: { n:\"RRDHead\" },\n    0x013b: { n:\"RRDChgCell\" },\n    0x013d: { n:\"RRTabId\", f:parseuint16a },\n    0x013e: { n:\"RRDRenSheet\" },\n    0x013f: { n:\"RRSort\" },\n    0x0140: { n:\"RRDMove\" },\n    0x014a: { n:\"RRFormat\" },\n    0x014b: { n:\"RRAutoFmt\" },\n    0x014d: { n:\"RRInsertSh\" },\n    0x014e: { n:\"RRDMoveBegin\" },\n    0x014f: { n:\"RRDMoveEnd\" },\n    0x0150: { n:\"RRDInsDelBegin\" },\n    0x0151: { n:\"RRDInsDelEnd\" },\n    0x0152: { n:\"RRDConflict\" },\n    0x0153: { n:\"RRDDefName\" },\n    0x0154: { n:\"RRDRstEtxp\" },\n    0x015f: { n:\"LRng\" },\n    0x0160: { n:\"UsesELFs\", f:parsebool },\n    0x0161: { n:\"DSF\", f:parsenoop2 },\n    0x0191: { n:\"CUsr\" },\n    0x0192: { n:\"CbUsr\" },\n    0x0193: { n:\"UsrInfo\" },\n    0x0194: { n:\"UsrExcl\" },\n    0x0195: { n:\"FileLock\" },\n    0x0196: { n:\"RRDInfo\" },\n    0x0197: { n:\"BCUsrs\" },\n    0x0198: { n:\"UsrChk\" },\n    0x01a9: { n:\"UserBView\" },\n    0x01aa: { n:\"UserSViewBegin\" },\n    0x01ab: { n:\"UserSViewEnd\" },\n    0x01ac: { n:\"RRDUserView\" },\n    0x01ad: { n:\"Qsi\" },\n    0x01ae: { n:\"SupBook\", f:parse_SupBook },\n    0x01af: { n:\"Prot4Rev\", f:parsebool },\n    0x01b0: { n:\"CondFmt\" },\n    0x01b1: { n:\"CF\" },\n    0x01b2: { n:\"DVal\" },\n    0x01b5: { n:\"DConBin\" },\n    0x01b6: { n:\"TxO\", f:parse_TxO },\n    0x01b7: { n:\"RefreshAll\", f:parsebool },\n    0x01b8: { n:\"HLink\", f:parse_HLink },\n    0x01b9: { n:\"Lel\" },\n    0x01ba: { n:\"CodeName\", f:parse_XLUnicodeString },\n    0x01bb: { n:\"SXFDBType\" },\n    0x01bc: { n:\"Prot4RevPass\", f:parseuint16 },\n    0x01bd: { n:\"ObNoMacros\" },\n    0x01be: { n:\"Dv\" },\n    0x01c0: { n:\"Excel9File\", f:parsenoop2 },\n    0x01c1: { n:\"RecalcId\", f:parse_RecalcId, r:2},\n    0x01c2: { n:\"EntExU2\", f:parsenoop2 },\n    0x0200: { n:\"Dimensions\", f:parse_Dimensions },\n    0x0201: { n:\"Blank\", f:parse_Blank },\n    0x0203: { n:\"Number\", f:parse_Number },\n    0x0204: { n:\"Label\", f:parse_Label },\n    0x0205: { n:\"BoolErr\", f:parse_BoolErr },\n    0x0206: { n:\"Formula\", f:parse_Formula },\n    0x0207: { n:\"String\", f:parse_String },\n    0x0208: { n:'Row', f:parse_Row },\n    0x020b: { n:\"Index\" },\n    0x0221: { n:\"Array\", f:parse_Array },\n    0x0225: { n:\"DefaultRowHeight\", f:parse_DefaultRowHeight },\n    0x0236: { n:\"Table\" },\n    0x023e: { n:\"Window2\", f:parse_Window2 },\n    0x027e: { n:\"RK\", f:parse_RK },\n    0x0293: { n:\"Style\" },\n    0x0406: { n:\"Formula\", f:parse_Formula },\n    0x0418: { n:\"BigName\" },\n    0x041e: { n:\"Format\", f:parse_Format },\n    0x043c: { n:\"ContinueBigName\" },\n    0x04bc: { n:\"ShrFmla\", f:parse_ShrFmla },\n    0x0800: { n:\"HLinkTooltip\", f:parse_HLinkTooltip },\n    0x0801: { n:\"WebPub\" },\n    0x0802: { n:\"QsiSXTag\" },\n    0x0803: { n:\"DBQueryExt\" },\n    0x0804: { n:\"ExtString\" },\n    0x0805: { n:\"TxtQry\" },\n    0x0806: { n:\"Qsir\" },\n    0x0807: { n:\"Qsif\" },\n    0x0808: { n:\"RRDTQSIF\" },\n    0x0809: { n:'BOF', f:parse_BOF },\n    0x080a: { n:\"OleDbConn\" },\n    0x080b: { n:\"WOpt\" },\n    0x080c: { n:\"SXViewEx\" },\n    0x080d: { n:\"SXTH\" },\n    0x080e: { n:\"SXPIEx\" },\n    0x080f: { n:\"SXVDTEx\" },\n    0x0810: { n:\"SXViewEx9\" },\n    0x0812: { n:\"ContinueFrt\" },\n    0x0813: { n:\"RealTimeData\" },\n    0x0850: { n:\"ChartFrtInfo\" },\n    0x0851: { n:\"FrtWrapper\" },\n    0x0852: { n:\"StartBlock\" },\n    0x0853: { n:\"EndBlock\" },\n    0x0854: { n:\"StartObject\" },\n    0x0855: { n:\"EndObject\" },\n    0x0856: { n:\"CatLab\" },\n    0x0857: { n:\"YMult\" },\n    0x0858: { n:\"SXViewLink\" },\n    0x0859: { n:\"PivotChartBits\" },\n    0x085a: { n:\"FrtFontList\" },\n    0x0862: { n:\"SheetExt\" },\n    0x0863: { n:\"BookExt\", r:12},\n    0x0864: { n:\"SXAddl\" },\n    0x0865: { n:\"CrErr\" },\n    0x0866: { n:\"HFPicture\" },\n    0x0867: { n:'FeatHdr', f:parsenoop2 },\n    0x0868: { n:\"Feat\" },\n    0x086a: { n:\"DataLabExt\" },\n    0x086b: { n:\"DataLabExtContents\" },\n    0x086c: { n:\"CellWatch\" },\n    0x0871: { n:\"FeatHdr11\" },\n    0x0872: { n:\"Feature11\" },\n    0x0874: { n:\"DropDownObjIds\" },\n    0x0875: { n:\"ContinueFrt11\" },\n    0x0876: { n:\"DConn\" },\n    0x0877: { n:\"List12\" },\n    0x0878: { n:\"Feature12\" },\n    0x0879: { n:\"CondFmt12\" },\n    0x087a: { n:\"CF12\" },\n    0x087b: { n:\"CFEx\" },\n    0x087c: { n:\"XFCRC\", f:parse_XFCRC, r:12 },\n    0x087d: { n:\"XFExt\", f:parse_XFExt, r:12 },\n    0x087e: { n:\"AutoFilter12\" },\n    0x087f: { n:\"ContinueFrt12\" },\n    0x0884: { n:\"MDTInfo\" },\n    0x0885: { n:\"MDXStr\" },\n    0x0886: { n:\"MDXTuple\" },\n    0x0887: { n:\"MDXSet\" },\n    0x0888: { n:\"MDXProp\" },\n    0x0889: { n:\"MDXKPI\" },\n    0x088a: { n:\"MDB\" },\n    0x088b: { n:\"PLV\" },\n    0x088c: { n:\"Compat12\", f:parsebool, r:12 },\n    0x088d: { n:\"DXF\" },\n    0x088e: { n:\"TableStyles\", r:12 },\n    0x088f: { n:\"TableStyle\" },\n    0x0890: { n:\"TableStyleElement\" },\n    0x0892: { n:\"StyleExt\" },\n    0x0893: { n:\"NamePublish\" },\n    0x0894: { n:\"NameCmt\", f:parse_NameCmt, r:12 },\n    0x0895: { n:\"SortData\" },\n    0x0896: { n:\"Theme\", f:parse_Theme, r:12 },\n    0x0897: { n:\"GUIDTypeLib\" },\n    0x0898: { n:\"FnGrp12\" },\n    0x0899: { n:\"NameFnGrp12\" },\n    0x089a: { n:\"MTRSettings\", f:parse_MTRSettings, r:12 },\n    0x089b: { n:\"CompressPictures\", f:parsenoop2 },\n    0x089c: { n:\"HeaderFooter\" },\n    0x089d: { n:\"CrtLayout12\" },\n    0x089e: { n:\"CrtMlFrt\" },\n    0x089f: { n:\"CrtMlFrtContinue\" },\n    0x08a3: { n:\"ForceFullCalculation\", f:parse_ForceFullCalculation },\n    0x08a4: { n:\"ShapePropsStream\" },\n    0x08a5: { n:\"TextPropsStream\" },\n    0x08a6: { n:\"RichTextStream\" },\n    0x08a7: { n:\"CrtLayout12A\" },\n    0x1001: { n:\"Units\" },\n    0x1002: { n:\"Chart\" },\n    0x1003: { n:\"Series\" },\n    0x1006: { n:\"DataFormat\" },\n    0x1007: { n:\"LineFormat\" },\n    0x1009: { n:\"MarkerFormat\" },\n    0x100a: { n:\"AreaFormat\" },\n    0x100b: { n:\"PieFormat\" },\n    0x100c: { n:\"AttachedLabel\" },\n    0x100d: { n:\"SeriesText\" },\n    0x1014: { n:\"ChartFormat\" },\n    0x1015: { n:\"Legend\" },\n    0x1016: { n:\"SeriesList\" },\n    0x1017: { n:\"Bar\" },\n    0x1018: { n:\"Line\" },\n    0x1019: { n:\"Pie\" },\n    0x101a: { n:\"Area\" },\n    0x101b: { n:\"Scatter\" },\n    0x101c: { n:\"CrtLine\" },\n    0x101d: { n:\"Axis\" },\n    0x101e: { n:\"Tick\" },\n    0x101f: { n:\"ValueRange\" },\n    0x1020: { n:\"CatSerRange\" },\n    0x1021: { n:\"AxisLine\" },\n    0x1022: { n:\"CrtLink\" },\n    0x1024: { n:\"DefaultText\" },\n    0x1025: { n:\"Text\" },\n    0x1026: { n:\"FontX\", f:parseuint16 },\n    0x1027: { n:\"ObjectLink\" },\n    0x1032: { n:\"Frame\" },\n    0x1033: { n:\"Begin\" },\n    0x1034: { n:\"End\" },\n    0x1035: { n:\"PlotArea\" },\n    0x103a: { n:\"Chart3d\" },\n    0x103c: { n:\"PicF\" },\n    0x103d: { n:\"DropBar\" },\n    0x103e: { n:\"Radar\" },\n    0x103f: { n:\"Surf\" },\n    0x1040: { n:\"RadarArea\" },\n    0x1041: { n:\"AxisParent\" },\n    0x1043: { n:\"LegendException\" },\n    0x1044: { n:\"ShtProps\", f:parse_ShtProps },\n    0x1045: { n:\"SerToCrt\" },\n    0x1046: { n:\"AxesUsed\" },\n    0x1048: { n:\"SBaseRef\" },\n    0x104a: { n:\"SerParent\" },\n    0x104b: { n:\"SerAuxTrend\" },\n    0x104e: { n:\"IFmtRecord\" },\n    0x104f: { n:\"Pos\" },\n    0x1050: { n:\"AlRuns\" },\n    0x1051: { n:\"BRAI\" },\n    0x105b: { n:\"SerAuxErrBar\" },\n    0x105c: { n:\"ClrtClient\", f:parse_ClrtClient },\n    0x105d: { n:\"SerFmt\" },\n    0x105f: { n:\"Chart3DBarShape\" },\n    0x1060: { n:\"Fbi\" },\n    0x1061: { n:\"BopPop\" },\n    0x1062: { n:\"AxcExt\" },\n    0x1063: { n:\"Dat\" },\n    0x1064: { n:\"PlotGrowth\" },\n    0x1065: { n:\"SIIndex\" },\n    0x1066: { n:\"GelFrame\" },\n    0x1067: { n:\"BopPopCustom\" },\n    0x1068: { n:\"Fbi2\" },\n\n    0x0000: { n:\"Dimensions\", f:parse_Dimensions },\n    0x0002: { n:\"BIFF2INT\", f:parse_BIFF2INT },\n    0x0005: { n:\"BoolErr\", f:parse_BoolErr },\n    0x0007: { n:\"String\", f:parse_BIFF2STRING },\n    0x0008: { n:\"BIFF2ROW\" },\n    0x000b: { n:\"Index\" },\n    0x0016: { n:\"ExternCount\", f:parseuint16 },\n    0x001e: { n:\"BIFF2FORMAT\", f:parse_BIFF2Format },\n    0x001f: { n:\"BIFF2FMTCNT\" }, /* 16-bit cnt of BIFF2FORMAT records */\n    0x0020: { n:\"BIFF2COLINFO\" },\n    0x0021: { n:\"Array\", f:parse_Array },\n    0x0025: { n:\"DefaultRowHeight\", f:parse_DefaultRowHeight },\n    0x0032: { n:\"BIFF2FONTXTRA\", f:parse_BIFF2FONTXTRA },\n    0x0034: { n:\"DDEObjName\" },\n    0x003e: { n:\"BIFF2WINDOW2\" },\n    0x0043: { n:\"BIFF2XF\" },\n    0x0045: { n:\"BIFF2FONTCLR\" },\n    0x0056: { n:\"BIFF4FMTCNT\" }, /* 16-bit cnt, similar to BIFF2 */\n    0x007e: { n:\"RK\" }, /* Not necessarily same as 0x027e */\n    0x007f: { n:\"ImData\", f:parse_ImData },\n    0x0087: { n:\"Addin\" },\n    0x0088: { n:\"Edg\" },\n    0x0089: { n:\"Pub\" },\n    0x0091: { n:\"Sub\" },\n    0x0094: { n:\"LHRecord\" },\n    0x0095: { n:\"LHNGraph\" },\n    0x0096: { n:\"Sound\" },\n    0x00a9: { n:\"CoordList\" },\n    0x00ab: { n:\"GCW\" },\n    0x00bc: { n:\"ShrFmla\" }, /* Not necessarily same as 0x04bc */\n    0x00bf: { n:\"ToolbarHdr\" },\n    0x00c0: { n:\"ToolbarEnd\" },\n    0x00c2: { n:\"AddMenu\" },\n    0x00c3: { n:\"DelMenu\" },\n    0x00d6: { n:\"RString\", f:parse_RString },\n    0x00df: { n:\"UDDesc\" },\n    0x00ea: { n:\"TabIdConf\" },\n    0x0162: { n:\"XL5Modify\" },\n    0x01a5: { n:\"FileSharing2\" },\n    0x0209: { n:'BOF', f:parse_BOF },\n    0x0218: { n:\"Lbl\", f:parse_Lbl },\n    0x0223: { n:\"ExternName\", f:parse_ExternName },\n    0x0231: { n:\"Font\" },\n    0x0243: { n:\"BIFF3XF\" },\n    0x0409: { n:'BOF', f:parse_BOF },\n    0x0443: { n:\"BIFF4XF\" },\n    0x086d: { n:\"FeatInfo\" },\n    0x0873: { n:\"FeatInfo11\" },\n    0x0881: { n:\"SXAddl12\" },\n    0x08c0: { n:\"AutoWebPub\" },\n    0x08c1: { n:\"ListObj\" },\n    0x08c2: { n:\"ListField\" },\n    0x08c3: { n:\"ListDV\" },\n    0x08c4: { n:\"ListCondFmt\" },\n    0x08c5: { n:\"ListCF\" },\n    0x08c6: { n:\"FMQry\" },\n    0x08c7: { n:\"FMSQry\" },\n    0x08c8: { n:\"PLV\" },\n    0x08c9: { n:\"LnExt\" },\n    0x08ca: { n:\"MkrExt\" },\n    0x08cb: { n:\"CrtCoopt\" },\n    0x08d6: { n:\"FRTArchId$\", r:12 },\n\n    0x7262: {}\n  };\n\n  var XLSRE = evert_key(XLSRecordEnum, 'n');\n  function write_biff_rec(ba, type, payload, length) {\n    var t = +type || +XLSRE[type];\n    if(isNaN(t)) return;\n    var len = length || (payload||[]).length || 0;\n    var o = ba.next(4);\n    o.write_shift(2, t);\n    o.write_shift(2, len);\n    if(len > 0 && is_buf(payload)) ba.push(payload);\n  }\n\n  function write_BIFF2Cell(out, r, c) {\n    if(!out) out = new_buf(7);\n    out.write_shift(2, r);\n    out.write_shift(2, c);\n    out.write_shift(2, 0);\n    out.write_shift(1, 0);\n    return out;\n  }\n\n  function write_BIFF2BERR(r, c, val, t) {\n    var out = new_buf(9);\n    write_BIFF2Cell(out, r, c);\n    if(t == 'e') { out.write_shift(1, val); out.write_shift(1, 1); }\n    else { out.write_shift(1, val?1:0); out.write_shift(1, 0); }\n    return out;\n  }\n\n  /* TODO: codepage, large strings */\n  function write_BIFF2LABEL(r, c, val) {\n    var out = new_buf(8 + 2*val.length);\n    write_BIFF2Cell(out, r, c);\n    out.write_shift(1, val.length);\n    out.write_shift(val.length, val, 'sbcs');\n    return out.l < out.length ? out.slice(0, out.l) : out;\n  }\n\n  function write_ws_biff2_cell(ba, cell, R, C) {\n    if(cell.v != null) switch(cell.t) {\n      case 'd': case 'n':\n        var v = cell.t == 'd' ? datenum(parseDate(cell.v)) : cell.v;\n        if((v == (v|0)) && (v >= 0) && (v < 65536))\n          write_biff_rec(ba, 0x0002, write_BIFF2INT(R, C, v));\n        else\n          write_biff_rec(ba, 0x0003, write_BIFF2NUM(R,C, v));\n        return;\n      case 'b': case 'e': write_biff_rec(ba, 0x0005, write_BIFF2BERR(R, C, cell.v, cell.t)); return;\n      /* TODO: codepage, sst */\n      case 's': case 'str':\n        write_biff_rec(ba, 0x0004, write_BIFF2LABEL(R, C, cell.v));\n        return;\n    }\n    write_biff_rec(ba, 0x0001, write_BIFF2Cell(null, R, C));\n  }\n\n  function write_ws_biff2(ba, ws, idx, opts) {\n    var dense = Array.isArray(ws);\n    var range = safe_decode_range(ws['!ref'] || \"A1\"), ref, rr = \"\", cols = [];\n    if(range.e.c > 0xFF || range.e.r > 0x3FFF) {\n      if(opts.WTF) throw new Error(\"Range \" + (ws['!ref'] || \"A1\") + \" exceeds format limit A1:IV16384\");\n      range.e.c = Math.min(range.e.c, 0xFF);\n      range.e.r = Math.min(range.e.c, 0x3FFF);\n      ref = encode_range(range);\n    }\n    for(var R = range.s.r; R <= range.e.r; ++R) {\n      rr = encode_row(R);\n      for(var C = range.s.c; C <= range.e.c; ++C) {\n        if(R === range.s.r) cols[C] = encode_col(C);\n        ref = cols[C] + rr;\n        var cell = dense ? (ws[R]||[])[C] : ws[ref];\n        if(!cell) continue;\n        /* write cell */\n        write_ws_biff2_cell(ba, cell, R, C, opts);\n      }\n    }\n  }\n\n  /* Based on test files */\n  function write_biff2_buf(wb, opts) {\n    var o = opts || {};\n    if(DENSE != null && o.dense == null) o.dense = DENSE;\n    var ba = buf_array();\n    var idx = 0;\n    for(var i=0;i<wb.SheetNames.length;++i) if(wb.SheetNames[i] == o.sheet) idx=i;\n    if(idx == 0 && !!o.sheet && wb.SheetNames[0] != o.sheet) throw new Error(\"Sheet not found: \" + o.sheet);\n    write_biff_rec(ba, 0x0009, write_BOF(wb, 0x10, o));\n    /* ... */\n    write_ws_biff2(ba, wb.Sheets[wb.SheetNames[idx]], idx, o, wb);\n    /* ... */\n    write_biff_rec(ba, 0x000A);\n    return ba.end();\n  }\n\n  function write_FONTS_biff8(ba, data, opts) {\n    write_biff_rec(ba, \"Font\", write_Font({\n      sz:12,\n      color: {theme:1},\n      name: \"Arial\",\n      family: 2,\n      scheme: \"minor\"\n    }, opts));\n  }\n\n\n  function write_FMTS_biff8(ba, NF, opts) {\n    if(!NF) return;\n    [[5,8],[23,26],[41,44],[/*63*/50,/*66],[164,*/392]].forEach(function(r) {\n      for(var i = r[0]; i <= r[1]; ++i) if(NF[i] != null) write_biff_rec(ba, \"Format\", write_Format(i, NF[i], opts));\n    });\n  }\n\n  function write_FEAT(ba, ws) {\n    /* [MS-XLS] 2.4.112 */\n    var o = new_buf(19);\n    o.write_shift(4, 0x867); o.write_shift(4, 0); o.write_shift(4, 0);\n    o.write_shift(2, 3); o.write_shift(1, 1); o.write_shift(4, 0);\n    write_biff_rec(ba, \"FeatHdr\", o);\n    /* [MS-XLS] 2.4.111 */\n    o = new_buf(39);\n    o.write_shift(4, 0x868); o.write_shift(4, 0); o.write_shift(4, 0);\n    o.write_shift(2, 3); o.write_shift(1, 0); o.write_shift(4, 0);\n    o.write_shift(2, 1); o.write_shift(4, 4); o.write_shift(2, 0);\n    write_Ref8U(safe_decode_range(ws['!ref']||\"A1\"), o);\n    o.write_shift(4, 4);\n    write_biff_rec(ba, \"Feat\", o);\n  }\n\n  function write_CELLXFS_biff8(ba, opts) {\n    for(var i = 0; i < 16; ++i) write_biff_rec(ba, \"XF\", write_XF({numFmtId:0, style:true}, 0, opts));\n    opts.cellXfs.forEach(function(c) {\n      write_biff_rec(ba, \"XF\", write_XF(c, 0, opts));\n    });\n  }\n\n  function write_ws_biff8_hlinks(ba, ws) {\n    for(var R=0; R<ws['!links'].length; ++R) {\n      var HL = ws['!links'][R];\n      write_biff_rec(ba, \"HLink\", write_HLink(HL));\n      if(HL[1].Tooltip) write_biff_rec(ba, \"HLinkTooltip\", write_HLinkTooltip(HL));\n    }\n    delete ws['!links'];\n  }\n\n  function write_ws_biff8_cell(ba, cell, R, C, opts) {\n    var os = 16 + get_cell_style(opts.cellXfs, cell, opts);\n    if(cell.v != null) switch(cell.t) {\n      case 'd': case 'n':\n        var v = cell.t == 'd' ? datenum(parseDate(cell.v)) : cell.v;\n        /* TODO: emit RK as appropriate */\n        write_biff_rec(ba, \"Number\", write_Number(R, C, v, os, opts));\n        return;\n      case 'b': case 'e': write_biff_rec(ba, 0x0205, write_BoolErr(R, C, cell.v, os, opts, cell.t)); return;\n      /* TODO: codepage, sst */\n      case 's': case 'str':\n        write_biff_rec(ba, \"Label\", write_Label(R, C, cell.v, os, opts));\n        return;\n    }\n    write_biff_rec(ba, \"Blank\", write_XLSCell(R, C, os));\n  }\n\n  /* [MS-XLS] 2.1.7.20.5 */\n  function write_ws_biff8(idx, opts, wb) {\n    var ba = buf_array();\n    var s = wb.SheetNames[idx], ws = wb.Sheets[s] || {};\n    var _WB = ((wb||{}).Workbook||{});\n    var _sheet = ((_WB.Sheets||[])[idx]||{});\n    var dense = Array.isArray(ws);\n    var b8 = opts.biff == 8;\n    var ref, rr = \"\", cols = [];\n    var range = safe_decode_range(ws['!ref'] || \"A1\");\n    var MAX_ROWS = b8 ? 65536 : 16384;\n    if(range.e.c > 0xFF || range.e.r >= MAX_ROWS) {\n      if(opts.WTF) throw new Error(\"Range \" + (ws['!ref'] || \"A1\") + \" exceeds format limit A1:IV16384\");\n      range.e.c = Math.min(range.e.c, 0xFF);\n      range.e.r = Math.min(range.e.c, MAX_ROWS-1);\n    }\n\n    write_biff_rec(ba, 0x0809, write_BOF(wb, 0x10, opts));\n    /* ... */\n    write_biff_rec(ba, \"CalcMode\", writeuint16(1));\n    write_biff_rec(ba, \"CalcCount\", writeuint16(100));\n    write_biff_rec(ba, \"CalcRefMode\", writebool(true));\n    write_biff_rec(ba, \"CalcIter\", writebool(false));\n    write_biff_rec(ba, \"CalcDelta\", write_Xnum(0.001));\n    write_biff_rec(ba, \"CalcSaveRecalc\", writebool(true));\n    write_biff_rec(ba, \"PrintRowCol\", writebool(false));\n    write_biff_rec(ba, \"PrintGrid\", writebool(false));\n    write_biff_rec(ba, \"GridSet\", writeuint16(1));\n    write_biff_rec(ba, \"Guts\", write_Guts([0,0]));\n    /* ... */\n    write_biff_rec(ba, \"HCenter\", writebool(false));\n    write_biff_rec(ba, \"VCenter\", writebool(false));\n    /* ... */\n    write_biff_rec(ba, 0x200, write_Dimensions(range, opts));\n    /* ... */\n\n    if(b8) ws['!links'] = [];\n    for(var R = range.s.r; R <= range.e.r; ++R) {\n      rr = encode_row(R);\n      for(var C = range.s.c; C <= range.e.c; ++C) {\n        if(R === range.s.r) cols[C] = encode_col(C);\n        ref = cols[C] + rr;\n        var cell = dense ? (ws[R]||[])[C] : ws[ref];\n        if(!cell) continue;\n        /* write cell */\n        write_ws_biff8_cell(ba, cell, R, C, opts);\n        if(b8 && cell.l) ws['!links'].push([ref, cell.l]);\n      }\n    }\n    var cname = _sheet.CodeName || _sheet.name || s;\n    /* ... */\n    if(b8 && _WB.Views) write_biff_rec(ba, \"Window2\", write_Window2(_WB.Views[0]));\n    /* ... */\n    if(b8 && (ws['!merges']||[]).length) write_biff_rec(ba, \"MergeCells\", write_MergeCells(ws['!merges']));\n    /* ... */\n    if(b8) write_ws_biff8_hlinks(ba, ws);\n    /* ... */\n    write_biff_rec(ba, \"CodeName\", write_XLUnicodeString(cname, opts));\n    /* ... */\n    if(b8) write_FEAT(ba, ws);\n    /* ... */\n    write_biff_rec(ba, \"EOF\");\n    return ba.end();\n  }\n\n  /* [MS-XLS] 2.1.7.20.3 */\n  function write_biff8_global(wb, bufs, opts) {\n    var A = buf_array();\n    var _WB = ((wb||{}).Workbook||{});\n    var _sheets = (_WB.Sheets||[]);\n    var _wb = _WB.WBProps||{};\n    var b8 = opts.biff == 8, b5 = opts.biff == 5;\n    write_biff_rec(A, 0x0809, write_BOF(wb, 0x05, opts));\n    if(opts.bookType == \"xla\") write_biff_rec(A, \"Addin\");\n    write_biff_rec(A, \"InterfaceHdr\", b8 ? writeuint16(0x04b0) : null);\n    write_biff_rec(A, \"Mms\", writezeroes(2));\n    if(b5) write_biff_rec(A, \"ToolbarHdr\");\n    if(b5) write_biff_rec(A, \"ToolbarEnd\");\n    write_biff_rec(A, \"InterfaceEnd\");\n    write_biff_rec(A, \"WriteAccess\", write_WriteAccess(\"SheetJS\", opts));\n    write_biff_rec(A, \"CodePage\", writeuint16(b8 ? 0x04b0 : 0x04E4));\n    if(b8) write_biff_rec(A, \"DSF\", writeuint16(0));\n    if(b8) write_biff_rec(A, \"Excel9File\");\n    write_biff_rec(A, \"RRTabId\", write_RRTabId(wb.SheetNames.length));\n    if(b8 && wb.vbaraw) {\n      write_biff_rec(A, \"ObProj\");\n      var cname = _wb.CodeName || \"ThisWorkbook\";\n      write_biff_rec(A, \"CodeName\", write_XLUnicodeString(cname, opts));\n    }\n    write_biff_rec(A, \"BuiltInFnGroupCount\", writeuint16(0x11));\n    write_biff_rec(A, \"WinProtect\", writebool(false));\n    write_biff_rec(A, \"Protect\", writebool(false));\n    write_biff_rec(A, \"Password\", writeuint16(0));\n    if(b8) write_biff_rec(A, \"Prot4Rev\", writebool(false));\n    if(b8) write_biff_rec(A, \"Prot4RevPass\", writeuint16(0));\n    write_biff_rec(A, \"Window1\", write_Window1(opts));\n    write_biff_rec(A, \"Backup\", writebool(false));\n    write_biff_rec(A, \"HideObj\", writeuint16(0));\n    write_biff_rec(A, \"Date1904\", writebool(safe1904(wb)==\"true\"));\n    write_biff_rec(A, \"CalcPrecision\", writebool(true));\n    if(b8) write_biff_rec(A, \"RefreshAll\", writebool(false));\n    write_biff_rec(A, \"BookBool\", writeuint16(0));\n    /* ... */\n    write_FONTS_biff8(A, wb, opts);\n    write_FMTS_biff8(A, wb.SSF, opts);\n    write_CELLXFS_biff8(A, opts);\n    /* ... */\n    if(b8) write_biff_rec(A, \"UsesELFs\", writebool(false));\n    var a = A.end();\n\n    var C = buf_array();\n    if(b8) write_biff_rec(C, \"Country\", write_Country());\n    /* BIFF8: [SST *Continue] ExtSST */\n    write_biff_rec(C, \"EOF\");\n    var c = C.end();\n\n    var B = buf_array();\n    var blen = 0, j = 0;\n    for(j = 0; j < wb.SheetNames.length; ++j) blen += (b8 ? 12 : 11) + (b8 ? 2 : 1) * wb.SheetNames[j].length;\n    var start = a.length + blen + c.length;\n    for(j = 0; j < wb.SheetNames.length; ++j) {\n      var _sheet = _sheets[j] || ({});\n      write_biff_rec(B, \"BoundSheet8\", write_BoundSheet8({pos:start, hs:_sheet.Hidden||0, dt:0, name:wb.SheetNames[j]}, opts));\n      start += bufs[j].length;\n    }\n    /* 1*BoundSheet8 */\n    var b = B.end();\n    if(blen != b.length) throw new Error(\"BS8 \" + blen + \" != \" + b.length);\n\n    var out = [];\n    if(a.length) out.push(a);\n    if(b.length) out.push(b);\n    if(c.length) out.push(c);\n    return __toBuffer([out]);\n  }\n\n  /* [MS-XLS] 2.1.7.20 Workbook Stream */\n  function write_biff8_buf(wb, opts) {\n    var o = opts || {};\n    var bufs = [];\n\n    if(wb && !wb.SSF) {\n      wb.SSF = SSF.get_table();\n    }\n    if(wb && wb.SSF) {\n      make_ssf(SSF); SSF.load_table(wb.SSF);\n      // $FlowIgnore\n      o.revssf = evert_num(wb.SSF); o.revssf[wb.SSF[65535]] = 0;\n      o.ssf = wb.SSF;\n    }\n    o.cellXfs = [];\n    o.Strings = []; o.Strings.Count = 0; o.Strings.Unique = 0;\n    get_cell_style(o.cellXfs, {}, {revssf:{\"General\":0}});\n\n    for(var i = 0; i < wb.SheetNames.length; ++i) bufs[bufs.length] = write_ws_biff8(i, o, wb);\n    bufs.unshift(write_biff8_global(wb, bufs, o));\n    return __toBuffer([bufs]);\n  }\n\n  function write_biff_buf(wb, opts) {\n    var o = opts || {};\n    switch(o.biff || 2) {\n      case 8: case 5: return write_biff8_buf(wb, opts);\n      case 4: case 3: case 2: return write_biff2_buf(wb, opts);\n    }\n    throw new Error(\"invalid type \" + o.bookType + \" for BIFF\");\n  }\n  /* note: browser DOM element cannot see mso- style attrs, must parse */\n  var HTML_ = (function() {\n    function html_to_sheet(str, _opts) {\n      var opts = _opts || {};\n      if(DENSE != null && opts.dense == null) opts.dense = DENSE;\n      var ws = opts.dense ? ([]) : ({});\n      var mtch = str.match(/<table/i);\n      if(!mtch) throw new Error(\"Invalid HTML: could not find <table>\");\n      var mtch2 = str.match(/<\\/table/i);\n      var i = mtch.index, j = mtch2 && mtch2.index || str.length;\n      var rows = split_regex(str.slice(i, j), /(:?<tr[^>]*>)/i, \"<tr>\");\n      var R = -1, C = 0, RS = 0, CS = 0;\n      var range = {s:{r:10000000, c:10000000},e:{r:0,c:0}};\n      var merges = [];\n      for(i = 0; i < rows.length; ++i) {\n        var row = rows[i].trim();\n        var hd = row.slice(0,3).toLowerCase();\n        if(hd == \"<tr\") { ++R; if(opts.sheetRows && opts.sheetRows <= R) { --R; break; } C = 0; continue; }\n        if(hd != \"<td\" && hd != \"<th\") continue;\n        var cells = row.split(/<\\/t[dh]>/i);\n        for(j = 0; j < cells.length; ++j) {\n          var cell = cells[j].trim();\n          if(!cell.match(/<t[dh]/i)) continue;\n          var m = cell, cc = 0;\n          /* TODO: parse styles etc */\n          while(m.charAt(0) == \"<\" && (cc = m.indexOf(\">\")) > -1) m = m.slice(cc+1);\n          var tag = parsexmltag(cell.slice(0, cell.indexOf(\">\")));\n          CS = tag.colspan ? +tag.colspan : 1;\n          if((RS = +tag.rowspan)>1 || CS>1) merges.push({s:{r:R,c:C},e:{r:R + (RS||1) - 1, c:C + CS - 1}});\n          var _t = tag.t || \"\";\n          /* TODO: generate stub cells */\n          if(!m.length) { C += CS; continue; }\n          m = htmldecode(m);\n          if(range.s.r > R) range.s.r = R; if(range.e.r < R) range.e.r = R;\n          if(range.s.c > C) range.s.c = C; if(range.e.c < C) range.e.c = C;\n          if(!m.length) continue;\n          var o = {t:'s', v:m};\n          if(opts.raw || !m.trim().length || _t == 's'){}\n          else if(m === 'TRUE') o = {t:'b', v:true};\n          else if(m === 'FALSE') o = {t:'b', v:false};\n          else if(!isNaN(fuzzynum(m))) o = {t:'n', v:fuzzynum(m)};\n          else if(!isNaN(fuzzydate(m).getDate())) {\n            o = ({t:'d', v:parseDate(m)});\n            if(!opts.cellDates) o = ({t:'n', v:datenum(o.v)});\n            o.z = opts.dateNF || SSF._table[14];\n          }\n          if(opts.dense) { if(!ws[R]) ws[R] = []; ws[R][C] = o; }\n          else ws[encode_cell({r:R, c:C})] = o;\n          C += CS;\n        }\n      }\n      ws['!ref'] = encode_range(range);\n      return ws;\n    }\n    function html_to_book(str, opts) {\n      return sheet_to_workbook(html_to_sheet(str, opts), opts);\n    }\n    function make_html_row(ws, r, R, o) {\n      var M = (ws['!merges'] ||[]);\n      var oo = [];\n      for(var C = r.s.c; C <= r.e.c; ++C) {\n        var RS = 0, CS = 0;\n        for(var j = 0; j < M.length; ++j) {\n          if(M[j].s.r > R || M[j].s.c > C) continue;\n          if(M[j].e.r < R || M[j].e.c < C) continue;\n          if(M[j].s.r < R || M[j].s.c < C) { RS = -1; break; }\n          RS = M[j].e.r - M[j].s.r + 1; CS = M[j].e.c - M[j].s.c + 1; break;\n        }\n        if(RS < 0) continue;\n        var coord = encode_cell({r:R,c:C});\n        var cell = o.dense ? (ws[R]||[])[C] : ws[coord];\n        var sp = {};\n        if(RS > 1) sp.rowspan = RS;\n        if(CS > 1) sp.colspan = CS;\n        /* TODO: html entities */\n        var w = (cell && cell.v != null) && (cell.h || escapehtml(cell.w || (format_cell(cell), cell.w) || \"\")) || \"\";\n        sp.t = cell && cell.t || 'z';\n        if(o.editable) w = '<span contenteditable=\"true\">' + w + '</span>';\n        sp.id = \"sjs-\" + coord;\n        oo.push(writextag('td', w, sp));\n      }\n      var preamble = \"<tr>\";\n      return preamble + oo.join(\"\") + \"</tr>\";\n    }\n    function make_html_preamble(ws, R, o) {\n      var out = [];\n      return out.join(\"\") + '<table' + (o && o.id ? ' id=\"' + o.id + '\"' : \"\") + '>';\n    }\n    var _BEGIN = '<html><head><meta charset=\"utf-8\"/><title>SheetJS Table Export</title></head><body>';\n    var _END = '</body></html>';\n    function sheet_to_html(ws, opts/*, wb:?Workbook*/) {\n      var o = opts || {};\n      var header = o.header != null ? o.header : _BEGIN;\n      var footer = o.footer != null ? o.footer : _END;\n      var out = [header];\n      var r = decode_range(ws['!ref']);\n      o.dense = Array.isArray(ws);\n      out.push(make_html_preamble(ws, r, o));\n      for(var R = r.s.r; R <= r.e.r; ++R) out.push(make_html_row(ws, r, R, o));\n      out.push(\"</table>\" + footer);\n      return out.join(\"\");\n    }\n\n    return {\n      to_workbook: html_to_book,\n      to_sheet: html_to_sheet,\n      _row: make_html_row,\n      BEGIN: _BEGIN,\n      END: _END,\n      _preamble: make_html_preamble,\n      from_sheet: sheet_to_html\n    };\n  })();\n\n  function parse_dom_table(table, _opts) {\n    var opts = _opts || {};\n    if(DENSE != null) opts.dense = DENSE;\n    var ws = opts.dense ? ([]) : ({});\n    var rows = table.getElementsByTagName('tr');\n    var sheetRows = opts.sheetRows || 10000000;\n    var range = {s:{r:0,c:0},e:{r:0,c:0}};\n    var merges = [], midx = 0;\n    var rowinfo = [];\n    var _R = 0, R = 0, _C, C, RS, CS;\n    for(; _R < rows.length && R < sheetRows; ++_R) {\n      var row = rows[_R];\n      if (is_dom_element_hidden(row)) {\n        if (opts.display) continue;\n        rowinfo[R] = {hidden: true};\n      }\n      var elts = (row.children);\n      for(_C = C = 0; _C < elts.length; ++_C) {\n        var elt = elts[_C];\n        if (opts.display && is_dom_element_hidden(elt)) continue;\n        var v = htmldecode(elt.innerHTML);\n        for(midx = 0; midx < merges.length; ++midx) {\n          var m = merges[midx];\n          if(m.s.c == C && m.s.r <= R && R <= m.e.r) { C = m.e.c+1; midx = -1; }\n        }\n        /* TODO: figure out how to extract nonstandard mso- style */\n        CS = +elt.getAttribute(\"colspan\") || 1;\n        if((RS = +elt.getAttribute(\"rowspan\"))>0 || CS>1) merges.push({s:{r:R,c:C},e:{r:R + (RS||1) - 1, c:C + CS - 1}});\n        var o = {t:'s', v:v};\n        var _t = elt.getAttribute(\"t\") || \"\";\n        if(v != null) {\n          if(v.length == 0) o.t = _t || 'z';\n          else if(opts.raw || v.trim().length == 0 || _t == \"s\"){}\n          else if(v === 'TRUE') o = {t:'b', v:true};\n          else if(v === 'FALSE') o = {t:'b', v:false};\n          else if(!isNaN(fuzzynum(v))) o = {t:'n', v:fuzzynum(v)};\n          else if(!isNaN(fuzzydate(v).getDate())) {\n            o = ({t:'d', v:parseDate(v)});\n            if(!opts.cellDates) o = ({t:'n', v:datenum(o.v)});\n            o.z = opts.dateNF || SSF._table[14];\n          }\n        }\n        if(opts.dense) { if(!ws[R]) ws[R] = []; ws[R][C] = o; }\n        else ws[encode_cell({c:C, r:R})] = o;\n        if(range.e.c < C) range.e.c = C;\n        C += CS;\n      }\n      ++R;\n    }\n    if(merges.length) ws['!merges'] = merges;\n    if(rowinfo.length) ws['!rows'] = rowinfo;\n    range.e.r = R - 1;\n    ws['!ref'] = encode_range(range);\n    if(R >= sheetRows) ws['!fullref'] = encode_range((range.e.r = rows.length-_R+R-1,range)); // We can count the real number of rows to parse but we don't to improve the performance\n    return ws;\n  }\n\n  function table_to_book(table, opts) {\n    return sheet_to_workbook(parse_dom_table(table, opts), opts);\n  }\n\n  function is_dom_element_hidden(element) {\n    var display = '';\n    var get_computed_style = get_get_computed_style_function(element);\n    if(get_computed_style) display = get_computed_style(element).getPropertyValue('display');\n    if(!display) display = element.style.display; // Fallback for cases when getComputedStyle is not available (e.g. an old browser or some Node.js environments) or doesn't work (e.g. if the element is not inserted to a document)\n    return display === 'none';\n  }\n\n  /* global getComputedStyle */\n  function get_get_computed_style_function(element) {\n    // The proper getComputedStyle implementation is the one defined in the element window\n    if(element.ownerDocument.defaultView && typeof element.ownerDocument.defaultView.getComputedStyle === 'function') return element.ownerDocument.defaultView.getComputedStyle;\n    // If it is not available, try to get one from the global namespace\n    if(typeof getComputedStyle === 'function') return getComputedStyle;\n    return null;\n  }\n  /* OpenDocument */\n  var parse_content_xml = (function() {\n\n    var parse_text_p = function(text) {\n      /* 6.1.2 White Space Characters */\n      var fixed = text\n        .replace(/[\\t\\r\\n]/g, \" \").trim().replace(/ +/g, \" \")\n        .replace(/<text:s\\/>/g,\" \")\n        .replace(/<text:s text:c=\"(\\d+)\"\\/>/g, function($$,$1) { return Array(parseInt($1,10)+1).join(\" \"); })\n        .replace(/<text:tab[^>]*\\/>/g,\"\\t\")\n        .replace(/<text:line-break\\/>/g,\"\\n\");\n      var v = unescapexml(fixed.replace(/<[^>]*>/g,\"\"));\n\n      return [v];\n    };\n\n    var number_formats = {\n      /* ods name: [short ssf fmt, long ssf fmt] */\n      day:           [\"d\",   \"dd\"],\n      month:         [\"m\",   \"mm\"],\n      year:          [\"y\",   \"yy\"],\n      hours:         [\"h\",   \"hh\"],\n      minutes:       [\"m\",   \"mm\"],\n      seconds:       [\"s\",   \"ss\"],\n      \"am-pm\":       [\"A/P\", \"AM/PM\"],\n      \"day-of-week\": [\"ddd\", \"dddd\"],\n      era:           [\"e\",   \"ee\"],\n      /* there is no native representation of LO \"Q\" format */\n      quarter:       [\"\\\\Qm\", \"m\\\\\\\"th quarter\\\"\"]\n    };\n\n    return function pcx(d, _opts) {\n      var opts = _opts || {};\n      if(DENSE != null && opts.dense == null) opts.dense = DENSE;\n      var str = xlml_normalize(d);\n      var state = [], tmp;\n      var tag;\n      var NFtag = {name:\"\"}, NF = \"\", pidx = 0;\n      var sheetag;\n      var rowtag;\n      var Sheets = {}, SheetNames = [];\n      var ws = opts.dense ? ([]) : ({});\n      var Rn, q;\n      var ctag = ({value:\"\"});\n      var textp = \"\", textpidx = 0, textptag;\n      var textR = [];\n      var R = -1, C = -1, range = {s: {r:1000000,c:10000000}, e: {r:0, c:0}};\n      var row_ol = 0;\n      var number_format_map = {};\n      var merges = [], mrange = {}, mR = 0, mC = 0;\n      var rowinfo = [], rowpeat = 1, colpeat = 1;\n      var arrayf = [];\n      var WB = {Names:[]};\n      var atag = ({});\n      var _Ref = [\"\", \"\"];\n      var comments = [], comment = ({});\n      var creator = \"\", creatoridx = 0;\n      var isstub = false, intable = false;\n      var i = 0;\n      xlmlregex.lastIndex = 0;\n      str = str.replace(/<!--([\\s\\S]*?)-->/mg,\"\").replace(/<!DOCTYPE[^\\[]*\\[[^\\]]*\\]>/gm,\"\");\n      while((Rn = xlmlregex.exec(str))) switch((Rn[3]=Rn[3].replace(/_.*$/,\"\"))) {\n\n        case 'table': case '工作表': // 9.1.2 <table:table>\n          if(Rn[1]==='/') {\n            if(range.e.c >= range.s.c && range.e.r >= range.s.r) ws['!ref'] = encode_range(range);\n            if(opts.sheetRows > 0 && opts.sheetRows <= range.e.r) {\n              ws['!fullref'] = ws['!ref'];\n              range.e.r = opts.sheetRows - 1;\n              ws['!ref'] = encode_range(range);\n            }\n            if(merges.length) ws['!merges'] = merges;\n            if(rowinfo.length) ws[\"!rows\"] = rowinfo;\n            sheetag.name = sheetag['名称'] || sheetag.name;\n            if(typeof JSON !== 'undefined') JSON.stringify(sheetag);\n            SheetNames.push(sheetag.name);\n            Sheets[sheetag.name] = ws;\n            intable = false;\n          }\n          else if(Rn[0].charAt(Rn[0].length-2) !== '/') {\n            sheetag = parsexmltag(Rn[0], false);\n            R = C = -1;\n            range.s.r = range.s.c = 10000000; range.e.r = range.e.c = 0;\n            ws = opts.dense ? ([]) : ({}); merges = [];\n            rowinfo = [];\n            intable = true;\n          }\n          break;\n\n        case 'table-row-group': // 9.1.9 <table:table-row-group>\n          if(Rn[1] === \"/\") --row_ol; else ++row_ol;\n          break;\n        case 'table-row': case '行': // 9.1.3 <table:table-row>\n          if(Rn[1] === '/') { R+=rowpeat; rowpeat = 1; break; }\n          rowtag = parsexmltag(Rn[0], false);\n          if(rowtag['行号']) R = rowtag['行号'] - 1; else if(R == -1) R = 0;\n          rowpeat = +rowtag['number-rows-repeated'] || 1;\n          /* TODO: remove magic */\n          if(rowpeat < 10) for(i = 0; i < rowpeat; ++i) if(row_ol > 0) rowinfo[R + i] = {level: row_ol};\n          C = -1; break;\n        case 'covered-table-cell': // 9.1.5 <table:covered-table-cell>\n          if(Rn[1] !== '/') ++C;\n          if(opts.sheetStubs) {\n            if(opts.dense) { if(!ws[R]) ws[R] = []; ws[R][C] = {t:'z'}; }\n            else ws[encode_cell({r:R,c:C})] = {t:'z'};\n          }\n          textp = \"\"; textR = [];\n          break; /* stub */\n        case 'table-cell': case '数据':\n          if(Rn[0].charAt(Rn[0].length-2) === '/') {\n            ++C;\n            ctag = parsexmltag(Rn[0], false);\n            colpeat = parseInt(ctag['number-columns-repeated']||\"1\", 10);\n            q = ({t:'z', v:null});\n            if(ctag.formula && opts.cellFormula != false) q.f = ods_to_csf_formula(unescapexml(ctag.formula));\n            if((ctag['数据类型'] || ctag['value-type']) == \"string\") {\n              q.t = \"s\"; q.v = unescapexml(ctag['string-value'] || \"\");\n              if(opts.dense) {\n                if(!ws[R]) ws[R] = [];\n                ws[R][C] = q;\n              } else {\n                ws[encode_cell({r:R,c:C})] = q;\n              }\n            }\n            C+= colpeat-1;\n          } else if(Rn[1]!=='/') {\n            ++C;\n            colpeat = 1;\n            var rptR = rowpeat ? R + rowpeat - 1 : R;\n            if(C > range.e.c) range.e.c = C;\n            if(C < range.s.c) range.s.c = C;\n            if(R < range.s.r) range.s.r = R;\n            if(rptR > range.e.r) range.e.r = rptR;\n            ctag = parsexmltag(Rn[0], false);\n            comments = []; comment = ({});\n            q = ({t:ctag['数据类型'] || ctag['value-type'], v:null});\n            if(opts.cellFormula) {\n              if(ctag.formula) ctag.formula = unescapexml(ctag.formula);\n              if(ctag['number-matrix-columns-spanned'] && ctag['number-matrix-rows-spanned']) {\n                mR = parseInt(ctag['number-matrix-rows-spanned'],10) || 0;\n                mC = parseInt(ctag['number-matrix-columns-spanned'],10) || 0;\n                mrange = {s: {r:R,c:C}, e:{r:R + mR-1,c:C + mC-1}};\n                q.F = encode_range(mrange);\n                arrayf.push([mrange, q.F]);\n              }\n              if(ctag.formula) q.f = ods_to_csf_formula(ctag.formula);\n              else for(i = 0; i < arrayf.length; ++i)\n                if(R >= arrayf[i][0].s.r && R <= arrayf[i][0].e.r)\n                  if(C >= arrayf[i][0].s.c && C <= arrayf[i][0].e.c)\n                    q.F = arrayf[i][1];\n            }\n            if(ctag['number-columns-spanned'] || ctag['number-rows-spanned']) {\n              mR = parseInt(ctag['number-rows-spanned'],10) || 0;\n              mC = parseInt(ctag['number-columns-spanned'],10) || 0;\n              mrange = {s: {r:R,c:C}, e:{r:R + mR-1,c:C + mC-1}};\n              merges.push(mrange);\n            }\n\n            /* 19.675.2 table:number-columns-repeated */\n            if(ctag['number-columns-repeated']) colpeat = parseInt(ctag['number-columns-repeated'], 10);\n\n            /* 19.385 office:value-type */\n            switch(q.t) {\n              case 'boolean': q.t = 'b'; q.v = parsexmlbool(ctag['boolean-value']); break;\n              case 'float': q.t = 'n'; q.v = parseFloat(ctag.value); break;\n              case 'percentage': q.t = 'n'; q.v = parseFloat(ctag.value); break;\n              case 'currency': q.t = 'n'; q.v = parseFloat(ctag.value); break;\n              case 'date': q.t = 'd'; q.v = parseDate(ctag['date-value']);\n                if(!opts.cellDates) { q.t = 'n'; q.v = datenum(q.v); }\n                q.z = 'm/d/yy'; break;\n              case 'time': q.t = 'n'; q.v = parse_isodur(ctag['time-value'])/86400; break;\n              case 'number': q.t = 'n'; q.v = parseFloat(ctag['数据数值']); break;\n              default:\n                if(q.t === 'string' || q.t === 'text' || !q.t) {\n                  q.t = 's';\n                  if(ctag['string-value'] != null) { textp = unescapexml(ctag['string-value']); textR = []; }\n                } else throw new Error('Unsupported value type ' + q.t);\n            }\n          } else {\n            isstub = false;\n            if(q.t === 's') {\n              q.v = textp || '';\n              if(textR.length) q.R = textR;\n              isstub = textpidx == 0;\n            }\n            if(atag.Target) q.l = atag;\n            if(comments.length > 0) { q.c = comments; comments = []; }\n            if(textp && opts.cellText !== false) q.w = textp;\n            if(!isstub || opts.sheetStubs) {\n              if(!(opts.sheetRows && opts.sheetRows <= R)) {\n                for(var rpt = 0; rpt < rowpeat; ++rpt) {\n                  colpeat = parseInt(ctag['number-columns-repeated']||\"1\", 10);\n                  if(opts.dense) {\n                    if(!ws[R + rpt]) ws[R + rpt] = [];\n                    ws[R + rpt][C] = rpt == 0 ? q : dup(q);\n                    while(--colpeat > 0) ws[R + rpt][C + colpeat] = dup(q);\n                  } else {\n                    ws[encode_cell({r:R + rpt,c:C})] = q;\n                    while(--colpeat > 0) ws[encode_cell({r:R + rpt,c:C + colpeat})] = dup(q);\n                  }\n                  if(range.e.c <= C) range.e.c = C;\n                }\n              }\n            }\n            colpeat = parseInt(ctag['number-columns-repeated']||\"1\", 10);\n            C += colpeat-1; colpeat = 0;\n            q = {};\n            textp = \"\"; textR = [];\n          }\n          atag = ({});\n          break; // 9.1.4 <table:table-cell>\n\n        /* pure state */\n        case 'document': // TODO: <office:document> is the root for FODS\n        case 'document-content': case '电子表格文档': // 3.1.3.2 <office:document-content>\n        case 'spreadsheet': case '主体': // 3.7 <office:spreadsheet>\n        case 'scripts': // 3.12 <office:scripts>\n        case 'styles': // TODO <office:styles>\n        case 'font-face-decls': // 3.14 <office:font-face-decls>\n          if(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw \"Bad state: \"+tmp;}\n          else if(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], true]);\n          break;\n\n        case 'annotation': // 14.1 <office:annotation>\n          if(Rn[1]==='/'){\n            if((tmp=state.pop())[0]!==Rn[3]) throw \"Bad state: \"+tmp;\n            comment.t = textp;\n            if(textR.length) comment.R = textR;\n            comment.a = creator;\n            comments.push(comment);\n          }\n          else if(Rn[0].charAt(Rn[0].length-2) !== '/') {state.push([Rn[3], false]);}\n          creator = \"\"; creatoridx = 0;\n          textp = \"\"; textpidx = 0; textR = [];\n          break;\n\n        case 'creator': // 4.3.2.7 <dc:creator>\n          if(Rn[1]==='/') { creator = str.slice(creatoridx,Rn.index); }\n          else creatoridx = Rn.index + Rn[0].length;\n          break;\n\n        /* ignore state */\n        case 'meta': case '元数据': // TODO: <office:meta> <uof:元数据> FODS/UOF\n        case 'settings': // TODO: <office:settings>\n        case 'config-item-set': // TODO: <office:config-item-set>\n        case 'config-item-map-indexed': // TODO: <office:config-item-map-indexed>\n        case 'config-item-map-entry': // TODO: <office:config-item-map-entry>\n        case 'config-item-map-named': // TODO: <office:config-item-map-entry>\n        case 'shapes': // 9.2.8 <table:shapes>\n        case 'frame': // 10.4.2 <draw:frame>\n        case 'text-box': // 10.4.3 <draw:text-box>\n        case 'image': // 10.4.4 <draw:image>\n        case 'data-pilot-tables': // 9.6.2 <table:data-pilot-tables>\n        case 'list-style': // 16.30 <text:list-style>\n        case 'form': // 13.13 <form:form>\n        case 'dde-links': // 9.8 <table:dde-links>\n        case 'event-listeners': // TODO\n        case 'chart': // TODO\n          if(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw \"Bad state: \"+tmp;}\n          else if(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], false]);\n          textp = \"\"; textpidx = 0; textR = [];\n          break;\n\n        case 'scientific-number': // TODO: <number:scientific-number>\n          break;\n        case 'currency-symbol': // TODO: <number:currency-symbol>\n          break;\n        case 'currency-style': // TODO: <number:currency-style>\n          break;\n        case 'number-style': // 16.27.2 <number:number-style>\n        case 'percentage-style': // 16.27.9 <number:percentage-style>\n        case 'date-style': // 16.27.10 <number:date-style>\n        case 'time-style': // 16.27.18 <number:time-style>\n          if(Rn[1]==='/'){\n            number_format_map[NFtag.name] = NF;\n            if((tmp=state.pop())[0]!==Rn[3]) throw \"Bad state: \"+tmp;\n          } else if(Rn[0].charAt(Rn[0].length-2) !== '/') {\n            NF = \"\";\n            NFtag = parsexmltag(Rn[0], false);\n            state.push([Rn[3], true]);\n          } break;\n\n        case 'script': break; // 3.13 <office:script>\n        case 'libraries': break; // TODO: <ooo:libraries>\n        case 'automatic-styles': break; // 3.15.3 <office:automatic-styles>\n        case 'master-styles': break; // TODO: <office:master-styles>\n\n        case 'default-style': // TODO: <style:default-style>\n        case 'page-layout': break; // TODO: <style:page-layout>\n        case 'style': // 16.2 <style:style>\n          break;\n        case 'map': break; // 16.3 <style:map>\n        case 'font-face': break; // 16.21 <style:font-face>\n\n        case 'paragraph-properties': break; // 17.6 <style:paragraph-properties>\n        case 'table-properties': break; // 17.15 <style:table-properties>\n        case 'table-column-properties': break; // 17.16 <style:table-column-properties>\n        case 'table-row-properties': break; // 17.17 <style:table-row-properties>\n        case 'table-cell-properties': break; // 17.18 <style:table-cell-properties>\n\n        case 'number': // 16.27.3 <number:number>\n          switch(state[state.length-1][0]) {\n            case 'time-style':\n            case 'date-style':\n              tag = parsexmltag(Rn[0], false);\n              NF += number_formats[Rn[3]][tag.style==='long'?1:0]; break;\n          } break;\n\n        case 'fraction': break; // TODO 16.27.6 <number:fraction>\n\n        case 'day': // 16.27.11 <number:day>\n        case 'month': // 16.27.12 <number:month>\n        case 'year': // 16.27.13 <number:year>\n        case 'era': // 16.27.14 <number:era>\n        case 'day-of-week': // 16.27.15 <number:day-of-week>\n        case 'week-of-year': // 16.27.16 <number:week-of-year>\n        case 'quarter': // 16.27.17 <number:quarter>\n        case 'hours': // 16.27.19 <number:hours>\n        case 'minutes': // 16.27.20 <number:minutes>\n        case 'seconds': // 16.27.21 <number:seconds>\n        case 'am-pm': // 16.27.22 <number:am-pm>\n          switch(state[state.length-1][0]) {\n            case 'time-style':\n            case 'date-style':\n              tag = parsexmltag(Rn[0], false);\n              NF += number_formats[Rn[3]][tag.style==='long'?1:0]; break;\n          } break;\n\n        case 'boolean-style': break; // 16.27.23 <number:boolean-style>\n        case 'boolean': break; // 16.27.24 <number:boolean>\n        case 'text-style': break; // 16.27.25 <number:text-style>\n        case 'text': // 16.27.26 <number:text>\n          if(Rn[0].slice(-2) === \"/>\") break;\n          else if(Rn[1]===\"/\") switch(state[state.length-1][0]) {\n            case 'number-style':\n            case 'date-style':\n            case 'time-style':\n              NF += str.slice(pidx, Rn.index);\n              break;\n          }\n          else pidx = Rn.index + Rn[0].length;\n          break;\n\n        case 'named-range': // 9.4.12 <table:named-range>\n          tag = parsexmltag(Rn[0], false);\n          _Ref = ods_to_csf_3D(tag['cell-range-address']);\n          var nrange = ({Name:tag.name, Ref:_Ref[0] + '!' + _Ref[1]});\n          if(intable) nrange.Sheet = SheetNames.length;\n          WB.Names.push(nrange);\n          break;\n\n        case 'text-content': break; // 16.27.27 <number:text-content>\n        case 'text-properties': break; // 16.27.27 <style:text-properties>\n        case 'embedded-text': break; // 16.27.4 <number:embedded-text>\n\n        case 'body': case '电子表格': break; // 3.3 16.9.6 19.726.3\n\n        case 'forms': break; // 12.25.2 13.2\n        case 'table-column': break; // 9.1.6 <table:table-column>\n        case 'table-header-rows': break; // 9.1.7 <table:table-header-rows>\n        case 'table-rows': break; // 9.1.12 <table:table-rows>\n        /* TODO: outline levels */\n        case 'table-column-group': break; // 9.1.10 <table:table-column-group>\n        case 'table-header-columns': break; // 9.1.11 <table:table-header-columns>\n        case 'table-columns': break; // 9.1.12 <table:table-columns>\n\n        case 'null-date': break; // 9.4.2 <table:null-date> TODO: date1904\n\n        case 'graphic-properties': break; // 17.21 <style:graphic-properties>\n        case 'calculation-settings': break; // 9.4.1 <table:calculation-settings>\n        case 'named-expressions': break; // 9.4.11 <table:named-expressions>\n        case 'label-range': break; // 9.4.9 <table:label-range>\n        case 'label-ranges': break; // 9.4.10 <table:label-ranges>\n        case 'named-expression': break; // 9.4.13 <table:named-expression>\n        case 'sort': break; // 9.4.19 <table:sort>\n        case 'sort-by': break; // 9.4.20 <table:sort-by>\n        case 'sort-groups': break; // 9.4.22 <table:sort-groups>\n\n        case 'tab': break; // 6.1.4 <text:tab>\n        case 'line-break': break; // 6.1.5 <text:line-break>\n        case 'span': break; // 6.1.7 <text:span>\n        case 'p': case '文本串': // 5.1.3 <text:p>\n          if(Rn[1]==='/' && (!ctag || !ctag['string-value'])) {\n            var ptp = parse_text_p(str.slice(textpidx,Rn.index), textptag);\n            textp = (textp.length > 0 ? textp + \"\\n\" : \"\") + ptp[0];\n          } else { textptag = parsexmltag(Rn[0], false); textpidx = Rn.index + Rn[0].length; }\n          break; // <text:p>\n        case 's': break; // <text:s>\n\n        case 'database-range': // 9.4.15 <table:database-range>\n          if(Rn[1]==='/') break;\n          try {\n            _Ref = ods_to_csf_3D(parsexmltag(Rn[0])['target-range-address']);\n            Sheets[_Ref[0]]['!autofilter'] = { ref:_Ref[1] };\n          } catch(e) {/* empty */}\n          break;\n\n        case 'date': break; // <*:date>\n\n        case 'object': break; // 10.4.6.2 <draw:object>\n        case 'title': case '标题': break; // <*:title> OR <uof:标题>\n        case 'desc': break; // <*:desc>\n        case 'binary-data': break; // 10.4.5 TODO: b64 blob\n\n        /* 9.2 Advanced Tables */\n        case 'table-source': break; // 9.2.6\n        case 'scenario': break; // 9.2.6\n\n        case 'iteration': break; // 9.4.3 <table:iteration>\n        case 'content-validations': break; // 9.4.4 <table:\n        case 'content-validation': break; // 9.4.5 <table:\n        case 'help-message': break; // 9.4.6 <table:\n        case 'error-message': break; // 9.4.7 <table:\n        case 'database-ranges': break; // 9.4.14 <table:database-ranges>\n        case 'filter': break; // 9.5.2 <table:filter>\n        case 'filter-and': break; // 9.5.3 <table:filter-and>\n        case 'filter-or': break; // 9.5.4 <table:filter-or>\n        case 'filter-condition': break; // 9.5.5 <table:filter-condition>\n\n        case 'list-level-style-bullet': break; // 16.31 <text:\n        case 'list-level-style-number': break; // 16.32 <text:\n        case 'list-level-properties': break; // 17.19 <style:\n\n        /* 7.3 Document Fields */\n        case 'sender-firstname': // 7.3.6.2\n        case 'sender-lastname': // 7.3.6.3\n        case 'sender-initials': // 7.3.6.4\n        case 'sender-title': // 7.3.6.5\n        case 'sender-position': // 7.3.6.6\n        case 'sender-email': // 7.3.6.7\n        case 'sender-phone-private': // 7.3.6.8\n        case 'sender-fax': // 7.3.6.9\n        case 'sender-company': // 7.3.6.10\n        case 'sender-phone-work': // 7.3.6.11\n        case 'sender-street': // 7.3.6.12\n        case 'sender-city': // 7.3.6.13\n        case 'sender-postal-code': // 7.3.6.14\n        case 'sender-country': // 7.3.6.15\n        case 'sender-state-or-province': // 7.3.6.16\n        case 'author-name': // 7.3.7.1\n        case 'author-initials': // 7.3.7.2\n        case 'chapter': // 7.3.8\n        case 'file-name': // 7.3.9\n        case 'template-name': // 7.3.9\n        case 'sheet-name': // 7.3.9\n          break;\n\n        case 'event-listener':\n          break;\n        /* TODO: FODS Properties */\n        case 'initial-creator':\n        case 'creation-date':\n        case 'print-date':\n        case 'generator':\n        case 'document-statistic':\n        case 'user-defined':\n        case 'editing-duration':\n        case 'editing-cycles':\n          break;\n\n        /* TODO: FODS Config */\n        case 'config-item':\n          break;\n\n        /* TODO: style tokens */\n        case 'page-number': break; // TODO <text:page-number>\n        case 'page-count': break; // TODO <text:page-count>\n        case 'time': break; // TODO <text:time>\n\n        /* 9.3 Advanced Table Cells */\n        case 'cell-range-source': break; // 9.3.1 <table:\n        case 'detective': break; // 9.3.2 <table:\n        case 'operation': break; // 9.3.3 <table:\n        case 'highlighted-range': break; // 9.3.4 <table:\n\n        /* 9.6 Data Pilot Tables <table: */\n        case 'data-pilot-table': // 9.6.3\n        case 'source-cell-range': // 9.6.5\n        case 'source-service': // 9.6.6\n        case 'data-pilot-field': // 9.6.7\n        case 'data-pilot-level': // 9.6.8\n        case 'data-pilot-subtotals': // 9.6.9\n        case 'data-pilot-subtotal': // 9.6.10\n        case 'data-pilot-members': // 9.6.11\n        case 'data-pilot-member': // 9.6.12\n        case 'data-pilot-display-info': // 9.6.13\n        case 'data-pilot-sort-info': // 9.6.14\n        case 'data-pilot-layout-info': // 9.6.15\n        case 'data-pilot-field-reference': // 9.6.16\n        case 'data-pilot-groups': // 9.6.17\n        case 'data-pilot-group': // 9.6.18\n        case 'data-pilot-group-member': // 9.6.19\n          break;\n\n        /* 10.3 Drawing Shapes */\n        case 'rect': // 10.3.2\n          break;\n\n        /* 14.6 DDE Connections */\n        case 'dde-connection-decls': // 14.6.2 <text:\n        case 'dde-connection-decl': // 14.6.3 <text:\n        case 'dde-link': // 14.6.4 <table:\n        case 'dde-source': // 14.6.5 <office:\n          break;\n\n        case 'properties': break; // 13.7 <form:properties>\n        case 'property': break; // 13.8 <form:property>\n\n        case 'a': // 6.1.8 hyperlink\n          if(Rn[1]!== '/') {\n            atag = parsexmltag(Rn[0], false);\n            if(!atag.href) break;\n            atag.Target = atag.href; delete atag.href;\n            if(atag.Target.charAt(0) == \"#\" && atag.Target.indexOf(\".\") > -1) {\n              _Ref = ods_to_csf_3D(atag.Target.slice(1));\n              atag.Target = \"#\" + _Ref[0] + \"!\" + _Ref[1];\n            }\n          }\n          break;\n\n        /* non-standard */\n        case 'table-protection': break;\n        case 'data-pilot-grand-total': break; // <table:\n        case 'office-document-common-attrs': break; // bare\n        default: switch(Rn[2]) {\n          case 'dc:':       // TODO: properties\n          case 'calcext:':  // ignore undocumented extensions\n          case 'loext:':    // ignore undocumented extensions\n          case 'ooo:':      // ignore undocumented extensions\n          case 'chartooo:': // ignore undocumented extensions\n          case 'draw:':     // TODO: drawing\n          case 'style:':    // TODO: styles\n          case 'chart:':    // TODO: charts\n          case 'form:':     // TODO: forms\n          case 'uof:':      // TODO: uof\n          case '表:':       // TODO: uof\n          case '字:':       // TODO: uof\n            break;\n          default: if(opts.WTF) throw new Error(Rn);\n        }\n      }\n      var out = ({\n        Sheets: Sheets,\n        SheetNames: SheetNames,\n        Workbook: WB\n      });\n      if(opts.bookSheets) delete out.Sheets;\n      return out;\n    };\n  })();\n\n  function parse_ods(zip, opts) {\n    opts = opts || ({});\n    var ods = !!safegetzipfile(zip, 'objectdata');\n    if(ods) parse_manifest(getzipdata(zip, 'META-INF/manifest.xml'), opts);\n    var content = getzipstr(zip, 'content.xml');\n    if(!content) throw new Error(\"Missing content.xml in \" + (ods ? \"ODS\" : \"UOF\")+ \" file\");\n    var wb = parse_content_xml(ods ? content : utf8read(content), opts);\n    if(safegetzipfile(zip, 'meta.xml')) wb.Props = parse_core_props(getzipdata(zip, 'meta.xml'));\n    return wb;\n  }\n  function parse_fods(data, opts) {\n    return parse_content_xml(data, opts);\n  }\n\n  /* OpenDocument */\n  var write_styles_ods = (function() {\n    var payload = '<office:document-styles ' + wxt_helper({\n      'xmlns:office':   \"urn:oasis:names:tc:opendocument:xmlns:office:1.0\",\n      'xmlns:table':    \"urn:oasis:names:tc:opendocument:xmlns:table:1.0\",\n      'xmlns:style':    \"urn:oasis:names:tc:opendocument:xmlns:style:1.0\",\n      'xmlns:text':     \"urn:oasis:names:tc:opendocument:xmlns:text:1.0\",\n      'xmlns:draw':     \"urn:oasis:names:tc:opendocument:xmlns:drawing:1.0\",\n      'xmlns:fo':       \"urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0\",\n      'xmlns:xlink':    \"http://www.w3.org/1999/xlink\",\n      'xmlns:dc':       \"http://purl.org/dc/elements/1.1/\",\n      'xmlns:number':   \"urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0\",\n      'xmlns:svg':      \"urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0\",\n      'xmlns:of':       \"urn:oasis:names:tc:opendocument:xmlns:of:1.2\",\n      'office:version': \"1.2\"\n    }) + '></office:document-styles>';\n    return function wso() {\n      return XML_HEADER + payload;\n    };\n  })();\n  var write_content_ods = (function() {\n    /* 6.1.2 White Space Characters */\n    var write_text_p = function(text) {\n      return escapexml(text)\n        .replace(/  +/g, function($$){return '<text:s text:c=\"'+$$.length+'\"/>';})\n        .replace(/\\t/g, \"<text:tab/>\")\n        .replace(/\\n/g, \"<text:line-break/>\")\n        .replace(/^ /, \"<text:s/>\").replace(/ $/, \"<text:s/>\");\n    };\n\n    var null_cell_xml = '          <table:table-cell />\\n';\n    var covered_cell_xml = '          <table:covered-table-cell/>\\n';\n    var write_ws = function(ws, wb, i) {\n      /* Section 9 Tables */\n      var o = [];\n      o.push('      <table:table table:name=\"' + escapexml(wb.SheetNames[i]) + '\">\\n');\n      var R=0,C=0, range = decode_range(ws['!ref']);\n      var marr = ws['!merges'] || [], mi = 0;\n      var dense = Array.isArray(ws);\n      for(R = 0; R < range.s.r; ++R) o.push('        <table:table-row></table:table-row>\\n');\n      for(; R <= range.e.r; ++R) {\n        o.push('        <table:table-row>\\n');\n        for(C=0; C < range.s.c; ++C) o.push(null_cell_xml);\n        for(; C <= range.e.c; ++C) {\n          var skip = false, ct = {}, textp = \"\";\n          for(mi = 0; mi != marr.length; ++mi) {\n            if(marr[mi].s.c > C) continue;\n            if(marr[mi].s.r > R) continue;\n            if(marr[mi].e.c < C) continue;\n            if(marr[mi].e.r < R) continue;\n            if(marr[mi].s.c != C || marr[mi].s.r != R) skip = true;\n            ct['table:number-columns-spanned'] = (marr[mi].e.c - marr[mi].s.c + 1);\n            ct['table:number-rows-spanned'] =    (marr[mi].e.r - marr[mi].s.r + 1);\n            break;\n          }\n          if(skip) { o.push(covered_cell_xml); continue; }\n          var ref = encode_cell({r:R, c:C}), cell = dense ? (ws[R]||[])[C]: ws[ref];\n          if(cell && cell.f) {\n            ct['table:formula'] = escapexml(csf_to_ods_formula(cell.f));\n            if(cell.F) {\n              if(cell.F.slice(0, ref.length) == ref) {\n                var _Fref = decode_range(cell.F);\n                ct['table:number-matrix-columns-spanned'] = (_Fref.e.c - _Fref.s.c + 1);\n                ct['table:number-matrix-rows-spanned'] =    (_Fref.e.r - _Fref.s.r + 1);\n              }\n            }\n          }\n          if(!cell) { o.push(null_cell_xml); continue; }\n          switch(cell.t) {\n            case 'b':\n              textp = (cell.v ? 'TRUE' : 'FALSE');\n              ct['office:value-type'] = \"boolean\";\n              ct['office:boolean-value'] = (cell.v ? 'true' : 'false');\n              break;\n            case 'n':\n              textp = (cell.w||String(cell.v||0));\n              ct['office:value-type'] = \"float\";\n              ct['office:value'] = (cell.v||0);\n              break;\n            case 's': case 'str':\n              textp = cell.v;\n              ct['office:value-type'] = \"string\";\n              break;\n            case 'd':\n              textp = (cell.w||(parseDate(cell.v).toISOString()));\n              ct['office:value-type'] = \"date\";\n              ct['office:date-value'] = (parseDate(cell.v).toISOString());\n              ct['table:style-name'] = \"ce1\";\n              break;\n            //case 'e':\n            default: o.push(null_cell_xml); continue;\n          }\n          var text_p = write_text_p(textp);\n          if(cell.l && cell.l.Target) {\n            var _tgt = cell.l.Target; _tgt = _tgt.charAt(0) == \"#\" ? \"#\" + csf_to_ods_3D(_tgt.slice(1)) : _tgt;\n            text_p = writextag('text:a', text_p, {'xlink:href': _tgt});\n          }\n          o.push('          ' + writextag('table:table-cell', writextag('text:p', text_p, {}), ct) + '\\n');\n        }\n        o.push('        </table:table-row>\\n');\n      }\n      o.push('      </table:table>\\n');\n      return o.join(\"\");\n    };\n\n    var write_automatic_styles_ods = function(o) {\n      o.push(' <office:automatic-styles>\\n');\n      o.push('  <number:date-style style:name=\"N37\" number:automatic-order=\"true\">\\n');\n      o.push('   <number:month number:style=\"long\"/>\\n');\n      o.push('   <number:text>/</number:text>\\n');\n      o.push('   <number:day number:style=\"long\"/>\\n');\n      o.push('   <number:text>/</number:text>\\n');\n      o.push('   <number:year/>\\n');\n      o.push('  </number:date-style>\\n');\n      o.push('  <style:style style:name=\"ce1\" style:family=\"table-cell\" style:parent-style-name=\"Default\" style:data-style-name=\"N37\"/>\\n');\n      o.push(' </office:automatic-styles>\\n');\n    };\n\n    return function wcx(wb, opts) {\n      var o = [XML_HEADER];\n      /* 3.1.3.2 */\n      var attr = wxt_helper({\n        'xmlns:office':       \"urn:oasis:names:tc:opendocument:xmlns:office:1.0\",\n        'xmlns:table':        \"urn:oasis:names:tc:opendocument:xmlns:table:1.0\",\n        'xmlns:style':        \"urn:oasis:names:tc:opendocument:xmlns:style:1.0\",\n        'xmlns:text':         \"urn:oasis:names:tc:opendocument:xmlns:text:1.0\",\n        'xmlns:draw':         \"urn:oasis:names:tc:opendocument:xmlns:drawing:1.0\",\n        'xmlns:fo':           \"urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0\",\n        'xmlns:xlink':        \"http://www.w3.org/1999/xlink\",\n        'xmlns:dc':           \"http://purl.org/dc/elements/1.1/\",\n        'xmlns:meta':         \"urn:oasis:names:tc:opendocument:xmlns:meta:1.0\",\n        'xmlns:number':       \"urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0\",\n        'xmlns:presentation': \"urn:oasis:names:tc:opendocument:xmlns:presentation:1.0\",\n        'xmlns:svg':          \"urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0\",\n        'xmlns:chart':        \"urn:oasis:names:tc:opendocument:xmlns:chart:1.0\",\n        'xmlns:dr3d':         \"urn:oasis:names:tc:opendocument:xmlns:dr3d:1.0\",\n        'xmlns:math':         \"http://www.w3.org/1998/Math/MathML\",\n        'xmlns:form':         \"urn:oasis:names:tc:opendocument:xmlns:form:1.0\",\n        'xmlns:script':       \"urn:oasis:names:tc:opendocument:xmlns:script:1.0\",\n        'xmlns:ooo':          \"http://openoffice.org/2004/office\",\n        'xmlns:ooow':         \"http://openoffice.org/2004/writer\",\n        'xmlns:oooc':         \"http://openoffice.org/2004/calc\",\n        'xmlns:dom':          \"http://www.w3.org/2001/xml-events\",\n        'xmlns:xforms':       \"http://www.w3.org/2002/xforms\",\n        'xmlns:xsd':          \"http://www.w3.org/2001/XMLSchema\",\n        'xmlns:xsi':          \"http://www.w3.org/2001/XMLSchema-instance\",\n        'xmlns:sheet':        \"urn:oasis:names:tc:opendocument:sh33tjs:1.0\",\n        'xmlns:rpt':          \"http://openoffice.org/2005/report\",\n        'xmlns:of':           \"urn:oasis:names:tc:opendocument:xmlns:of:1.2\",\n        'xmlns:xhtml':        \"http://www.w3.org/1999/xhtml\",\n        'xmlns:grddl':        \"http://www.w3.org/2003/g/data-view#\",\n        'xmlns:tableooo':     \"http://openoffice.org/2009/table\",\n        'xmlns:drawooo':      \"http://openoffice.org/2010/draw\",\n        'xmlns:calcext':      \"urn:org:documentfoundation:names:experimental:calc:xmlns:calcext:1.0\",\n        'xmlns:loext':        \"urn:org:documentfoundation:names:experimental:office:xmlns:loext:1.0\",\n        'xmlns:field':        \"urn:openoffice:names:experimental:ooo-ms-interop:xmlns:field:1.0\",\n        'xmlns:formx':        \"urn:openoffice:names:experimental:ooxml-odf-interop:xmlns:form:1.0\",\n        'xmlns:css3t':        \"http://www.w3.org/TR/css3-text/\",\n        'office:version':     \"1.2\"\n      });\n\n      var fods = wxt_helper({\n        'xmlns:config':    \"urn:oasis:names:tc:opendocument:xmlns:config:1.0\",\n        'office:mimetype': \"application/vnd.oasis.opendocument.spreadsheet\"\n      });\n\n      if(opts.bookType == \"fods\") o.push('<office:document' + attr + fods + '>\\n');\n      else o.push('<office:document-content' + attr  + '>\\n');\n      write_automatic_styles_ods(o);\n      o.push('  <office:body>\\n');\n      o.push('    <office:spreadsheet>\\n');\n      for(var i = 0; i != wb.SheetNames.length; ++i) o.push(write_ws(wb.Sheets[wb.SheetNames[i]], wb, i, opts));\n      o.push('    </office:spreadsheet>\\n');\n      o.push('  </office:body>\\n');\n      if(opts.bookType == \"fods\") o.push('</office:document>');\n      else o.push('</office:document-content>');\n      return o.join(\"\");\n    };\n  })();\n\n  function write_ods(wb, opts) {\n    if(opts.bookType == \"fods\") return write_content_ods(wb, opts);\n\n    var zip = new jszip();\n    var f = \"\";\n\n    var manifest = [];\n    var rdf = [];\n\n    /* Part 3 Section 3.3 MIME Media Type */\n    f = \"mimetype\";\n    zip.file(f, \"application/vnd.oasis.opendocument.spreadsheet\");\n\n    /* Part 1 Section 2.2 Documents */\n    f = \"content.xml\";\n    zip.file(f, write_content_ods(wb, opts));\n    manifest.push([f, \"text/xml\"]);\n    rdf.push([f, \"ContentFile\"]);\n\n    /* TODO: these are hard-coded styles to satiate excel */\n    f = \"styles.xml\";\n    zip.file(f, write_styles_ods(wb, opts));\n    manifest.push([f, \"text/xml\"]);\n    rdf.push([f, \"StylesFile\"]);\n\n    /* TODO: this is hard-coded to satiate excel */\n    f = \"meta.xml\";\n    zip.file(f, write_meta_ods());\n    manifest.push([f, \"text/xml\"]);\n    rdf.push([f, \"MetadataFile\"]);\n\n    /* Part 3 Section 6 Metadata Manifest File */\n    f = \"manifest.rdf\";\n    zip.file(f, write_rdf(rdf/*, opts*/));\n    manifest.push([f, \"application/rdf+xml\"]);\n\n    /* Part 3 Section 4 Manifest File */\n    f = \"META-INF/manifest.xml\";\n    zip.file(f, write_manifest(manifest/*, opts*/));\n\n    return zip;\n  }\n\n  function write_sheet_index(wb, sheet) {\n    if(!sheet) return 0;\n    var idx = wb.SheetNames.indexOf(sheet);\n    if(idx == -1) throw new Error(\"Sheet not found: \" + sheet);\n    return idx;\n  }\n\n  function write_obj_str(factory) {\n    return function write_str(wb, o) {\n      var idx = write_sheet_index(wb, o.sheet);\n      return factory.from_sheet(wb.Sheets[wb.SheetNames[idx]], o, wb);\n    };\n  }\n\n  var write_htm_str = write_obj_str(HTML_);\n  var write_csv_str = write_obj_str({from_sheet:sheet_to_csv});\n  var write_slk_str = write_obj_str(SYLK);\n  var write_dif_str = write_obj_str(DIF);\n  var write_prn_str = write_obj_str(PRN);\n  var write_rtf_str = write_obj_str(RTF);\n  var write_txt_str = write_obj_str({from_sheet:sheet_to_txt});\n  var write_dbf_buf = write_obj_str(DBF);\n  var write_eth_str = write_obj_str(ETH);\n\n  function fix_opts_func(defaults) {\n    return function fix_opts(opts) {\n      for(var i = 0; i != defaults.length; ++i) {\n        var d = defaults[i];\n        if(opts[d[0]] === undefined) opts[d[0]] = d[1];\n        if(d[2] === 'n') opts[d[0]] = Number(opts[d[0]]);\n      }\n    };\n  }\n\n  var fix_read_opts = fix_opts_func([\n    ['cellNF', false], /* emit cell number format string as .z */\n    ['cellHTML', true], /* emit html string as .h */\n    ['cellFormula', true], /* emit formulae as .f */\n    ['cellStyles', false], /* emits style/theme as .s */\n    ['cellText', true], /* emit formatted text as .w */\n    ['cellDates', false], /* emit date cells with type `d` */\n\n    ['sheetStubs', false], /* emit empty cells */\n    ['sheetRows', 0, 'n'], /* read n rows (0 = read all rows) */\n\n    ['bookDeps', false], /* parse calculation chains */\n    ['bookSheets', false], /* only try to get sheet names (no Sheets) */\n    ['bookProps', false], /* only try to get properties (no Sheets) */\n    ['bookFiles', false], /* include raw file structure (keys, files, cfb) */\n    ['bookVBA', false], /* include vba raw data (vbaraw) */\n\n    ['password',''], /* password */\n    ['WTF', false] /* WTF mode (throws errors) */\n  ]);\n\n\n  var fix_write_opts = fix_opts_func([\n    ['cellDates', false], /* write date cells with type `d` */\n\n    ['bookSST', false], /* Generate Shared String Table */\n\n    ['bookType', 'xlsx'], /* Type of workbook (xlsx/m/b) */\n\n    ['compression', false], /* Use file compression */\n\n    ['WTF', false] /* WTF mode (throws errors) */\n  ]);\n  function get_sheet_type(n) {\n    if(RELS.WS.indexOf(n) > -1) return \"sheet\";\n    if(RELS.CS && n == RELS.CS) return \"chart\";\n    if(RELS.DS && n == RELS.DS) return \"dialog\";\n    if(RELS.MS && n == RELS.MS) return \"macro\";\n    return (n && n.length) ? n : \"sheet\";\n  }\n  function safe_parse_wbrels(wbrels, sheets) {\n    if(!wbrels) return 0;\n    try {\n      wbrels = sheets.map(function pwbr(w) { if(!w.id) w.id = w.strRelID; return [w.name, wbrels['!id'][w.id].Target, get_sheet_type(wbrels['!id'][w.id].Type)]; });\n    } catch(e) { return null; }\n    return !wbrels || wbrels.length === 0 ? null : wbrels;\n  }\n\n  function safe_parse_sheet(zip, path, relsPath, sheet, idx, sheetRels, sheets, stype, opts, wb, themes, styles) {\n    try {\n      sheetRels[sheet]=parse_rels(getzipstr(zip, relsPath, true), path);\n      var data = getzipdata(zip, path);\n      var _ws;\n      switch(stype) {\n        case 'sheet':  _ws = parse_ws(data, path, idx, opts, sheetRels[sheet], wb, themes, styles); break;\n        case 'chart':  _ws = parse_cs(data, path, idx, opts, sheetRels[sheet], wb, themes, styles);\n          if(!_ws || !_ws['!chart']) break;\n          var dfile = resolve_path(_ws['!chart'].Target, path);\n          var drelsp = get_rels_path(dfile);\n          var draw = parse_drawing(getzipstr(zip, dfile, true), parse_rels(getzipstr(zip, drelsp, true), dfile));\n          var chartp = resolve_path(draw, dfile);\n          var crelsp = get_rels_path(chartp);\n          _ws = parse_chart(getzipstr(zip, chartp, true), chartp, opts, parse_rels(getzipstr(zip, crelsp, true), chartp), wb, _ws);\n          break;\n        case 'macro':  _ws = parse_ms(data, path, idx, opts, sheetRels[sheet], wb, themes, styles); break;\n        case 'dialog': _ws = parse_ds(data, path, idx, opts, sheetRels[sheet], wb, themes, styles); break;\n      }\n      sheets[sheet] = _ws;\n    } catch(e) { if(opts.WTF) throw e; }\n  }\n\n  function strip_front_slash(x) { return x.charAt(0) == '/' ? x.slice(1) : x; }\n\n  function parse_zip(zip, opts) {\n    make_ssf(SSF);\n    opts = opts || {};\n    fix_read_opts(opts);\n\n    /* OpenDocument Part 3 Section 2.2.1 OpenDocument Package */\n    if(safegetzipfile(zip, 'META-INF/manifest.xml')) return parse_ods(zip, opts);\n    /* UOC */\n    if(safegetzipfile(zip, 'objectdata.xml')) return parse_ods(zip, opts);\n    /* Numbers */\n    if(safegetzipfile(zip, 'Index/Document.iwa')) throw new Error('Unsupported NUMBERS file');\n\n    var entries = zipentries(zip);\n    var dir = parse_ct((getzipstr(zip, '[Content_Types].xml')));\n    var xlsb = false;\n    var sheets, binname;\n    if(dir.workbooks.length === 0) {\n      binname = \"xl/workbook.xml\";\n      if(getzipdata(zip,binname, true)) dir.workbooks.push(binname);\n    }\n    if(dir.workbooks.length === 0) {\n      binname = \"xl/workbook.bin\";\n      if(!getzipdata(zip,binname,true)) throw new Error(\"Could not find workbook\");\n      dir.workbooks.push(binname);\n      xlsb = true;\n    }\n    if(dir.workbooks[0].slice(-3) == \"bin\") xlsb = true;\n\n    var themes = ({});\n    var styles = ({});\n    if(!opts.bookSheets && !opts.bookProps) {\n      strs = [];\n      if(dir.sst) try { strs=parse_sst(getzipdata(zip, strip_front_slash(dir.sst)), dir.sst, opts); } catch(e) { if(opts.WTF) throw e; }\n\n      if(opts.cellStyles && dir.themes.length) themes = parse_theme(getzipstr(zip, dir.themes[0].replace(/^\\//,''), true)||\"\",dir.themes[0], opts);\n\n      if(dir.style) styles = parse_sty(getzipdata(zip, strip_front_slash(dir.style)), dir.style, themes, opts);\n    }\n\n    /*var externbooks = */dir.links.map(function(link) {\n      return parse_xlink(getzipdata(zip, strip_front_slash(link)), link, opts);\n    });\n\n    var wb = parse_wb(getzipdata(zip, strip_front_slash(dir.workbooks[0])), dir.workbooks[0], opts);\n\n    var props = {}, propdata = \"\";\n\n    if(dir.coreprops.length) {\n      propdata = getzipdata(zip, strip_front_slash(dir.coreprops[0]), true);\n      if(propdata) props = parse_core_props(propdata);\n      if(dir.extprops.length !== 0) {\n        propdata = getzipdata(zip, strip_front_slash(dir.extprops[0]), true);\n        if(propdata) parse_ext_props(propdata, props, opts);\n      }\n    }\n\n    var custprops = {};\n    if(!opts.bookSheets || opts.bookProps) {\n      if (dir.custprops.length !== 0) {\n        propdata = getzipstr(zip, strip_front_slash(dir.custprops[0]), true);\n        if(propdata) custprops = parse_cust_props(propdata, opts);\n      }\n    }\n\n    var out = ({});\n    if(opts.bookSheets || opts.bookProps) {\n      if(wb.Sheets) sheets = wb.Sheets.map(function pluck(x){ return x.name; });\n      else if(props.Worksheets && props.SheetNames.length > 0) sheets=props.SheetNames;\n      if(opts.bookProps) { out.Props = props; out.Custprops = custprops; }\n      if(opts.bookSheets && typeof sheets !== 'undefined') out.SheetNames = sheets;\n      if(opts.bookSheets ? out.SheetNames : opts.bookProps) return out;\n    }\n    sheets = {};\n\n    var deps = {};\n    if(opts.bookDeps && dir.calcchain) deps=parse_cc(getzipdata(zip, strip_front_slash(dir.calcchain)),dir.calcchain,opts);\n\n    var i=0;\n    var sheetRels = ({});\n    var path, relsPath;\n\n    {\n      var wbsheets = wb.Sheets;\n      props.Worksheets = wbsheets.length;\n      props.SheetNames = [];\n      for(var j = 0; j != wbsheets.length; ++j) {\n        props.SheetNames[j] = wbsheets[j].name;\n      }\n    }\n\n    var wbext = xlsb ? \"bin\" : \"xml\";\n    var wbrelsi = dir.workbooks[0].lastIndexOf(\"/\");\n    var wbrelsfile = (dir.workbooks[0].slice(0, wbrelsi+1) + \"_rels/\" + dir.workbooks[0].slice(wbrelsi+1) + \".rels\").replace(/^\\//,\"\");\n    if(!safegetzipfile(zip, wbrelsfile)) wbrelsfile = 'xl/_rels/workbook.' + wbext + '.rels';\n    var wbrels = parse_rels(getzipstr(zip, wbrelsfile, true), wbrelsfile);\n    if(wbrels) wbrels = safe_parse_wbrels(wbrels, wb.Sheets);\n\n    /* Numbers iOS hack */\n    var nmode = (getzipdata(zip,\"xl/worksheets/sheet.xml\",true))?1:0;\n    for(i = 0; i != props.Worksheets; ++i) {\n      var stype = \"sheet\";\n      if(wbrels && wbrels[i]) {\n        path = 'xl/' + (wbrels[i][1]).replace(/[\\/]?xl\\//, \"\");\n        if(!safegetzipfile(zip, path)) path = wbrels[i][1];\n        if(!safegetzipfile(zip, path)) path = wbrelsfile.replace(/_rels\\/.*$/,\"\") + wbrels[i][1];\n        stype = wbrels[i][2];\n      } else {\n        path = 'xl/worksheets/sheet'+(i+1-nmode)+\".\" + wbext;\n        path = path.replace(/sheet0\\./,\"sheet.\");\n      }\n      relsPath = path.replace(/^(.*)(\\/)([^\\/]*)$/, \"$1/_rels/$3.rels\");\n      safe_parse_sheet(zip, path, relsPath, props.SheetNames[i], i, sheetRels, sheets, stype, opts, wb, themes, styles);\n    }\n\n    if(dir.comments) parse_comments(zip, dir.comments, sheets, sheetRels, opts);\n\n    out = ({\n      Directory: dir,\n      Workbook: wb,\n      Props: props,\n      Custprops: custprops,\n      Deps: deps,\n      Sheets: sheets,\n      SheetNames: props.SheetNames,\n      Strings: strs,\n      Styles: styles,\n      Themes: themes,\n      SSF: SSF.get_table()\n    });\n    if(opts.bookFiles) {\n      out.keys = entries;\n      out.files = zip.files;\n    }\n    if(opts.bookVBA) {\n      if(dir.vba.length > 0) out.vbaraw = getzipdata(zip,strip_front_slash(dir.vba[0]),true);\n      else if(dir.defaults && dir.defaults.bin === CT_VBA) out.vbaraw = getzipdata(zip, 'xl/vbaProject.bin',true);\n    }\n    return out;\n  }\n\n  /* [MS-OFFCRYPTO] 2.1.1 */\n  function parse_xlsxcfb(cfb, _opts) {\n    var opts = _opts || {};\n    var f = 'Workbook', data = CFB.find(cfb, f);\n    try {\n      f = '/!DataSpaces/Version';\n      data = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n      /*var version = */parse_DataSpaceVersionInfo(data.content);\n\n      /* 2.3.4.1 */\n      f = '/!DataSpaces/DataSpaceMap';\n      data = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n      var dsm = parse_DataSpaceMap(data.content);\n      if(dsm.length !== 1 || dsm[0].comps.length !== 1 || dsm[0].comps[0].t !== 0 || dsm[0].name !== \"StrongEncryptionDataSpace\" || dsm[0].comps[0].v !== \"EncryptedPackage\")\n        throw new Error(\"ECMA-376 Encrypted file bad \" + f);\n\n      /* 2.3.4.2 */\n      f = '/!DataSpaces/DataSpaceInfo/StrongEncryptionDataSpace';\n      data = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n      var seds = parse_DataSpaceDefinition(data.content);\n      if(seds.length != 1 || seds[0] != \"StrongEncryptionTransform\")\n        throw new Error(\"ECMA-376 Encrypted file bad \" + f);\n\n      /* 2.3.4.3 */\n      f = '/!DataSpaces/TransformInfo/StrongEncryptionTransform/!Primary';\n      data = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n      /*var hdr = */parse_Primary(data.content);\n    } catch(e) {}\n\n    f = '/EncryptionInfo';\n    data = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n    var einfo = parse_EncryptionInfo(data.content);\n\n    /* 2.3.4.4 */\n    f = '/EncryptedPackage';\n    data = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n\n    /*global decrypt_agile */\n    if(einfo[0] == 0x04 && typeof decrypt_agile !== 'undefined') return decrypt_agile(einfo[1], data.content, opts.password || \"\", opts);\n    /*global decrypt_std76 */\n    if(einfo[0] == 0x02 && typeof decrypt_std76 !== 'undefined') return decrypt_std76(einfo[1], data.content, opts.password || \"\", opts);\n    throw new Error(\"File is password-protected\");\n  }\n\n  function write_zip(wb, opts) {\n    _shapeid = 1024;\n    if(opts.bookType == \"ods\") return write_ods(wb, opts);\n    if(wb && !wb.SSF) {\n      wb.SSF = SSF.get_table();\n    }\n    if(wb && wb.SSF) {\n      make_ssf(SSF); SSF.load_table(wb.SSF);\n      // $FlowIgnore\n      opts.revssf = evert_num(wb.SSF); opts.revssf[wb.SSF[65535]] = 0;\n      opts.ssf = wb.SSF;\n    }\n    opts.rels = {}; opts.wbrels = {};\n    opts.Strings = []; opts.Strings.Count = 0; opts.Strings.Unique = 0;\n    if(browser_has_Map) opts.revStrings = new Map();\n    else { opts.revStrings = {}; opts.revStrings.foo = []; delete opts.revStrings.foo; }\n    var wbext = opts.bookType == \"xlsb\" ? \"bin\" : \"xml\";\n    var vbafmt = VBAFMTS.indexOf(opts.bookType) > -1;\n    var ct = new_ct();\n    fix_write_opts(opts = opts || {});\n    var zip = new jszip();\n    var f = \"\", rId = 0;\n\n    opts.cellXfs = [];\n    get_cell_style(opts.cellXfs, {}, {revssf:{\"General\":0}});\n\n    if(!wb.Props) wb.Props = {};\n\n    f = \"docProps/core.xml\";\n    zip.file(f, write_core_props(wb.Props, opts));\n    ct.coreprops.push(f);\n    add_rels(opts.rels, 2, f, RELS.CORE_PROPS);\n\n    f = \"docProps/app.xml\";\n    if(wb.Props && wb.Props.SheetNames){/* empty */}\n    else if(!wb.Workbook || !wb.Workbook.Sheets) wb.Props.SheetNames = wb.SheetNames;\n    else {\n      var _sn = [];\n      for(var _i = 0; _i < wb.SheetNames.length; ++_i)\n        if((wb.Workbook.Sheets[_i]||{}).Hidden != 2) _sn.push(wb.SheetNames[_i]);\n      wb.Props.SheetNames = _sn;\n    }\n    wb.Props.Worksheets = wb.Props.SheetNames.length;\n    zip.file(f, write_ext_props(wb.Props, opts));\n    ct.extprops.push(f);\n    add_rels(opts.rels, 3, f, RELS.EXT_PROPS);\n\n    if(wb.Custprops !== wb.Props && keys(wb.Custprops||{}).length > 0) {\n      f = \"docProps/custom.xml\";\n      zip.file(f, write_cust_props(wb.Custprops, opts));\n      ct.custprops.push(f);\n      add_rels(opts.rels, 4, f, RELS.CUST_PROPS);\n    }\n\n    for(rId=1;rId <= wb.SheetNames.length; ++rId) {\n      var wsrels = {'!id':{}};\n      var ws = wb.Sheets[wb.SheetNames[rId-1]];\n      var _type = (ws || {})[\"!type\"] || \"sheet\";\n      switch(_type) {\n        case \"chart\": /*\n\t\t\tf = \"xl/chartsheets/sheet\" + rId + \".\" + wbext;\n\t\t\tzip.file(f, write_cs(rId-1, f, opts, wb, wsrels));\n\t\t\tct.charts.push(f);\n\t\t\tadd_rels(wsrels, -1, \"chartsheets/sheet\" + rId + \".\" + wbext, RELS.CS);\n\t\t\tbreak; */\n        /* falls through */\n        default:\n          f = \"xl/worksheets/sheet\" + rId + \".\" + wbext;\n          zip.file(f, write_ws(rId-1, f, opts, wb, wsrels));\n          ct.sheets.push(f);\n          add_rels(opts.wbrels, -1, \"worksheets/sheet\" + rId + \".\" + wbext, RELS.WS[0]);\n      }\n\n      if(ws) {\n        var comments = ws['!comments'];\n        var need_vml = false;\n        if(comments && comments.length > 0) {\n          var cf = \"xl/comments\" + rId + \".\" + wbext;\n          zip.file(cf, write_cmnt(comments, cf, opts));\n          ct.comments.push(cf);\n          add_rels(wsrels, -1, \"../comments\" + rId + \".\" + wbext, RELS.CMNT);\n          need_vml = true;\n        }\n        if(ws['!legacy']) {\n          if(need_vml) zip.file(\"xl/drawings/vmlDrawing\" + (rId) + \".vml\", write_comments_vml(rId, ws['!comments']));\n        }\n        delete ws['!comments'];\n        delete ws['!legacy'];\n      }\n\n      if(wsrels['!id'].rId1) zip.file(get_rels_path(f), write_rels(wsrels));\n    }\n\n    if(opts.Strings != null && opts.Strings.length > 0) {\n      f = \"xl/sharedStrings.\" + wbext;\n      zip.file(f, write_sst(opts.Strings, f, opts));\n      ct.strs.push(f);\n      add_rels(opts.wbrels, -1, \"sharedStrings.\" + wbext, RELS.SST);\n    }\n\n    f = \"xl/workbook.\" + wbext;\n    zip.file(f, write_wb(wb, f, opts));\n    ct.workbooks.push(f);\n    add_rels(opts.rels, 1, f, RELS.WB);\n\n    /* TODO: something more intelligent with themes */\n\n    f = \"xl/theme/theme1.xml\";\n    zip.file(f, write_theme(wb.Themes, opts));\n    ct.themes.push(f);\n    add_rels(opts.wbrels, -1, \"theme/theme1.xml\", RELS.THEME);\n\n    /* TODO: something more intelligent with styles */\n\n    f = \"xl/styles.\" + wbext;\n    zip.file(f, write_sty(wb, f, opts));\n    ct.styles.push(f);\n    add_rels(opts.wbrels, -1, \"styles.\" + wbext, RELS.STY);\n\n    if(wb.vbaraw && vbafmt) {\n      f = \"xl/vbaProject.bin\";\n      zip.file(f, wb.vbaraw);\n      ct.vba.push(f);\n      add_rels(opts.wbrels, -1, \"vbaProject.bin\", RELS.VBA);\n    }\n\n    zip.file(\"[Content_Types].xml\", write_ct(ct, opts));\n    zip.file('_rels/.rels', write_rels(opts.rels));\n    zip.file('xl/_rels/workbook.' + wbext + '.rels', write_rels(opts.wbrels));\n\n    delete opts.revssf; delete opts.ssf;\n    return zip;\n  }\n  function firstbyte(f,o) {\n    var x = \"\";\n    switch((o||{}).type || \"base64\") {\n      case 'buffer': return [f[0], f[1], f[2], f[3]];\n      case 'base64': x = Base64.decode(f.slice(0,24)); break;\n      case 'binary': x = f; break;\n      case 'array':  return [f[0], f[1], f[2], f[3]];\n      default: throw new Error(\"Unrecognized type \" + (o && o.type || \"undefined\"));\n    }\n    return [x.charCodeAt(0), x.charCodeAt(1), x.charCodeAt(2), x.charCodeAt(3)];\n  }\n\n  function read_cfb(cfb, opts) {\n    if(CFB.find(cfb, \"EncryptedPackage\")) return parse_xlsxcfb(cfb, opts);\n    return parse_xlscfb(cfb, opts);\n  }\n\n  function read_zip(data, opts) {\n    var zip, d = data;\n    var o = opts||{};\n    if(!o.type) o.type = (has_buf && Buffer.isBuffer(data)) ? \"buffer\" : \"base64\";\n    switch(o.type) {\n      case \"base64\": zip = new jszip(d, { base64:true }); break;\n      case \"binary\": case \"array\": zip = new jszip(d, { base64:false }); break;\n      case \"buffer\": zip = new jszip(d); break;\n      default: throw new Error(\"Unrecognized type \" + o.type);\n    }\n    return parse_zip(zip, o);\n  }\n\n  function read_plaintext(data, o) {\n    var i = 0;\n    main: while(i < data.length) switch(data.charCodeAt(i)) {\n      case 0x0A: case 0x0D: case 0x20: ++i; break;\n      case 0x3C: return parse_xlml(data.slice(i),o);\n      default: break main;\n    }\n    return PRN.to_workbook(data, o);\n  }\n\n  function read_plaintext_raw(data, o) {\n    var str = \"\", bytes = firstbyte(data, o);\n    switch(o.type) {\n      case 'base64': str = Base64.decode(data); break;\n      case 'binary': str = data; break;\n      case 'buffer': str = data.toString('binary'); break;\n      case 'array': str = cc2str(data); break;\n      default: throw new Error(\"Unrecognized type \" + o.type);\n    }\n    if(bytes[0] == 0xEF && bytes[1] == 0xBB && bytes[2] == 0xBF) str = utf8read(str);\n    return read_plaintext(str, o);\n  }\n\n  function read_utf16(data, o) {\n    var d = data;\n    if(o.type == 'base64') d = Base64.decode(d);\n    d = cptable.utils.decode(1200, d.slice(2), 'str');\n    o.type = \"binary\";\n    return read_plaintext(d, o);\n  }\n\n  function bstrify(data) {\n    return !data.match(/[^\\x00-\\x7F]/) ? data : utf8write(data);\n  }\n\n  function read_prn(data, d, o, str) {\n    if(str) { o.type = \"string\"; return PRN.to_workbook(data, o); }\n    return PRN.to_workbook(d, o);\n  }\n\n  function readSync(data, opts) {\n    reset_cp();\n    if(typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) return readSync(new Uint8Array(data), opts);\n    var d = data, n = [0,0,0,0], str = false;\n    var o = opts||{};\n    _ssfopts = {};\n    if(o.dateNF) _ssfopts.dateNF = o.dateNF;\n    if(!o.type) o.type = (has_buf && Buffer.isBuffer(data)) ? \"buffer\" : \"base64\";\n    if(o.type == \"file\") { o.type = has_buf ? \"buffer\" : \"binary\"; d = read_binary(data); }\n    if(o.type == \"string\") { str = true; o.type = \"binary\"; o.codepage = 65001; d = bstrify(data); }\n    if(o.type == 'array' && typeof Uint8Array !== 'undefined' && data instanceof Uint8Array && typeof ArrayBuffer !== 'undefined') {\n      // $FlowIgnore\n      var ab=new ArrayBuffer(3), vu=new Uint8Array(ab); vu.foo=\"bar\";\n      // $FlowIgnore\n      if(!vu.foo) {o=dup(o); o.type='array'; return readSync(ab2a(d), o);}\n    }\n    switch((n = firstbyte(d, o))[0]) {\n      case 0xD0: return read_cfb(CFB.read(d, o), o);\n      case 0x09: return parse_xlscfb(d, o);\n      case 0x3C: return parse_xlml(d, o);\n      case 0x49: if(n[1] === 0x44) return read_wb_ID(d, o); break;\n      case 0x54: if(n[1] === 0x41 && n[2] === 0x42 && n[3] === 0x4C) return DIF.to_workbook(d, o); break;\n      case 0x50: return (n[1] === 0x4B && n[2] < 0x09 && n[3] < 0x09) ? read_zip(d, o) : read_prn(data, d, o, str);\n      case 0xEF: return n[3] === 0x3C ? parse_xlml(d, o) : read_prn(data, d, o, str);\n      case 0xFF: if(n[1] === 0xFE) { return read_utf16(d, o); } break;\n      case 0x00: if(n[1] === 0x00 && n[2] >= 0x02 && n[3] === 0x00) return WK_.to_workbook(d, o); break;\n      case 0x03: case 0x83: case 0x8B: case 0x8C: return DBF.to_workbook(d, o);\n      case 0x7B: if(n[1] === 0x5C && n[2] === 0x72 && n[3] === 0x74) return RTF.to_workbook(d, o); break;\n      case 0x0A: case 0x0D: case 0x20: return read_plaintext_raw(d, o);\n    }\n    if(n[2] <= 12 && n[3] <= 31) return DBF.to_workbook(d, o);\n    return read_prn(data, d, o, str);\n  }\n\n  function readFileSync(filename, opts) {\n    var o = opts||{}; o.type = 'file';\n    return readSync(filename, o);\n  }\n  function write_cfb_ctr(cfb, o) {\n    switch(o.type) {\n      case \"base64\": case \"binary\": break;\n      case \"buffer\": case \"array\": o.type = \"\"; break;\n      case \"file\": return write_dl(o.file, CFB.write(cfb, {type:has_buf ? 'buffer' : \"\"}));\n      case \"string\": throw new Error(\"'string' output type invalid for '\" + o.bookType + \"' files\");\n      default: throw new Error(\"Unrecognized type \" + o.type);\n    }\n    return CFB.write(cfb, o);\n  }\n\n  /*global encrypt_agile */\n  function write_zip_type(wb, opts) {\n    var o = opts||{};\n    style_builder  = new StyleBuilder(opts);\n    var z = write_zip(wb, o);\n    var oopts = {};\n    if(o.compression) oopts.compression = 'DEFLATE';\n    if(o.password) oopts.type = has_buf ? \"nodebuffer\" : \"string\";\n    else switch(o.type) {\n      case \"base64\": oopts.type = \"base64\"; break;\n      case \"binary\": oopts.type = \"string\"; break;\n      case \"string\": throw new Error(\"'string' output type invalid for '\" + o.bookType + \"' files\");\n      case \"buffer\":\n      case \"file\": oopts.type = has_buf ? \"nodebuffer\" : \"string\"; break;\n      default: throw new Error(\"Unrecognized type \" + o.type);\n    }\n    var out = z.generate(oopts);\n    if(o.password && typeof encrypt_agile !== 'undefined') return write_cfb_ctr(encrypt_agile(out, o.password), o);\n    if(o.type === \"file\") return write_dl(o.file, out);\n    return o.type == \"string\" ? utf8read(out) : out;\n  }\n\n  function write_cfb_type(wb, opts) {\n    var o = opts||{};\n    var cfb = write_xlscfb(wb, o);\n    return write_cfb_ctr(cfb, o);\n  }\n\n  function write_string_type(out, opts, bom) {\n    if(!bom) bom = \"\";\n    var o = bom + out;\n    switch(opts.type) {\n      case \"base64\": return Base64.encode(utf8write(o));\n      case \"binary\": return utf8write(o);\n      case \"string\": return out;\n      case \"file\": return write_dl(opts.file, o, 'utf8');\n      case \"buffer\": {\n        // $FlowIgnore\n        if(has_buf) return Buffer_from(o, 'utf8');\n        else return write_string_type(o, {type:'binary'}).split(\"\").map(function(c) { return c.charCodeAt(0); });\n      }\n    }\n    throw new Error(\"Unrecognized type \" + opts.type);\n  }\n\n  function write_stxt_type(out, opts) {\n    switch(opts.type) {\n      case \"base64\": return Base64.encode(out);\n      case \"binary\": return out;\n      case \"string\": return out; /* override in sheet_to_txt */\n      case \"file\": return write_dl(opts.file, out, 'binary');\n      case \"buffer\": {\n        // $FlowIgnore\n        if(has_buf) return Buffer_from(out, 'binary');\n        else return out.split(\"\").map(function(c) { return c.charCodeAt(0); });\n      }\n    }\n    throw new Error(\"Unrecognized type \" + opts.type);\n  }\n\n  /* TODO: test consistency */\n  function write_binary_type(out, opts) {\n    switch(opts.type) {\n      case \"string\":\n      case \"base64\":\n      case \"binary\":\n        var bstr = \"\";\n        // $FlowIgnore\n        for(var i = 0; i < out.length; ++i) bstr += String.fromCharCode(out[i]);\n        return opts.type == 'base64' ? Base64.encode(bstr) : opts.type == 'string' ? utf8read(bstr) : bstr;\n      case \"file\": return write_dl(opts.file, out);\n      case \"buffer\": return out;\n      default: throw new Error(\"Unrecognized type \" + opts.type);\n    }\n  }\n\n  function writeSync(wb, opts) {\n    check_wb(wb);\n    var o = opts||{};\n    if(o.type == \"array\") { o.type = \"binary\"; var out = (writeSync(wb, o)); o.type = \"array\"; return s2ab(out); }\n    switch(o.bookType || 'xlsb') {\n      case 'xml':\n      case 'xlml': return write_string_type(write_xlml(wb, o), o);\n      case 'slk':\n      case 'sylk': return write_string_type(write_slk_str(wb, o), o);\n      case 'htm':\n      case 'html': return write_string_type(write_htm_str(wb, o), o);\n      case 'txt': return write_stxt_type(write_txt_str(wb, o), o);\n      case 'csv': return write_string_type(write_csv_str(wb, o), o, \"\\ufeff\");\n      case 'dif': return write_string_type(write_dif_str(wb, o), o);\n      case 'dbf': return write_binary_type(write_dbf_buf(wb, o), o);\n      case 'prn': return write_string_type(write_prn_str(wb, o), o);\n      case 'rtf': return write_string_type(write_rtf_str(wb, o), o);\n      case 'eth': return write_string_type(write_eth_str(wb, o), o);\n      case 'fods': return write_string_type(write_ods(wb, o), o);\n      case 'biff2': if(!o.biff) o.biff = 2; /* falls through */\n      case 'biff3': if(!o.biff) o.biff = 3; /* falls through */\n      case 'biff4': if(!o.biff) o.biff = 4; return write_binary_type(write_biff_buf(wb, o), o);\n      case 'biff5': if(!o.biff) o.biff = 5; /* falls through */\n      case 'biff8':\n      case 'xla':\n      case 'xls': if(!o.biff) o.biff = 8; return write_cfb_type(wb, o);\n      case 'xlsx':\n      case 'xlsm':\n      case 'xlam':\n      case 'xlsb':\n      case 'ods': return write_zip_type(wb, o);\n      default: throw new Error (\"Unrecognized bookType |\" + o.bookType + \"|\");\n    }\n  }\n\n  function resolve_book_type(o) {\n    if(o.bookType) return;\n    var _BT = {\n      \"xls\": \"biff8\",\n      \"htm\": \"html\",\n      \"slk\": \"sylk\",\n      \"socialcalc\": \"eth\",\n      \"Sh33tJS\": \"WTF\"\n    };\n    var ext = o.file.slice(o.file.lastIndexOf(\".\")).toLowerCase();\n    if(ext.match(/^\\.[a-z]+$/)) o.bookType = ext.slice(1);\n    o.bookType = _BT[o.bookType] || o.bookType;\n  }\n\n  function writeFileSync(wb, filename, opts) {\n    var o = opts||{}; o.type = 'file';\n    o.file = filename;\n    resolve_book_type(o);\n    return writeSync(wb, o);\n  }\n\n  function writeFileAsync(filename, wb, opts, cb) {\n    var o = opts||{}; o.type = 'file';\n    o.file = filename;\n    resolve_book_type(o);\n    o.type = 'buffer';\n    var _cb = cb; if(!(_cb instanceof Function)) _cb = (opts);\n    return _fs.writeFile(filename, writeSync(wb, o), _cb);\n  }\n  function make_json_row(sheet, r, R, cols, header, hdr, dense, o) {\n    var rr = encode_row(R);\n    var defval = o.defval, raw = o.raw || !o.hasOwnProperty(\"raw\");\n    var isempty = true;\n    var row = (header === 1) ? [] : {};\n    if(header !== 1) {\n      if(Object.defineProperty) try { Object.defineProperty(row, '__rowNum__', {value:R, enumerable:false}); } catch(e) { row.__rowNum__ = R; }\n      else row.__rowNum__ = R;\n    }\n    if(!dense || sheet[R]) for (var C = r.s.c; C <= r.e.c; ++C) {\n      var val = dense ? sheet[R][C] : sheet[cols[C] + rr];\n      if(val === undefined || val.t === undefined) {\n        if(defval === undefined) continue;\n        if(hdr[C] != null) { row[hdr[C]] = defval; }\n        continue;\n      }\n      var v = val.v;\n      switch(val.t){\n        case 'z': if(v == null) break; continue;\n        case 'e': v = void 0; break;\n        case 's': case 'd': case 'b': case 'n': break;\n        default: throw new Error('unrecognized type ' + val.t);\n      }\n      if(hdr[C] != null) {\n        if(v == null) {\n          if(defval !== undefined) row[hdr[C]] = defval;\n          else if(raw && v === null) row[hdr[C]] = null;\n          else continue;\n        } else {\n          row[hdr[C]] = raw ? v : format_cell(val,v,o);\n        }\n        if(v != null) isempty = false;\n      }\n    }\n    return { row: row, isempty: isempty };\n  }\n\n\n  function sheet_to_json(sheet, opts) {\n    if(sheet == null || sheet[\"!ref\"] == null) return [];\n    var val = {t:'n',v:0}, header = 0, offset = 1, hdr = [], v=0, vv=\"\";\n    var r = {s:{r:0,c:0},e:{r:0,c:0}};\n    var o = opts || {};\n    var range = o.range != null ? o.range : sheet[\"!ref\"];\n    if(o.header === 1) header = 1;\n    else if(o.header === \"A\") header = 2;\n    else if(Array.isArray(o.header)) header = 3;\n    switch(typeof range) {\n      case 'string': r = safe_decode_range(range); break;\n      case 'number': r = safe_decode_range(sheet[\"!ref\"]); r.s.r = range; break;\n      default: r = range;\n    }\n    if(header > 0) offset = 0;\n    var rr = encode_row(r.s.r);\n    var cols = [];\n    var out = [];\n    var outi = 0, counter = 0;\n    var dense = Array.isArray(sheet);\n    var R = r.s.r, C = 0, CC = 0;\n    if(dense && !sheet[R]) sheet[R] = [];\n    for(C = r.s.c; C <= r.e.c; ++C) {\n      cols[C] = encode_col(C);\n      val = dense ? sheet[R][C] : sheet[cols[C] + rr];\n      switch(header) {\n        case 1: hdr[C] = C - r.s.c; break;\n        case 2: hdr[C] = cols[C]; break;\n        case 3: hdr[C] = o.header[C - r.s.c]; break;\n        default:\n          if(val == null) val = {w: \"__EMPTY\", t: \"s\"};\n          vv = v = format_cell(val, null, o);\n          counter = 0;\n          for(CC = 0; CC < hdr.length; ++CC) if(hdr[CC] == vv) vv = v + \"_\" + (++counter);\n          hdr[C] = vv;\n      }\n    }\n    for (R = r.s.r + offset; R <= r.e.r; ++R) {\n      var row = make_json_row(sheet, r, R, cols, header, hdr, dense, o);\n      if((row.isempty === false) || (header === 1 ? o.blankrows !== false : !!o.blankrows)) out[outi++] = row.row;\n    }\n    out.length = outi;\n    return out;\n  }\n\n  var qreg = /\"/g;\n  function make_csv_row(sheet, r, R, cols, fs, rs, FS, o) {\n    var isempty = true;\n    var row = [], txt = \"\", rr = encode_row(R);\n    for(var C = r.s.c; C <= r.e.c; ++C) {\n      if (!cols[C]) continue;\n      var val = o.dense ? (sheet[R]||[])[C]: sheet[cols[C] + rr];\n      if(val == null) txt = \"\";\n      else if(val.v != null) {\n        isempty = false;\n        txt = ''+format_cell(val, null, o);\n        for(var i = 0, cc = 0; i !== txt.length; ++i) if((cc = txt.charCodeAt(i)) === fs || cc === rs || cc === 34) {txt = \"\\\"\" + txt.replace(qreg, '\"\"') + \"\\\"\"; break; }\n        if(txt == \"ID\") txt = '\"ID\"';\n      } else if(val.f != null && !val.F) {\n        isempty = false;\n        txt = '=' + val.f; if(txt.indexOf(\",\") >= 0) txt = '\"' + txt.replace(qreg, '\"\"') + '\"';\n      } else txt = \"\";\n      /* NOTE: Excel CSV does not support array formulae */\n      row.push(txt);\n    }\n    if(o.blankrows === false && isempty) return null;\n    return row.join(FS);\n  }\n\n  function sheet_to_csv(sheet, opts) {\n    var out = [];\n    var o = opts == null ? {} : opts;\n    if(sheet == null || sheet[\"!ref\"] == null) return \"\";\n    var r = safe_decode_range(sheet[\"!ref\"]);\n    var FS = o.FS !== undefined ? o.FS : \",\", fs = FS.charCodeAt(0);\n    var RS = o.RS !== undefined ? o.RS : \"\\n\", rs = RS.charCodeAt(0);\n    var endregex = new RegExp((FS==\"|\" ? \"\\\\|\" : FS)+\"+$\");\n    var row = \"\", cols = [];\n    o.dense = Array.isArray(sheet);\n    var colinfo = o.skipHidden && sheet[\"!cols\"] || [];\n    var rowinfo = o.skipHidden && sheet[\"!rows\"] || [];\n    for(var C = r.s.c; C <= r.e.c; ++C) if (!((colinfo[C]||{}).hidden)) cols[C] = encode_col(C);\n    for(var R = r.s.r; R <= r.e.r; ++R) {\n      if ((rowinfo[R]||{}).hidden) continue;\n      row = make_csv_row(sheet, r, R, cols, fs, rs, FS, o);\n      if(row == null) { continue; }\n      if(o.strip) row = row.replace(endregex,\"\");\n      out.push(row + RS);\n    }\n    delete o.dense;\n    return out.join(\"\");\n  }\n\n  function sheet_to_txt(sheet, opts) {\n    if(!opts) opts = {}; opts.FS = \"\\t\"; opts.RS = \"\\n\";\n    var s = sheet_to_csv(sheet, opts);\n    if(typeof cptable == 'undefined' || opts.type == 'string') return s;\n    var o = cptable.utils.encode(1200, s, 'str');\n    return String.fromCharCode(255) + String.fromCharCode(254) + o;\n  }\n\n  function sheet_to_formulae(sheet) {\n    var y = \"\", x, val=\"\";\n    if(sheet == null || sheet[\"!ref\"] == null) return [];\n    var r = safe_decode_range(sheet['!ref']), rr = \"\", cols = [], C;\n    var cmds = [];\n    var dense = Array.isArray(sheet);\n    for(C = r.s.c; C <= r.e.c; ++C) cols[C] = encode_col(C);\n    for(var R = r.s.r; R <= r.e.r; ++R) {\n      rr = encode_row(R);\n      for(C = r.s.c; C <= r.e.c; ++C) {\n        y = cols[C] + rr;\n        x = dense ? (sheet[R]||[])[C] : sheet[y];\n        val = \"\";\n        if(x === undefined) continue;\n        else if(x.F != null) {\n          y = x.F;\n          if(!x.f) continue;\n          val = x.f;\n          if(y.indexOf(\":\") == -1) y = y + \":\" + y;\n        }\n        if(x.f != null) val = x.f;\n        else if(x.t == 'z') continue;\n        else if(x.t == 'n' && x.v != null) val = \"\" + x.v;\n        else if(x.t == 'b') val = x.v ? \"TRUE\" : \"FALSE\";\n        else if(x.w !== undefined) val = \"'\" + x.w;\n        else if(x.v === undefined) continue;\n        else if(x.t == 's') val = \"'\" + x.v;\n        else val = \"\"+x.v;\n        cmds[cmds.length] = y + \"=\" + val;\n      }\n    }\n    return cmds;\n  }\n\n  function sheet_add_json(_ws, js, opts) {\n    var o = opts || {};\n    var offset = +!o.skipHeader;\n    var ws = _ws || ({});\n    var _R = 0, _C = 0;\n    if(ws && o.origin != null) {\n      if(typeof o.origin == 'number') _R = o.origin;\n      else {\n        var _origin = typeof o.origin == \"string\" ? decode_cell(o.origin) : o.origin;\n        _R = _origin.r; _C = _origin.c;\n      }\n    }\n    var cell;\n    var range = ({s: {c:0, r:0}, e: {c:_C, r:_R + js.length - 1 + offset}});\n    if(ws['!ref']) {\n      var _range = safe_decode_range(ws['!ref']);\n      range.e.c = Math.max(range.e.c, _range.e.c);\n      range.e.r = Math.max(range.e.r, _range.e.r);\n      if(_R == -1) { _R = range.e.r + 1; range.e.r = _R + js.length - 1 + offset; }\n    }\n    var hdr = o.header || [], C = 0;\n\n    js.forEach(function (JS, R) {\n      keys(JS).forEach(function(k) {\n        if((C=hdr.indexOf(k)) == -1) hdr[C=hdr.length] = k;\n        var v = JS[k];\n        var t = 'z';\n        var z = \"\";\n        if(v && typeof v === 'object' && !(v instanceof Date)){\n          ws[encode_cell({c:_C + C,r:_R + R + offset})] = v;\n        } else {\n          if(typeof v == 'number') t = 'n';\n          else if(typeof v == 'boolean') t = 'b';\n          else if(typeof v == 'string') t = 's';\n          else if(v instanceof Date) {\n            t = 'd';\n            if(!o.cellDates) { t = 'n'; v = datenum(v); }\n            z = o.dateNF || SSF._table[14];\n          }\n          ws[encode_cell({c:_C + C,r:_R + R + offset})] = cell = ({t:t, v:v});\n          if(z) cell.z = z;\n        }\n      });\n    });\n    range.e.c = Math.max(range.e.c, _C + hdr.length - 1);\n    var __R = encode_row(_R);\n    if(offset) for(C = 0; C < hdr.length; ++C) ws[encode_col(C + _C) + __R] = {t:'s', v:hdr[C]};\n    ws['!ref'] = encode_range(range);\n    return ws;\n  }\n  function json_to_sheet(js, opts) { return sheet_add_json(null, js, opts); }\n\n  var utils = {\n    encode_col: encode_col,\n    encode_row: encode_row,\n    encode_cell: encode_cell,\n    encode_range: encode_range,\n    decode_col: decode_col,\n    decode_row: decode_row,\n    split_cell: split_cell,\n    decode_cell: decode_cell,\n    decode_range: decode_range,\n    format_cell: format_cell,\n    get_formulae: sheet_to_formulae,\n    make_csv: sheet_to_csv,\n    make_json: sheet_to_json,\n    make_formulae: sheet_to_formulae,\n    sheet_add_aoa: sheet_add_aoa,\n    sheet_add_json: sheet_add_json,\n    aoa_to_sheet: aoa_to_sheet,\n    json_to_sheet: json_to_sheet,\n    table_to_sheet: parse_dom_table,\n    table_to_book: table_to_book,\n    sheet_to_csv: sheet_to_csv,\n    sheet_to_txt: sheet_to_txt,\n    sheet_to_json: sheet_to_json,\n    sheet_to_html: HTML_.from_sheet,\n    sheet_to_dif: DIF.from_sheet,\n    sheet_to_slk: SYLK.from_sheet,\n    sheet_to_eth: ETH.from_sheet,\n    sheet_to_formulae: sheet_to_formulae,\n    sheet_to_row_object_array: sheet_to_json\n  };\n\n  (function(utils) {\n    utils.consts = utils.consts || {};\n    function add_consts(R/*Array<any>*/) { R.forEach(function(a){ utils.consts[a[0]] = a[1]; }); }\n\n    function get_default(x, y, z) { return x[y] != null ? x[y] : (x[y] = z); }\n\n    /* get cell, creating a stub if necessary */\n    function ws_get_cell_stub(ws, R, C) {\n      /* A1 cell address */\n      if(typeof R == \"string\") return ws[R] || (ws[R] = {t:'z'});\n      /* cell address object */\n      if(typeof R != \"number\") return ws_get_cell_stub(ws, encode_cell(R));\n      /* R and C are 0-based indices */\n      return ws_get_cell_stub(ws, encode_cell({r:R,c:C||0}));\n    }\n\n    /* find sheet index for given name / validate index */\n    function wb_sheet_idx(wb, sh) {\n      if(typeof sh == \"number\") {\n        if(sh >= 0 && wb.SheetNames.length > sh) return sh;\n        throw new Error(\"Cannot find sheet # \" + sh);\n      } else if(typeof sh == \"string\") {\n        var idx = wb.SheetNames.indexOf(sh);\n        if(idx > -1) return idx;\n        throw new Error(\"Cannot find sheet name |\" + sh + \"|\");\n      } else throw new Error(\"Cannot find sheet |\" + sh + \"|\");\n    }\n\n    /* simple blank workbook object */\n    utils.book_new = function() {\n      return { SheetNames: [], Sheets: {} };\n    };\n\n    /* add a worksheet to the end of a given workbook */\n    utils.book_append_sheet = function(wb, ws, name) {\n      if(!name) for(var i = 1; i <= 0xFFFF; ++i) if(wb.SheetNames.indexOf(name = \"Sheet\" + i) == -1) break;\n      if(!name) throw new Error(\"Too many worksheets\");\n      check_ws_name(name);\n      if(wb.SheetNames.indexOf(name) >= 0) throw new Error(\"Worksheet with name |\" + name + \"| already exists!\");\n\n      wb.SheetNames.push(name);\n      wb.Sheets[name] = ws;\n    };\n\n    /* set sheet visibility (visible/hidden/very hidden) */\n    utils.book_set_sheet_visibility = function(wb, sh, vis) {\n      get_default(wb,\"Workbook\",{});\n      get_default(wb.Workbook,\"Sheets\",[]);\n\n      var idx = wb_sheet_idx(wb, sh);\n      // $FlowIgnore\n      get_default(wb.Workbook.Sheets,idx, {});\n\n      switch(vis) {\n        case 0: case 1: case 2: break;\n        default: throw new Error(\"Bad sheet visibility setting \" + vis);\n      }\n      // $FlowIgnore\n      wb.Workbook.Sheets[idx].Hidden = vis;\n    };\n    add_consts([\n      [\"SHEET_VISIBLE\", 0],\n      [\"SHEET_HIDDEN\", 1],\n      [\"SHEET_VERY_HIDDEN\", 2]\n    ]);\n\n    /* set number format */\n    utils.cell_set_number_format = function(cell, fmt) {\n      cell.z = fmt;\n      return cell;\n    };\n\n    /* set cell hyperlink */\n    utils.cell_set_hyperlink = function(cell, target, tooltip) {\n      if(!target) {\n        delete cell.l;\n      } else {\n        cell.l = ({ Target: target });\n        if(tooltip) cell.l.Tooltip = tooltip;\n      }\n      return cell;\n    };\n    utils.cell_set_internal_link = function(cell, range, tooltip) { return utils.cell_set_hyperlink(cell, \"#\" + range, tooltip); };\n\n    /* add to cell comments */\n    utils.cell_add_comment = function(cell, text, author) {\n      if(!cell.c) cell.c = [];\n      cell.c.push({t:text, a:author||\"SheetJS\"});\n    };\n\n    /* set array formula and flush related cells */\n    utils.sheet_set_array_formula = function(ws, range, formula) {\n      var rng = typeof range != \"string\" ? range : safe_decode_range(range);\n      var rngstr = typeof range == \"string\" ? range : encode_range(range);\n      for(var R = rng.s.r; R <= rng.e.r; ++R) for(var C = rng.s.c; C <= rng.e.c; ++C) {\n        var cell = ws_get_cell_stub(ws, R, C);\n        cell.t = 'n';\n        cell.F = rngstr;\n        delete cell.v;\n        if(R == rng.s.r && C == rng.s.c) cell.f = formula;\n      }\n      return ws;\n    };\n\n    return utils;\n  })(utils);\n\n  if(has_buf && typeof require != 'undefined') (function() {\n    var Readable = {}.Readable;\n\n    var write_csv_stream = function(sheet, opts) {\n      var stream = Readable();\n      var o = opts == null ? {} : opts;\n      if(sheet == null || sheet[\"!ref\"] == null) { stream.push(null); return stream; }\n      var r = safe_decode_range(sheet[\"!ref\"]);\n      var FS = o.FS !== undefined ? o.FS : \",\", fs = FS.charCodeAt(0);\n      var RS = o.RS !== undefined ? o.RS : \"\\n\", rs = RS.charCodeAt(0);\n      var endregex = new RegExp((FS==\"|\" ? \"\\\\|\" : FS)+\"+$\");\n      var row = \"\", cols = [];\n      o.dense = Array.isArray(sheet);\n      var colinfo = o.skipHidden && sheet[\"!cols\"] || [];\n      var rowinfo = o.skipHidden && sheet[\"!rows\"] || [];\n      for(var C = r.s.c; C <= r.e.c; ++C) if (!((colinfo[C]||{}).hidden)) cols[C] = encode_col(C);\n      var R = r.s.r;\n      var BOM = false;\n      stream._read = function() {\n        if(!BOM) { BOM = true; return stream.push(\"\\uFEFF\"); }\n        if(R > r.e.r) return stream.push(null);\n        while(R <= r.e.r) {\n          ++R;\n          if ((rowinfo[R-1]||{}).hidden) continue;\n          row = make_csv_row(sheet, r, R-1, cols, fs, rs, FS, o);\n          if(row != null) {\n            if(o.strip) row = row.replace(endregex,\"\");\n            stream.push(row + RS);\n            break;\n          }\n        }\n      };\n      return stream;\n    };\n\n    var write_html_stream = function(ws, opts) {\n      var stream = Readable();\n\n      var o = opts || {};\n      var header = o.header != null ? o.header : HTML_.BEGIN;\n      var footer = o.footer != null ? o.footer : HTML_.END;\n      stream.push(header);\n      var r = decode_range(ws['!ref']);\n      o.dense = Array.isArray(ws);\n      stream.push(HTML_._preamble(ws, r, o));\n      var R = r.s.r;\n      var end = false;\n      stream._read = function() {\n        if(R > r.e.r) {\n          if(!end) { end = true; stream.push(\"</table>\" + footer); }\n          return stream.push(null);\n        }\n        while(R <= r.e.r) {\n          stream.push(HTML_._row(ws, r, R, o));\n          ++R;\n          break;\n        }\n      };\n      return stream;\n    };\n\n    var write_json_stream = function(sheet, opts) {\n      var stream = Readable({objectMode:true});\n\n      if(sheet == null || sheet[\"!ref\"] == null) { stream.push(null); return stream; }\n      var val = {t:'n',v:0}, header = 0, offset = 1, hdr = [], v=0, vv=\"\";\n      var r = {s:{r:0,c:0},e:{r:0,c:0}};\n      var o = opts || {};\n      var range = o.range != null ? o.range : sheet[\"!ref\"];\n      if(o.header === 1) header = 1;\n      else if(o.header === \"A\") header = 2;\n      else if(Array.isArray(o.header)) header = 3;\n      switch(typeof range) {\n        case 'string': r = safe_decode_range(range); break;\n        case 'number': r = safe_decode_range(sheet[\"!ref\"]); r.s.r = range; break;\n        default: r = range;\n      }\n      if(header > 0) offset = 0;\n      var rr = encode_row(r.s.r);\n      var cols = [];\n      var counter = 0;\n      var dense = Array.isArray(sheet);\n      var R = r.s.r, C = 0, CC = 0;\n      if(dense && !sheet[R]) sheet[R] = [];\n      for(C = r.s.c; C <= r.e.c; ++C) {\n        cols[C] = encode_col(C);\n        val = dense ? sheet[R][C] : sheet[cols[C] + rr];\n        switch(header) {\n          case 1: hdr[C] = C - r.s.c; break;\n          case 2: hdr[C] = cols[C]; break;\n          case 3: hdr[C] = o.header[C - r.s.c]; break;\n          default:\n            if(val == null) val = {w: \"__EMPTY\", t: \"s\"};\n            vv = v = format_cell(val, null, o);\n            counter = 0;\n            for(CC = 0; CC < hdr.length; ++CC) if(hdr[CC] == vv) vv = v + \"_\" + (++counter);\n            hdr[C] = vv;\n        }\n      }\n      R = r.s.r + offset;\n      stream._read = function() {\n        if(R > r.e.r) return stream.push(null);\n        while(R <= r.e.r) {\n          //if ((rowinfo[R-1]||{}).hidden) continue;\n          var row = make_json_row(sheet, r, R, cols, header, hdr, dense, o);\n          ++R;\n          if((row.isempty === false) || (header === 1 ? o.blankrows !== false : !!o.blankrows)) {\n            stream.push(row.row);\n            break;\n          }\n        }\n      };\n      return stream;\n    };\n\n    XLSX.stream = {\n      to_json: write_json_stream,\n      to_html: write_html_stream,\n      to_csv: write_csv_stream\n    };\n  })();\n  /**\n   * 样式魔改区 -- start\n   */\n  /////////////////////////////////////////////////////////////////////////////////////////////////////\n  var XmlNode = (function () {\n      function XmlNode(tagName, attributes, children) {\n\n        if (!(this instanceof XmlNode)) {\n          return new XmlNode(tagName, attributes, children);\n        }\n        this.tagName = tagName;\n        this._attributes = attributes || {};\n        this._children = children || [];\n        this._prefix = '';\n        return this;\n      }\n\n      XmlNode.prototype.createElement = function () {\n        return new XmlNode(arguments)\n      }\n\n      XmlNode.prototype.children = function() {\n        return this._children;\n      }\n\n      XmlNode.prototype.append = function (node) {\n        this._children.push(node);\n        return this;\n      }\n\n      XmlNode.prototype.prefix = function (prefix) {\n        if (arguments.length==0) { return this._prefix;}\n        this._prefix = prefix;\n        return this;\n      }\n\n      XmlNode.prototype.attr = function (attr, value) {\n        if (value == undefined) {\n          delete this._attributes[attr];\n          return this;\n        }\n        if (arguments.length == 0) {\n          return this._attributes;\n        }\n        else if (typeof attr == 'string' && arguments.length == 1) {\n          return this._attributes.attr[attr];\n        }\n        if (typeof attr == 'object' && arguments.length == 1) {\n          for (var key in attr) {\n            this._attributes[key] = attr[key];\n          }\n        }\n        else if (arguments.length == 2 && typeof attr == 'string') {\n          this._attributes[attr] = value;\n        }\n        return this;\n      }\n\n      var APOS = \"'\"; var QUOTE = '\"'\n      var ESCAPED_QUOTE = {  }\n      ESCAPED_QUOTE[QUOTE] = '&quot;'\n      ESCAPED_QUOTE[APOS] = '&apos;'\n\n      XmlNode.prototype.escapeAttributeValue = function(att_value) {\n        return '\"' + att_value.replace(/\\\"/g,'&quot;') + '\"';// TODO Extend with four other codes\n\n      }\n\n      XmlNode.prototype.toXml = function (node) {\n        if (!node) node = this;\n        var xml = node._prefix;\n        xml += '<' + node.tagName;\n        if (node._attributes) {\n          for (var key in node._attributes) {\n            xml += ' ' + key + '=' + this.escapeAttributeValue(''+node._attributes[key]) + ''\n          }\n        }\n        if (node._children && node._children.length > 0) {\n          xml += \">\";\n          for (var i = 0; i < node._children.length; i++) {\n            xml += this.toXml(node._children[i]);\n          }\n          xml += '</' + node.tagName + '>';\n        }\n        else {\n          xml += '/>';\n        }\n        return xml;\n      }\n      return XmlNode;\n    })();\n  /////////////////////////////////////////////////////////////////////////////////////////////////////\n  var StyleBuilder = function (options) {\n\n    var customNumFmtId = 164;\n\n\n\n    var table_fmt = {\n      0:  'General',\n      1:  '0',\n      2:  '0.00',\n      3:  '#,##0',\n      4:  '#,##0.00',\n      9:  '0%',\n      10: '0.00%',\n      11: '0.00E+00',\n      12: '# ?/?',\n      13: '# ??/??',\n      14: 'm/d/yy',\n      15: 'd-mmm-yy',\n      16: 'd-mmm',\n      17: 'mmm-yy',\n      18: 'h:mm AM/PM',\n      19: 'h:mm:ss AM/PM',\n      20: 'h:mm',\n      21: 'h:mm:ss',\n      22: 'm/d/yy h:mm',\n      37: '#,##0 ;(#,##0)',\n      38: '#,##0 ;[Red](#,##0)',\n      39: '#,##0.00;(#,##0.00)',\n      40: '#,##0.00;[Red](#,##0.00)',\n      45: 'mm:ss',\n      46: '[h]:mm:ss',\n      47: 'mmss.0',\n      48: '##0.0E+0',\n      49: '@',\n      56: '\"上午/下午 \"hh\"時\"mm\"分\"ss\"秒 \"'    };\n    var fmt_table = {};\n\n    for (var idx in table_fmt) {\n      fmt_table[table_fmt[idx]] = idx;\n    }\n\n\n    // cache style specs to avoid excessive duplication\n    var _hashIndex = {};\n    var _listIndex = [];\n\n    return {\n\n      initialize: function (options) {\n\n        this.$fonts = XmlNode('fonts').attr('count',0).attr(\"x14ac:knownFonts\",\"1\");\n        this.$fills = XmlNode('fills').attr('count',0);\n        this.$borders = XmlNode('borders').attr('count',0);\n        this.$numFmts = XmlNode('numFmts').attr('count',0);\n        this.$cellStyleXfs = XmlNode('cellStyleXfs');\n        this.$xf = XmlNode('xf')\n          .attr('numFmtId', 0)\n          .attr('fontId', 0)\n          .attr('fillId', 0)\n          .attr('borderId', 0);\n\n        this.$cellXfs = XmlNode('cellXfs').attr('count',0);\n        this.$cellStyles = XmlNode('cellStyles')\n          .append(XmlNode('cellStyle')\n            .attr('name', 'Normal')\n            .attr('xfId',0)\n            .attr('builtinId',0)\n          );\n        this.$dxfs = XmlNode('dxfs').attr('count', \"0\");\n        this.$tableStyles = XmlNode('tableStyles')\n          .attr('count','0')\n          .attr('defaultTableStyle','TableStyleMedium9')\n          .attr('defaultPivotStyle','PivotStyleMedium4')\n\n\n        this.$styles = XmlNode('styleSheet')\n          .attr('xmlns:mc','http://schemas.openxmlformats.org/markup-compatibility/2006')\n          .attr('xmlns:x14ac','http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac')\n          .attr('xmlns','http://schemas.openxmlformats.org/spreadsheetml/2006/main')\n          .attr('mc:Ignorable','x14ac')\n          .prefix('<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>')\n          .append(this.$numFmts)\n          .append(this.$fonts)\n          .append(this.$fills)\n          .append(this.$borders)\n          .append(this.$cellStyleXfs.append(this.$xf))\n          .append(this.$cellXfs)\n          .append(this.$cellStyles)\n          .append(this.$dxfs)\n          .append(this.$tableStyles);\n\n\n        // need to specify styles at index 0 and 1.\n        // the second style MUST be gray125 for some reason\n\n        var defaultStyle = options.defaultCellStyle || {};\n        if (!defaultStyle.font) defaultStyle.font = {name: 'Calibri', sz: '12'};\n        if (!defaultStyle.font.name) defaultStyle.font.name = 'Calibri';\n        if (!defaultStyle.font.sz) defaultStyle.font.sz = 11;\n        if (!defaultStyle.fill) defaultStyle.fill = {  patternType: \"none\", fgColor: {}};\n        if (!defaultStyle.border) defaultStyle.border = {};\n        if (!defaultStyle.numFmt) defaultStyle.numFmt = 0;\n\n        this.defaultStyle = defaultStyle;\n\n        var gray125Style = JSON.parse(JSON.stringify(defaultStyle));\n        gray125Style.fill = {patternType: \"gray125\", fgColor: { }}\n\n        this.addStyles([defaultStyle, gray125Style]);\n        return this;\n      },\n\n      // create a style entry and returns an integer index that can be used in the cell .s property\n      // these format of this object follows the emerging Common Spreadsheet Format\n      addStyle: function (attributes) {\n\n        var hashKey = JSON.stringify(attributes);\n        var index = _hashIndex[hashKey];\n        if (index == undefined) {\n\n          index = this._addXf(attributes); //_listIndex.push(attributes) -1;\n          _hashIndex[hashKey] = index;\n        }\n        else {\n          index = _hashIndex[hashKey];\n        }\n        return index;\n      },\n\n      // create style entries and returns array of integer indexes that can be used in cell .s property\n      addStyles: function (styles) {\n        var self = this;\n        return styles.map(function (style) {\n          return self.addStyle(style);\n        })\n      },\n\n      _duckTypeStyle: function(attributes) {\n\n        if (typeof attributes == 'object' && (attributes.patternFill || attributes.fgColor)) {\n          return {fill: attributes }; // this must be read via XLSX.parseFile(...)\n        }\n        else if (attributes.font || attributes.numFmt || attributes.border || attributes.fill) {\n          return attributes;\n        }\n        else {\n          return this._getStyleCSS(attributes)\n        }\n      },\n\n      _getStyleCSS: function(css) {\n        return css; //TODO\n      },\n\n      // Create an <xf> record for the style as well as corresponding <font>, <fill>, <border>, <numfmts>\n      // Right now this is simple and creates a <font>, <fill>, <border>, <numfmts> for every <xf>\n      // We could perhaps get fancier and avoid duplicating  auxiliary entries as Excel presumably intended, but bother.\n      _addXf: function (attributes) {\n\n\n        var fontId = this._addFont(attributes.font);\n        var fillId = this._addFill(attributes.fill);\n        var borderId = this._addBorder(attributes.border);\n        var numFmtId = this._addNumFmt(attributes.numFmt);\n\n        var $xf = XmlNode('xf')\n          .attr(\"numFmtId\", numFmtId)\n          .attr(\"fontId\", fontId)\n          .attr(\"fillId\", fillId)\n          .attr(\"borderId\", borderId)\n          .attr(\"xfId\", \"0\");\n\n        if (fontId > 0) {\n          $xf.attr('applyFont', \"1\");\n        }\n        if (fillId > 0) {\n          $xf.attr('applyFill', \"1\");\n        }\n        if (borderId > 0) {\n          $xf.attr('applyBorder', \"1\");\n        }\n        if (numFmtId > 0) {\n          $xf.attr('applyNumberFormat', \"1\");\n        }\n\n        if (attributes.alignment) {\n          var $alignment = XmlNode('alignment');\n          if (attributes.alignment.horizontal) { $alignment.attr('horizontal', attributes.alignment.horizontal);}\n          if (attributes.alignment.vertical)  { $alignment.attr('vertical', attributes.alignment.vertical);}\n          if (attributes.alignment.indent)  { $alignment.attr('indent', attributes.alignment.indent);}\n          if (attributes.alignment.readingOrder)  { $alignment.attr('readingOrder', attributes.alignment.readingOrder);}\n          if (attributes.alignment.wrapText)  { $alignment.attr('wrapText', attributes.alignment.wrapText);}\n          if (attributes.alignment.textRotation!=undefined)  { $alignment.attr('textRotation', attributes.alignment.textRotation);}\n\n          $xf.append($alignment).attr('applyAlignment',1)\n\n        }\n        this.$cellXfs.append($xf);\n        var count = +this.$cellXfs.children().length;\n\n        this.$cellXfs.attr('count', count);\n        return count - 1;\n      },\n\n      _addFont: function (attributes) {\n\n        if (!attributes) {  return 0; }\n\n        var $font = XmlNode('font')\n          .append(XmlNode('sz').attr('val', attributes.sz || this.defaultStyle.font.sz))\n          .append(XmlNode('name').attr('val', attributes.name || this.defaultStyle.font.name))\n\n        if (attributes.bold) $font.append(XmlNode('b'));\n        if (attributes.underline)  $font.append(XmlNode('u'));\n        if (attributes.italic)  $font.append(XmlNode('i'));\n        if (attributes.strike)  $font.append(XmlNode('strike'));\n        if (attributes.outline)  $font.append(XmlNode('outline'));\n        if (attributes.shadow)  $font.append(XmlNode('shadow'));\n\n        if (attributes.vertAlign) {\n          $font.append(XmlNode('vertAlign').attr('val', attributes.vertAlign))\n        }\n\n\n        if (attributes.color) {\n          if (attributes.color.theme) {\n            $font.append(XmlNode('color').attr('theme', attributes.color.theme))\n\n            if (attributes.color.tint) { //tint only if theme\n              $font.append(XmlNode('tint').attr('theme', attributes.color.tint))\n            }\n\n          } else if (attributes.color.rgb) { // not both rgb and theme\n            $font.append(XmlNode('color').attr('rgb', attributes.color.rgb))\n          }\n        }\n\n        this.$fonts.append($font);\n\n        var count = this.$fonts.children().length;\n        this.$fonts.attr('count', count);\n        return count - 1;\n      },\n\n      _addNumFmt: function (numFmt) {\n        if (!numFmt) { return 0; }\n\n        if (typeof numFmt == 'string') {\n          var numFmtIdx = fmt_table[numFmt];\n          if (numFmtIdx >= 0) {\n            return numFmtIdx; // we found a match against built in formats\n          }\n        }\n\n        if (/^[0-9]+$/.exec(numFmt)) {\n          return numFmt; // we're matching an integer against some known code\n        }\n        numFmt = numFmt\n          .replace(/&/g, '&amp;')\n          .replace(/</g, '&lt;')\n          .replace(/>/g, '&gt;')\n          .replace(/\"/g, '&quot;')\n          .replace(/'/g, '&apos;');\n\n        var $numFmt = XmlNode('numFmt')\n          .attr('numFmtId', (++customNumFmtId))\n          .attr('formatCode', numFmt);\n\n        this.$numFmts.append($numFmt);\n\n        var count = this.$numFmts.children().length;\n        this.$numFmts.attr('count', count);\n        return customNumFmtId ;\n      },\n\n      _addFill: function (attributes) {\n\n        if (!attributes) { return 0; }\n\n        var $patternFill = XmlNode('patternFill')\n          .attr('patternType', attributes.patternType || 'solid');\n\n        if (attributes.fgColor) {\n          var $fgColor = XmlNode('fgColor');\n\n          //Excel doesn't like it when we set both rgb and theme+tint, but xlsx.parseFile() sets both\n          //var $fgColor = createElement('<fgColor/>', null, null, {xmlMode: true}).attr(attributes.fgColor)\n          if (attributes.fgColor.rgb) {\n\n            if (attributes.fgColor.rgb.length == 6) {\n              attributes.fgColor.rgb = \"FF\" + attributes.fgColor.rgb /// add alpha to an RGB as Excel expects aRGB\n            }\n\n            $fgColor.attr('rgb', attributes.fgColor.rgb);\n            $patternFill.append($fgColor);\n          }\n          else if (attributes.fgColor.theme) {\n            $fgColor.attr('theme', attributes.fgColor.theme);\n            if (attributes.fgColor.tint) {\n              $fgColor.attr('tint', attributes.fgColor.tint);\n            }\n            $patternFill.append($fgColor);\n          }\n\n          if (!attributes.bgColor) {\n            attributes.bgColor = { \"indexed\": \"64\"}\n          }\n        }\n\n        if (attributes.bgColor) {\n          var $bgColor = XmlNode('bgColor').attr(attributes.bgColor);\n          $patternFill.append($bgColor);\n        }\n\n        var $fill = XmlNode('fill')\n          .append($patternFill);\n\n        this.$fills.append($fill);\n\n        var count = this.$fills.children().length;\n        this.$fills.attr('count', count);\n        return count - 1;\n      },\n\n      _getSubBorder: function(direction, spec) {\n\n        var $direction = XmlNode(direction);\n        if (spec){\n          if (spec.style) $direction.attr('style', spec.style);\n          if (spec.color) {\n            var $color = XmlNode('color');\n            if (spec.color.auto) {\n              $color.attr('auto', spec.color.auto);\n            }\n            else if (spec.color.rgb) {\n              $color.attr('rgb', spec.color.rgb);\n            }\n            else if (spec.color.theme || spec.color.tint) {\n              $color.attr('theme', spec.color.theme || \"1\");\n              $color.attr('tint', spec.color.tint || \"0\");\n            }\n            $direction.append($color)\n          }\n        }\n        return $direction;\n      },\n\n      _addBorder: function (attributes) {\n        if (!attributes) { return 0; }\n\n        var self = this;\n\n        var $border = XmlNode('border')\n          .attr(\"diagonalUp\",attributes.diagonalUp)\n          .attr(\"diagonalDown\",attributes.diagonalDown);\n\n        var directions = [\"left\",\"right\",\"top\",\"bottom\",\"diagonal\"];\n\n        directions.forEach(function(direction) {\n          $border.append(self._getSubBorder(direction, attributes[direction]))\n        });\n        this.$borders.append($border);\n\n        var count = this.$borders.children().length;\n        this.$borders.attr('count', count);\n        return count -1;\n      },\n\n      toXml: function () {\n        return this.$styles.toXml();\n      }\n    }.initialize(options||{});\n  }\n  /**\n   * 样式魔改区 -- end\n   */\n\n  XLSX.parse_xlscfb = parse_xlscfb;\n  XLSX.parse_ods = parse_ods;\n  XLSX.parse_fods = parse_fods;\n  XLSX.write_ods = write_ods;\n  XLSX.parse_zip = parse_zip;\n  XLSX.read = readSync; //xlsread\n  XLSX.readFile = readFileSync; //readFile\n  XLSX.readFileSync = readFileSync;\n  XLSX.write = writeSync;\n  XLSX.writeFile = writeFileSync;\n  XLSX.writeFileSync = writeFileSync;\n  XLSX.writeFileAsync = writeFileAsync;\n  XLSX.utils = utils;\n  XLSX.SSF = SSF;\n  XLSX.CFB = CFB;\n}\nmake_xlsx_lib(XLSX);\nexport default XLSX;\n/*global define */\n// if(typeof exports !== 'undefined') make_xlsx_lib(exports);\n// else if(typeof module !== 'undefined' && module.exports) make_xlsx_lib(module.exports);\n// else if(typeof define === 'function' && define.amd) define('xlsx', function() { if(!XLSX.version) make_xlsx_lib(XLSX); return XLSX; });\n// else make_xlsx_lib(XLSX);\n// make_xlsx_lib(XLSX);\n/*exported XLS, ODS */\n// var XLS = XLSX, ODS = XLSX;\n"],
  "mappings": "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AA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAAA,UAAY;AAAA,UAAY;AAAA,UACpC;AAAA,UAAY;AAA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AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAO;AACjB,MAAE,EAAE,MAAM,IAAO;AACjB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AAClB,MAAE,EAAE,MAAM,IAAQ;AACl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IACR,GAAQ;AAAA,IACR,GAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,EACV;AAIA,MAAI,OAAO;AAAA,IACT,GAAQ;AAAA,IACR,GAAQ;AAAA,IACR,GAAQ;AAAA,IACR,GAAQ;AAAA,IACR,GAAQ;AAAA,IACR,GAAQ;AAAA,IACR,GAAQ;AAAA,IACR,GAAQ;AAAA,IACR,GAAQ;AAAA,IACR,GAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,IAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IAER,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,KAAQ;AAAA,IACR,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",
  "names": ["a", "b", "c", "d", "g", "f", "e", "module", "exports", "module", "define", "o", "e", "n", "JSZipSync", "Buffer", "file", "i", "window", "XLSX", "i", "s2a", "make_ssf", "SSF", "fill", "basedate", "dnthresh", "general_fmt_num", "x", "write_num", "CRC32", "exports", "parse_zip", "q", "filename", "write_zip", "cfb", "file", "flen", "L", "a2s", "JSZipSync", "unescapexml", "s", "xlml_fixstr", "xlml_unfixstr", "utf8readb", "utf8readc", "matchtag", "htmldecode", "crypto", "v", "strs", "sheet_to_dif", "parse_rpr", "parse_rs", "parse_sty_xml", "rc_to_a1", "a1_to_rc", "parse_ws_xml_data", "options", "addcell", "write_ws", "utils", "XmlNode", "self", "global", "FileSaver", "opt", "exports"]
}
